import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        double double11 = vector3D4.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (short) 1, (-1.0d), 98.0d);
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D4.add((double) (byte) -1, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D33.subtract((double) 0, vector3D38);
        double double40 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D44, (double) 100.0f, vector3D52, (double) (short) -1, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D52.add((-1.0d), vector3D81);
        double double83 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D52.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str87 = rotationOrder86.toString();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D52.subtract((-0.0d), vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D39.subtract(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D25.add(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D25.scalarMultiply(0.6205445805637456d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.6654428555205447d + "'", double20 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ZXY" + "'", str87, "ZXY");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        java.lang.String str9 = rotationOrder0.toString();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.6551684173807351d), 2.638427581942488d, 143.7738589649261d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        double double29 = rotation21.getQ0();
        double double30 = rotation21.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.negate();
        double double63 = vector3D61.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.scalarMultiply(100.0d);
        double double72 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(0.47011525616512123d, vector3D36, 3.141592653589793d, vector3D61, 0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation21.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.scalarMultiply(0.45072064175038395d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double84 = vector3D83.getY();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double88 = vector3D87.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D83.add(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D79.add(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D76, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D15.add(vector3D76);
        double double93 = vector3D76.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5114629390766603d + "'", double29 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5114629390766603d + "'", double30 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXY" + "'", str33, "ZXY");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2.0d + "'", double63 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.5707963267948966d + "'", double72 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.26237485370392877d + "'", double84 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5153978362128364d + "'", double88 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.45072064175038395d + "'", double93 == 0.45072064175038395d);
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        double double21 = vector3D20.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation4.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D26, (double) 100.0f, vector3D34, (double) (short) -1, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.orthogonal();
        double double63 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D22, vector3D54);
        double double64 = vector3D54.getDelta();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation66.getAxis();
        double double68 = vector3D67.getDelta();
        double double69 = vector3D67.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.9944340607881093d) + "'", double63 == (-0.9944340607881093d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.0d) + "'", double68 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1.0d) + "'", double69 == (-1.0d));
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        double double35 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder37.getA2();
        java.lang.String str45 = rotationOrder37.toString();
        java.lang.String str46 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder51.getA1();
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.11078585244669703d, vector3D5, 2.153573489132929d, vector3D9, (-0.2003909367058787d), vector3D49, 0.9988929054468334d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D9.orthogonal();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XZX" + "'", str8, "XZX");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.0d + "'", double35 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXY" + "'", str46, "ZXY");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "YXZ" + "'", str52, "YXZ");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.normalize();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D5, (-0.5403850632569267d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, (-2.7755575615628914E-17d));
        double double15 = vector3D12.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, 2.3699207566956093d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation14.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation14.applyTo(rotation35);
        double double39 = rotation14.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation14.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder41.getA2();
        double[] doubleArray49 = rotation14.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (-143.96727020572638d), (-0.45973278686101987d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation53.getAxis();
        double[][] doubleArray55 = rotation53.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException56 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray55);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.10830291305827339d + "'", double39 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(doubleArray55);
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((double) 0, vector3D13);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, (-1.0d));
        double double17 = vector3D14.getY();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(0.9280907887935167d, 2.0186255278998044d, 1.5707963267948961d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA3();
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.normalize();
        double double27 = vector3D24.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.scalarMultiply(100.0d);
        double double35 = vector3D34.getAlpha();
        double double36 = vector3D34.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.add(vector3D34);
        double double38 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D22, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str42 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray50 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.add(44.73549720146294d, vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((-0.13605963558952167d), vector3D14, 0.5711944941453472d, vector3D39, 0.07306304911681563d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.scalarMultiply((double) 1);
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.negate();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        double double71 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D73.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D73.scalarMultiply(27.47493735326811d);
        double double80 = vector3D79.getDelta();
        double double81 = vector3D79.getY();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D61.add((-0.5373843183446426d), vector3D79);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D61, 1.5607966601082315d);
        double double85 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D39, vector3D61);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.5707963267948966d + "'", double35 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0186255278998044d + "'", double38 == 2.0186255278998044d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.6665541168688351d), 0.3873472180291347d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((-0.16624968048555705d), (-9.927305663880512d));
        double double6 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5300561438431244d) + "'", double6 == (-0.5300561438431244d));
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation61.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation65.revert();
        double double67 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(rotation68);
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 0, 2.1475455860530537d, 0.15135620392549756d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.scalarMultiply(0.7839109005632345d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double16 = vector3D15.getY();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double20 = vector3D19.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D15.add(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D15.negate();
        double double23 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D22);
        double double24 = vector3D22.getZ();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.26237485370392877d + "'", double16 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5153978362128364d + "'", double20 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-2.0134972630000876d) + "'", double23 == (-2.0134972630000876d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.0d + "'", double24 == 2.0d);
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA3();
        double[] doubleArray74 = rotation66.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation66.revert();
        double double77 = rotation76.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D80, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation76.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.scalarMultiply(0.38468101661851206d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.scalarMultiply(4100.000487804849d);
        double double88 = vector3D87.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZYZ" + "'", str57, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.25291598322993725d) + "'", double77 == (-0.25291598322993725d));
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZYZ" + "'", str79, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.4424808105122744d + "'", double88 == 0.4424808105122744d);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        double double59 = vector3D56.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D56.orthogonal();
        double double61 = org.apache.commons.math.geometry.Vector3D.angle(vector3D52, vector3D56);
        double double62 = vector3D56.getAlpha();
        double double63 = vector3D56.getNorm();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3.141592653589793d + "'", double61 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0d), 2.23606797749979d, 2.0985845029684933d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D39, vector3D42, vector3D64);
        double double66 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.subtract(1.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D64.add((double) 0.0f, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation11.applyTo(vector3D83);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA2();
        java.lang.String str88 = rotationOrder85.toString();
        double[] doubleArray89 = rotation11.getAngles(rotationOrder85);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder85.getA1();
        double double92 = vector3D91.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 3.141592653589793d + "'", double66 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZXZ" + "'", str88, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation45.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation10.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D3.subtract((-2.7755575615628914E-17d), vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.scalarMultiply((-2.2914020159890005E-4d));
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        double double24 = vector3D17.getY();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (short) 1, (-1.0d), 98.0d);
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D17.add((double) (byte) -1, vector3D35);
        double double39 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D17.scalarMultiply(3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation6.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, 98.0d, (-1.0d));
        double double48 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D43, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((-0.19537365596023334d), vector3D43);
        double double50 = vector3D43.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D43.scalarMultiply((-0.7059974105119942d));
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.6654428555205447d + "'", double33 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 268.47048776580107d + "'", double48 == 268.47048776580107d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.3241656960079559d) + "'", double50 == (-0.3241656960079559d));
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply(0.005259088864518715d);
        double double23 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-2.7755575615628914E-19d));
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation5.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation27.revert();
        double[][] doubleArray29 = rotation28.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(doubleArray29, (-0.5287508684135855d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.5033082423383954d) + "'", double8 == (-0.5033082423383954d));
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(doubleArray29);
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str32 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply(100.0d);
        double double38 = vector3D37.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D53, 0.5277475438952628d, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D37, vector3D57, vector3D60);
        double double62 = vector3D37.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D69.add((-0.8412192543248603d), vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D65.subtract(1.278124800288793d, vector3D69);
        double double81 = vector3D69.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D37.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D69.orthogonal();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.9999999999999999d + "'", double81 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        double double13 = vector3D10.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D46, vector3D49, vector3D71);
        double double73 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        double double82 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D71.add(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, Double.NaN);
        double double88 = vector3D85.getY();
        double double89 = vector3D85.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686427d), 0.6205445805637456d, 0.45973278686101987d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D((-0.6181409508714061d), vector3D4, 0.45973278686101987d, vector3D19, 0.9649660284921133d, vector3D85, 0.6918710786346925d, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D4.scalarMultiply(268.4709597337993d);
        org.apache.commons.math.geometry.Vector3D vector3D99 = vector3D4.scalarMultiply((-0.37408384966331365d));
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.141592653589793d + "'", double73 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D5.add(vector3D14);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7212688287676877d, (-0.5764447261520099d), (-0.6268126762927476d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D9);
        double double14 = vector3D13.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(1.8350138259443276d, (-20.0d), 0.8152026922093308d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(0.06847869573979007d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder36.getA1();
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation35.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.add(98.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D13, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.5707963267948966d + "'", double14 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, (-0.6181409508714061d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation22.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.revert();
        double double32 = rotation22.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D33.subtract(1.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.add((-1.0d), vector3D50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D50, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation58.revert();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation58.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA3();
        double double64 = vector3D63.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D63.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        double double73 = vector3D67.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D67);
        double double76 = vector3D67.getY();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation22.applyTo(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation16.applyTo(rotation78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder80.getA1();
        double[] doubleArray88 = rotation79.getAngles(rotationOrder80);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder80.getA1();
        java.lang.String str90 = rotationOrder80.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5114629390766603d + "'", double32 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXY" + "'", str62, "ZXY");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.5997184425460157, 0.7117708884662067, -2.3140561988069557]");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ZXY" + "'", str90, "ZXY");
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D10);
        double double15 = vector3D14.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (double) (byte) -1, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.negate();
        double double23 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.5707963267948966d + "'", double15 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.5707963267948966d + "'", double23 == 1.5707963267948966d);
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException13.getSuppressed();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray20 = notARotationMatrixException11.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray22 = notARotationMatrixException21.getArguments();
        java.lang.Object[] objArray23 = notARotationMatrixException21.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        java.lang.String str29 = cardanEulerSingularityException26.getPattern();
        java.lang.Object[] objArray30 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray32 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        double[][] doubleArray48 = rotation47.getMatrix();
        double[][] doubleArray49 = rotation47.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", (java.lang.Object[]) doubleArray49);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) notARotationMatrixException50);
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) notARotationMatrixException35);
        java.lang.String str53 = notARotationMatrixException35.getPattern();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str53, "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        double double22 = vector3D21.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation5.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyTo(rotation41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation56 = rotation49.applyInverseTo(rotation55);
        double double57 = rotation56.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation29.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation77 = rotation70.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation64.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation29.applyInverseTo(rotation78);
        double double80 = rotation79.getAngle();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation5.applyTo(rotation79);
        double double82 = rotation79.getAngle();
        double double83 = rotation79.getQ2();
        double double84 = rotation79.getQ2();
        double[][] doubleArray85 = rotation79.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException86 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", (java.lang.Object[]) doubleArray85);
        java.lang.String str87 = notARotationMatrixException86.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 788.3701330754276d + "'", double83 == 788.3701330754276d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 788.3701330754276d + "'", double84 == 788.3701330754276d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "XYZ" + "'", str87, "XYZ");
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.String str4 = cardanEulerSingularityException2.getPattern();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", objArray6);
        java.lang.String str8 = notARotationMatrixException7.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Object[] objArray22 = cardanEulerSingularityException14.getArguments();
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Object[] objArray24 = notARotationMatrixException7.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException2.getSuppressed();
        java.lang.Object[] objArray8 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray9 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray10 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray10);
        java.lang.Object[] objArray12 = notARotationMatrixException11.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.332638041301548d, 44.73431728565376d, 2.1460183660255168d);
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.scalarMultiply((double) 1);
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.negate();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((-0.4212430843250595d), vector3D13, 0.45973278686101987d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double22 = vector3D21.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        double double29 = vector3D26.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D26.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D21.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D21.scalarMultiply(2.2259647441756316d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((-2.0d), (-634.6978979926987d), (double) (short) 1, (double) 1L, false);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D51.subtract((double) 0, vector3D56);
        double double58 = vector3D57.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation42.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D21, (-0.12637150995481888d), vector3D57, 2.0678198605632665d, vector3D70, 0.15135620392549756d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D19.add(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((-0.09618196756046529d), vector3D6, (-0.5403850632569267d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D6.scalarMultiply(0.7803524529878539d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.5707963267948966d + "'", double22 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        double double16 = rotation8.getQ0();
        double double17 = rotation8.getQ2();
        double double18 = rotation8.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation27.revert();
        double double30 = rotation29.getQ1();
        double double31 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation29);
        double double33 = rotation8.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.0955424909088009d) + "'", double16 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.6502970659532881d) + "'", double17 == (-0.6502970659532881d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.7525070711305497d) + "'", double18 == (-0.7525070711305497d));
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZYZ" + "'", str20, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.3013122628264297d + "'", double30 == 0.3013122628264297d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.2773514360021802d) + "'", double31 == (-0.2773514360021802d));
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.9502157553926875d + "'", double33 == 2.9502157553926875d);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.4594686209785213d), (-0.8554993623905041d));
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.0d, 649.9580153489533d);
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D25.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation70.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D54.subtract(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation86.applyTo(vector3D88);
        double double90 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D74, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D7.add(vector3D88);
        double double92 = vector3D88.getX();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.4533522819483131d + "'", double90 == 1.4533522819483131d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        double[][] doubleArray13 = rotation8.getMatrix();
        java.lang.Class<?> wildcardClass14 = doubleArray13.getClass();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, 97.94123465760424d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        double double8 = rotation6.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.negate();
        double double34 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        double double41 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D32, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.add((-1.0d), vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D46, (double) 100.0f, vector3D54, (double) (short) -1, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D54.add((-1.0d), vector3D83);
        double double85 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D54.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D32.subtract(0.5114629390766603d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation6.applyInverseTo(vector3D88);
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder91.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(524.7609754926534d, vector3D88, (-0.5309649148733837d), vector3D92);
        org.apache.commons.math.geometry.RotationOrder rotationOrder94 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder94.getA3();
        java.lang.String str96 = rotationOrder94.toString();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotationOrder94.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D88.subtract(vector3D97);
        org.apache.commons.math.geometry.Vector3D vector3D99 = vector3D88.orthogonal();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-2.0d) + "'", double34 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-2.0d) + "'", double41 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotationOrder94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "XYX" + "'", str96, "XYX");
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) 100.0f);
        double[][] doubleArray30 = rotation29.getMatrix();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray30);
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyTo(rotation25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        double double41 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation13.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation13.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation6.applyTo(rotation62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D69, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D66, vector3D69);
        double[][] doubleArray73 = rotation72.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXZ", (java.lang.Object[]) doubleArray73);
        java.lang.Throwable[] throwableArray75 = notARotationMatrixException74.getSuppressed();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZYZ" + "'", str68, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        double double4 = vector3D3.getDelta();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.6641884054157535d) + "'", double4 == (-0.6641884054157535d));
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        double double13 = rotation11.getQ0();
        double double14 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation4.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        double[] doubleArray22 = rotation15.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 1.083536921369911d, 0.0d, 2.2259647441756316d);
        double double28 = rotation27.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.22791212293459712d) + "'", double28 == (-0.22791212293459712d));
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D3, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D33, vector3D36, vector3D58);
        double double60 = vector3D58.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        double double69 = vector3D66.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D66.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D58.add(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D72, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation80.revert();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation82.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str85 = rotationOrder84.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder84.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder84.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder84, (double) ' ', (double) '4', (double) 'a');
        double[] doubleArray93 = rotation82.getAngles(rotationOrder84);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder84.getA3();
        java.lang.String str95 = rotationOrder84.toString();
        double[] doubleArray96 = rotation7.getAngles(rotationOrder84);
        double double97 = rotation7.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.141592653589793d + "'", double60 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ZXY" + "'", str85, "ZXY");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-0.0, 0.0, 0.010518226214961658]");
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "ZXY" + "'", str95, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.9920257414636007, 0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.0d) + "'", double97 == (-0.0d));
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.normalize();
        double double16 = vector3D14.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D14.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyTo(vector3D22);
        double[][] doubleArray24 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray24, 0.039971493139474686d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray24, (-0.897069476986934d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXY" + "'", str18, "ZXY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.scalarMultiply(100.0d);
        double double8 = vector3D7.getX();
        double double9 = vector3D7.getX();
        double double10 = vector3D7.getX();
        double double11 = vector3D7.getDelta();
        double double12 = vector3D7.getX();
        double double13 = vector3D7.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) ' ', (-0.9132779260310951d));
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((-0.429556888950007d), 1.0d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D28.subtract(vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply(100.0d);
        double double63 = vector3D62.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation77 = rotation70.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation76.applyTo(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D78, 0.5277475438952628d, vector3D82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D62, vector3D82, vector3D85);
        double double87 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D23, 24.882865501017502d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, 100.0022140464598d);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D92.scalarMultiply((-16.507805876379134d));
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), vector3D7, 0.3345571444794553d, vector3D17, 18.533491989947702d, vector3D23, 0.5224674736269327d, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D95.normalize();
        double double97 = vector3D95.getX();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10000.0d + "'", double13 == 10000.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.5707963267948966d + "'", double63 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-1.2666190714665886d) + "'", double97 == (-1.2666190714665886d));
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-143.96727020572638d), 0.7839109005632345d, 1.083536921369911d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.add((-1.0d), vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D47.subtract(1.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.subtract(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D37, vector3D40, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D11.subtract((double) 0, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str74 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(1.0d, vector3D70, 3.141592653589793d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D86);
        double double88 = vector3D86.getDelta();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXY" + "'", str74, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-1.5707963267948966d) + "'", double88 == (-1.5707963267948966d));
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation16.applyTo(rotation43);
        double[][] doubleArray45 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray45, 0.012535694387858676d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        double double58 = vector3D55.getDelta();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D55, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation63.applyTo(vector3D65);
        double double67 = rotation63.getQ1();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation60.applyTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder69.getA1();
        double[] doubleArray76 = rotation68.getAngles(rotationOrder69);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 0.5153978362128364d, 0.9999999999999999d, 2.6575295970997246d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder69.getA1();
        double[] doubleArray82 = rotation51.getAngles(rotationOrder69);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 0.741851996448447d, 3.1153170831869756d, (-2.7755575615628914E-19d));
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (-0.6359166816993131d), 0.05009910281020563d, 2.1753991605364833d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder92 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(rotationOrder92, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotationOrder92.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotationOrder92.getA3();
        double[] doubleArray99 = rotation91.getAngles(rotationOrder92);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.9999999999999998, -0.0, -0.9999999999999998]");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder92);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[-0.35483794218447184, 2.073494497183355, -0.7435618519461907]");
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        java.lang.String str14 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder8.getA1();
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation7.applyInverseTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray18 = rotation16.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        double[][] doubleArray24 = rotation23.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZYZ", (java.lang.Object[]) doubleArray24);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray24);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray24);
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.5033082423383954d, 0.3494625806709468d, 0.23869349855450123d);
        double double4 = vector3D3.getX();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.5033082423383954d + "'", double4 == 0.5033082423383954d);
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D51.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D51.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D69.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-2.2086125988371976d), vector3D65, 0.8286204267864343d, vector3D69);
        double double72 = vector3D71.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-3.0372330256236317d) + "'", double72 == (-3.0372330256236317d));
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D74.add(vector3D77);
        double double79 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D65, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5496694388267762d + "'", double79 == 0.5496694388267762d);
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        double double46 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D58, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D10, (double) (byte) 10, vector3D53, (double) (short) -1, vector3D58, (double) ' ', vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D70.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D5.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.scalarMultiply((-0.7071067811865476d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0d, (double) 0L, 0.9999999999999999d);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 2.2112625254810094d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) doubleArray6);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.3775829393879908d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray47 = rotation41.getAngles(rotationOrder42);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation36.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.add((-1.0d), vector3D66);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation75 = rotation41.applyTo(rotation74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray77 = rotation41.getAngles(rotationOrder76);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, 10.0d, 1.8027186956254748d, (-0.4785186797839096d));
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, 0.7321611314296779d, (-53.14629390766603d), 0.3461393991776283d);
        double[] doubleArray87 = rotation11.getAngles(rotationOrder76);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.5707963267948966, 0.46903508512661624, 1.5707963267948966]");
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9166535214993772d, 0.45973278686101987d, (double) (byte) -1, 1.8228860923754615d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D9.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D25, (-0.7683919425686428d), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D2.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), (double) 0L, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, vector3D65, (-0.0d), vector3D70);
        java.lang.Class<?> wildcardClass72 = vector3D65.getClass();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(0.06847869573979007d, vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder17.getA1();
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation16.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.add(98.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        double double38 = vector3D35.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D35.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D40.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D40.scalarMultiply(27.47493735326811d);
        double double47 = vector3D46.getDelta();
        double double48 = vector3D46.getY();
        double double49 = vector3D46.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D29, (-2.7098752293634885d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation56.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation72.applyTo(vector3D74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D74, 0.5277475438952628d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation59.applyTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.scalarMultiply((-2.6615083595505498d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0d, (double) 0L, 0.9999999999999999d);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray6);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.9994945563140942d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.24893698743024018d, 0.2628569025237593d, 1.5529693675570133d, 128.01354381900484d, false);
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        double double74 = rotation72.getAngle();
        double double75 = rotation72.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, 1.8414709848078965d, (-0.9138363287001148d), 0.428182669496151d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (-0.8726264275373528d), 0.011592107380409594d, 1.0d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = rotation72.getAngles(rotationOrder76);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.01051822621496166d + "'", double74 == 0.01051822621496166d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str17 = rotationOrder16.toString();
        java.lang.String str18 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA1();
        double[] doubleArray20 = rotation5.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray56 = rotation50.getAngles(rotationOrder51);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation45.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.subtract(1.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D73.add((-1.0d), vector3D75);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D81, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation84 = rotation50.applyTo(rotation83);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation5.applyTo(rotation83);
        double double86 = rotation83.getQ1();
        double double87 = rotation83.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.3691205271584663d + "'", double15 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XYX" + "'", str17, "XYX");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.2879033166650653d) + "'", double86 == (-0.2879033166650653d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 0.24893698743024015d);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.3345571444794553d);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.subtract(0.496669722445646d, vector3D52);
        double double54 = vector3D23.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        double double68 = rotation60.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D70, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation60.applyTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.normalize();
        double double85 = org.apache.commons.math.geometry.Vector3D.angle(vector3D79, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D89.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D84, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D91, 4.879239129211843E-4d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation19.applyTo(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D91.scalarMultiply((-0.13182419629852823d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.7683919425686428d) + "'", double68 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0189832222323367d + "'", double85 == 1.0189832222323367d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        double double23 = rotation22.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D39, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation22.applyTo(rotation49);
        double[][] doubleArray51 = rotation22.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) doubleArray51);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Object[] objArray56 = cardanEulerSingularityException54.getArguments();
        java.lang.String str57 = cardanEulerSingularityException54.getPattern();
        java.lang.Object[] objArray58 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException54.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray66 = cardanEulerSingularityException65.getArguments();
        java.lang.String str67 = cardanEulerSingularityException65.getPattern();
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        java.lang.Object[] objArray69 = cardanEulerSingularityException65.getArguments();
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        java.lang.String str71 = cardanEulerSingularityException54.getPattern();
        notARotationMatrixException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Object[] objArray73 = cardanEulerSingularityException54.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Euler angles singularity" + "'", str71, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray19 = rotation18.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray19);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray19);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException29.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        notARotationMatrixException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) notARotationMatrixException27);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray47 = rotation46.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray47);
        java.lang.Throwable[] throwableArray50 = notARotationMatrixException49.getSuppressed();
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) notARotationMatrixException49);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException49);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Object[] objArray56 = cardanEulerSingularityException54.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException58.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.String str66 = cardanEulerSingularityException54.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException68.getSuppressed();
        java.lang.Throwable[] throwableArray70 = cardanEulerSingularityException68.getSuppressed();
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException68);
        java.lang.Throwable[] throwableArray72 = cardanEulerSingularityException68.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException68);
        java.lang.Object[] objArray74 = cardanEulerSingularityException68.getArguments();
        java.lang.String str75 = cardanEulerSingularityException68.getPattern();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Euler angles singularity" + "'", str66, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Euler angles singularity" + "'", str75, "Euler angles singularity");
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D23.scalarMultiply((-143.96727020572638d));
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D14, 0.5277475438952628d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D45, vector3D48, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D43.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D43.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        double double81 = vector3D78.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D78.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D83.add(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D73.subtract(0.5114629390766603d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), (double) 0L, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D83.add(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D18.subtract(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D18.negate();
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D18, (-0.4245292707565737d));
        double[][] doubleArray98 = rotation97.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        double double33 = vector3D31.getDelta();
        double double34 = vector3D31.getY();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D(2.009786123187427d, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        double double45 = vector3D42.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D38.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D31.add(0.8414709848078965d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.scalarMultiply((-0.3853836343738811d));
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D48.negate();
        double double53 = vector3D48.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.6226154951760052d + "'", double53 == 2.6226154951760052d);
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.356194490192345d, 0.5154025582583576d, 2.421447135146937d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation52 = rotation25.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation51.revert();
        double[][] doubleArray54 = rotation51.getMatrix();
        double double55 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation5.applyTo(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D8.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.scalarMultiply(27.47493735326811d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, 1.8027186956254748d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.normalize();
        double double19 = vector3D17.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) 10.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D24.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation21.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation16.applyInverseTo(rotation21);
        double double32 = rotation21.getQ0();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.5707963267948966d) + "'", double19 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.28366218546322625d + "'", double32 == 0.28366218546322625d);
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 811.3533568051935d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYX", (java.lang.Object[]) doubleArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray9, 0.15135620392549756d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9831961944536497d), 1.080456683454306d, 1.5350819899652637d, 650.0349388427903d, false);
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.9553166181245093d, (double) 1L, (-0.8618727406990989d));
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-18.13640959594133d), (-0.1934112408002968d), (-0.9902124943143233d));
        java.lang.String str10 = rotationOrder0.toString();
        java.lang.String str11 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "YXZ" + "'", str10, "YXZ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "YXZ" + "'", str11, "YXZ");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.9897076525868147d, (-0.5920790167803682d));
        double double3 = vector3D2.getNorm();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.9999999999999999d + "'", double3 == 0.9999999999999999d);
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        double double64 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D70.subtract(1.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.subtract(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D58, vector3D60, vector3D63, vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation5.applyInverseTo(rotation86);
        double[][] doubleArray88 = rotation86.getMatrix();
        double double89 = rotation86.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation86.getAxis();
        double double91 = vector3D90.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, (-0.04104628521447248d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D5.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D21, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D21.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D21.scalarMultiply((double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((-0.7710802937133043d), 0.5277475438952628d);
        double double56 = vector3D55.getNorm();
        double double57 = vector3D55.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA2();
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((-0.5114629390766603d), 2.0985845029684933d);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D61.add(0.8787695077488106d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(13.903082980735348d, vector3D5, (-0.6530603805703387d), vector3D50, 0.6838267645076843d, vector3D55, 0.7071067811865476d, vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XZX" + "'", str2, "XZX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9999999999999999d + "'", double56 == 0.9999999999999999d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.6020912491308236d) + "'", double57 == (-0.6020912491308236d));
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D32, vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D57.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.negate();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D64);
        double double67 = rotation66.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA2();
        java.lang.String str71 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 0.5378050714624897d, (-0.13182419629852823d), 0.8775825618903728d);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation66.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation5.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation78.revert();
        double double80 = rotation78.getQ2();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.5707963267948961d + "'", double67 == 1.5707963267948961d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZY" + "'", str71, "XZY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.31548053395878267d + "'", double80 == 0.31548053395878267d);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA1();
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation11.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.add(98.0d, vector3D23);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D0.add(0.18989211600994654d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getAngle();
        double double37 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation35.revert();
        double double39 = rotation35.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.1475455860530537d + "'", double36 == 2.1475455860530537d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.7860080026179649d) + "'", double37 == (-0.7860080026179649d));
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2.1475455860530537d + "'", double39 == 2.1475455860530537d);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.9949879346007117d), 0.264809141487021d);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), (double) 100L, (-1.5707963267948966d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 100L, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply(0.7604311401305615d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D26.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder65.getA3();
        java.lang.String str69 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder65.getA2();
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((-0.6551684173807351d), vector3D12, 0.11078585244669703d, vector3D63, (-378.71766086458643d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(0.8390715290764523d, vector3D4, (double) (byte) 1, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.normalize();
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(32.0d, 25.06596560241331d, (-1.4129886590656342d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D9, (double) 100.0f, vector3D17, (double) (short) -1, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        double double51 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D44, vector3D50);
        double double52 = vector3D50.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.orthogonal();
        double double57 = vector3D56.getX();
        double double58 = org.apache.commons.math.geometry.Vector3D.angle(vector3D50, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(0.7062399578631842d, vector3D4, 5096.0d, vector3D50);
        double double60 = vector3D59.getZ();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 98.0d + "'", double51 == 98.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.5707963267948966d + "'", double58 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.9979090510396706d) + "'", double60 == (-0.9979090510396706d));
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D12, 1.278124800288793d);
        double double23 = rotation22.getQ1();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.0d) + "'", double23 == (-0.0d));
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D4.getY();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5773502691896258d + "'", double5 == 0.5773502691896258d);
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.858431163878729d), 0.0952905926857031d, 0.13599489604735257d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D6, (double) 100.0f, vector3D14, (double) (short) -1, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D14.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        double double62 = vector3D61.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D14.subtract((double) 10.0f, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D65.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D65.negate();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D14.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.2590347239999257d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((-0.48235242686889757d), vector3D76);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, (-16445.115990686714d));
        double double3 = vector3D2.getNorm();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.8292004581690567d), 0.7071067811865476d, 0.9988929054468333d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.subtract(1.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.subtract(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D48, vector3D51, vector3D73);
        double double75 = vector3D73.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D84.subtract(0.0d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D77.subtract(1.0d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.negate();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D73.add((double) 0.0f, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D13.add((double) 0.0f, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D13.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D13, (-0.5309649148733837d));
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 3.141592653589793d + "'", double75 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.314920510800121d, vector3D1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(29.786746287691315d, (-0.42184747352906576d), (-0.9138363287001148d));
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyInverseTo(rotation16);
        double double18 = rotation17.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation30.revert();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation17.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D3.add((double) (byte) 10, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.orthogonal();
        double double37 = vector3D36.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.141592653589793d + "'", double37 == 3.141592653589793d);
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.042108152999217d, 1.2489510605799288d, (-0.9944693172292339d), (double) 1L, true);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.3599299361380229d + "'", double6 == 0.3599299361380229d);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation5.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str44 = rotationOrder43.toString();
        java.lang.String str45 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation50.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation56.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZYZ" + "'", str36, "ZYZ");
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXY" + "'", str44, "ZXY");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.0d, 0.28577402770544114d);
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D18.add((-1.0d), vector3D47);
        double double49 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D18.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D18.subtract((-0.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation6.applyTo(vector3D56);
        double[][] doubleArray59 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(doubleArray59, 0.5224674736269327d);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation61.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(rotation62);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        double[][] doubleArray14 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double[] doubleArray21 = rotation5.getAngles(rotationOrder15);
        double double22 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.revert();
        double double24 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "XYX" + "'", str16, "XYX");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5114629390766603d + "'", double22 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.3691205271584663d + "'", double24 == 0.3691205271584663d);
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.126035424677324d), (-641.0d));
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.7675707508815894d, 0.45973278686101987d, 100.4491529857595d);
        java.lang.Class<?> wildcardClass4 = vector3D3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) 1, (-1.0d), 98.0d);
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation10.revert();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6654428555205447d + "'", double11 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(16.62763166455332d, 16.62763166455332d, (double) '4', (double) 1, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation11.getAxis();
        double[][] doubleArray21 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation22.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5114629390766603d + "'", double19 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0955424909088009d), 0.7321611314296779d, 0.47011525616512123d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.38468101661851206d, 3.074817027284758d, 9.057178341178636d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation33.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation33.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation17.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation58.revert();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA3();
        java.lang.String str64 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 100L, 0.5114629390766603d, (-2.0d));
        double[] doubleArray69 = rotation59.getAngles(rotationOrder61);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, 1.4761941861456462d, (-0.30671879673173297d), 1.361310203000682E-5d);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation5.applyInverseTo(rotation74);
        double double76 = rotation75.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.005022802342728373d + "'", double60 == 0.005022802342728373d);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXY" + "'", str62, "ZXY");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.008822918953783863, -0.03457533980514767, 0.07114586945636092]");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.702635909682363d + "'", double76 == 0.702635909682363d);
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA1();
        double[] doubleArray50 = rotation45.getAngles(rotationOrder47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 2.356194490192345d, 100.4491529857595d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder47.getA3();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.scalarMultiply(100.0d);
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((-10.53200198742562d), vector3D11, (-143.96727020572638d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA3();
        java.lang.String str32 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder28.getA3();
        double double38 = vector3D37.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D11, 2.0985845029684933d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D40.negate();
        double double42 = vector3D41.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.496669722445646d + "'", double7 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.5514266812416908d) + "'", double42 == (-0.5514266812416908d));
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-0.8390715290764524d), 0.7566633492309982d);
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-1024.0d), (-0.5740247584530956d), 0.012535694387858676d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-0.5960187205335067d));
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), (double) 100L, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D7);
        double[][] doubleArray15 = rotation14.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray15);
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        java.lang.Class<?> wildcardClass8 = vector3D7.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D31.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.scalarMultiply(0.05950139838106608d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        double double21 = vector3D20.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation4.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D26, (double) 100.0f, vector3D34, (double) (short) -1, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.orthogonal();
        double double63 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D22, vector3D54);
        double double64 = vector3D54.getDelta();
        double double65 = vector3D54.getY();
        double double66 = vector3D54.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.9944340607881093d) + "'", double63 == (-0.9944340607881093d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        double double4 = vector3D3.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXY" + "'", str2, "YXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str22 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str22, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        double double42 = vector3D11.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D11.add((double) 1.0f, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.negate();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        double double11 = vector3D4.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (short) 1, (-1.0d), 98.0d);
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D4.add((double) (byte) -1, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D33.subtract((double) 0, vector3D38);
        double double40 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D44, (double) 100.0f, vector3D52, (double) (short) -1, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D52.add((-1.0d), vector3D81);
        double double83 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D52.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str87 = rotationOrder86.toString();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D52.subtract((-0.0d), vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D39.subtract(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D25.add(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.5079233958819608d, vector3D25);
        double double95 = vector3D94.getDelta();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.6654428555205447d + "'", double20 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ZXY" + "'", str87, "ZXY");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8346347063271169d + "'", double95 == 0.8346347063271169d);
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        java.lang.String str4 = rotationOrder0.toString();
        java.lang.String str5 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YZX" + "'", str4, "YZX");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YZX" + "'", str5, "YZX");
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.5895088740616088d, 0.09143669789687976d, 268.47048776580107d);
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        double double40 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        double double55 = vector3D52.getDelta();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D52, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D4, (double) (byte) 10, vector3D47, (double) (short) -1, vector3D52, (double) ' ', vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D64.normalize();
        double double71 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D64.scalarMultiply(0.7212688287676877d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.scalarMultiply(27.47493735326811d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D73.add(524.7609754926534d, vector3D80);
        java.lang.Class<?> wildcardClass82 = vector3D81.getClass();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D36, vector3D39, vector3D61);
        double double63 = vector3D61.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D61.add(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, Double.NaN);
        double double78 = vector3D75.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D9.subtract(0.26081761410019294d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.scalarMultiply((-0.8301452433388954d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3.141592653589793d + "'", double63 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZYZ" + "'", str80, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray13);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.String str29 = cardanEulerSingularityException27.getPattern();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException15.addSuppressed((java.lang.Throwable) notARotationMatrixException21);
        java.lang.Object[] objArray33 = notARotationMatrixException21.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray33);
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) notARotationMatrixException34);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray36);
        java.lang.String str38 = notARotationMatrixException37.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        notARotationMatrixException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) notARotationMatrixException28);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray48 = rotation47.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray48);
        java.lang.Throwable[] throwableArray51 = notARotationMatrixException50.getSuppressed();
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) notARotationMatrixException50);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException50);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException56.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray58);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray66 = cardanEulerSingularityException65.getArguments();
        java.lang.String str67 = cardanEulerSingularityException65.getPattern();
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        notARotationMatrixException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.Throwable[] throwableArray70 = notARotationMatrixException59.getSuppressed();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException59);
        java.lang.Throwable[] throwableArray72 = notARotationMatrixException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray72);
        java.lang.String str74 = notARotationMatrixException73.toString();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str74, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.4212430843250595d), (-0.0013651261847257446d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(0.42502526448939937d, 0.04145438869418405d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D21.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D33 = null;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        double double45 = vector3D38.getY();
        double double46 = vector3D38.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D38.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.subtract(vector3D55);
        double double62 = vector3D55.getY();
        double double63 = vector3D55.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D55.normalize();
        double double66 = vector3D55.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) (short) 1, (-1.0d), 98.0d);
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.10830291305827339d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.3345571444794553d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((-54.26257800088148d), vector3D49, (-0.24903954012484228d), vector3D67, (-0.0013651261847257446d), vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.normalize();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D32, vector3D33, vector3D83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.6654428555205447d + "'", double77 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        double double23 = vector3D22.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyTo(rotation42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        double double58 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation30.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation78 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation65.applyTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation30.applyInverseTo(rotation79);
        double double81 = rotation80.getAngle();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation6.applyTo(rotation80);
        double[][] doubleArray83 = rotation82.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray83);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException85 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray83);
        java.lang.Throwable[] throwableArray86 = notARotationMatrixException85.getSuppressed();
        java.lang.String str87 = notARotationMatrixException85.toString();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str87, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-0.6709901432685222d));
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(1.0d, 3.1382470946270726d, (-0.9902124943143233d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(2.0d, vector3D4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D4, 0.0d);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        double double13 = vector3D12.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D0.add(0.3691205271584663d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.scalarMultiply(0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply(10.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.applyTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        double double54 = rotation53.getQ2();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation26.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation26.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation67.revert();
        double double71 = rotation67.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation67.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D20.subtract(vector3D79);
        double double83 = vector3D82.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.3103755182850353d + "'", double71 == 0.3103755182850353d);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4.153978362128364d + "'", double83 == 4.153978362128364d);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.09142402289123004d), (-0.5764447261520099d), (-0.16624968048555705d));
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) (short) 10, (double) (short) -1, (double) '#', false);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder14.getA1();
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation13.revert();
        double double23 = rotation13.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D41, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation49.revert();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation49.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        double double55 = vector3D54.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D54.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        double double64 = vector3D58.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D58);
        double double67 = vector3D58.getY();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation13.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation5.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation5.revert();
        double double71 = rotation70.getAngle();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5114629390766603d + "'", double23 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 3.141592653589793d + "'", double71 == 3.141592653589793d);
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray2 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation16.applyTo(vector3D18);
        double[][] doubleArray20 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException22);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray34 = cardanEulerSingularityException30.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", objArray34);
        java.lang.Object[] objArray36 = notARotationMatrixException35.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException35);
        java.lang.String str38 = notARotationMatrixException35.getPattern();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZYZ" + "'", str38, "ZYZ");
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        double double3 = vector3D2.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D39, vector3D42, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D13, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D13.subtract((double) 0, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str76 = rotationOrder75.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(1.0d, vector3D72, 3.141592653589793d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D4.add(0.47011525616512123d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D4.normalize();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D89, 2.9502157553926875d);
        double double92 = rotation91.getQ1();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.9988929054468333d + "'", double3 == 0.9988929054468333d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ZXY" + "'", str76, "ZXY");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.46877122116529074d + "'", double92 == 0.46877122116529074d);
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9649660284921133d), 0.5154025582583576d, 0.0d, 0.7071067811865475d, true);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5428374135411377d + "'", double6 == 0.5428374135411377d);
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.String str34 = cardanEulerSingularityException32.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        notARotationMatrixException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray37 = notARotationMatrixException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException39.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.String str45 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        notARotationMatrixException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray49 = notARotationMatrixException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException51.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        java.lang.String str57 = cardanEulerSingularityException55.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Object[] objArray59 = cardanEulerSingularityException55.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException67.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray72 = cardanEulerSingularityException71.getArguments();
        java.lang.String str73 = cardanEulerSingularityException71.getPattern();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        notARotationMatrixException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) notARotationMatrixException65);
        notARotationMatrixException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Object[] objArray79 = cardanEulerSingularityException55.getArguments();
        java.lang.String str80 = cardanEulerSingularityException55.getPattern();
        java.lang.String str81 = cardanEulerSingularityException55.getPattern();
        java.lang.Throwable[] throwableArray82 = cardanEulerSingularityException55.getSuppressed();
        java.lang.Throwable[] throwableArray83 = cardanEulerSingularityException55.getSuppressed();
        java.lang.String str84 = cardanEulerSingularityException55.getPattern();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException55.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Euler angles singularity" + "'", str80, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1437.738589649261d, 2.1144191065275573d, (-59.12044389450646d), 1.3515155910114225d, true);
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.39316275340553986d, 0.36259815178588733d, 0.849647555864809d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        double double7 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) (-1L));
        double double14 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(2.153573489132929d, vector3D8, (-0.22896318350517658d), vector3D11);
        double double16 = vector3D15.getNorm();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.165710717639132d + "'", double16 == 2.165710717639132d);
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((-0.7525070711305497d), 0.0d, 0.13599489604735257d, (double) (short) -1, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation43.applyTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation65 = rotation58.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation52.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation43.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(0.9988929054468333d, 0.0d, 100.0022140464598d, (double) (short) 10, false);
        double double74 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation43.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation31.applyTo(rotation73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation25.applyTo(vector3D77);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D9.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D25, (-0.7683919425686428d), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D2.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), (double) 0L, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, vector3D65, (-0.0d), vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder72.getA3();
        double double76 = org.apache.commons.math.geometry.Vector3D.angle(vector3D65, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.scalarMultiply(0.05950139838106608d);
        double double79 = vector3D78.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.5707963267948966d + "'", double76 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 3.141592653589793d + "'", double79 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024015d, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D40, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation51 = rotation24.applyInverseTo(rotation50);
        double double52 = rotation51.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(0.9641189142896659d, vector3D53);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-6.626528147811479d) + "'", double52 == (-6.626528147811479d));
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D20.subtract((double) 0, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D26.add(2.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation12.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D26.negate();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D26.normalize();
        double double42 = vector3D41.getDelta();
        double double43 = vector3D41.getZ();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D41, (-0.8903223073341484d));
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(785.3994663708453d, 0.0d, (-0.7564240344749331d), 1.257863040663775d, false);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 100.0f, 10.0d, 0.10830291305827339d);
        double double10 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyTo(rotation35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyInverseTo(rotation49);
        double double51 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation23.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation23.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation16.applyTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation74.revert();
        double double76 = rotation74.getQ2();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation9.applyTo(rotation74);
        double[][] doubleArray78 = rotation77.getMatrix();
        double[][] doubleArray79 = rotation77.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException80 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray79);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9103552519805896d + "'", double10 == 0.9103552519805896d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 794.7876615041731d + "'", double76 == 794.7876615041731d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray5 = rotation4.getMatrix();
        double double6 = rotation4.getAngle();
        double double7 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract((double) (-1L), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation4.applyTo(vector3D36);
        double double38 = rotation4.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.638427581942488d + "'", double6 == 2.638427581942488d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.8415352216177445d + "'", double7 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.638427581942488d + "'", double38 == 2.638427581942488d);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply(0.005259088864518715d);
        double double14 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D11);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D7, (-2.7755575615628914E-19d));
        double[][] doubleArray17 = rotation16.getMatrix();
        double double18 = rotation16.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double8 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D20, 0.9920257414636006d);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyTo(rotation24);
        double double26 = rotation16.getAngle();
        double double27 = rotation16.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.2112625254810094d + "'", double8 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.7525102543615474d + "'", double26 == 1.7525102543615474d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.7525102543615474d + "'", double27 == 1.7525102543615474d);
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        double double39 = vector3D3.getX();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        double[][] doubleArray43 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray43, 0.8959939952366371d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(doubleArray43);
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        java.lang.Throwable[] throwableArray11 = notARotationMatrixException10.getSuppressed();
        java.lang.Throwable[] throwableArray12 = notARotationMatrixException10.getSuppressed();
        java.lang.Throwable[] throwableArray13 = notARotationMatrixException10.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        java.lang.Object[] objArray17 = cardanEulerSingularityException15.getArguments();
        java.lang.String str18 = cardanEulerSingularityException15.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException15.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException15.getSuppressed();
        java.lang.String str21 = cardanEulerSingularityException15.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation34.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        double[][] doubleArray39 = rotation34.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray39);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) notARotationMatrixException40);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.String str43 = cardanEulerSingularityException15.toString();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str43, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, (-0.9902124943143233d), 143.7738589649261d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((-0.3010124653079922d), vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.orthogonal();
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        double double8 = rotation7.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation7.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder13.getA3();
        java.lang.String str17 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder13.getA2();
        double double24 = vector3D23.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((-0.6747691995449356d), vector3D9, 0.9920257414636006d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.negate();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.496669722445646d + "'", double8 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        double double3 = vector3D2.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        double double10 = vector3D7.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D12.add(0.8390715290764523d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        double double26 = rotation24.getQ2();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.0d) + "'", double3 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D5.getAlpha();
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.negate();
        double double36 = vector3D34.getX();
        double double37 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double40 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        double double47 = vector3D44.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D44.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D39.subtract(vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str55 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder54.getA3();
        java.lang.String str58 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder54.getA2();
        double double65 = vector3D64.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D44.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D44);
        double double69 = vector3D34.getZ();
        double double70 = org.apache.commons.math.geometry.Vector3D.angle(vector3D9, vector3D34);
        double double71 = vector3D34.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-2.0d) + "'", double36 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-2.0d) + "'", double37 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.5707963267948966d + "'", double40 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ZXY" + "'", str55, "ZXY");
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.5707963267948966d + "'", double70 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.5493884591525647d, 669.172940447475d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D3.subtract(1.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.add((-1.0d), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D28, vector3D31, vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray60 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation59.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation59.revert();
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation63.applyTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D71);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.24893698743024015d) + "'", double64 == (-0.24893698743024015d));
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5114629390766603d, 0.6847869573979007d, 0.6747691995449356d);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 2.329371717416482d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), (double) 100L, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D7);
        double double15 = vector3D7.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.5707963267948966d + "'", double15 == 1.5707963267948966d);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-6.626528147811479d), (-0.7683919425686428d), 0.9988929054468333d, 5200.0d, true);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = rotation12.revert();
        double double14 = rotation13.getQ1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray21 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation13.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation5.applyInverseTo(rotation13);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.920946278942357E-4d + "'", double6 == 1.920946278942357E-4d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.496669722445646d + "'", double14 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(doubleArray25);
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Object[] objArray24 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.String str39 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray42 = notARotationMatrixException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException44.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.String str50 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str54 = cardanEulerSingularityException48.getPattern();
        notARotationMatrixException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.String str59 = cardanEulerSingularityException57.getPattern();
        java.lang.String str60 = cardanEulerSingularityException57.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.String str63 = cardanEulerSingularityException57.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str63, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.566370614359173d, 2.1475455860530537d, 2.1349162105446426d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        double double13 = vector3D12.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXY" + "'", str2, "YXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXY" + "'", str4, "YXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.5707963267948966d + "'", double13 == 1.5707963267948966d);
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D45.add((-1.0d), vector3D74);
        double double76 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D45.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D23.subtract(0.5114629390766603d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation93 = rotation86.applyInverseTo(rotation92);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation92.revert();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = vector3D95.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D97 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = org.apache.commons.math.geometry.Vector3D.angle(vector3D79, vector3D98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.9999999999999999d + "'", double96 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8623079947860166d, 6.123233995736766E-17d, (-0.7957649069979387d), 0.6469193223286404d, false);
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.0267386577390167d, 2.5104165854707956d, 0.5602898060815165d, 16.507805876379134d, false);
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double1 = vector3D0.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        double double8 = vector3D5.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D5.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D0.subtract(vector3D5);
        double double13 = vector3D12.getDelta();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D12, (-0.6601292325605388d));
        double double16 = rotation15.getQ0();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.5707963267948966d + "'", double1 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9460214030982713d + "'", double16 == 0.9460214030982713d);
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        double double14 = vector3D13.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D1.add(0.3691205271584663d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply(0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D28.subtract((double) 0, vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str45 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder36.getA2();
        double double48 = vector3D47.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D28.add((double) 100L, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D19.subtract((double) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((-0.8790056663063665d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.scalarMultiply(24.882865501017502d);
        double double55 = vector3D54.getAlpha();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ZXY" + "'", str37, "ZXY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.3536061268269748d) + "'", double55 == (-0.3536061268269748d));
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str38 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder32.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D29.add(2.0985845029684933d, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(2.23606797749979d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.orthogonal();
        double double44 = vector3D42.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5378050714624897d + "'", double30 == 0.5378050714624897d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "XYZ" + "'", str38, "XYZ");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder10.getA1();
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation9.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(98.0d, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D21);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = null;
        double[] doubleArray26 = rotation23.getAngles(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5978104587414067d + "'", double24 == 0.5978104587414067d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[3.131329044119406, 0.7588068045519357, 1.408591520661453]");
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), 0.04145438869418405d, (-0.001575539555759437d), 0.0d, true);
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9996514452085571d) + "'", double6 == (-0.9996514452085571d));
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D11.subtract((double) 10.0f, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA3();
        java.lang.String str70 = rotationOrder68.toString();
        double[] doubleArray71 = rotation67.getAngles(rotationOrder68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D11.add(vector3D72);
        double double74 = vector3D72.getZ();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "XYX" + "'", str70, "XYX");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.150778969849899d) + "'", double74 == (-0.150778969849899d));
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.1382470946270726d, 2.1853283162969226d);
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        double[][] doubleArray25 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray25, 2.2112625254810094d);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((-2.0d), (-634.6978979926987d), (double) (short) 1, (double) 1L, false);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D43.subtract((double) 0, vector3D48);
        double double50 = vector3D49.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation34.applyInverseTo(vector3D49);
        double double53 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation27.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation34.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.normalize();
        double double67 = vector3D65.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D65.subtract(vector3D71);
        double double73 = vector3D65.getDelta();
        double double74 = vector3D65.getY();
        double double75 = vector3D65.getZ();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D65, (-0.9036922050915068d));
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation34.applyInverseTo(vector3D78);
        double double80 = vector3D79.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5114629390766603d + "'", double28 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.0d) + "'", double73 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.0d) + "'", double75 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        double double7 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D4, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation9.applyTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, vector3D13);
        java.lang.Class<?> wildcardClass15 = vector3D13.getClass();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D41.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D62.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D58, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D53, vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray78 = rotation72.getAngles(rotationOrder73);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation67.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation67.applyTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D42, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder89.getA1();
        double double91 = vector3D90.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D88, vector3D90);
        double double93 = rotation92.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation92.getAxis();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotationOrder89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.5707963267948963d + "'", double93 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder1.getA1();
        double double13 = vector3D12.getX();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        double double60 = vector3D59.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D12.subtract((double) 10.0f, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D62.subtract(vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder74.getA3();
        double double85 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D73, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D84.scalarMultiply(0.6838267645076843d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.normalize();
        double double90 = vector3D88.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder91.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D88, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D93.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.negate();
        double double96 = vector3D95.getAlpha();
        double double97 = org.apache.commons.math.geometry.Vector3D.angle(vector3D87, vector3D95);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ZYZ" + "'", str75, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-0.0d) + "'", double96 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 3.141592653589793d + "'", double97 == 3.141592653589793d);
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.6708700140155747d, (-0.03474713853778303d), 0.07855369445570898d, 2.349555921538759d, true);
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZYZ" + "'", str4, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D42, vector3D45, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D16.subtract((double) 0, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation9.applyTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D76);
        double[][] doubleArray78 = rotation77.getMatrix();
        double double79 = rotation77.getQ2();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.695023946941814d) + "'", double79 == (-0.695023946941814d));
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.applyTo(rotation26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D35.subtract((double) 0, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str44 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str52 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder43.getA2();
        double double55 = vector3D54.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D35.add((double) 100L, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation12.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.scalarMultiply((double) 1);
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.negate();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        double double71 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D73.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D73.scalarMultiply(27.47493735326811d);
        double double80 = vector3D79.getDelta();
        double double81 = vector3D79.getY();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D61.add((-0.5373843183446426d), vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((-0.5033082423383954d), 0.23869349855450123d, (-378.71766086458643d));
        double double88 = vector3D87.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D83.add(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D54.subtract(0.07306304911681563d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D54.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXY" + "'", str44, "ZXY");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-378.71766086458643d) + "'", double88 == (-378.71766086458643d));
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        double double33 = rotation27.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.3691205271584663d + "'", double33 == 0.3691205271584663d);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        double[][] doubleArray27 = rotation26.getMatrix();
        double double28 = rotation26.getQ1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.26237485370392877d + "'", double28 == 0.26237485370392877d);
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        double double45 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D38, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str58 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA3();
        double double60 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D47.add(0.3691205271584663d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D44.add((-634.6978979926987d), vector3D62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder66.getA3();
        java.lang.String str70 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder66.getA2();
        double double77 = vector3D76.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D62.add((double) (short) -1, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D84.normalize();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D87, (-0.04104628521447248d));
        double double90 = vector3D87.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(3.2087642143727657d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D76, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D92.scalarMultiply(101.00150912700792d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 98.0d + "'", double45 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXY" + "'", str67, "ZXY");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXY" + "'", str70, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation9.revert();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        double double25 = vector3D24.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D12.add(0.3691205271584663d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.scalarMultiply(0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        double double37 = vector3D34.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D45.subtract((double) 0, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D51.add(2.0d, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation9.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation5.applyTo(vector3D28);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.7553239318203748d), (-0.7009645491358697d), 0.0d);
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(0.5277475438952628d);
        double double55 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        double double73 = vector3D72.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D76, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D72, 0.7604311401305615d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D72.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D50, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D50.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(rotationOrder91, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder91.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotationOrder91.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D97.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D99 = vector3D50.add((-0.22112372634864869d), vector3D97);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.8659616593396997d, 2.5843417855249764d);
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation59 = rotation52.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation46.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation11.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str63 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder73.getA3();
        double[] doubleArray80 = rotation72.getAngles(rotationOrder73);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation60.applyTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation72.revert();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double89 = vector3D88.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D85.subtract(0.0d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D83.subtract(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D83.negate();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D83, (-2.7755575615628914E-17d));
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation72.applyInverseTo(vector3D96);
        org.apache.commons.math.geometry.Vector3D vector3D98 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D3, (-0.8790056663063665d), vector3D97);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.5288549774931671d + "'", double4 == 0.5288549774931671d);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZYZ" + "'", str63, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        double double38 = rotation11.getQ0();
        double double39 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (short) 0, 25.06596560241331d, 0.0027048888022863306d, false);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation11.applyTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray57 = rotation51.getAngles(rotationOrder52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation51.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation46.applyInverseTo(rotation65);
        double double67 = rotation66.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.7683919425686428d) + "'", double39 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.24893698743024015d + "'", double63 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.8415352216177445d + "'", double64 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-10.40733638593415d) + "'", double67 == (-10.40733638593415d));
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.949327365002713d, 10.618890631312926d, 1.920946278942357E-4d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder7.getA1();
        java.lang.String str12 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA1();
        double double14 = vector3D13.getY();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation6.applyInverseTo(vector3D13);
        double double16 = rotation6.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XZX" + "'", str8, "XZX");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XZX" + "'", str12, "XZX");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.07932499020447392d + "'", double16 == 0.07932499020447392d);
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException21.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D25, 2.153573489132929d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.scalarMultiply(3.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        double double49 = vector3D46.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D46.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.orthogonal();
        double double52 = vector3D51.getX();
        double double53 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D37, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D51, 0.0d);
        double double56 = rotation55.getQ0();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.0479003427042046d, 0.9882634772511576d, 0.24893698743024012d, 0.894201292149591d, true);
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation8.revert();
        double[][] doubleArray34 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, 16.507805876379134d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (-10.40733638593415d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (-1.0f), 1.8027186956254748d, 0.06477627904931682d, 0.43415197535159783d, false);
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.add((double) ' ', vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.subtract(1.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D50.subtract((double) (-1.0f), vector3D78);
        double double80 = vector3D79.getZ();
        double double81 = vector3D79.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.2520878998432229d, 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D85);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D86, (-2.78032853728264E-4d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D28, (double) 100.0f, vector3D36, (double) (short) -1, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D20.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D36, (-0.7683919425686428d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation5.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D36.add((-1.0027048888022863d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str87 = rotationOrder86.toString();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D92.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D82.add((double) (byte) -1, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D82.orthogonal();
        double double96 = vector3D82.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ZXY" + "'", str87, "ZXY");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.5782053812492458d, 2.2573179145927016d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str13 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder3.getA3();
        double double15 = vector3D14.getX();
        double double16 = vector3D14.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D2.add(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation8.revert();
        double[][] doubleArray34 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, 1.0728787707619287d);
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((-0.1934112408002968d), (-0.25291598322993725d), (-0.6747691995449356d), (-0.45647262536381383d), true);
        double double45 = rotation44.getAngle();
        double double46 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation36.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation47.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.7525070711305496d + "'", double37 == 0.7525070711305496d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.7525070711305496d + "'", double38 == 0.7525070711305496d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2.6956595142333857d + "'", double45 == 2.6956595142333857d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.22112372634864869d) + "'", double46 == (-0.22112372634864869d));
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.Vector3D vector3D3 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation18.applyTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        double[][] doubleArray23 = rotation18.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray23, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation31);
        double double33 = rotation26.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder40.getA1();
        double double46 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation39.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.add(98.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation26.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((-0.07264806010080926d), vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D47.scalarMultiply(1.6706985827839445d);
        double double57 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686427d), 2010.8322649434506d, (-0.48235242686889757d));
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((-0.11857287345020091d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865475d, vector3D1, (-0.27151963399492784d), vector3D3, 12.628128254659766d, vector3D56, 0.2620296085843699d, vector3D64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZYZ" + "'", str28, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.7683919425686427d) + "'", double33 == (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2.3373869432128567d + "'", double57 == 2.3373869432128567d);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        double[] doubleArray32 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder30.getA1();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 2.9233948074709373d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        double double46 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D39, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.negate();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-16.507805876379134d), vector3D47);
        double double49 = vector3D47.getZ();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 98.0d + "'", double46 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.0d) + "'", double49 == (-0.0d));
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.009786123187427d, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        double double9 = vector3D6.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D2.subtract(vector3D6);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, 0.3849691255605494d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D4.scalarMultiply(0.26237485370392877d);
        double double9 = vector3D4.getY();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D4, 3.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (short) 0, 25.06596560241331d, 0.0027048888022863306d, false);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.770524344698482d, vector3D4, (-0.7525070711305497d), vector3D19);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.4737881451322778d, 2.037598555049364d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((-0.5287508684135855d), 107.5143815840712d, 0.8111383753205208d, 0.10830291305827339d, true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D12, (double) 100.0f, vector3D20, (double) (short) -1, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D20.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D49.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        double double78 = vector3D77.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract(vector3D81);
        double double88 = vector3D81.getY();
        double double89 = vector3D81.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D68, vector3D70, vector3D77, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D68.add(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation8.applyTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D2.add(vector3D68);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.306492779467043d, 1.5788969781424285d);
        double double3 = vector3D2.getY();
        org.apache.commons.math.geometry.Vector3D vector3D4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.0060054618891536285d) + "'", double3 == (-0.0060054618891536285d));
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D45.subtract((double) 0, vector3D50);
        double double52 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation36.applyInverseTo(vector3D51);
        double double56 = vector3D55.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.2939358606544733d + "'", double56 == 0.2939358606544733d);
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        java.lang.String str4 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXZ" + "'", str4, "YXZ");
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D14, 0.5277475438952628d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D46, vector3D49, vector3D71);
        double double73 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract(0.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D75.subtract(1.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.negate();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D71.add((double) 0.0f, vector3D88);
        double double91 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D14.add(0.6654428555205447d, vector3D71);
        double double93 = vector3D14.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D14.scalarMultiply(0.28366218546322625d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.141592653589793d + "'", double73 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 3.141592653589793d + "'", double91 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.0d + "'", double93 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray18 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.String str36 = cardanEulerSingularityException26.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException39.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) throwableArray42);
        java.lang.Object[] objArray44 = notARotationMatrixException43.getArguments();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) notARotationMatrixException43);
        java.lang.Throwable[] throwableArray46 = notARotationMatrixException43.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) (short) 1, (-1.0d), 98.0d);
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        java.lang.String str21 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D17.subtract(vector3D23);
        double double25 = org.apache.commons.math.geometry.Vector3D.angle(vector3D8, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(1.1934139931167365d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.6654428555205447d + "'", double15 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "YXZ" + "'", str19, "YXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "YXZ" + "'", str21, "YXZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.412015581119757d + "'", double25 == 2.412015581119757d);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        double double12 = vector3D11.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D11.subtract((-0.7009645491358697d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply(Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.scalarMultiply((double) 1);
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.negate();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D26, 0.5378050714624897d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D30.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        double double55 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D40, vector3D51);
        double double56 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D26, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D18.subtract((-1.122967125689989d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D(24.882865501017502d, (-0.009999666686665238d), 2.1475455860530537d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D18.subtract((-0.7683919425686428d), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.orthogonal();
        double double65 = vector3D64.getZ();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.0d) + "'", double12 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 98.0d + "'", double55 == 98.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.9962962980480975d + "'", double65 == 0.9962962980480975d);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double8 = rotation7.getAngle();
        double double9 = rotation7.getQ0();
        double double10 = rotation7.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.2112625254810094d + "'", double8 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.4485703331475911d + "'", double9 == 0.4485703331475911d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.4485703331475911d + "'", double10 == 0.4485703331475911d);
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.subtract(vector3D16);
        double double23 = vector3D16.getY();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) (short) 1, (-1.0d), 98.0d);
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D16.add((double) (byte) -1, vector3D34);
        double double38 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D16.scalarMultiply(3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation5.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, 98.0d, (-1.0d));
        double double47 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D42, vector3D46);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D42, (-0.3078507869034174d));
        double double50 = rotation49.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.6654428555205447d + "'", double32 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 268.47048776580107d + "'", double47 == 268.47048776580107d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.06039426937134245d + "'", double50 == 0.06039426937134245d);
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.4034226801113349d, (-100.0d), 1.8878667334024908d, 9700.0d, false);
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract(vector3D7);
        double double14 = vector3D7.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation24.applyTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D74.subtract(1.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.subtract(vector3D88);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D62, vector3D64, vector3D67, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D7.subtract((double) (byte) 0, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(0.9999999999999999d, vector3D3, 2.356194490192345d, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D31, 0.955135644573036d);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D31.orthogonal();
        double double99 = vector3D98.getDelta();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.13695094695195092d + "'", double99 == 0.13695094695195092d);
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.7525070711305497d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((-0.858431163878729d), (-0.0013651261847257446d), 0.12637150995481888d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D2.subtract((-0.08153856787190739d), vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024015d, 1.580316067234769d, 0.5496694388267763d);
        double double13 = org.apache.commons.math.geometry.Vector3D.angle(vector3D7, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.scalarMultiply(3.0419236247578776d);
        double double16 = vector3D15.getAlpha();
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.6706985827839445d + "'", double13 == 1.6706985827839445d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-3.1400023979101235d) + "'", double16 == (-3.1400023979101235d));
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        double double6 = rotation2.getQ1();
        double double7 = rotation2.getQ1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(2.5795200655443864d, 2.164942851390959d, 0.4376205782278174d, 0.7760336155639872d, false);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation2.applyInverseTo(rotation13);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.5114629390766603d), (-1.122967125689989d), (-0.2551713383813414d));
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.2207669533633045d, 0.07932499020447392d, 2.6226154951760052d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D3.subtract((-0.2551713383813414d), vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D18.scalarMultiply((-0.8342233605065102d));
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "XZX" + "'", str14, "XZX");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation12.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation12.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str42 = rotationOrder41.toString();
        double[] doubleArray43 = rotation39.getAngles(rotationOrder41);
        double double44 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation39.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XYX" + "'", str42, "XYX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.5707963267948963d + "'", double44 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException12.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Throwable[] throwableArray19 = notARotationMatrixException10.getSuppressed();
        java.lang.String str20 = notARotationMatrixException10.toString();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str20, "org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 100.0f, 10.0d, 0.10830291305827339d);
        double double12 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray19 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation25.applyTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        double double53 = rotation52.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation25.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation60.applyTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation25.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation18.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation76.revert();
        double double78 = rotation76.getQ2();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation11.applyTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str83 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder82.getA1();
        java.lang.String str85 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder82.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder82.getA3();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (-0.9202635195876083d), (double) 1.0f, (-0.4212430843250595d));
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, 2.0186255278998044d, 0.0d, (-0.1308559559744774d));
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotationOrder82.getA1();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D98 = new org.apache.commons.math.geometry.Vector3D(3.1153170831869756d, vector3D1, 13.597071688697316d, vector3D80, 0.5440211108893698d, vector3D97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZYZ" + "'", str4, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9103552519805896d + "'", double12 == 0.9103552519805896d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 794.7876615041731d + "'", double78 == 794.7876615041731d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "YXZ" + "'", str83, "YXZ");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "YXZ" + "'", str85, "YXZ");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        double[] doubleArray14 = rotation12.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder21.getA1();
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation20.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation12.applyInverseTo(rotation20);
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.7683919425686428d) + "'", double31 == (-0.7683919425686428d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.0678198605632665d + "'", double32 == 2.0678198605632665d);
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.24357596552506688d, (-0.66826608731653d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.normalize();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D7, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D2.add(0.0d, vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XZX" + "'", str5, "XZX");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        double double3 = vector3D2.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.negate();
        double double5 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        double double12 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D14.add(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D70.subtract(1.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.subtract(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D58, vector3D60, vector3D63, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D58.normalize();
        double double88 = vector3D58.getDelta();
        double double89 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D29, vector3D34, vector3D58);
        double double91 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XZX" + "'", str31, "XZX");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2.0d + "'", double89 == 2.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, (-0.6126058204959273d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation26.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation35.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation26.applyTo(rotation47);
        double double51 = rotation50.getQ3();
        double[][] doubleArray52 = rotation50.getMatrix();
        double double53 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA1();
        java.lang.String str63 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder60.getA3();
        double[] doubleArray65 = rotation59.getAngles(rotationOrder60);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder60.getA2();
        double[] doubleArray67 = rotation50.getAngles(rotationOrder60);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder60.getA2();
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.normalize();
        double double75 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D68, vector3D73);
        double double76 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D12.subtract(vector3D68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(rotationOrder84, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D83.subtract(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.7421004107973872d, vector3D3, 0.014101944381758654d, vector3D12, 0.7003068958044856d, vector3D93);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.11078585244669703d + "'", double51 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.476811323902129d) + "'", double53 == (-0.476811323902129d));
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "YXZ" + "'", str61, "YXZ");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "YXZ" + "'", str63, "YXZ");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-2.234489416233763, 0.563595159307288, -0.6152787481864835]");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXY" + "'", str80, "ZXY");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D32, vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.normalize();
        double double62 = vector3D59.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.negate();
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D63.scalarMultiply(0.8414289144139094d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D69.negate();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, (double) (-1));
        double double78 = vector3D75.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D69.subtract((-1.688281122707858d), vector3D75);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D69, 1.246950552048578d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D69);
        double double83 = vector3D82.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3.141592653589793d + "'", double62 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.0d) + "'", double64 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.15135620392549756d + "'", double78 == 0.15135620392549756d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException6.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        double[][] doubleArray36 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException37);
        java.lang.Object[] objArray39 = notARotationMatrixException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Object[] objArray47 = cardanEulerSingularityException45.getArguments();
        java.lang.String str48 = cardanEulerSingularityException45.getPattern();
        java.lang.Object[] objArray49 = cardanEulerSingularityException45.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException45.getSuppressed();
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException45.getSuppressed();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.String str53 = cardanEulerSingularityException41.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException41.getArguments();
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException41.getSuppressed();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.applyTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.7071067811865476d, (-1.0d), (double) ' ');
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation12.applyInverseTo(rotation33);
        double double36 = rotation35.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.4785186797839096d) + "'", double34 == (-0.4785186797839096d));
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.4785186797839096d) + "'", double36 == (-0.4785186797839096d));
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyTo(rotation28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        double double44 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation16.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation16.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation10.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D60.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation57.applyTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation5.applyTo(vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D74.orthogonal();
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.add((-0.9714040953537869d), vector3D75);
        double double78 = vector3D75.getY();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D80, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation82.applyTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.negate();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.428182669496151d, (-0.13599489604735257d));
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(0.6838267645076843d, vector3D87, 0.27319969649197073d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D91);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D6.scalarMultiply((double) 1L);
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.negate();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D11, (-3.138887764787507d));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: zero norm for rotation axis");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Object[] objArray28 = notARotationMatrixException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray38 = cardanEulerSingularityException34.getArguments();
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str40 = cardanEulerSingularityException34.getPattern();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.String str45 = cardanEulerSingularityException43.getPattern();
        java.lang.String str46 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray56 = rotation55.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.Object[] objArray62 = cardanEulerSingularityException60.getArguments();
        java.lang.String str63 = cardanEulerSingularityException60.getPattern();
        java.lang.Object[] objArray64 = cardanEulerSingularityException60.getArguments();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException60.getSuppressed();
        notARotationMatrixException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation79.applyTo(vector3D81);
        double[][] doubleArray83 = rotation79.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray83);
        notARotationMatrixException58.addSuppressed((java.lang.Throwable) notARotationMatrixException84);
        java.lang.Throwable[] throwableArray86 = notARotationMatrixException84.getSuppressed();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) notARotationMatrixException84);
        java.lang.String str88 = cardanEulerSingularityException34.getPattern();
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException34.getSuppressed();
        java.lang.Throwable[] throwableArray90 = cardanEulerSingularityException34.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException92 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray93 = cardanEulerSingularityException92.getArguments();
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException92.getSuppressed();
        java.lang.String str95 = cardanEulerSingularityException92.getPattern();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException92);
        java.lang.String str97 = cardanEulerSingularityException34.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Euler angles singularity" + "'", str88, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Euler angles singularity" + "'", str95, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str97, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8390715290764523d, (-0.0013651261847257446d), 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply(0.29982993928556756d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        double double11 = org.apache.commons.math.geometry.Vector3D.angle(vector3D8, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(1.898990647180086d, vector3D4, 0.0027048888022863306d, vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, 0.7604311401305615d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        double double25 = vector3D24.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation14.applyTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, 0.0d, (-378.71766086458643d));
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.orthogonal();
        double double33 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D27, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation45.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str49 = rotationOrder48.toString();
        double[] doubleArray50 = rotation47.getAngles(rotationOrder48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder48.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder52.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D58.orthogonal();
        double double60 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D51, vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D59);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.080456683454306d + "'", double11 == 1.080456683454306d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.5707963267948966d + "'", double25 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 378.3486054486785d + "'", double33 == 378.3486054486785d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "XZX" + "'", str49, "XZX");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[2.055910057912307, 1.7765565406780053, -0.805632409230546]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        java.lang.Object[] objArray6 = notARotationMatrixException5.getArguments();
        java.lang.String str7 = notARotationMatrixException5.getPattern();
        java.lang.Throwable[] throwableArray8 = notARotationMatrixException5.getSuppressed();
        java.lang.Throwable[] throwableArray9 = notARotationMatrixException5.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        double double27 = rotation26.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation26.applyTo(rotation53);
        double[][] doubleArray55 = rotation26.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException56 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray55);
        java.lang.Object[] objArray60 = notARotationMatrixException59.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException59);
        java.lang.Object[] objArray62 = notARotationMatrixException59.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str7, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        double[][] doubleArray15 = rotation5.getMatrix();
        java.lang.Class<?> wildcardClass16 = doubleArray15.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        double double42 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D11.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D11.negate();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation3 = new org.apache.commons.math.geometry.Rotation(vector3D1, 0.42487699275774343d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str13 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation3.applyTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation3.revert();
        double double18 = rotation3.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(32.0d, 0.3691205271584663d, 3.2087642143727657d, 2.356194490192345d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation3.applyTo(rotation25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double31 = vector3D30.getY();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double35 = vector3D34.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D30.add(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D30, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((-1.4711276743037347d), 0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D30.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation26.applyInverseTo(vector3D42);
        double double44 = rotation26.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXY" + "'", str5, "ZXY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.0d) + "'", double18 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.26237485370392877d + "'", double31 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5153978362128364d + "'", double35 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.06900723937455024d + "'", double44 == 0.06900723937455024d);
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA3();
        java.lang.String str13 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder9.getA2();
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D8.subtract(vector3D19);
        double double23 = vector3D8.getZ();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D8, 0.28742517866390543d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D29.subtract(vector3D47);
        double double57 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-0.7936280035504817d), 30.452894880775844d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation25.applyTo(vector3D61);
        double[][] doubleArray63 = rotation25.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.0d) + "'", double23 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.4129886590656342d) + "'", double57 == (-1.4129886590656342d));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(doubleArray63);
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException17.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.String str23 = cardanEulerSingularityException21.getPattern();
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        notARotationMatrixException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) notARotationMatrixException15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.String str34 = cardanEulerSingularityException32.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.Object[] objArray36 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException32.getSuppressed();
        java.lang.Object[] objArray38 = cardanEulerSingularityException32.getArguments();
        java.lang.String str39 = cardanEulerSingularityException32.getPattern();
        notARotationMatrixException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyInverseTo(rotation73);
        double double75 = rotation74.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation47.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation82.applyTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation47.applyTo(rotation88);
        double[][] doubleArray90 = rotation47.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException91 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray90);
        java.lang.String str92 = notARotationMatrixException91.getPattern();
        notARotationMatrixException15.addSuppressed((java.lang.Throwable) notARotationMatrixException91);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Euler angles singularity" + "'", str23, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str92, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.429556888950007d), (double) ' ', 2.0678198605632665d, 24.882865501017502d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ2();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.0678198605632665d + "'", double7 == 2.0678198605632665d);
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        double double33 = vector3D31.getDelta();
        double double34 = vector3D31.getY();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D(2.009786123187427d, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        double double45 = vector3D42.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D38.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D31.add(0.8414709848078965d, vector3D48);
        double double50 = vector3D31.getNorm();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D49, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation60 = rotation33.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA1();
        double[] doubleArray64 = rotation59.getAngles(rotationOrder61);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, 2.356194490192345d, 100.4491529857595d, (double) (byte) 100);
        double[] doubleArray69 = rotation4.getAngles(rotationOrder61);
        java.lang.String str70 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder61.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5277475438952628d + "'", double6 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.6093700410731815, -0.31498220060626514, -2.0550730950100133]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "YZX" + "'", str70, "YZX");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D59.subtract(1.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.subtract(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D74.add((-1.0d), vector3D76);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D76, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation51.applyInverseTo(rotation84);
        double double87 = rotation84.getQ0();
        double double88 = rotation84.getQ0();
        double double89 = rotation84.getQ1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.9649660284921133d + "'", double87 == 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.9649660284921133d + "'", double88 == 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.26237485370392877d + "'", double89 == 0.26237485370392877d);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ2();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(doubleArray51, (double) 0L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 24.882865501017502d + "'", double49 == 24.882865501017502d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 24.882865501017502d + "'", double50 == 24.882865501017502d);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.2874427939781007d, (-53.14629390766603d), (-0.4073364259823062d));
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.9202635195876083d), (double) 1.0f, (-0.4212430843250595d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-82.22900984949234d), 0.6174075626500691d, 0.5440576690558799d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-2.902432329649637d), 0.25208789984322294d, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D19);
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        java.lang.String str16 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXZ" + "'", str16, "ZXZ");
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation5.applyInverseTo(rotation38);
        double double43 = rotation5.getQ1();
        double double44 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.33931220530841594d + "'", double43 == 0.33931220530841594d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.9403795404261813d + "'", double44 == 0.9403795404261813d);
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((-0.7525070711305497d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((-0.858431163878729d), (-0.0013651261847257446d), 0.12637150995481888d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((-0.08153856787190739d), vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024015d, 1.580316067234769d, 0.5496694388267763d);
        double double19 = org.apache.commons.math.geometry.Vector3D.angle(vector3D13, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.scalarMultiply(3.0419236247578776d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D54, vector3D57, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D81);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D28.subtract((double) 0, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-0.5287508684135855d), (-0.08153856787190739d));
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D88, vector3D91);
        double double93 = vector3D91.getZ();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation5.applyTo(vector3D21);
        double[][] doubleArray96 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.6706985827839445d + "'", double19 == 1.6706985827839445d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.08144824585742245d) + "'", double93 == (-0.08144824585742245d));
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.16501837282938553d, (double) '#');
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.8714757537611889d), 0.3260092947226165d);
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        double double20 = rotation5.getQ2();
        double double21 = rotation5.getQ0();
        double double22 = rotation5.getAngle();
        double double23 = rotation5.getQ0();
        double double24 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation12.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str16 = rotationOrder15.toString();
        double[] doubleArray17 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (-2.7755575615628914E-17d), (-0.7683919425686428d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D25.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.scalarMultiply(2.28147172247978d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(0.16577663949348953d, vector3D21, 0.911089444503829d, vector3D44);
        java.lang.Class<?> wildcardClass46 = vector3D44.getClass();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "XZX" + "'", str16, "XZX");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[2.055910057912307, 1.7765565406780053, -0.805632409230546]");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.4928810440100293d, (-0.05546668618914311d), (-1.12493765766273d), 0.0027048888022863306d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        double double12 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D17.add(vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.normalize();
        double double27 = vector3D25.getY();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D17.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation5.applyTo(vector3D14);
        double double31 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0027048888022863306d + "'", double31 == 0.0027048888022863306d);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.23708275547963084d), (-9.617943898316641E-4d));
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, 0.5602898060815165d);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA1();
        double[] doubleArray50 = rotation45.getAngles(rotationOrder47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder47.getA1();
        double double52 = vector3D51.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        double double60 = vector3D57.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D57.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, (double) (-1L));
        double double67 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(2.153573489132929d, vector3D61, (-0.22896318350517658d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D51.subtract(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.scalarMultiply((double) 0.0f);
        double double10 = vector3D3.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D29.add((-1.0d), vector3D58);
        double double60 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D29.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D29.subtract((-0.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation17.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D3.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.8228860923754615d, vector3D74);
        double double76 = vector3D74.getZ();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D74);
        double double78 = rotation77.getAngle();
        double[][] doubleArray79 = rotation77.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.23892621530389604d + "'", double78 == 0.23892621530389604d);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.15135620392549756d, 1.580316067234769d, (double) ' ', Double.NaN, true);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) doubleArray7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0639847388305297d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str28 = notARotationMatrixException5.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray40 = rotation34.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double46 = rotation45.getQ0();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation34.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation60.applyTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation82 = rotation75.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation69.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation60.applyTo(rotation81);
        double double85 = rotation84.getQ3();
        double[][] doubleArray86 = rotation84.getMatrix();
        double double87 = rotation84.getQ0();
        double double88 = rotation84.getAngle();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation34.applyTo(rotation84);
        double[][] doubleArray90 = rotation34.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException91 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray90);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException91);
        java.lang.String str93 = notARotationMatrixException91.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.24893698743024015d + "'", double46 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.8415352216177445d + "'", double47 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.11078585244669703d + "'", double85 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.476811323902129d) + "'", double87 == (-0.476811323902129d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.1475455860530537d + "'", double88 == 2.1475455860530537d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str93, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D29, vector3D32, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D2.add(10.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        double double63 = vector3D60.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D60.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.orthogonal();
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D68, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation70.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D65.add(0.8390715290764523d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), (double) 0L, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D65.add(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D80);
        double double82 = vector3D81.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.7683919425686428d + "'", double82 == 0.7683919425686428d);
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1.0f, (double) (short) 1, 3.141592653589793d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) (short) 10, (-54.50256143565405d), (-1.0d), 0.8390715290764523d, true);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        double double57 = vector3D21.getX();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D21, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation60 = rotation10.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(0.6178548206313739d, 3.0494479105138855E-17d, 0.0952905926857031d, 0.8846219209894443d, true);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation10.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation66.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA1();
        double double72 = vector3D71.getX();
        double double73 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation66.applyTo(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D3.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.add(2.306492779467043d, vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((-0.325607453322614d), vector3D3, (-0.3352797533984094d), vector3D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.6956595142333857d, (-0.8659616593396997d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation15.applyTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation15.applyTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyTo(rotation40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation35.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D28.add(1.8027186956254748d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D22.subtract((-0.13599489604735251d), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D2.add(0.264809141487021d, vector3D28);
        double double50 = vector3D28.getZ();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.5738046983621651d, (-1024.0d), (-0.1056478979494711d));
        double double4 = vector3D3.getY();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1024.0d) + "'", double4 == (-1024.0d));
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D68, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        double double78 = vector3D75.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D75.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation71.applyTo(vector3D75);
        double double83 = rotation71.getQ1();
        double double84 = rotation71.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.YZX;
        double[] doubleArray86 = rotation71.getAngles(rotationOrder85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder85, 1.279994453009342d, 0.8292004581690566d, 0.3257031048948561d);
        double double92 = rotation91.getQ3();
        double double93 = rotation91.getAngle();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZYZ" + "'", str67, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.05546668618914311d) + "'", double83 == (-0.05546668618914311d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.28742517866390543d + "'", double84 == 0.28742517866390543d);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.5823032504476577, -0.03189044953605607, 0.10632821406868524]");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.23020781992245518d) + "'", double92 == (-0.23020781992245518d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.6312183527336863d + "'", double93 == 1.6312183527336863d);
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        double[] doubleArray32 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 3.138441573174606d, (double) 100, 0.9988929054468333d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.negate();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D61.subtract(1.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.subtract(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D51, vector3D54, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D76.add((double) ' ', vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D23.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.scalarMultiply(1.9456840668546524d);
        double double93 = vector3D92.getY();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D92, 2.164942851390959d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.0d + "'", double25 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D22.orthogonal();
        double double52 = vector3D51.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D57.normalize();
        double double59 = vector3D57.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D57.subtract(vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract((double) 100L, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, vector3D51, 2.5104165854707956d, vector3D63, 0.15135620392549756d, vector3D75);
        double double77 = vector3D76.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.5707963267948966d + "'", double52 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZYZ" + "'", str68, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.12426313436139437d + "'", double77 == 0.12426313436139437d);
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.subtract(1.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.add((-1.0d), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D27, vector3D30, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D25.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D25);
        double double57 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D25.scalarMultiply(0.9988929054468334d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA3();
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.normalize();
        double double64 = org.apache.commons.math.geometry.Vector3D.angle(vector3D59, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D68);
        double double75 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D68, 25.06596560241331d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.9999999999999999d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(268.47048776580107d, vector3D59, 7.880514097121173d, vector3D68, 0.5752220392306202d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D68.orthogonal();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-2.0d) + "'", double57 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.5707963267948966d + "'", double64 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0952905926857031d, (double) 10.0f, (-406.7116193600549d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 24.882865501017502d, 0.8414709848078965d, 1.0122694247155644d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "YXZ" + "'", str9, "YXZ");
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        double double32 = vector3D31.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation5.applyTo(vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.subtract(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D63, vector3D66, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D36.add(10.0d, vector3D66);
        double double91 = vector3D66.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D33.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D66.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D66.negate();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D66.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D95.normalize();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.0d + "'", double32 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.15135620392549756d, (-0.9092974268256817d), 0.4242135627991309d, 0.2590347239999257d, true);
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.scalarMultiply((-0.21114476788661177d));
        double double60 = vector3D59.getAlpha();
        double double61 = vector3D59.getX();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.122967125689989d) + "'", double60 == (-1.122967125689989d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0906986896114443d + "'", double61 == 0.0906986896114443d);
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        double double6 = rotation2.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, 2.0d, 0.24893698743024015d, (double) 1);
        double[] doubleArray18 = rotation2.getAngles(rotationOrder7);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, 1.1071487177940904d, (-0.033764092852954036d), (-0.13599489604735251d));
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ0();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-0.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.5254171326308468d) + "'", double23 == (-0.5254171326308468d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.8479610605754508d + "'", double24 == 0.8479610605754508d);
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.00000000000001d, (-128.0d), (double) '#');
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, 3.0419236247578776d);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.7693875020476496d + "'", double6 == 0.7693875020476496d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.7693875020476496d + "'", double8 == 0.7693875020476496d);
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        double double50 = rotation49.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D51.subtract(1.0d, vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D66);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation75.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation49.applyTo(rotation76);
        double[][] doubleArray78 = rotation49.getMatrix();
        double double79 = rotation49.getQ2();
        double double80 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation33.applyTo(rotation49);
        double[][] doubleArray82 = rotation81.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray82);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        double double15 = vector3D14.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.add((-1.0d), vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D30, (double) 100.0f, vector3D38, (double) (short) -1, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D22.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        double double74 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D38, (-0.7683919425686428d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D38.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D38.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.5309649148733836d, (double) 100L, (-0.05546668618914311d));
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((-0.44266332810163755d), vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D84, vector3D91);
        double double95 = org.apache.commons.math.geometry.Vector3D.angle(vector3D14, vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9999999999999999d + "'", double15 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2.675182691668628d + "'", double95 == 2.675182691668628d);
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D3.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D3.subtract(vector3D9);
        double double11 = vector3D3.getDelta();
        double double12 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.normalize();
        double double15 = vector3D13.getY();
        double double16 = vector3D13.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.0d) + "'", double11 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Class<?> wildcardClass9 = throwableArray8.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.6262630129840396d, (-0.03895319811068548d), 0.24650039484071107d);
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(0.11078585244669703d, (-0.6502970659532881d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.add((-1.0d), vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D32, (double) 100.0f, vector3D40, (double) (short) -1, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D24.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        double double76 = vector3D73.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D40, (-0.7683919425686428d), vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D17.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D15.add(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D12.add(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D15, 0.2081764088995619d);
        double double85 = vector3D15.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.6502970659532881d) + "'", double85 == (-0.6502970659532881d));
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, (-0.9902124943143233d), 143.7738589649261d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((-0.3010124653079922d), vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        java.lang.String str9 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        double double19 = rotation18.getQ1();
        double[][] doubleArray20 = rotation18.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, (-1.5707963267948966d));
        double double28 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D33.subtract(1.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.add((-1.0d), vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.subtract(1.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.subtract(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D56, vector3D58, vector3D61, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D56.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D56.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D30.add(1.0d, vector3D56);
        double double90 = vector3D89.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D25.add(0.30970294454245617d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation18.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D5.subtract(vector3D92);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.3967963165953361d + "'", double19 == 0.3967963165953361d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZYZ" + "'", str23, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2.23606797749979d + "'", double90 == 2.23606797749979d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        double double43 = vector3D12.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D12.add((double) 1.0f, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.add((-1.0d), vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D76.negate();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, vector3D47, 0.5153978362128364d, vector3D51, 0.6654428555205447d, vector3D76);
        double double81 = vector3D51.getDelta();
        double double82 = vector3D51.getX();
        double double83 = vector3D51.getX();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.5707963267948966d + "'", double81 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation28.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation37.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation28.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation12.applyTo(rotation52);
        double double54 = rotation52.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str56 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray64 = rotation63.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation63.applyTo(vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation83 = rotation76.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation82.applyTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation82.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation63.applyTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation52.applyTo(rotation63);
        double[][] doubleArray89 = rotation88.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException90 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(doubleArray89, (-5113.358583779441d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.11078585244669703d + "'", double54 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ZXY" + "'", str56, "ZXY");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str4 = cardanEulerSingularityException3.getPattern();
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) throwableArray6);
        java.lang.String str8 = notARotationMatrixException7.getPattern();
        java.lang.Throwable[] throwableArray9 = notARotationMatrixException7.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation13.applyInverseTo(rotation21);
        double[][] doubleArray24 = rotation23.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray24, 0.7853981633974482d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray24);
        java.lang.Throwable[] throwableArray29 = notARotationMatrixException28.getSuppressed();
        java.lang.Object[] objArray30 = notARotationMatrixException28.getArguments();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException28);
        java.lang.String str32 = notARotationMatrixException28.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYX" + "'", str8, "XYX");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[[0.450732805290736, -0.7019747527151661, 0.5514266812416908], [-0.2979371073921011, 0.46400955251379594, 0.8342233605065102], [-0.8414709848078967, -0.5403023058681397, 2.220446049250313E-16]]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str32, "org.apache.commons.math.geometry.NotARotationMatrixException: ");
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.add((-1.0d), vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.negate();
        double double37 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        double double44 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D35, vector3D43);
        double double45 = vector3D43.getDelta();
        double double46 = vector3D43.getY();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA2();
        double double52 = vector3D51.getY();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D11.subtract((-0.6883311189581703d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.negate();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.orthogonal();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-2.0d) + "'", double37 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-2.0d) + "'", double44 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.11078585244669703d, 1.4798482772405772d, (-2.5309649148733837d), (-53.14629390766603d), false);
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException13.getSuppressed();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray20 = notARotationMatrixException11.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray22 = notARotationMatrixException21.getArguments();
        java.lang.Object[] objArray23 = notARotationMatrixException21.getArguments();
        java.lang.String str24 = notARotationMatrixException21.getPattern();
        java.lang.String str25 = notARotationMatrixException21.getPattern();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5277475438952628d, 0.9999999999999999d, 0.10830291305827339d, Double.NaN, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.7166998538026311d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((double) 0, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation71.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D55.subtract(vector3D74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation88 = rotation81.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation87.applyTo(vector3D89);
        double double91 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D75, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(0.5079233958819608d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D13.orthogonal();
        double double95 = vector3D13.getY();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.4533522819483131d + "'", double91 == 1.4533522819483131d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.add((-1.0d), vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.subtract((double) (-1L), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D50.add(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.normalize();
        double double84 = vector3D82.getX();
        double double85 = vector3D82.getY();
        double double86 = vector3D82.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder88, (double) (short) 1, (-1.0d), 98.0d);
        java.lang.String str93 = rotationOrder88.toString();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder88.getA3();
        double double95 = vector3D94.getY();
        double double96 = vector3D94.getX();
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D94.orthogonal();
        double double98 = vector3D94.getNorm();
        double double99 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D87, vector3D94);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-2.0d) + "'", double84 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2.677945044588987d + "'", double86 == 2.677945044588987d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "YXZ" + "'", str93, "YXZ");
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation6.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation8.applyTo(rotation21);
        double[][] doubleArray23 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray23, 0.4034226801113349d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(doubleArray23);
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2010.8322649434506d, 1.2489510605799288d, (-2.928626007606884d), 25.06596560241331d, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.14599455657272695d), 3.1330314046616845d, 0.005022802342728373d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D29, vector3D32, vector3D54);
        double double56 = vector3D54.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.subtract(1.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.negate();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D54.add((double) 0.0f, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D54.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D74);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 3.141592653589793d + "'", double56 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D15.subtract((double) 0, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D21.add(2.0d, vector3D32);
        double double34 = vector3D33.getX();
        double double35 = vector3D33.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D40.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((-8.868313204374247E-18d), vector3D33, 0.9649660284921133d, vector3D40, 0.04909141830635927d, vector3D45);
        double double47 = vector3D46.getY();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation5.applyTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.normalize();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36259815178588733d + "'", double6 == 0.36259815178588733d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.18852894086393088d) + "'", double47 == (-0.18852894086393088d));
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 10.0d, 1.8228860923754615d, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.962216877206194d, 0.9999999999999999d, 1.6890618655345513d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        double double9 = vector3D8.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D8.scalarMultiply(0.11995582930323118d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.5707963267948966d + "'", double9 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        double double15 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder17.getA1();
        double[] doubleArray24 = rotation16.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation30.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation30.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        double double56 = org.apache.commons.math.geometry.Vector3D.angle(vector3D39, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation16.applyTo(vector3D39);
        double double58 = rotation16.getQ3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.9999999999999998, -0.0, -0.9999999999999998]");
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.4034226801113349d + "'", double58 == 0.4034226801113349d);
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), 24.882865501017502d, (-2.0d), (double) 100L, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getQ0();
        double[][] doubleArray9 = rotation5.getMatrix();
        double double10 = rotation5.getQ0();
        double double11 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 24.882865501017502d + "'", double6 == 24.882865501017502d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-2.0d) + "'", double7 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-2.7755575615628914E-17d) + "'", double8 == (-2.7755575615628914E-17d));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-2.7755575615628914E-17d) + "'", double10 == (-2.7755575615628914E-17d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 24.882865501017502d + "'", double11 == 24.882865501017502d);
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyInverseTo(rotation16);
        double double18 = rotation17.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D19.subtract(1.0d, vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation17.applyTo(rotation44);
        double[][] doubleArray46 = rotation17.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray46);
        java.lang.Throwable[] throwableArray48 = notARotationMatrixException47.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException47);
        java.lang.String str50 = notARotationMatrixException47.getPattern();
        java.lang.Class<?> wildcardClass51 = notARotationMatrixException47.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cardan angles singularity" + "'", str2, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXY" + "'", str50, "ZXY");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        double[][] doubleArray15 = rotation5.getMatrix();
        double[][] doubleArray16 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str18 = rotationOrder17.toString();
        java.lang.String str19 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder17.getA2();
        double[] doubleArray23 = rotation5.getAngles(rotationOrder17);
        double[][] doubleArray24 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "XYX" + "'", str19, "XYX");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(doubleArray24);
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.141592653589793d, 1.6134380694273582d, (-0.429556888950007d));
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.590031694590281d, 0.2520878998432229d, (-0.21114476788661177d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D25.add(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation18.applyTo(vector3D25);
        double double33 = rotation18.getQ0();
        double double34 = rotation18.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.7003068958044856d + "'", double33 == 0.7003068958044856d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.5899379990805156d + "'", double34 == 1.5899379990805156d);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D25, 2.153573489132929d, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D40, 788.3701330754276d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation42.getAxis();
        double[][] doubleArray44 = rotation42.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(doubleArray44, 0.9956699613968089d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray44);
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation56.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation72.applyTo(vector3D74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D74, 0.5277475438952628d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation59.applyTo(vector3D79);
        double double81 = vector3D79.getY();
        double double82 = vector3D79.getDelta();
        double double83 = vector3D79.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D84.subtract(0.0d, vector3D87);
        double double90 = vector3D87.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D87.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D87.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder93 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder93.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder93.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D92.add(vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D96.negate();
        org.apache.commons.math.geometry.Vector3D vector3D98 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D96);
        double double99 = vector3D98.getY();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.5707963267948966d + "'", double82 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.5277475438952628d + "'", double83 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotationOrder93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.5277475438952628d + "'", double99 == 0.5277475438952628d);
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        double double7 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D4, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation9.applyTo(vector3D12);
        double[][] doubleArray14 = rotation9.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray14);
        java.lang.Throwable[] throwableArray16 = notARotationMatrixException15.getSuppressed();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.4533522819483131d), 24.882865501017502d, (-0.9944340607881093d));
        double double12 = rotation11.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "YXZ" + "'", str6, "YXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.8237152093226012d + "'", double12 == 1.8237152093226012d);
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA3();
        double[] doubleArray74 = rotation66.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation66.revert();
        double double77 = rotation76.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D80, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation76.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.scalarMultiply(0.38468101661851206d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.scalarMultiply(4100.000487804849d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D85.add(vector3D88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZYZ" + "'", str57, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.25291598322993725d) + "'", double77 == (-0.25291598322993725d));
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZYZ" + "'", str79, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder0.getA2();
        java.lang.String str18 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 29.786746287691315d, 0.580761232560293d, (-0.7839109005632345d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXZ" + "'", str18, "ZXZ");
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double[] doubleArray30 = rotation25.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder27.getA2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException6.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        double[][] doubleArray36 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException37);
        java.lang.Throwable[] throwableArray39 = notARotationMatrixException18.getSuppressed();
        java.lang.Object[] objArray40 = notARotationMatrixException18.getArguments();
        java.lang.Object[] objArray41 = notARotationMatrixException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException44.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray46);
        java.lang.Object[] objArray48 = notARotationMatrixException47.getArguments();
        java.lang.Object[] objArray49 = notARotationMatrixException47.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException51.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation66.applyTo(vector3D68);
        double[][] doubleArray70 = rotation66.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray70);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray70);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException74 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray75 = cardanEulerSingularityException74.getArguments();
        notARotationMatrixException72.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) notARotationMatrixException72);
        java.lang.Throwable[] throwableArray78 = notARotationMatrixException72.getSuppressed();
        notARotationMatrixException47.addSuppressed((java.lang.Throwable) notARotationMatrixException72);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException72);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.applyTo(rotation42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D51.subtract((double) 0, vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str60 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str68 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder59.getA2();
        double double71 = vector3D70.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D51.add((double) 100L, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation28.applyTo(vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) (short) 1, (-1.0d), 98.0d);
        double double79 = rotation78.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA3();
        double[] doubleArray83 = rotation78.getAngles(rotationOrder80);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation28.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation13.applyTo(rotation78);
        double double86 = rotation13.getQ0();
        double double87 = rotation13.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXY" + "'", str60, "ZXY");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXY" + "'", str68, "ZXY");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.6654428555205447d + "'", double79 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZXY" + "'", str81, "ZXY");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-2.0323790881822563, -0.11021888658218676, -1.2726918719004534]");
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.5114629390766603d) + "'", double86 == (-0.5114629390766603d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.10830291305827339d + "'", double87 == 0.10830291305827339d);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        java.lang.String str9 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str22 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation31.applyTo(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.scalarMultiply((double) (-1L));
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(24.882865501017502d, vector3D14, (-1.0d), vector3D23, 1.5707963267948961d, vector3D39, 0.5277475438952628d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D44.scalarMultiply(2.275653189032593d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXZ" + "'", str9, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "XYZ" + "'", str22, "XYZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.subtract(1.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.add((-1.0d), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D27, vector3D30, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-0.9138363287001148d), 0.8659616593396997d, 3.012932544327696d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double67 = vector3D66.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        double double74 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D71.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D66.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D66.scalarMultiply(2.2259647441756316d);
        double double81 = vector3D80.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.16533512846195772d, vector3D62, 0.7183075869834017d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(2.1753991605364833d, vector3D82);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.5707963267948966d + "'", double67 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.07972572548978678d, (-0.3987149654648925d), 1.8836428001690274E-6d);
        double double4 = vector3D3.getNorm();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.4066076917547077d + "'", double4 == 0.4066076917547077d);
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D3.subtract(1.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.add((-1.0d), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D28, vector3D31, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D0.add(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-3.110368056629538d), (-0.5287508684135855d));
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D63);
        double[][] doubleArray65 = rotation64.getMatrix();
        java.lang.Class<?> wildcardClass66 = doubleArray65.getClass();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.subtract(vector3D3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertNotNull(vector3D2);
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.09299429543118114d), (-0.5403023058681398d), 0.9232154062269446d);
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double2 = vector3D1.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        double double9 = vector3D6.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D6.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D1.subtract(vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA3();
        java.lang.String str20 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder16.getA2();
        double double27 = vector3D26.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D6.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str39 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder33.getA3();
        double double41 = org.apache.commons.math.geometry.Vector3D.angle(vector3D32, vector3D40);
        double double42 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D29, vector3D40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.5707963267948966d + "'", double2 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXY" + "'", str20, "ZXY");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "XYZ" + "'", str39, "XYZ");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0553984905820601d + "'", double41 == 1.0553984905820601d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, 2.2183772473628482d, (-0.02947405916724674d), 1.0553984905820601d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        java.lang.String str11 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "XYX" + "'", str9, "XYX");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "XYX" + "'", str11, "XYX");
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.8846219209894443d, vector3D31);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((-0.9138363287001148d), 0.8659616593396997d, 3.012932544327696d);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double66 = vector3D65.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        double double73 = vector3D70.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D70.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D70.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D65.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D65.scalarMultiply(2.2259647441756316d);
        double double80 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(0.16533512846195772d, vector3D61, 0.7183075869834017d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.negate();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.5707963267948966d + "'", double66 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ0();
        double[][] doubleArray8 = rotation5.getMatrix();
        double double9 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D2.add((-0.8412192543248603d), vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply(1.1900368958131755d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        double[][] doubleArray13 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 24.882865501017502d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 0.5224674736269327d);
        double double18 = rotation17.getAngle();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2.0d + "'", double18 == 2.0d);
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        double double8 = rotation7.getQ0();
        double[][] doubleArray9 = rotation7.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D16.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D24, (double) 100.0f, vector3D32, (double) (short) -1, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D16.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.subtract(1.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.subtract(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D78.add((-1.0d), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.negate();
        double double88 = vector3D86.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.zero;
        double double91 = vector3D90.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), vector3D32, (double) 1, vector3D86, (-0.5287508684135855d), vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation7.applyTo(vector3D90);
        // The following exception was thrown during execution in test generation
        try {
            double double94 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D0, vector3D93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.0d + "'", double88 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        double double14 = vector3D13.getAlpha();
        double double15 = vector3D13.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation25.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        double double31 = vector3D30.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        double double40 = vector3D34.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D34.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D43.add(0.006522209859930971d, vector3D51);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "XZX" + "'", str46, "XZX");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder64.getA2();
        java.lang.String str72 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder64.getA1();
        double[] doubleArray79 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, 1.4102833407707576d, (-0.6883311189581703d), 1.5664650742126642d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXZ" + "'", str72, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-2.485094575320134, 2.0413190668629926, 0.33606171529046414]");
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        double double38 = rotation11.getQ0();
        double double39 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (short) 0, 25.06596560241331d, 0.0027048888022863306d, false);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation11.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.7683919425686428d) + "'", double39 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.orthogonal();
        double double11 = vector3D10.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.0d) + "'", double11 == (-0.0d));
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXY" + "'", str6, "ZXY");
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D23, (double) 100.0f, vector3D31, (double) (short) -1, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D15.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D31.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D62.subtract(1.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D77.add((-1.0d), vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.negate();
        double double87 = vector3D85.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.zero;
        double double90 = vector3D89.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), vector3D31, (double) 1, vector3D85, (-0.5287508684135855d), vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(2.617866403174436d, vector3D3, 0.23869349855450123d, vector3D6, (double) ' ', vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D3.negate();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2.0d + "'", double87 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.531212308932249d, 0.0d, (-0.6551684173807351d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 'a', (double) (short) 100, 100.0022140464598d);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D33, 0.5277475438952628d, vector3D37);
        double double39 = vector3D38.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D44, (double) 100.0f, vector3D52, (double) (short) -1, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D52.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str83 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder82.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.3691205271584663d, vector3D38, (double) (short) -1, vector3D52, 3.141592653589793d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation16.applyInverseTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation5.applyInverseTo(vector3D86);
        double double88 = vector3D86.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.2972553630971882d) + "'", double17 == (-0.2972553630971882d));
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5277475438952628d + "'", double39 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "XZX" + "'", str83, "XZX");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-2.7303466846846405d) + "'", double88 == (-2.7303466846846405d));
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D3.scalarMultiply(1.5179595270946264d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder21.getA1();
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation20.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.add(98.0d, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder34.getA2();
        java.lang.String str42 = rotationOrder34.toString();
        java.lang.String str43 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D3.add((-0.7598933423794343d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.negate();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D46, 2.9152500368796312d);
        double double55 = rotation54.getQ0();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZXY" + "'", str43, "ZXY");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.11292988480107491d + "'", double55 == 0.11292988480107491d);
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation57.applyTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D41.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D63, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D61, (-0.9036922050915068d), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.5629528985411225d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(2.1475455860530537d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D68, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        double double80 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D82, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D76.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double89 = vector3D88.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double92 = vector3D91.getX();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D88.subtract(0.0d, vector3D91);
        org.apache.commons.math.geometry.RotationOrder rotationOrder94 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder94.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder94.getA1();
        double double97 = org.apache.commons.math.geometry.Vector3D.angle(vector3D88, vector3D96);
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D76, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D99 = vector3D76.normalize();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXY" + "'", str78, "ZXY");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "XZX" + "'", str84, "XZX");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0d + "'", double92 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(rotationOrder94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.5707963267948966d + "'", double97 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D6);
        double double13 = vector3D6.getY();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D15, 1.278124800288793d);
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException31.getSuppressed();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException31.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray42 = rotation41.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Object[] objArray48 = cardanEulerSingularityException46.getArguments();
        java.lang.String str49 = cardanEulerSingularityException46.getPattern();
        java.lang.Object[] objArray50 = cardanEulerSingularityException46.getArguments();
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException46.getSuppressed();
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Object[] objArray56 = cardanEulerSingularityException54.getArguments();
        java.lang.String str57 = cardanEulerSingularityException54.getPattern();
        java.lang.Object[] objArray58 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException54.getSuppressed();
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException54.getSuppressed();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray73 = rotation72.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException75 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray73);
        java.lang.Throwable[] throwableArray76 = notARotationMatrixException75.getSuppressed();
        java.lang.Throwable[] throwableArray77 = notARotationMatrixException75.getSuppressed();
        java.lang.Throwable[] throwableArray78 = notARotationMatrixException75.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException79 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) throwableArray78);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException80 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray78);
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) notARotationMatrixException80);
        notARotationMatrixException29.addSuppressed((java.lang.Throwable) notARotationMatrixException80);
        java.lang.String str83 = notARotationMatrixException29.toString();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX" + "'", str83, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX");
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.30671879673173297d, 0.6174075626500691d);
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation20.applyTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        double[][] doubleArray25 = rotation20.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray25);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        java.lang.String str32 = cardanEulerSingularityException29.getPattern();
        notARotationMatrixException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException29.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D0.scalarMultiply((double) 1);
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        double double12 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D14.add(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D14.scalarMultiply(27.47493735326811d);
        double double21 = vector3D20.getDelta();
        double double22 = vector3D20.getY();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D2.add((-0.5373843183446426d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D20.negate();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        double double36 = org.apache.commons.math.geometry.Vector3D.angle(vector3D33, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(1.898990647180086d, vector3D29, 0.0027048888022863306d, vector3D34);
        double double38 = vector3D34.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D34);
        double double40 = vector3D24.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.080456683454306d + "'", double36 == 1.080456683454306d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-27.47493735326811d) + "'", double40 == (-27.47493735326811d));
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.0d, 0.9649660284921133d, 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (short) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation6.applyTo(vector3D12);
        double[][] doubleArray14 = rotation6.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        double double25 = vector3D24.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D27.subtract(1.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.add((-1.0d), vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D62.subtract(1.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.subtract(vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D50, vector3D52, vector3D55, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        double double86 = vector3D83.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D83.orthogonal();
        double double88 = org.apache.commons.math.geometry.Vector3D.angle(vector3D79, vector3D83);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D83);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D24, 0.0d);
        double double92 = rotation91.getAngle();
        org.apache.commons.math.geometry.Rotation rotation93 = rotation6.applyInverseTo(rotation91);
        double double94 = rotation91.getQ2();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.5707963267948966d + "'", double25 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 3.141592653589793d + "'", double88 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.0d) + "'", double94 == (-0.0d));
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply(0.005259088864518715d);
        double double14 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D11);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D11, (-0.013044512204875569d));
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.006522209859930971d + "'", double17 == 0.006522209859930971d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Object[] objArray21 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException14.getSuppressed();
        java.lang.Object[] objArray23 = cardanEulerSingularityException14.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYX", objArray5);
        java.lang.String str7 = notARotationMatrixException6.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYX" + "'", str7, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYX");
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (-52.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray15 = rotation14.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray15);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException29.getArguments();
        java.lang.String str32 = cardanEulerSingularityException29.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        notARotationMatrixException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Object[] objArray39 = cardanEulerSingularityException37.getArguments();
        java.lang.String str40 = cardanEulerSingularityException37.getPattern();
        java.lang.Object[] objArray41 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException37.getSuppressed();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Object[] objArray47 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.String str51 = cardanEulerSingularityException49.getPattern();
        java.lang.String str52 = cardanEulerSingularityException49.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.String str54 = cardanEulerSingularityException49.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str54, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        double double59 = rotation58.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation58.applyInverseTo(rotation64);
        double double66 = rotation65.getQ0();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray12 = rotation11.getMatrix();
        double double13 = rotation11.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder25.getA3();
        double[] doubleArray32 = rotation24.getAngles(rotationOrder25);
        double[] doubleArray33 = rotation11.getAngles(rotationOrder25);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation6.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.revert();
        double[][] doubleArray36 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray36, 3.1382470946270726d);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray36, 0.3461393991776283d);
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.45973278686101987d) + "'", double13 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZYZ" + "'", str15, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-2.804640934446484, 0.47549431265859154, 0.9176116102223566]");
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.13599489604735251d) + "'", double41 == (-0.13599489604735251d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.24893698743024012d) + "'", double42 == (-0.24893698743024012d));
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D36, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation47 = rotation20.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        double double61 = rotation60.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D62.subtract(1.0d, vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D77, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D72, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation86.revert();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation60.applyTo(rotation87);
        double[][] doubleArray89 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation47.applyInverseTo(rotation60);
        double[][] doubleArray91 = rotation60.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) doubleArray91);
        java.lang.Object[] objArray93 = notARotationMatrixException92.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.subtract(1.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.add((-1.0d), vector3D19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D17, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA2();
        double[] doubleArray33 = rotation30.getAngles(rotationOrder31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D60.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D69.subtract(1.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.subtract(vector3D83);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D59, vector3D62, vector3D84);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(rotationOrder86, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray91 = rotation90.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation85.applyTo(rotation90);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation30.applyTo(rotation92);
        double[][] doubleArray94 = rotation92.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException95 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray94);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.6883311189581703d), (double) (short) 10, 0.36259815178588733d, 0.0016579344306793635d, true);
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA3();
        java.lang.String str22 = rotationOrder20.toString();
        double[] doubleArray23 = rotation19.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation11.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D5.subtract(vector3D25);
        double double28 = vector3D27.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZYZ" + "'", str7, "ZYZ");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5153978362128364d + "'", double12 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.1934112408002968d) + "'", double13 == (-0.1934112408002968d));
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "XYX" + "'", str22, "XYX");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D29, vector3D32, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D3.normalize();
        double double58 = vector3D3.getZ();
        double double59 = vector3D3.getY();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 100.0d + "'", double58 == 100.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        double[][] doubleArray16 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        notARotationMatrixException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Object[] objArray34 = notARotationMatrixException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.String str42 = cardanEulerSingularityException40.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Object[] objArray44 = cardanEulerSingularityException40.getArguments();
        notARotationMatrixException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.String str47 = notARotationMatrixException17.getPattern();
        java.lang.String str48 = notARotationMatrixException17.toString();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str48, "org.apache.commons.math.geometry.NotARotationMatrixException: ");
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder38.getA2();
        double[] doubleArray46 = rotation11.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (-143.96727020572638d), (-0.45973278686101987d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation50.getAxis();
        double[][] doubleArray52 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        double double59 = vector3D56.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.add(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D61.scalarMultiply(27.47493735326811d);
        double double68 = vector3D67.getDelta();
        double double69 = vector3D67.getY();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D67.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation50.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, 0.9999999999999999d, (double) (short) 100, (double) 'a');
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder80.getA2();
        double[] doubleArray87 = rotation79.getAngles(rotationOrder80);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder80.getA3();
        double double89 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D71, vector3D88);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXY" + "'", str73, "ZXY");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.6810057105770655, 2.4943876496393393, -2.567713121203094]");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-0.23040281861256878d) + "'", double89 == (-0.23040281861256878d));
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.70605434589623d, 3.1364351454618995d, 6.938893903907228E-18d, 0.24476820490809906d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation33.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation33.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation17.applyTo(rotation57);
        double double59 = rotation57.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.subtract(1.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.subtract(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double89 = vector3D88.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D85.subtract(0.0d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D83.add((-1.0d), vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D91.negate();
        double double93 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D67, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D63, (-0.8414709848078965d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation57.applyInverseTo(vector3D94);
        double double96 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation97 = rotation5.applyTo(rotation57);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.11078585244669703d + "'", double59 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "YXZ" + "'", str62, "YXZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "XZX" + "'", str66, "XZX");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2.0d + "'", double93 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-0.476811323902129d) + "'", double96 == (-0.476811323902129d));
        org.junit.Assert.assertNotNull(rotation97);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        double double16 = rotation8.getQ0();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (double) 100, 0.0d, (double) (short) -1, true);
        double double23 = rotation22.getQ0();
        double double24 = rotation22.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation37.applyTo(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        double[][] doubleArray42 = rotation37.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray42, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str47 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D48, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation50);
        double double52 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation22.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation8.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation8.getAxis();
        double double56 = vector3D55.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.0955424909088009d) + "'", double16 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZYZ" + "'", str47, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.7683919425686427d) + "'", double52 == (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.8571275516771671d) + "'", double56 == (-0.8571275516771671d));
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.022086305214969307d, (-0.5254171326308468d), (-1.408180581249325d), (-0.9271898805213659d), true);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(4.341241737144209E-18d, 143.7738589649261d, 0.11727962409981872d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D27.negate();
        double double29 = vector3D27.getX();
        double double30 = vector3D27.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (short) 1, (-1.0d), 98.0d);
        java.lang.String str36 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder31.getA2();
        double double38 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D27, vector3D37);
        double double39 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D37);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-2.0d) + "'", double29 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-2.0d) + "'", double30 == (-2.0d));
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "YXZ" + "'", str36, "YXZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-2.0d) + "'", double38 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.341241737144209E-18d + "'", double39 == 4.341241737144209E-18d);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        double double32 = vector3D31.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation5.applyTo(vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        double double48 = vector3D45.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation55.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D50.add(0.8390715290764523d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), (double) 0L, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D50.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D64);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.0d + "'", double32 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D12, (double) 100.0f, vector3D20, (double) (short) -1, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D20.add((-1.0d), vector3D49);
        double double51 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D20.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str55 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D20.subtract((-0.0d), vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation8.applyTo(vector3D58);
        double[][] doubleArray61 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException62 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray61);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray61);
        java.lang.String str64 = notARotationMatrixException63.toString();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZYZ" + "'", str3, "ZYZ");
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ZXY" + "'", str55, "ZXY");
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str64, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D29.negate();
        double double31 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        double double38 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D29, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation5.applyTo(vector3D37);
        double double40 = vector3D37.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-2.0d) + "'", double31 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-2.0d) + "'", double38 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray18 = notARotationMatrixException7.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray18);
        java.lang.Throwable[] throwableArray20 = notARotationMatrixException19.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray20);
        java.lang.String str22 = notARotationMatrixException21.toString();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str22, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        double double12 = vector3D11.getDelta();
        double double13 = vector3D11.getDelta();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.0d) + "'", double12 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.0d) + "'", double13 == (-0.0d));
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        double double27 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation11.applyTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder29.getA2();
        java.lang.String str37 = rotationOrder29.toString();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation11.applyInverseTo(vector3D43);
        java.lang.Class<?> wildcardClass45 = vector3D43.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ZXZ" + "'", str37, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D25, 2.153573489132929d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.scalarMultiply(3.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        double double49 = vector3D46.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D46.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.orthogonal();
        double double52 = vector3D51.getX();
        double double53 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D37, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D51, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D51, 0.7071067811865474d);
        double double58 = vector3D51.getY();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.negate();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, (-0.9132779260310951d));
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation4.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        double[][] doubleArray66 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation65.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(rotation67);
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(98.00258485557211d, (-0.3041288806189819d), 0.16253461570464098d, (-0.11292988480107749d), false);
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 2.9502157553926875d);
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ2();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.7059974105119942d) + "'", double9 == (-0.7059974105119942d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.7059974105119942d) + "'", double10 == (-0.7059974105119942d));
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.String str19 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray21 = cardanEulerSingularityException17.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException17.getSuppressed();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException17.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException31.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.String str37 = cardanEulerSingularityException35.getPattern();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        notARotationMatrixException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        cardanEulerSingularityException17.addSuppressed((java.lang.Throwable) notARotationMatrixException29);
        java.lang.String str41 = cardanEulerSingularityException17.getPattern();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException17.getSuppressed();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray44 = notARotationMatrixException11.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        double double26 = rotation25.getQ0();
        double double27 = rotation25.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str38 = rotationOrder33.toString();
        double[] doubleArray39 = rotation32.getAngles(rotationOrder33);
        java.lang.String str40 = rotationOrder33.toString();
        double[] doubleArray41 = rotation25.getAngles(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9649660284921133d + "'", double26 == 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5309649148733836d + "'", double27 == 0.5309649148733836d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZYZ" + "'", str38, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZYZ" + "'", str40, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D8.add(0.8390715290764523d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D18.subtract(vector3D23);
        double double25 = vector3D23.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D23.negate();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.scalarMultiply(0.9949879346007117d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.scalarMultiply((-545.8249794675046d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.5309649148733837d) + "'", double25 == (-0.5309649148733837d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.subtract(1.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.add((-1.0d), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D27, vector3D30, vector3D52);
        double double54 = vector3D52.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D70.subtract((double) (-1L), vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D52.add(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation0.applyTo(vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str87 = rotationOrder86.toString();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder86.getA3();
        double[] doubleArray90 = rotation0.getAngles(rotationOrder86);
        double double91 = rotation0.getQ3();
        double double92 = rotation0.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 3.141592653589793d + "'", double54 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZXY" + "'", str81, "ZXY");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ZXY" + "'", str87, "ZXY");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-0.0, 0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0d + "'", double92 == 1.0d);
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYZ" + "'", str1, "XYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (short) -1, 0.7760336155639872d, 1.8350138259443276d);
        double double11 = rotation10.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D26, (double) 100.0f, vector3D34, (double) (short) -1, vector3D54);
        double double62 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        double double77 = vector3D74.getDelta();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D74, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D83.subtract(0.0d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D86.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D82, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D26, (double) (byte) 10, vector3D69, (double) (short) -1, vector3D74, (double) ' ', vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D86.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D20, (double) (short) 1, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D20.negate();
        double double95 = vector3D20.getZ();
        double double96 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation10.applyTo(vector3D20);
        double double98 = org.apache.commons.math.geometry.Vector3D.angle(vector3D4, vector3D97);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.7553239318203748d) + "'", double11 == (-0.7553239318203748d));
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZYZ" + "'", str14, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.0d + "'", double95 == 1.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.0d + "'", double96 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2.3603792774407224d + "'", double98 == 2.3603792774407224d);
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D30, vector3D33, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D3.add(10.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        double double64 = vector3D61.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D66.add(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.negate();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder73.getA1();
        double[] doubleArray79 = rotation72.getAngles(rotationOrder73);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder73.getA2();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.24081674175586132, 0.09681076545574444, 2.332461035205122]");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.negate();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str47 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.scalarMultiply(100.0d);
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((-10.53200198742562d), vector3D39, (-143.96727020572638d), vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder56.getA3();
        java.lang.String str60 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder56.getA3();
        double double66 = vector3D65.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D39, 2.0985845029684933d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation35.applyInverseTo(vector3D39);
        double double69 = org.apache.commons.math.geometry.Vector3D.angle(vector3D29, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.677689392065604d), vector3D29);
        double double71 = vector3D70.getDelta();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.5262902691431163d) + "'", double36 == (-0.5262902691431163d));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXY" + "'", str47, "ZXY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXY" + "'", str60, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.5707963267948966d + "'", double66 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.505260009229146d + "'", double69 == 1.505260009229146d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.0d) + "'", double71 == (-0.0d));
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation47.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-0.9683932901306854d), (-0.18852894086393088d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((-0.19346127668362223d), vector3D49, (-1.9875323496962964d), vector3D53, (-18.13640959594133d), vector3D58);
        double double60 = vector3D53.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.9683932901306854d) + "'", double60 == (-0.9683932901306854d));
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.3114482587377294d, 0.8605691650229957d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-3.0372330256236317d), (-0.05514310635936155d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((-0.7564240344749331d), (-0.4212430843250595d), 788.3701330754276d, 10.0d, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYX", (java.lang.Object[]) doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.617866403174436d, (double) 10.0f, (-0.04104628521447248d), 0.6665981901433538d, true);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.6205445805637456d, (double) (short) 1, 2.638427581942488d, true);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 0.04145438869418405d);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation5.applyInverseTo(rotation15);
        double double17 = rotation15.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.630600263688109d + "'", double6 == 2.630600263688109d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.34613939917762837d + "'", double17 == 0.34613939917762837d);
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (-2.7755575615628914E-17d), (-0.7683919425686428d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D2.add(vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(0.06847869573979007d, vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder37.getA1();
        double double43 = vector3D42.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation36.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.add(98.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        double double58 = vector3D55.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D60.add(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D60.scalarMultiply(27.47493735326811d);
        double double67 = vector3D66.getDelta();
        double double68 = vector3D66.getY();
        double double69 = vector3D66.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D49, (-2.7098752293634885d), vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 0.531212308932249d, 0.0d, (-0.6551684173807351d));
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 0.450732805290736d, (-0.2298488470659301d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D66.add(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D2.add(vector3D66);
        double double84 = vector3D83.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 27.493129733917296d + "'", double84 == 27.493129733917296d);
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9988929054468333d, 0.0d, 100.0022140464598d, (double) (short) 10, false);
        double double6 = rotation5.getAngle();
        double double7 = rotation5.getAngle();
        double double8 = rotation5.getQ3();
        double[][] doubleArray9 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D29.negate();
        double double31 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        double double38 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D29, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation5.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-2.0d) + "'", double31 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-2.0d) + "'", double38 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        double double16 = rotation8.getQ0();
        double double17 = rotation8.getQ2();
        double[][] doubleArray18 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.4485703331475911d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(doubleArray18, (-0.07646176564152811d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.0955424909088009d) + "'", double16 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.6502970659532881d) + "'", double17 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(doubleArray18);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.negate();
        double double6 = vector3D5.getY();
        org.apache.commons.math.geometry.Vector3D vector3D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.0d) + "'", double6 == (-0.0d));
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, 1.55207125878485d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.8414709848078965d, 1.8600586893795792d, (-0.11083328512893442d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        java.lang.Class<?> wildcardClass16 = vector3D15.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation6.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.scalarMultiply((-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        double double23 = org.apache.commons.math.geometry.Vector3D.angle(vector3D18, vector3D22);
        double double24 = vector3D22.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(1.4721336309126734d, 0.06981453489777116d, 1.361310203000682E-5d);
        double double29 = vector3D28.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add(vector3D28);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D0, vector3D30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.6641884054157533d + "'", double23 == 0.6641884054157533d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.6641884054157535d) + "'", double24 == (-0.6641884054157535d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.4737881451322778d + "'", double29 == 1.4737881451322778d);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0d, (double) 0L, 0.9999999999999999d);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.5033082423383954d), 0.23869349855450123d, (-378.71766086458643d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.scalarMultiply((double) 1);
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.negate();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        double double31 = vector3D24.getY();
        double double32 = vector3D24.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        double double45 = vector3D38.getY();
        double double46 = vector3D38.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D38.normalize();
        double double49 = vector3D38.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D34.add(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(0.9955742875642764d, vector3D7, (-495.9743622439995d), vector3D18, 0.8414709848078965d, vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.8390715290764523d, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.9955742875642764d, vector3D6, 0.13322414396144652d, vector3D13, 0.6918710786346925d, vector3D18);
        double double21 = vector3D13.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation33.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str37 = rotationOrder36.toString();
        double[] doubleArray38 = rotation35.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder40.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.orthogonal();
        double double48 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D39, vector3D47);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D39);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "XZX" + "'", str37, "XZX");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[2.055910057912307, 1.7765565406780053, -0.805632409230546]");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        java.lang.String str9 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D19, 0.28577402770544114d);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: zero norm for rotation axis");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXZ" + "'", str9, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        double double58 = vector3D55.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D22, (-0.7683919425686428d), vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D22.normalize();
        double double63 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D22.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder22.getA3();
        double[] doubleArray33 = rotation21.getAngles(rotationOrder22);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 0.0d, 0.07855369445570898d, (-0.25291598322993725d));
        double double39 = rotation38.getQ1();
        double double40 = rotation38.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-3.0113006777231797, 0.6179476270033603, -1.384127546483252]");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.03895319811068548d) + "'", double39 == (-0.03895319811068548d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.1260239469901897d + "'", double40 == 0.1260239469901897d);
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str9 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA3();
        java.lang.String str11 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D42, vector3D45, vector3D67);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D7, vector3D16, vector3D45);
        double double70 = vector3D45.getNorm();
        double double71 = vector3D45.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str74 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D45.add(0.429556888950007d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(24.882865501017502d, (double) (byte) 100);
        double double81 = vector3D80.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.4376205782278174d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D77.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "YXZ" + "'", str74, "YXZ");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.24987572770084396d) + "'", double81 == (-0.24987572770084396d));
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getAngle();
        double double8 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract((double) (-1L), vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation5.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, 1.8350138259443276d);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.add((-1.0d), vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D83.subtract(0.0d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D76.subtract(1.0d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.subtract(vector3D90);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D64, vector3D66, vector3D69, vector3D91);
        double double93 = vector3D91.getAlpha();
        double double94 = org.apache.commons.math.geometry.Vector3D.angle(vector3D38, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(3.0494479105138855E-17d, vector3D91);
        double double96 = vector3D95.getX();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.638427581942488d + "'", double7 == 2.638427581942488d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.8415352216177445d + "'", double8 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 3.141592653589793d + "'", double93 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2.127525943335012d + "'", double94 == 2.127525943335012d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-3.0494479105138855E-17d) + "'", double96 == (-3.0494479105138855E-17d));
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D36, vector3D39, vector3D61);
        double double63 = vector3D61.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D61.add(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, Double.NaN);
        double double78 = vector3D75.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D9.subtract(0.26081761410019294d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D87, vector3D89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: zero norm for rotation defining vector");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3.141592653589793d + "'", double63 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZYZ" + "'", str80, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(27.47493735326811d, (-0.4904629164045208d), 1.5501807665642404d, (-0.095984644627102d), true);
        double double6 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.11842402191972519d + "'", double6 == 0.11842402191972519d);
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation55.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        double double72 = rotation71.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation85 = rotation78.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation84.revert();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation86.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation71.applyTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D57.add(100.0022140464598d, vector3D87);
        double double90 = vector3D57.getZ();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.12603542467732398d) + "'", double90 == (-0.12603542467732398d));
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1100.0d, 1.1900368958131755d);
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZYZ" + "'", str13, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.24893698743024015d, (double) 0, (double) 1L, 2.356194490192345d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation5.revert();
        double double26 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.3691205271584663d + "'", double26 == 0.3691205271584663d);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D54.subtract((double) 0, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D60.add(2.0d, vector3D71);
        double double73 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation45.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.negate();
        double double78 = vector3D74.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D84, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((-0.30671879673173297d), vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D74.subtract(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D84.negate();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.141592653589793d + "'", double73 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.9036922050915068d) + "'", double78 == (-0.9036922050915068d));
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyTo(rotation46);
        double double48 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyInverseTo(rotation80);
        double double82 = rotation81.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation54.applyInverseTo(rotation81);
        double[][] doubleArray84 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation5.applyTo(rotation54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(rotationOrder86, 0.3494625806709468d, 0.017118832690706146d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation54.applyTo(rotation93);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotation94);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(98.0d, (double) (short) -1);
        double double3 = vector3D2.getDelta();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.subtract(1.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.add((-1.0d), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D27, vector3D30, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D55.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.add((double) ' ', vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D67.subtract(1.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D52.subtract((double) (-1.0f), vector3D80);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) '#');
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double90 = vector3D89.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.subtract(0.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D89.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D85, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D89);
        double double95 = vector3D89.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D0.add((-16445.115990686714d), vector3D89);
        double double97 = vector3D89.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.5114629390766603d), (-1.122967125689989d), (-0.2551713383813414d));
        java.lang.String str11 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "XYZ" + "'", str11, "XYZ");
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray21 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation27.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyInverseTo(rotation53);
        double double55 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation27.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation62.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation27.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation20.applyTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double90 = vector3D89.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.subtract(0.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D79.subtract(1.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D92.subtract(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation76.applyTo(vector3D94);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation14.applyTo(rotation76);
        double double97 = rotation76.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.subtract(1.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.add((-1.0d), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D27, vector3D30, vector3D52);
        double double54 = vector3D52.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D70.subtract((double) (-1L), vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D52.add(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation0.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), (double) 0L, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D85, vector3D89);
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(rotationOrder91, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder91.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation90.applyInverseTo(vector3D96);
        double double98 = rotation90.getQ3();
        double double99 = rotation90.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 3.141592653589793d + "'", double54 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZXY" + "'", str81, "ZXY");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.9156279094141617d + "'", double99 == 0.9156279094141617d);
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double3 = vector3D2.getY();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D2, 1.5707963267948963d);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        double[] doubleArray10 = rotation5.getAngles(rotationOrder7);
        double double11 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str22 = rotationOrder17.toString();
        double[] doubleArray23 = rotation16.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        double double42 = vector3D35.getY();
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) 1, (-1.0d), 98.0d);
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D35.add((double) (byte) -1, vector3D53);
        double double57 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation30.applyInverseTo(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D35.scalarMultiply(3.1330314046616845d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder61.getA2();
        java.lang.String str69 = rotationOrder61.toString();
        java.lang.String str70 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.negate();
        double double73 = vector3D71.getX();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray80 = rotation79.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation79.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D71.subtract(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D35.subtract(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D24.subtract(0.0d, vector3D35);
        double double85 = vector3D24.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation5.applyInverseTo(vector3D24);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.42487699275774343d + "'", double3 == 0.42487699275774343d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.38468101661851206d + "'", double6 == 0.38468101661851206d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[2.8986555041307933, 1.3892807489199688, -2.095122594958829]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5116251420385008d + "'", double11 == 0.5116251420385008d);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZYZ" + "'", str22, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.6654428555205447d + "'", double51 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXY" + "'", str70, "ZXY");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.5707963267948966d + "'", double85 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D6, (double) 100.0f, vector3D14, (double) (short) -1, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D14.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        double double52 = vector3D49.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D49.scalarMultiply((double) 0.0f);
        double double56 = vector3D49.getNorm();
        double double57 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D45, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D49.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D2.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.negate();
        double double64 = vector3D63.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.7071067811865475d) + "'", double57 == (-0.7071067811865475d));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.4142135623730951d + "'", double64 == 1.4142135623730951d);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation6.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        double double22 = rotation14.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D29.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        double double81 = vector3D78.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D78.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D45, (-0.7683919425686428d), vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation14.applyTo(vector3D45);
        double double86 = rotation14.getQ1();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation8.applyTo(rotation14);
        double[][] doubleArray88 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException89 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray88);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(doubleArray88, (double) (short) 10);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.9202635195876083d) + "'", double7 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.7683919425686428d) + "'", double22 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.3691205271584663d + "'", double86 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        double double51 = vector3D6.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D70, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D70);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D70, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder88.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder88.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D87.subtract(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D87.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D70.subtract((double) (byte) 10, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(2.1475455860530537d, vector3D6, (double) (short) 0, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D92.negate();
        double double96 = vector3D92.getAlpha();
        double double97 = vector3D92.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 3.141592653589793d + "'", double96 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 3.141592653589793d + "'", double97 == 3.141592653589793d);
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D52);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        double double59 = vector3D58.getAlpha();
        double double60 = vector3D58.getY();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((-0.8348312433510422d), 0.0d, 2.060217686612772d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D58.add(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation53.applyTo(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7071067811865476d + "'", double54 == 0.7071067811865476d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.8414709848078965d + "'", double60 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation11 = rotation10.revert();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D19.subtract(1.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.add((-1.0d), vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D16.subtract(vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str45 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply(100.0d);
        double double51 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation65 = rotation58.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation64.applyTo(vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D66, 0.5277475438952628d, vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D50, vector3D70, vector3D73);
        double double75 = vector3D73.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation11.applyTo(vector3D73);
        double double77 = vector3D73.getX();
        double double78 = vector3D73.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.9505369429339884d) + "'", double12 == (-0.9505369429339884d));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.5707963267948966d + "'", double51 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.5707963267948966d + "'", double75 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D3.subtract(1.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.add((-1.0d), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D28, vector3D31, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D0.add(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-3.110368056629538d), (-0.5287508684135855d));
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.orthogonal();
        double double72 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D26, vector3D71);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((-4.212430843250595d), 0.531212308932249d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder7.getA2();
        java.lang.String str15 = rotationOrder7.toString();
        java.lang.String str16 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.negate();
        double double19 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.negate();
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.negate();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((-0.429556888950007d), (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.scalarMultiply(0.33931220530841594d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D22.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D22);
        double double30 = vector3D6.getAlpha();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(0.20360648769840173d, vector3D1, 3.116520608132782d, vector3D6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.070838189660802d) + "'", double30 == (-1.070838189660802d));
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.012535694387858676d, (-0.03550707877061987d), (-0.5912044389450646d), 1.9456840668546524d, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.29067956475864215d) + "'", double6 == (-0.29067956475864215d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.01745789023727825d) + "'", double7 == (-0.01745789023727825d));
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation11.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyInverseTo(rotation52);
        double double55 = rotation5.getQ1();
        double[][] doubleArray56 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray56, (double) 1L);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray56);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.45973278686101987d) + "'", double55 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray56);
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((double) 0, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(0.9920257414636006d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865475d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((-634.6978979926987d));
        double double21 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        double double31 = vector3D24.getZ();
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D20, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(0.43415197535159783d, vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder44.getA1();
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation43.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.add(98.0d, vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder57.getA2();
        java.lang.String str65 = rotationOrder57.toString();
        java.lang.String str66 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D67.negate();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.scalarMultiply(Double.NaN);
        double double72 = vector3D71.getDelta();
        double double73 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D71);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.0d) + "'", double21 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-482.5256477242087d) + "'", double32 == (-482.5256477242087d));
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ZXY" + "'", str65, "ZXY");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(4.341241737144209E-18d, 2.0678198605632665d, 6.3007480475286926d, (-0.04104628521447248d), false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        double double26 = rotation11.getQ2();
        double double27 = rotation11.getQ0();
        double double28 = rotation11.getAngle();
        double double29 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation5.applyInverseTo(rotation11);
        double[][] doubleArray31 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray6);
        java.lang.Object[] objArray8 = notARotationMatrixException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation24.applyTo(vector3D26);
        double[][] doubleArray28 = rotation24.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 25.06596560241331d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 1.8228860923754615d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray54 = cardanEulerSingularityException52.getArguments();
        java.lang.String str55 = cardanEulerSingularityException52.getPattern();
        java.lang.Object[] objArray56 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Object[] objArray58 = cardanEulerSingularityException52.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException64 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray63);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray67 = cardanEulerSingularityException66.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException66.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray71 = cardanEulerSingularityException70.getArguments();
        java.lang.String str72 = cardanEulerSingularityException70.getPattern();
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        notARotationMatrixException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        java.lang.Object[] objArray75 = notARotationMatrixException64.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray78 = cardanEulerSingularityException77.getArguments();
        java.lang.Throwable[] throwableArray79 = cardanEulerSingularityException77.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException81 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray82 = cardanEulerSingularityException81.getArguments();
        java.lang.String str83 = cardanEulerSingularityException81.getPattern();
        cardanEulerSingularityException77.addSuppressed((java.lang.Throwable) cardanEulerSingularityException81);
        java.lang.Object[] objArray85 = cardanEulerSingularityException81.getArguments();
        notARotationMatrixException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException81);
        java.lang.String str87 = notARotationMatrixException64.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) notARotationMatrixException64);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) notARotationMatrixException64);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) notARotationMatrixException64);
        notARotationMatrixException9.addSuppressed((java.lang.Throwable) notARotationMatrixException35);
        java.lang.String str92 = notARotationMatrixException35.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str87, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str92, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ");
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (short) 1, (-1.0d), 98.0d);
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D21, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D3.add((double) (byte) -1, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D32.subtract((double) 0, vector3D37);
        double double39 = vector3D38.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.subtract(1.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.add((-1.0d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D43, (double) 100.0f, vector3D51, (double) (short) -1, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D51.add((-1.0d), vector3D80);
        double double82 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D51.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str86 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D51.subtract((-0.0d), vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D38.subtract(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D24.add(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (double) 0.0f, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D89.add(0.7062399578631842d, vector3D97);
        org.apache.commons.math.geometry.Vector3D vector3D99 = vector3D98.negate();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.6654428555205447d + "'", double19 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ZXY" + "'", str86, "ZXY");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D15.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D13.add(2.0d, vector3D24);
        double double26 = vector3D25.getX();
        double double27 = vector3D25.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        double double39 = vector3D32.getY();
        double double40 = vector3D32.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D32.normalize();
        double double43 = vector3D32.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(1.981403820949318d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D25.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.orthogonal();
        double double52 = vector3D51.getZ();
        double double53 = org.apache.commons.math.geometry.Vector3D.angle(vector3D46, vector3D51);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.0d + "'", double27 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9950371902099892d + "'", double52 == 0.9950371902099892d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.5707963267948966d + "'", double53 == 1.5707963267948966d);
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, 10.0d, 1.8027186956254748d, (-0.4785186797839096d));
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.scalarMultiply(1.182259999018312E-16d);
        double double73 = vector3D70.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str10 = rotationOrder5.toString();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        double double12 = rotation4.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        java.lang.String str16 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str21 = rotationOrder13.toString();
        java.lang.String str22 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 1.5707963267948966d, 10000.0d, 0.24893698743024015d);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (-0.4245292707565737d), 27.47493735326811d, 0.36259815178588733d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 2.0186255278998044d, (-0.3041288806189819d), 0.47011525616512123d);
        double[] doubleArray36 = rotation4.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder13.getA1();
        java.lang.String str38 = rotationOrder13.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.44538811899676645d + "'", double12 == 0.44538811899676645d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.974187773466128, -0.4784873946230179, 2.058723794751967]");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXY" + "'", str38, "ZXY");
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.141592653589793d, 1.6134380694273582d, (-0.429556888950007d));
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation14.applyInverseTo(vector3D18);
        double double20 = rotation14.getQ1();
        double double21 = rotation14.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.14745915310000285d) + "'", double20 == (-0.14745915310000285d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.6759743986410748d) + "'", double21 == (-0.6759743986410748d));
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(378.3486054486785d, (-0.3038748452392614d));
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.add((-1.0d), vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D19, (double) 100.0f, vector3D27, (double) (short) -1, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D27.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation5.applyTo(vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation65 = rotation64.revert();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation5.applyTo(rotation65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (-0.5033082423383954d), 1.0189832222323367d, 0.0d);
        double[] doubleArray74 = rotation5.getAngles(rotationOrder68);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder68.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.14599455657272695d) + "'", double66 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "XYZ" + "'", str69, "XYZ");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.7057258498816688, 1.0470700763795393, 1.9916421246286868]");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D3);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray47 = rotation41.getAngles(rotationOrder42);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation36.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation11.applyTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D4.subtract(2.28147172247978d, vector3D51);
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder61.getA1();
        double double67 = vector3D66.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation60.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray71 = rotation69.getAngles(rotationOrder70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation85 = rotation84.revert();
        double[][] doubleArray86 = rotation85.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation77.applyInverseTo(rotation85);
        double double88 = rotation87.getQ2();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation76.applyTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation76.revert();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-0.4245292707565737d), (-0.6985763017371048d), 0.15135620392549756d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation90.applyInverseTo(vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D95);
        double double97 = vector3D95.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D52.add(vector3D95);
        double double99 = vector3D95.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.32035333425956525d) + "'", double53 == (-0.32035333425956525d));
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5033082423383954d + "'", double88 == 0.5033082423383954d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue(Double.isNaN(double99));
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.normalize();
        double double2 = vector3D0.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D0, 2.0985845029684933d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyInverseTo(rotation16);
        double double18 = rotation10.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation10.applyTo(vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str31 = rotationOrder30.toString();
        java.lang.String str32 = rotationOrder30.toString();
        double[] doubleArray33 = rotation10.getAngles(rotationOrder30);
        java.lang.String str34 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D36);
        double double38 = vector3D37.getDelta();
        double double39 = vector3D37.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + (-1.5707963267948966d) + "'", double2 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.7683919425686428d) + "'", double18 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XYX" + "'", str31, "XYX");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "XYX" + "'", str32, "XYX");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "XYX" + "'", str34, "XYX");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.141592653589793d + "'", double39 == 3.141592653589793d);
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.24893698743024012d, (double) (short) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D19);
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 18.533491989947702d, 0.8415352216177445d, 25.06596560241331d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.7755575615628914E-17d, 0.0d, 0.46630897150381445d, 0.28742517866390543d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        double double12 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.orthogonal();
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation19.applyTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D14.add(0.8390715290764523d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = vector3D29.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D29.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.orthogonal();
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D37, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation39.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D34.add(0.8390715290764523d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D44.subtract(vector3D49);
        double double51 = vector3D49.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D52);
        double double54 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D14.negate();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.5309649148733837d) + "'", double51 == (-0.5309649148733837d));
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.0d) + "'", double54 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        double double6 = rotation2.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation2.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation2.revert();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation2.getAxis();
        double double10 = rotation2.getQ1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation13.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 0.9999999999999999d, (double) (short) 100, (double) 'a');
        double[] doubleArray24 = rotation15.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 1.5899379990805156d, 2.1092719543962573d, 0.04145438869418405d);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.5752220392306203, -0.5752220392306204, 2.141592653589793]");
        org.junit.Assert.assertNotNull(doubleArray29);
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8479610605754508d, 0.531212308932249d, 669.172940447475d, 0.04909141830635927d, true);
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        double double4 = vector3D3.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double3 = vector3D2.getNorm();
        double double4 = vector3D2.getNorm();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(98.0d, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyInverseTo(rotation46);
        double double48 = rotation47.getQ2();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation20.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation68 = rotation61.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation55.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation20.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation13.applyTo(rotation69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.subtract(1.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.subtract(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation69.applyTo(vector3D87);
        double double89 = vector3D88.getY();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D7.add(vector3D88);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D7);
        double[][] doubleArray92 = rotation91.getMatrix();
        double double93 = rotation91.getAngle();
        double double94 = rotation91.getQ3();
        double double95 = rotation91.getQ2();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-634.6978979926987d) + "'", double89 == (-634.6978979926987d));
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.898990647180086d + "'", double93 == 1.898990647180086d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.17956151636130238d + "'", double94 == 0.17956151636130238d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.7683447346047095d) + "'", double95 == (-0.7683447346047095d));
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.27480764008539377d, 2.3114482587377294d, (-0.479425538604203d), 0.9920257414636006d, false);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.27480764008539377d + "'", double6 == 0.27480764008539377d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.3114482587377294d + "'", double7 == 2.3114482587377294d);
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D3.subtract((-0.2551713383813414d), vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation32.applyTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation41.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation32.applyTo(rotation53);
        double double57 = rotation32.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation32.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder59.getA2();
        double[] doubleArray67 = rotation32.getAngles(rotationOrder59);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder59.getA3();
        double double69 = vector3D68.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D20.subtract(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D20, (-0.4617969949920954d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D20.normalize();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "XZX" + "'", str14, "XZX");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.10830291305827339d + "'", double57 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D29.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation25.applyTo(vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        double[] doubleArray71 = rotation25.getAngles(rotationOrder58);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 0.017118832690706146d, (-0.03563598374487637d), (-3.141592653589793d));
        double double77 = rotation76.getQ2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9998046380168455d + "'", double77 == 0.9998046380168455d);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.applyTo(rotation26);
        double double28 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str30 = rotationOrder29.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        double double39 = vector3D36.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D36.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D32.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D48.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((-0.21114476788661177d), vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D50, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation12.applyTo(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XZX" + "'", str30, "XZX");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0022140464598d);
        double double34 = rotation33.getQ2();
        double[][] doubleArray35 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray35, (double) ' ');
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray35);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray35, 0.9988929054468333d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder41.getA2();
        java.lang.String str49 = rotationOrder41.toString();
        java.lang.String str50 = rotationOrder41.toString();
        double[] doubleArray51 = rotation40.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (-0.6010839859747263d), (-0.29067956475864215d), (-0.32647205781784566d));
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder41.getA3();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.2551713383813414d) + "'", double34 == (-0.2551713383813414d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ZXZ" + "'", str49, "ZXZ");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXZ" + "'", str50, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.6862719327339488, 0.5225636171963509, -1.7678620251573711]");
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str3 = cardanEulerSingularityException2.getPattern();
        java.lang.String str4 = cardanEulerSingularityException2.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) throwableArray5);
        java.lang.String str7 = notARotationMatrixException6.getPattern();
        java.lang.Throwable[] throwableArray8 = notARotationMatrixException6.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        java.lang.String str14 = cardanEulerSingularityException11.getPattern();
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", objArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.lang.Throwable[] throwableArray18 = notARotationMatrixException16.getSuppressed();
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) notARotationMatrixException16);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XYX" + "'", str7, "XYX");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D12, (double) 100.0f, vector3D20, (double) (short) -1, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D40.subtract(vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray69 = rotation68.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation68.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D58.subtract((double) 100.0f, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.scalarMultiply(0.3494625806709468d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D8, vector3D78, vector3D80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.8708459440388457d, vector3D1, 0.5033082423383954d, vector3D8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXY" + "'", str71, "ZXY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyTo(rotation46);
        double double48 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyInverseTo(rotation80);
        double double82 = rotation81.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation54.applyInverseTo(rotation81);
        double[][] doubleArray84 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation5.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation54.revert();
        double double87 = rotation86.getQ0();
        double double88 = rotation86.getQ2();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation((-0.7525070711305497d), 0.0d, 0.13599489604735257d, (double) (short) -1, true);
        org.apache.commons.math.geometry.Rotation rotation95 = rotation86.applyTo(rotation94);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-1.0d) + "'", double87 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(rotation95);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D68, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        double double78 = vector3D75.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D75.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation71.applyTo(vector3D75);
        double double83 = rotation71.getQ1();
        double double84 = rotation71.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.YZX;
        double[] doubleArray86 = rotation71.getAngles(rotationOrder85);
        java.lang.String str87 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder85.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.negate();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZYZ" + "'", str67, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.05546668618914311d) + "'", double83 == (-0.05546668618914311d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.28742517866390543d + "'", double84 == 0.28742517866390543d);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.5823032504476577, -0.03189044953605607, 0.10632821406868524]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "YZX" + "'", str87, "YZX");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.09618196756046529d), vector3D1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.8414709848078965d, 1.8600586893795792d, (-0.11083328512893442d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        double double15 = rotation12.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.5107925913326916d) + "'", double15 == (-0.5107925913326916d));
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D4.add((-3.110368056629538d), vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation27.applyTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D50.subtract((double) 0, vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str59 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str67 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder58.getA2();
        double double70 = vector3D69.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D50.add((double) 100L, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation27.applyTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D12.add((-0.6883311189581703d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.15385609168357037d, 1.4533522819483131d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D72.add(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXY" + "'", str59, "ZXY");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXY" + "'", str67, "ZXY");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.revert();
        double double14 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (-128.0d), (double) 100, (-634.6978979926987d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str30 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder21.getA3();
        double[] doubleArray32 = rotation20.getAngles(rotationOrder21);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation5.applyInverseTo(vector3D33);
        double double36 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.3691205271584663d + "'", double14 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ZXY" + "'", str30, "ZXY");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[3.0839714812479087, -0.3012102754101647, -0.40674968370342685]");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.3691205271584663d + "'", double36 == 0.3691205271584663d);
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-1.0d), (double) 10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation19.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder36.getA3();
        double[] doubleArray47 = rotation35.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, 0.8623079947860166d, 1.080456683454306d, (-0.16624968048555705d));
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D12.subtract((-0.10950411248583052d), vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str59 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray67 = rotation66.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation66.applyTo(vector3D70);
        double double74 = rotation66.getQ0();
        double double75 = rotation66.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation66.applyInverseTo(vector3D77);
        double double79 = vector3D78.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D56.add(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XYX" + "'", str15, "XYX");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.9202635195876083d) + "'", double20 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ZXY" + "'", str37, "ZXY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-3.0113006777231797, 0.6179476270033603, -1.384127546483252]");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXY" + "'", str59, "ZXY");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.0955424909088009d) + "'", double74 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.04145438869418405d + "'", double75 == 0.04145438869418405d);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.15079051934107301d + "'", double79 == 0.15079051934107301d);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D46, vector3D49, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D12.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D3.add((double) 1.0f, vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(0.7788920347427493d, vector3D3, 0.0d, vector3D79);
        double double81 = vector3D80.getAlpha();
        double double82 = vector3D80.getNorm();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.7788920347427493d + "'", double82 == 0.7788920347427493d);
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.String str9 = cardanEulerSingularityException7.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray11 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException15.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Object[] objArray29 = notARotationMatrixException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException31.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.String str37 = cardanEulerSingularityException35.getPattern();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Object[] objArray39 = cardanEulerSingularityException35.getArguments();
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.String str41 = cardanEulerSingularityException35.getPattern();
        notARotationMatrixException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        java.lang.Throwable[] throwableArray43 = notARotationMatrixException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) throwableArray43);
        java.lang.String str45 = notARotationMatrixException44.getPattern();
        java.lang.String str46 = notARotationMatrixException44.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str45, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str46, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((-0.1934112408002968d), (-0.22891725792137424d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder9.getA3();
        double double16 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D8, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D8, 0.0952905926857031d);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 'a', (double) (short) 100, 100.0022140464598d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder20.getA2();
        double[] doubleArray32 = rotation5.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder20.getA3();
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9557533618644138d + "'", double16 == 0.9557533618644138d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.053730528526149, 0.13143678139882106, -1.7647738102913435]");
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D14.subtract((double) 0, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D20.add(2.0d, vector3D31);
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        double double73 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D32.subtract(vector3D37);
        double double75 = vector3D32.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D6.add(vector3D32);
        double double77 = vector3D6.getX();
        double double78 = vector3D6.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder80.getA2();
        java.lang.String str88 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D6.add(2.7076937899714917d, vector3D91);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2.23606797749979d + "'", double75 == 2.23606797749979d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZXZ" + "'", str88, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        double double7 = vector3D6.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder38.getA2();
        double[] doubleArray46 = rotation11.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (-143.96727020572638d), (-0.45973278686101987d), 1.278124800288793d);
        double double51 = rotation50.getQ0();
        double[][] doubleArray52 = rotation50.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.5960187205335067d) + "'", double51 == (-0.5960187205335067d));
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.13678051992484755d, 3.0494479105138855E-17d, 0.4362039034381025d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        double double10 = vector3D7.getDelta();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D7, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.applyTo(vector3D15);
        double double17 = rotation12.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.getAxis();
        double double19 = vector3D18.getY();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D3.subtract(vector3D18);
        double double21 = vector3D18.getDelta();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.8414709848078965d) + "'", double17 == (-0.8414709848078965d));
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D36, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation47 = rotation20.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D55.subtract((double) 0, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D61.add(2.0d, vector3D72);
        double double74 = vector3D72.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation46.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((-18.13640959594133d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D76.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 3.141592653589793d + "'", double74 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        double[][] doubleArray15 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation5.revert();
        double double17 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(1.3456649064771664d, (-378.71766086458643d));
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(0.5738046983621651d, 16.62763166455332d, 0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.9944340607881093d), vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D21.subtract(vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.subtract(1.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.add((-1.0d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D43, (double) 100.0f, vector3D51, (double) (short) -1, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D35.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.5309649148733836d, (double) 100L, (-0.05546668618914311d));
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D51, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((-0.11292988480107749d), vector3D21, (-0.8944271909999159d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation5.applyTo(vector3D21);
        double double87 = vector3D21.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2.0678198605632665d + "'", double17 == 2.0678198605632665d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.03462750976236484d) + "'", double87 == (-0.03462750976236484d));
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation11.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation52.applyTo(vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation78 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation77.applyTo(vector3D79);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D79, 0.5277475438952628d, vector3D83);
        double double85 = vector3D84.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D63.add(vector3D84);
        double double87 = vector3D84.getY();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865475d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D91.scalarMultiply((-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D84.subtract(0.5403023058681398d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(1.2781248002887928d, vector3D94);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.5277475438952628d + "'", double85 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D42, vector3D45, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D16.subtract((double) 0, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation9.applyTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D76);
        double[][] doubleArray78 = rotation77.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(doubleArray78, 0.12242035221329273d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(doubleArray78);
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        double double22 = vector3D21.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation5.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA1();
        java.lang.String str29 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder26.getA3();
        double double32 = vector3D31.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-4.212430843250595d), vector3D21, (double) (short) 1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D(7.880514097121173d, 10.618890631312926d);
        double double37 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D31, vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "YXZ" + "'", str27, "YXZ");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "YXZ" + "'", str29, "YXZ");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.5707963267948966d + "'", double32 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.9298896263164602d) + "'", double37 == (-0.9298896263164602d));
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7339205705994797d), (-0.8775825618903728d), 2.0d);
        double double12 = rotation11.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XYX" + "'", str3, "XYX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XYX" + "'", str7, "XYX");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.08600039809723709d + "'", double12 == 0.08600039809723709d);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D13, (-1.0d));
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation25.applyTo(vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation44.applyTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation44.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation25.applyTo(rotation44);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation49.revert();
        double double52 = rotation49.getQ0();
        double double53 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation56.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation49.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation15.applyTo(rotation59);
        double double61 = rotation59.getQ3();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.8775825618903728d + "'", double16 == 0.8775825618903728d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXY" + "'", str18, "ZXY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.48235242686889757d) + "'", double50 == (-0.48235242686889757d));
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.48235242686889757d) + "'", double52 == (-0.48235242686889757d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.1349162105446426d + "'", double53 == 2.1349162105446426d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2253073452914015d + "'", double61 == 0.2253073452914015d);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str10 = rotationOrder5.toString();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation4.revert();
        double double15 = rotation4.getQ2();
        double double16 = rotation4.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.3569343270386989d) + "'", double15 == (-0.3569343270386989d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.3569343270386989d) + "'", double16 == (-0.3569343270386989d));
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 7.880514097121173d, 100.0d, (-0.45973278686101987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray18 = rotation12.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double24 = rotation23.getQ0();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation7.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str38 = rotationOrder33.toString();
        double[] doubleArray39 = rotation32.getAngles(rotationOrder33);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        java.lang.String str43 = rotationOrder41.toString();
        double[] doubleArray44 = rotation32.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, 0.8708459440388457d, 0.017118832690706146d, 0.41956834513335173d);
        double double50 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation26.applyTo(rotation49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder52.getA3();
        java.lang.String str58 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder52.getA2();
        double[] doubleArray60 = rotation49.getAngles(rotationOrder52);
        java.lang.Class<?> wildcardClass61 = doubleArray60.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.24893698743024015d + "'", double24 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.8415352216177445d + "'", double25 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZYZ" + "'", str38, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "XYZ" + "'", str43, "XYZ");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-2.005116664603875, -0.14875510171395484, 0.9711919943660552]");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.08024435735502013d + "'", double50 == 0.08024435735502013d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZYX" + "'", str58, "ZYX");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.2918940518342127, -0.3062794218719971, 0.8291227480283345]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation61.applyTo(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation((double) '#', (double) 10.0f, (double) (short) 100, 100.0d, true);
        double double87 = rotation86.getQ1();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation61.applyInverseTo(rotation86);
        double double89 = rotation88.getQ2();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.06847869573979007d + "'", double87 == 0.06847869573979007d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 17.651140219847246d + "'", double89 == 17.651140219847246d);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.5764447261520099d), 0.8762551259675299d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA3();
        double[] doubleArray74 = rotation66.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation66.revert();
        double double77 = rotation76.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D80, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation76.applyInverseTo(vector3D80);
        double double84 = vector3D83.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZYZ" + "'", str57, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.25291598322993725d) + "'", double77 == (-0.25291598322993725d));
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZYZ" + "'", str79, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0000000000000002d + "'", double84 == 1.0000000000000002d);
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException2 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        double double30 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.8992421466037851d), 0.0047970530369015356d, 0.012535694387858676d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XZX" + "'", str5, "XZX");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        java.lang.String str11 = notARotationMatrixException10.getPattern();
        java.lang.Object[] objArray12 = notARotationMatrixException10.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation25.applyTo(vector3D27);
        double[][] doubleArray29 = rotation25.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray29);
        java.lang.String str31 = notARotationMatrixException30.getPattern();
        java.lang.String str32 = notARotationMatrixException30.getPattern();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException30);
        java.lang.Throwable[] throwableArray34 = notARotationMatrixException30.getSuppressed();
        java.lang.String str35 = notARotationMatrixException30.getPattern();
        java.lang.String str36 = notARotationMatrixException30.toString();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str36, "org.apache.commons.math.geometry.NotARotationMatrixException: ");
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.negate();
        double double34 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D8, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D4, (-0.8414709848078965d), vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyTo(rotation47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation42.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D4.subtract((-1.0027048888022863d), vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(0.6178548206313739d, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation63.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        double[] doubleArray68 = rotation64.getAngles(rotationOrder65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation64.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(vector3D69);
        double double71 = vector3D70.getY();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XZX" + "'", str7, "XZX");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2.0d + "'", double34 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        double[][] doubleArray18 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray18);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", (java.lang.Object[]) doubleArray18);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 2.949327365002713d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D27, (double) 100.0f, vector3D35, (double) (short) -1, vector3D55);
        double double63 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        double double78 = vector3D75.getDelta();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D75, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D84.subtract(0.0d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D87.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D83, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D27, (double) (byte) 10, vector3D70, (double) (short) -1, vector3D75, (double) ' ', vector3D87);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D70, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation95 = rotation22.applyTo(rotation94);
        double double96 = rotation95.getQ3();
        double double97 = rotation95.getQ0();
        double double98 = rotation95.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-0.18759629602171138d) + "'", double96 == (-0.18759629602171138d));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.3358258553182577d + "'", double97 == 0.3358258553182577d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-0.752969672762625d) + "'", double98 == (-0.752969672762625d));
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        double double33 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D24, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.add((-1.0d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D38, (double) 100.0f, vector3D46, (double) (short) -1, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D46.add((-1.0d), vector3D75);
        double double77 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D46.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D24.subtract(0.5114629390766603d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(2.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.negate();
        double double84 = vector3D83.getAlpha();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-2.0d) + "'", double26 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-2.0d) + "'", double33 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.0d) + "'", double84 == (-0.0d));
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation24.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D42, (double) (short) 1);
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getAngle();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.0d) + "'", double46 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0d, 0.24893698743024015d, (double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (-0.19346127668362223d), (-0.22322545173690791d), 0.0d, false);
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D45.add((-1.0d), vector3D74);
        double double76 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D45.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D23.subtract(0.5114629390766603d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((-0.009999666686665238d), 268.47048776580107d, (-0.5033082423383954d));
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.scalarMultiply(1.0728787707619287d);
        double double86 = vector3D83.getAlpha();
        double double87 = vector3D83.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D23.add(vector3D83);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.5708335735953374d + "'", double86 == 1.5708335735953374d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 268.4709597337993d + "'", double87 == 268.4709597337993d);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str3 = cardanEulerSingularityException2.getPattern();
        java.lang.String str4 = cardanEulerSingularityException2.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) throwableArray5);
        java.lang.String str7 = notARotationMatrixException6.getPattern();
        java.lang.Object[] objArray8 = notARotationMatrixException6.getArguments();
        java.lang.Object[] objArray9 = notARotationMatrixException6.getArguments();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XYX" + "'", str7, "XYX");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getAngle();
        double double37 = rotation35.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str39 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder38.getA1();
        java.lang.String str43 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder38.getA3();
        java.lang.String str45 = rotationOrder38.toString();
        java.lang.String str46 = rotationOrder38.toString();
        double[] doubleArray47 = rotation35.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, 0.4886186338755529d, 2.354707227358131d, (-31.785078690341738d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation51.revert();
        double[][] doubleArray53 = rotation51.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.1475455860530537d + "'", double36 == 2.1475455860530537d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.7860080026179649d) + "'", double37 == (-0.7860080026179649d));
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "XZX" + "'", str39, "XZX");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "XZX" + "'", str43, "XZX");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "XZX" + "'", str45, "XZX");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "XZX" + "'", str46, "XZX");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[2.1005485106334425, 1.8339885513038474, -0.7609939565094106]");
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray53);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException22.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray28);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) notARotationMatrixException29);
        java.lang.String str31 = notARotationMatrixException29.getPattern();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) notARotationMatrixException29);
        java.lang.String str33 = notARotationMatrixException29.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str31, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str33, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.Class<?> wildcardClass3 = vector3D2.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, Double.NaN, 10.0d, 0.42487699275774343d);
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        java.lang.String str12 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-8.432620648546186d), 2.3373869432128567d, 2.6765958501582725d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        double double7 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D15.subtract((double) 0, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D21.add(2.0d, vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D32);
        double[][] doubleArray35 = rotation34.getMatrix();
        double[][] doubleArray36 = rotation34.getMatrix();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D46.subtract((double) 0, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(0.9920257414636006d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865475d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply((-634.6978979926987d));
        double double59 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D53, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation34.applyInverseTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D61.negate();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, 0.0027048888022863306d, 0.5403023058681398d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D71.add(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation34.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-0.4636476090008061d), vector3D77);
        double double80 = vector3D77.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.5707963267948963d + "'", double37 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str11 = rotationOrder1.toString();
        java.lang.String str12 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder14.getA3();
        double double22 = vector3D21.getZ();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D21, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D13.orthogonal();
        double double27 = vector3D26.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D30 = null;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(0.5116251420385008d, 1.278124800288793d, 2.042108152999217d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA3();
        double double40 = vector3D39.getDelta();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((-108896.7562168077d), vector3D28, (-0.27151963399492784d), vector3D30, 0.314920510800121d, vector3D35, (-57.493324223256394d), vector3D39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.0d) + "'", double27 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.5707963267948966d + "'", double40 == 1.5707963267948966d);
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        double double35 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D5, (-0.8414709848078965d), vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D0.add((-0.8495975243195618d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-0.7009645491358697d), (-0.0955424909088009d));
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D43, (-143.96727020572638d));
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D0.add(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D43.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXZ" + "'", str4, "YXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XZX" + "'", str8, "XZX");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.0d + "'", double35 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 3.138441573174606d, 2.15436348731443d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D3.getDelta();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.08507602488120805d + "'", double5 == 0.08507602488120805d);
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        double double15 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D21, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        double double39 = vector3D38.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (double) (byte) -1, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.negate();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) '#', vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str50 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((-2.8774418387984912d), vector3D26, 0.0d, vector3D46, 0.25077232336189154d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D57.scalarMultiply((-5113.358583779441d));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation5.applyInverseTo(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2.0678198605632665d + "'", double15 == 2.0678198605632665d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.5707963267948966d + "'", double39 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZYZ" + "'", str50, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        java.lang.String str9 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA3();
        double[] doubleArray11 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 0.03736466592466642d, 0.39316275340553986d, 0.4143658251607149d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder6.getA2();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "YXZ" + "'", str7, "YXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "YXZ" + "'", str9, "YXZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D16);
    }
}

