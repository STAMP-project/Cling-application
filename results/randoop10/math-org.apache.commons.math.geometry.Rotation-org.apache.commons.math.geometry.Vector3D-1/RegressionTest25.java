import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest25 {

    public static boolean debug = false;

    @Test
    public void test12501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12501");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.4176614640833791d), (-3.0d), 0.22181030239473884d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D29, vector3D32, vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray61 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation60.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation77 = rotation70.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation76.applyTo(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D78, 0.5277475438952628d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation63.applyTo(vector3D83);
        double double85 = vector3D83.getY();
        double double86 = vector3D83.getDelta();
        double double87 = vector3D83.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D3.add(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.orthogonal();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.5707963267948966d + "'", double86 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.5277475438952628d + "'", double87 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test12502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12502");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.13597071688697315d), (-5.008138898616008E-18d), 0.8676384700609876d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12503");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        double[][] doubleArray17 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", (java.lang.Object[]) doubleArray17);
        java.lang.Throwable[] throwableArray19 = notARotationMatrixException18.getSuppressed();
        java.lang.Object[] objArray20 = notARotationMatrixException18.getArguments();
        java.lang.String str21 = notARotationMatrixException18.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "XZX" + "'", str21, "XZX");
    }

    @Test
    public void test12504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12504");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test12505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12505");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D18.add((-1.0d), vector3D47);
        double double49 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D18.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D18.subtract((-0.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation6.applyTo(vector3D56);
        double[][] doubleArray59 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(doubleArray59, 0.5224674736269327d);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(doubleArray59, 2.3373869432128567d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
    }

    @Test
    public void test12506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12506");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        double double43 = vector3D12.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D12.add((double) 1.0f, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.add((-1.0d), vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D76.negate();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, vector3D47, 0.5153978362128364d, vector3D51, 0.6654428555205447d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.scalarMultiply(0.20931423260838755d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test12507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12507");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.074817027284758d, (-0.041442516719026205d));
    }

    @Test
    public void test12508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12508");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        java.lang.String str8 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
    }

    @Test
    public void test12509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12509");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test12510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12510");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation4.getQ1();
        double[][] doubleArray55 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation57.revert();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D(0.2520878998432229d, 100.0022140464598d, (-8.868313204374247E-18d));
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation58.applyTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.revert();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation58.getAxis();
        double[][] doubleArray66 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, 0.0424621606016783d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (-0.8846219209894445d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.45973278686101987d) + "'", double54 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(doubleArray66);
    }

    @Test
    public void test12511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12511");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 'a', (double) (short) 100, 100.0022140464598d);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray13);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) doubleArray13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation22.revert();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D27, (double) 100.0f, vector3D35, (double) (short) -1, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D35.add((-1.0d), vector3D64);
        double double66 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D35.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str70 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D35.subtract((-0.0d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation23.applyTo(vector3D73);
        double[][] doubleArray76 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(doubleArray76, 1.6173610802715999d);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(doubleArray76, 2.1678933499060977d);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(doubleArray76, 1.6134380694273582d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray76);
        java.lang.String str84 = notARotationMatrixException83.getPattern();
        notARotationMatrixException15.addSuppressed((java.lang.Throwable) notARotationMatrixException83);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZYZ" + "'", str18, "ZYZ");
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXY" + "'", str70, "ZXY");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "XZY" + "'", str84, "XZY");
    }

    @Test
    public void test12512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12512");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.23606797749979d, (double) (-1L), (-0.7525070711305497d), (double) (byte) 1, false);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation5.applyInverseTo(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        double double74 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.orthogonal();
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation81.applyTo(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D76.add(0.8390715290764523d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D86.subtract(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D64.subtract((-1.0d), vector3D86);
        double double94 = vector3D86.getY();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.7525070711305497d) + "'", double6 == (-0.7525070711305497d));
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.9902124943143233d) + "'", double65 == (-0.9902124943143233d));
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.8390715290764523d + "'", double94 == 1.8390715290764523d);
    }

    @Test
    public void test12513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12513");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(3.1382470946270726d, 4.341241737144209E-18d, (-3.456634865158842d));
    }

    @Test
    public void test12514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12514");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test12515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12515");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.26237485370392877d, (-0.14599455657272695d), 0.23869349855450123d, 0.42487699275774343d, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ0();
        java.lang.Class<?> wildcardClass8 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.45837097592276116d + "'", double6 == 0.45837097592276116d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.45837097592276116d + "'", double7 == 0.45837097592276116d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test12516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12516");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) 1, (-1.0d), 98.0d);
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation2.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.scalarMultiply(100.0d);
        double double28 = vector3D27.getX();
        double double29 = vector3D27.getX();
        double double30 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.negate();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D54.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D56);
        double double59 = vector3D27.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        java.lang.String str63 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str68 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D69);
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation2.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder79.getA1();
        double double85 = vector3D84.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation78.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation78.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray89 = rotation87.getAngles(rotationOrder88);
        double[] doubleArray90 = rotation72.getAngles(rotationOrder88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder88.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder88.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder88.getA1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6654428555205447d + "'", double11 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5277475438952628d + "'", double12 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10000.0d + "'", double59 == 10000.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXY" + "'", str63, "ZXY");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXY" + "'", str68, "ZXY");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.7071067811865474d + "'", double71 == 0.7071067811865474d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-2.1415926535897936, 1.5707963267948963, -3.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test12517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12517");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        java.lang.String str12 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
    }

    @Test
    public void test12518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12518");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation57.applyTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D41.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        double double70 = vector3D69.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D71.subtract(vector3D73);
        double double80 = vector3D73.getY();
        double double81 = vector3D73.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D62, vector3D69, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D60.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((double) 10, 0.16577663949348953d);
        double double91 = vector3D90.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((-0.6020912491308236d), vector3D85, 2.9152500368796312d, vector3D90);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.16501837282938553d + "'", double91 == 0.16501837282938553d);
    }

    @Test
    public void test12519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12519");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double3 = vector3D2.getY();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.normalize();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D2, (-0.4245292707565737d));
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D27.subtract(1.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.add((-1.0d), vector3D44);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D42, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation53 = rotation26.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA1();
        double[] doubleArray57 = rotation52.getAngles(rotationOrder54);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, 2.356194490192345d, 100.4491529857595d, (double) (byte) 100);
        double double62 = rotation61.getAngle();
        double double63 = rotation61.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder70.getA1();
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation69.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation69.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray80 = rotation78.getAngles(rotationOrder79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        double[] doubleArray86 = rotation61.getAngles(rotationOrder79);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation6.applyTo(rotation61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder88.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder88.getA3();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(rotationOrder88, (-0.001575539555759437d), 0.8846219209894443d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder88.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder88.getA3();
        double[] doubleArray97 = rotation61.getAngles(rotationOrder88);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.42487699275774343d + "'", double3 == 0.42487699275774343d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2.4070830555118503d + "'", double62 == 2.4070830555118503d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.13678051992484755d + "'", double63 == 0.13678051992484755d);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.6471194744837578, 0.5366335152597542, 1.7313312262151561]");
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[2.356194490192345, -0.08181192911388677, -0.5309649148733835]");
    }

    @Test
    public void test12520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12520");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.7675707508815894d, (-0.476811323902129d));
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        double double25 = rotation10.getQ2();
        double double26 = rotation10.getQ1();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation10.revert();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D33);
        double double40 = vector3D33.getY();
        double double41 = vector3D33.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D42);
        double double44 = vector3D42.getNorm();
        double double45 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D28, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D3.add(4.501410341272804d, vector3D42);
        double double47 = vector3D42.getAlpha();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 32.0d + "'", double26 == 32.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 9.995120760870789d + "'", double45 == 9.995120760870789d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test12521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12521");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), 24.882865501017502d, (-2.0d), (double) 100L, false);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation19.applyTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        double[][] doubleArray24 = rotation19.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray24, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D30, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation40 = rotation39.revert();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str44 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA1();
        java.lang.String str46 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (-18.13640959594133d), (-0.1934112408002968d), (-0.9902124943143233d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation33.applyTo(rotation52);
        double double54 = rotation53.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((-0.615897182731486d), 0.4242135627991309d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation53.applyTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation5.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.revert();
        double double61 = rotation53.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation69 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation68.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation70.applyTo(rotation83);
        double double85 = rotation70.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation70.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.5629528985411225d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.negate();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D91.negate();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation70.applyTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation53.applyInverseTo(vector3D93);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 24.882865501017502d + "'", double6 == 24.882865501017502d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZYZ" + "'", str29, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.14599455657272695d) + "'", double41 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "YXZ" + "'", str44, "YXZ");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YXZ" + "'", str46, "YXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.06212723678806353d + "'", double54 == 0.06212723678806353d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.06212723678806353d + "'", double61 == 0.06212723678806353d);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.496669722445646d + "'", double85 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test12522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12522");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0022140464598d, 0.5277475438952628d, 2.356194490192345d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.3241656960079559d), 0.0d, (-0.004280611391220551d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str23 = rotationOrder22.toString();
        java.lang.String str24 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA1();
        java.lang.String str26 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 7.880514097121173d, 785.3994663708453d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyInverseTo(vector3D33);
        double double35 = rotation21.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "XYX" + "'", str23, "XYX");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "XYX" + "'", str24, "XYX");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYX" + "'", str26, "XYX");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0021122517523716237d + "'", double35 == 0.0021122517523716237d);
    }

    @Test
    public void test12523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12523");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        double double38 = rotation11.getQ0();
        double double39 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (short) 0, 25.06596560241331d, 0.0027048888022863306d, false);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation11.applyTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray57 = rotation51.getAngles(rotationOrder52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation51.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation46.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (-3.645772184750923d), 0.6652716507048932d, 2.617866403174436d);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation46.applyTo(rotation73);
        double double75 = rotation74.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.7683919425686428d) + "'", double39 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.24893698743024015d + "'", double63 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.8415352216177445d + "'", double64 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "YXZ" + "'", str68, "YXZ");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-11.5036232640695d) + "'", double75 == (-11.5036232640695d));
    }

    @Test
    public void test12524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12524");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation51.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D68.scalarMultiply(0.26237485370392877d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D62.subtract((-0.16624968048555705d), vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test12525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12525");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((-1.0d), 2.356194490192345d, (-634.6978979926987d), 0.42487699275774343d, true);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder24.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder24.getA3();
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D31, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        double double41 = vector3D38.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D38.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str45 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder44.getA3();
        java.lang.String str48 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder44.getA2();
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D43.subtract(vector3D54);
        double double58 = vector3D43.getZ();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D43, 0.28742517866390543d);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation34.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation21.applyInverseTo(rotation34);
        double double63 = rotation62.getQ0();
        double[][] doubleArray64 = rotation62.getMatrix();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.001575539555759437d) + "'", double22 == (-0.001575539555759437d));
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ZXY" + "'", str48, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.0d) + "'", double58 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0012097785441743663d + "'", double63 == 0.0012097785441743663d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
    }

    @Test
    public void test12526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12526");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.8414709848078965d, 1.8600586893795792d, (-0.11083328512893442d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 0, 2.1475455860530537d, 0.15135620392549756d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D17, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply(0.7839109005632345d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation13.applyInverseTo(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test12527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12527");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, 0.0d, (-378.71766086458643d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D39.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation32.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D41, (-0.004742997713180494d));
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
    }

    @Test
    public void test12528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12528");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyInverseTo(rotation46);
        double double48 = rotation47.getQ2();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation20.applyInverseTo(rotation47);
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation14.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation8.applyTo(rotation14);
        double double53 = rotation8.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.5373843183446426d) + "'", double53 == (-0.5373843183446426d));
    }

    @Test
    public void test12529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12529");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D14.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D17.subtract((double) 0, vector3D22);
        double double24 = vector3D17.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D9.add(vector3D17);
        double double26 = vector3D9.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.19463966117213768d) + "'", double26 == (-0.19463966117213768d));
    }

    @Test
    public void test12530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12530");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D2.add(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D13.add((-0.8412192543248603d), vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D9.subtract(1.278124800288793d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10.0f, (double) 'a', (double) (short) 100);
        java.lang.String str32 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (-0.8292004581690567d), 0.7071067811865476d, 0.9988929054468333d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D9.subtract(vector3D37);
        double double39 = org.apache.commons.math.geometry.Vector3D.angle(vector3D6, vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D51.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.scalarMultiply(0.005259088864518715d);
        double double55 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D48, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D48, (-2.7755575615628914E-19d));
        double double58 = rotation57.getQ0();
        double double59 = rotation57.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder60.getA2();
        double[] doubleArray67 = rotation57.getAngles(rotationOrder60);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D6.subtract((-0.4073364259823062d), vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZYZ" + "'", str27, "ZYZ");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZYZ" + "'", str32, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.6665981901433538d + "'", double39 == 0.6665981901433538d);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2.7755575615628914E-19d + "'", double59 == 2.7755575615628914E-19d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-2.7755575615628914E-19, 0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test12531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12531");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D13.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D13);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, (-0.4212430843250595d));
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.scalarMultiply((-0.08144824585742245d));
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D6.subtract(vector3D63);
        double double65 = vector3D6.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YXZ" + "'", str5, "YXZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test12532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12532");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation24.applyTo(vector3D42);
        double double44 = vector3D43.getX();
        double double45 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2.220446049250313E-16d + "'", double44 == 2.220446049250313E-16d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2.220446049250313E-16d + "'", double45 == 2.220446049250313E-16d);
        org.junit.Assert.assertNotNull(vector3D46);
    }

    @Test
    public void test12533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12533");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.1056478979494711d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D45.subtract(1.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.subtract(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D35, vector3D38, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.orthogonal();
        double double66 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D2.add(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.normalize();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
    }

    @Test
    public void test12534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12534");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Object[] objArray28 = notARotationMatrixException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray38 = cardanEulerSingularityException34.getArguments();
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str40 = cardanEulerSingularityException34.getPattern();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.String str45 = cardanEulerSingularityException43.getPattern();
        java.lang.String str46 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray56 = rotation55.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.Object[] objArray62 = cardanEulerSingularityException60.getArguments();
        java.lang.String str63 = cardanEulerSingularityException60.getPattern();
        java.lang.Object[] objArray64 = cardanEulerSingularityException60.getArguments();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException60.getSuppressed();
        notARotationMatrixException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation79.applyTo(vector3D81);
        double[][] doubleArray83 = rotation79.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray83);
        notARotationMatrixException58.addSuppressed((java.lang.Throwable) notARotationMatrixException84);
        java.lang.Throwable[] throwableArray86 = notARotationMatrixException84.getSuppressed();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) notARotationMatrixException84);
        java.lang.String str88 = cardanEulerSingularityException34.getPattern();
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException34.getSuppressed();
        java.lang.Throwable[] throwableArray90 = cardanEulerSingularityException34.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException92 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray93 = cardanEulerSingularityException92.getArguments();
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException92.getSuppressed();
        java.lang.String str95 = cardanEulerSingularityException92.getPattern();
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException92);
        java.lang.Object[] objArray97 = cardanEulerSingularityException34.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Euler angles singularity" + "'", str88, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Euler angles singularity" + "'", str95, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[]");
    }

    @Test
    public void test12535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12535");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, 0.8942012921495909d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12536");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.03121952333832107d), (-0.37178810179865285d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D30, vector3D33, vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray62 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation61.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation78 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation77.applyTo(vector3D79);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D79, 0.5277475438952628d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation64.applyTo(vector3D84);
        double double86 = vector3D84.getY();
        double double87 = vector3D84.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D(0.13322414396144652d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D2.add(0.8286204267864343d, vector3D88);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test12537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12537");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        java.lang.String str14 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
    }

    @Test
    public void test12538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12538");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.4935443610417086d, 1.3756205052869932d, 15.996213391787686d, 1.3216352566692848d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test12539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12539");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.String str10 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException4.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray12 = cardanEulerSingularityException8.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.String str29 = cardanEulerSingularityException27.getPattern();
        cardanEulerSingularityException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Object[] objArray32 = notARotationMatrixException21.getArguments();
        java.lang.Throwable[] throwableArray33 = notARotationMatrixException21.getSuppressed();
        notARotationMatrixException15.addSuppressed((java.lang.Throwable) notARotationMatrixException21);
        java.lang.Throwable[] throwableArray35 = notARotationMatrixException15.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) throwableArray35);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test12540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12540");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0952905926857031d, (double) 10.0f, (-406.7116193600549d));
        double double8 = rotation7.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2426601921466039d + "'", double8 == 0.2426601921466039d);
    }

    @Test
    public void test12541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12541");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.1071487177940904d, 5200.0d, 3.1382951915052413d);
    }

    @Test
    public void test12542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12542");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.6205445805637456d, (double) (short) 1, 2.638427581942488d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 'a', (double) (short) 100, 100.0022140464598d);
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.3967963165953361d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (-0.45647262536381383d), 2.3114482587377294d, (-0.42955688895000704d));
        double double26 = rotation25.getQ0();
        double double27 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation5.applyTo(rotation20);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.42790151633116d + "'", double26 == 0.42790151633116d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.42790151633116d + "'", double27 == 0.42790151633116d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
    }

    @Test
    public void test12543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12543");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.8228860923754615d, 0.0d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D30, vector3D33, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.scalarMultiply(0.5277475438952628d);
        double double60 = vector3D55.getX();
        double double61 = vector3D55.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D3.subtract(2.1349162105446426d, vector3D55);
        double double63 = vector3D62.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(0.9649660284921133d, (-0.5740247584530956d), 2.949327365002713d, 2.6956595142333857d, true);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation70.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D62.subtract((-0.03895319811068548d), vector3D71);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3.141592653589793d + "'", double61 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test12544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12544");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.001575539555759437d), 0.8846219209894443d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.0d, 1.6134380694273582d, (-0.429556888950007d), false);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D29);
        double double41 = vector3D29.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation12.applyInverseTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation12.revert();
        double double46 = rotation45.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.0d) + "'", double46 == (-0.0d));
    }

    @Test
    public void test12545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12545");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        double[][] doubleArray49 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray49);
        java.lang.String str51 = notARotationMatrixException50.getPattern();
        java.lang.Throwable[] throwableArray52 = notARotationMatrixException50.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str51, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test12546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12546");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        double[] doubleArray32 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (byte) 10, (double) 0.0f, (-128.0d));
        double double41 = rotation40.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation40.applyInverseTo(vector3D45);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.2609765966779753d + "'", double41 == 0.2609765966779753d);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
    }

    @Test
    public void test12547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12547");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.496669722445646d), 0.017118832690706146d);
    }

    @Test
    public void test12548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12548");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 1.3817732906760365d, 0.6629939532734481d, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder28.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
    }

    @Test
    public void test12549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12549");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.7003068958044856d, 1.3216352566692848d, 0.9403795404261813d);
    }

    @Test
    public void test12550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12550");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 1, (-1.0d), 98.0d);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyTo(rotation25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        double double41 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation13.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation13.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation5.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation63.revert();
        double[][] doubleArray67 = rotation66.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) doubleArray67);
        java.lang.Throwable[] throwableArray69 = notARotationMatrixException68.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.6654428555205447d + "'", double6 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(throwableArray69);
    }

    @Test
    public void test12551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12551");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        double double11 = vector3D4.getY();
        double double12 = vector3D4.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D4.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        double double28 = vector3D21.getY();
        double double29 = vector3D21.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D21.normalize();
        double double32 = vector3D21.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 1, (-1.0d), 98.0d);
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D45, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D(0.10830291305827339d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.3345571444794553d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((-54.26257800088148d), vector3D15, (-0.24903954012484228d), vector3D33, (-0.0013651261847257446d), vector3D49);
        double double51 = vector3D49.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.subtract(vector3D56);
        double double63 = vector3D56.getY();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D56);
        double double65 = vector3D64.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D64.subtract((-0.7009645491358697d), vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.scalarMultiply(Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) ' ');
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.6654428555205447d + "'", double43 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-24.93977555585576d) + "'", double51 == (-24.93977555585576d));
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.0d) + "'", double65 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test12552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12552");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-82.22900984949234d), (-0.45973278686101987d), (-0.12637150995481888d), (double) 'a', true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double[][] doubleArray7 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test12553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12553");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        double double2 = vector3D1.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D6);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray50 = rotation44.getAngles(rotationOrder45);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation39.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation14.applyTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation44.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D7.subtract(2.28147172247978d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D1.subtract(vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str58 = rotationOrder57.toString();
        java.lang.String str59 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder57.getA3();
        double double61 = vector3D60.getAlpha();
        double double62 = vector3D60.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "XYX" + "'", str58, "XYX");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "XYX" + "'", str59, "XYX");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test12554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12554");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        double double7 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) (short) 10, (double) (short) -1, (double) '#', false);
        double[][] doubleArray21 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D47, vector3D50, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D72.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.subtract(100.0022140464598d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation20.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D13.add(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D80);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D83, (-0.001575539555759437d));
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D86, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder89.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation88.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.negate();
        double double93 = vector3D92.getZ();
        double double94 = vector3D92.getX();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D83.subtract(vector3D92);
        double double96 = vector3D83.getDelta();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.0d) + "'", double93 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-1.0d) + "'", double94 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-1.5607968814858473d) + "'", double96 == (-1.5607968814858473d));
    }

    @Test
    public void test12555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12555");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double4 = vector3D3.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        java.lang.String str7 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, 0.0d, (-0.7683919425686427d), 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D3.add(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((-0.009999666686665238d), 268.47048776580107d, (-0.5033082423383954d));
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.scalarMultiply(1.0728787707619287d);
        double double22 = vector3D19.getAlpha();
        double double23 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D15.add(vector3D19);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.26237485370392877d + "'", double4 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "YXY" + "'", str7, "YXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.5708335735953374d + "'", double22 == 1.5708335735953374d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 268.4709597337993d + "'", double23 == 268.4709597337993d);
        org.junit.Assert.assertNotNull(vector3D24);
    }

    @Test
    public void test12556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12556");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.6654428555205447d, 0.12455908825138925d, 11.210556722005117d);
    }

    @Test
    public void test12557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12557");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation6.revert();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray9);
        java.lang.Object[] objArray11 = notARotationMatrixException10.getArguments();
        java.lang.Object[] objArray12 = notARotationMatrixException10.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, 100.0d, (double) 0L, 0.9999999999999999d);
        double[][] doubleArray19 = rotation18.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray19);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray29);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray29);
        java.lang.String str32 = notARotationMatrixException31.getPattern();
        java.lang.Object[] objArray33 = notARotationMatrixException31.getArguments();
        notARotationMatrixException20.addSuppressed((java.lang.Throwable) notARotationMatrixException31);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException31);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[[0.450732805290736, -0.2979371073921011, -0.8414709848078967], [-0.7019747527151661, 0.46400955251379594, -0.5403023058681397], [0.5514266812416908, 0.8342233605065102, 2.220446049250313E-16]]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[[0.450732805290736, -0.2979371073921011, -0.8414709848078967], [-0.7019747527151661, 0.46400955251379594, -0.5403023058681397], [0.5514266812416908, 0.8342233605065102, 2.220446049250313E-16]]");
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
    }

    @Test
    public void test12558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12558");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-2.5956007941856836d), (-0.5403850632569267d));
    }

    @Test
    public void test12559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12559");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray10 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        java.lang.String str22 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", objArray23);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray23);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) notARotationMatrixException25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException28.getSuppressed();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.Object[] objArray45 = cardanEulerSingularityException43.getArguments();
        java.lang.String str46 = cardanEulerSingularityException43.getPattern();
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException43.getSuppressed();
        notARotationMatrixException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        java.lang.String str54 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException51.getSuppressed();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray60 = cardanEulerSingularityException28.getArguments();
        java.lang.String str61 = cardanEulerSingularityException28.getPattern();
        notARotationMatrixException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str63 = cardanEulerSingularityException28.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
    }

    @Test
    public void test12560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12560");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double3 = vector3D2.getY();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D2, 1.5707963267948963d);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        double[] doubleArray10 = rotation5.getAngles(rotationOrder7);
        double double11 = rotation5.getQ3();
        double double12 = rotation5.getQ3();
        double[][] doubleArray13 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 1.0635272133923235d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.42487699275774343d + "'", double3 == 0.42487699275774343d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.38468101661851206d + "'", double6 == 0.38468101661851206d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[2.8986555041307933, 1.3892807489199688, -2.095122594958829]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.38468101661851206d + "'", double11 == 0.38468101661851206d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.38468101661851206d + "'", double12 == 0.38468101661851206d);
        org.junit.Assert.assertNotNull(doubleArray13);
    }

    @Test
    public void test12561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12561");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double1 = vector3D0.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        double double8 = vector3D5.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D5.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D0.subtract(vector3D5);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA3();
        java.lang.String str19 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder15.getA2();
        double double26 = vector3D25.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D5.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.5707963267948966d + "'", double1 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test12562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12562");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.normalize();
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.negate();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0189832222323367d + "'", double30 == 1.0189832222323367d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test12563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12563");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        double[] doubleArray32 = rotation29.getAngles(rotationOrder30);
        java.lang.String str33 = rotationOrder30.toString();
        java.lang.String str34 = rotationOrder30.toString();
        java.lang.String str35 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder30.getA3();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "XZY" + "'", str33, "XZY");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "XZY" + "'", str34, "XZY");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XZY" + "'", str35, "XZY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test12564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12564");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(3.1330314046616845d, 9990.00005005005d, (-1.0027048888022863d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        double double23 = vector3D19.getY();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) (short) 10, (double) (short) -1, (double) '#', false);
        double[][] doubleArray30 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D66.subtract(1.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.subtract(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D56, vector3D59, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D81.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D81.subtract(100.0022140464598d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation29.applyInverseTo(vector3D89);
        double double91 = org.apache.commons.math.geometry.Vector3D.angle(vector3D19, vector3D89);
        double double92 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D8, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D3.add(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D3.scalarMultiply((-0.5147707696277871d));
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.580795772103955d + "'", double91 == 1.580795772103955d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-100.0022140464598d) + "'", double92 == (-100.0022140464598d));
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test12565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12565");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (-0.429556888950007d), (double) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA2();
        java.lang.String str12 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder6.getA2();
        double[] doubleArray18 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D35);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D35, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA2();
        double[] doubleArray51 = rotation48.getAngles(rotationOrder49);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) (byte) 10, (double) 0.0f, (-128.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation5.applyInverseTo(rotation59);
        double double61 = rotation59.getAngle();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.690664597348275, 0.6697489642809841, -2.406213181489753]");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2.9188221422808427d + "'", double61 == 2.9188221422808427d);
        org.junit.Assert.assertNotNull(doubleArray62);
    }

    @Test
    public void test12566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12566");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.add((-1.0d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D7, (double) 100.0f, vector3D15, (double) (short) -1, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.orthogonal();
        double double44 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        double double51 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D35.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D3.subtract(vector3D48);
        java.lang.Class<?> wildcardClass54 = vector3D53.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test12567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12567");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8342233605065102d, (-10.53200198742562d), (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), 0.9999999999999999d, (double) (short) 1);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation10.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test12568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12568");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        double double21 = vector3D20.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D16.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation12.applyTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((-0.14599455657272695d), 3.1330314046616845d, 0.005022802342728373d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(27.47493735326811d, vector3D36);
        double double38 = vector3D32.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation12.applyTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation12.revert();
        double[][] doubleArray41 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(doubleArray41, 0.17054888923331002d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5277475438952628d + "'", double6 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZYZ" + "'", str19, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.5707963267948966d + "'", double21 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.1364351454618995d + "'", double38 == 3.1364351454618995d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(doubleArray41);
    }

    @Test
    public void test12569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12569");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (-0.35693432703869876d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12570");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation6.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder23.getA3();
        double[] doubleArray34 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double40 = vector3D39.getY();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D39, 1.5707963267948963d);
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA3();
        double[] doubleArray47 = rotation42.getAngles(rotationOrder44);
        double double48 = rotation42.getQ3();
        double double49 = rotation42.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-919.4168818468384d));
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation42.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double59 = vector3D58.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA3();
        java.lang.String str62 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, 0.0d, (-0.7683919425686427d), 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D58.add(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(2.0678198605632665d, vector3D35, (-0.13597071688697315d), vector3D52, 0.6066147582383538d, vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.9202635195876083d) + "'", double7 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-3.0113006777231797, 0.6179476270033603, -1.384127546483252]");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.42487699275774343d + "'", double40 == 0.42487699275774343d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.38468101661851206d + "'", double43 == 0.38468101661851206d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[2.8986555041307933, 1.3892807489199688, -2.095122594958829]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.38468101661851206d + "'", double48 == 0.38468101661851206d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.38468101661851206d + "'", double49 == 0.38468101661851206d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.26237485370392877d + "'", double59 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "YXY" + "'", str62, "YXY");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test12571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12571");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.add((-1.0d), vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D47.subtract(1.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.subtract(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D37, vector3D40, vector3D62);
        double double64 = vector3D62.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D62.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        double double73 = vector3D70.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D70.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D62.add(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D76, Double.NaN);
        double double79 = vector3D76.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D76, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D87);
        double double90 = vector3D11.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-0.03563598374487637d), (-3.110368056629538d));
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D94.scalarMultiply(0.464523755405321d);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D11.add(25.06596560241331d, vector3D96);
        double double98 = vector3D11.getY();
        double double99 = vector3D11.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.141592653589793d + "'", double64 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZYZ" + "'", str81, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 1.5707963267948966d + "'", double99 == 1.5707963267948966d);
    }

    @Test
    public void test12572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12572");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation4.getQ1();
        double[][] doubleArray55 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation57.revert();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D(0.2520878998432229d, 100.0022140464598d, (-8.868313204374247E-18d));
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation58.applyTo(vector3D62);
        double double64 = rotation58.getQ0();
        double[][] doubleArray65 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray65, 0.4928810440100293d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(doubleArray65, 0.5496694388267762d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.45973278686101987d) + "'", double54 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.24893698743024012d + "'", double64 == 0.24893698743024012d);
        org.junit.Assert.assertNotNull(doubleArray65);
    }

    @Test
    public void test12573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12573");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0d), 2.23606797749979d, 2.0985845029684933d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder13.getA2();
        java.lang.String str19 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D27, (double) 100.0f, vector3D35, (double) (short) -1, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D35.add((-1.0d), vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyInverseTo(rotation80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation80.applyTo(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D64.subtract(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D86, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder89.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation88.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D84, (-0.9036922050915068d), vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D22.add(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D94 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZYZ" + "'", str19, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test12574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12574");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        double[] doubleArray14 = rotation12.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder21.getA1();
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation20.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation12.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str32 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray40 = rotation39.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str42 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation39.applyTo(vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation59 = rotation52.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation58.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation39.applyTo(rotation58);
        double double64 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation30.applyTo(rotation39);
        double double66 = rotation39.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.6502970659532881d) + "'", double64 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.04145438869418405d + "'", double66 == 0.04145438869418405d);
    }

    @Test
    public void test12575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12575");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double9 = vector3D8.getY();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D8, 1.5707963267948963d);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation18.revert();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D23, (double) 100.0f, vector3D31, (double) (short) -1, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D31.add((-1.0d), vector3D60);
        double double62 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D31.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D31.subtract((-0.0d), vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation19.applyTo(vector3D69);
        double[][] doubleArray72 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation12.applyInverseTo(rotation19);
        double[][] doubleArray75 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(doubleArray75, 1.6134380694273578d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.42487699275774343d + "'", double9 == 0.42487699275774343d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZYZ" + "'", str14, "ZYZ");
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(doubleArray75);
    }

    @Test
    public void test12576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12576");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.07932499020447392d, 0.3064749276757589d, 0.596443134110513d, false);
    }

    @Test
    public void test12577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12577");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        double double13 = vector3D10.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D46, vector3D49, vector3D71);
        double double73 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        double double82 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D71.add(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, Double.NaN);
        double double88 = vector3D85.getY();
        double double89 = vector3D85.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686427d), 0.6205445805637456d, 0.45973278686101987d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D((-0.6181409508714061d), vector3D4, 0.45973278686101987d, vector3D19, 0.9649660284921133d, vector3D85, 0.6918710786346925d, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D85.normalize();
        double double97 = vector3D85.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.141592653589793d + "'", double73 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test12578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12578");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA2();
        java.lang.String str14 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, 3.2087642143727657d, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder11.getA1();
        double[] doubleArray21 = rotation10.getAngles(rotationOrder11);
        java.lang.String str22 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyInverseTo(rotation35);
        double double37 = rotation29.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D39, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation29.applyTo(vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str50 = rotationOrder49.toString();
        java.lang.String str51 = rotationOrder49.toString();
        double[] doubleArray52 = rotation29.getAngles(rotationOrder49);
        java.lang.String str53 = rotationOrder49.toString();
        java.lang.String str54 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder49.getA1();
        double double56 = org.apache.commons.math.geometry.Vector3D.angle(vector3D23, vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXZ" + "'", str14, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[2.0132771373071714, 0.530964914873383, 1.4746143592344314]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXZ" + "'", str22, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.7683919425686428d) + "'", double37 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "XYX" + "'", str50, "XYX");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "XYX" + "'", str51, "XYX");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "XYX" + "'", str53, "XYX");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "XYX" + "'", str54, "XYX");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.5707963267948966d + "'", double56 == 1.5707963267948966d);
    }

    @Test
    public void test12579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12579");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray11);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException19);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray39);
        java.lang.Throwable[] throwableArray42 = notARotationMatrixException41.getSuppressed();
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        java.lang.String str45 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        java.lang.String str54 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException51.getSuppressed();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.Object[] objArray62 = cardanEulerSingularityException60.getArguments();
        java.lang.String str63 = cardanEulerSingularityException60.getPattern();
        java.lang.Object[] objArray64 = cardanEulerSingularityException60.getArguments();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException60.getSuppressed();
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        java.lang.Object[] objArray67 = cardanEulerSingularityException60.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException60.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        java.lang.String str70 = cardanEulerSingularityException60.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cardan angles singularity" + "'", str2, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Cardan angles singularity" + "'", str45, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str70, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test12580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12580");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation56.revert();
        double double60 = rotation56.getQ0();
        double double61 = rotation56.getQ2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.24893698743024015d + "'", double60 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.13599489604735257d + "'", double61 == 0.13599489604735257d);
    }

    @Test
    public void test12581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12581");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation8);
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getAngle();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5033082423383954d + "'", double11 == 0.5033082423383954d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6134380694273582d + "'", double12 == 1.6134380694273582d);
        org.junit.Assert.assertNotNull(doubleArray13);
    }

    @Test
    public void test12582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12582");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.negate();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D51.add((double) 0.0f, vector3D68);
        double double71 = vector3D70.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(2.5104165854707956d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D72, vector3D73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 3.141592653589793d + "'", double71 == 3.141592653589793d);
    }

    @Test
    public void test12583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12583");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-765.2478357286732d), 0.31106787649539275d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test12584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12584");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.0d, 0.0d, 2.1753991605364833d);
    }

    @Test
    public void test12585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12585");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D20.subtract((double) 0, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D26.add(2.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation12.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D26.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str42 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        double double45 = vector3D40.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D40, (-0.30671879673173297d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test12586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12586");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D29.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation25.applyTo(vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), (-0.24987572770084396d), (-0.476811323902129d));
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.6918710786346925d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D68.add(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.orthogonal();
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D76);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test12587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12587");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str10 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str10, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test12588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12588");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        java.lang.String str8 = rotationOrder6.toString();
        double[] doubleArray9 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 0.7042369761831051d, 0.07932499020447392d, 1.4054902563068818d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (-1.3580505901573954d), (-0.7369962279218841d), (-0.07463241469520679d));
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYX" + "'", str8, "XYX");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test12589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12589");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Object[] objArray6 = cardanEulerSingularityException4.getArguments();
        java.lang.String str7 = cardanEulerSingularityException4.getPattern();
        java.lang.Object[] objArray8 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) throwableArray9);
        java.lang.Throwable[] throwableArray11 = notARotationMatrixException10.getSuppressed();
        java.lang.Object[] objArray12 = notARotationMatrixException10.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", objArray12);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray12);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test12590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12590");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation7.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test12591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12591");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        double double67 = vector3D64.getY();
        double double68 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((-143.96727020572638d), (-0.1934112408002968d), (-634.6978979926987d));
        double double73 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D64, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.negate();
        double double75 = vector3D72.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 143.7738589649261d + "'", double73 == 143.7738589649261d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-143.96727020572638d) + "'", double75 == (-143.96727020572638d));
    }

    @Test
    public void test12592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12592");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D8.add(vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation22.applyTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.subtract(1.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.subtract(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D62, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D11.subtract((-0.1934112408002968d), vector3D36);
        double double93 = vector3D92.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXY" + "'", str25, "ZXY");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3797440647529498d + "'", double93 == 1.3797440647529498d);
    }

    @Test
    public void test12593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12593");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.7184445811893183d, 1.144163849196767d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, 0.0952905926857031d, (double) 10.0f, (-406.7116193600549d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXZ" + "'", str4, "YXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test12594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12594");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D20, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D2.subtract(0.496669722445646d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.scalarMultiply(649.9580153489533d);
        double double37 = vector3D36.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D41.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D36.add(1.5501807665642404d, vector3D41);
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D51, (-0.2480014413252729d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.5707963267948966d) + "'", double37 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.6268126762927476d) + "'", double52 == (-0.6268126762927476d));
    }

    @Test
    public void test12595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12595");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D18.add((-1.0d), vector3D47);
        double double49 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D18.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D18.subtract((-0.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation6.applyTo(vector3D56);
        double[][] doubleArray59 = rotation6.getMatrix();
        double double60 = rotation6.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA2();
        double[] doubleArray63 = rotation6.getAngles(rotationOrder61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder61.getA2();
        java.lang.String str65 = rotationOrder61.toString();
        java.lang.String str66 = rotationOrder61.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.1934112408002968d) + "'", double60 == (-0.1934112408002968d));
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.1422402278498054, 0.32416569600795603, -2.9219698001003835]");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ZYX" + "'", str65, "ZYX");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZYX" + "'", str66, "ZYX");
    }

    @Test
    public void test12596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12596");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        double double22 = vector3D21.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation5.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyTo(rotation41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation56 = rotation49.applyInverseTo(rotation55);
        double double57 = rotation56.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation29.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation77 = rotation70.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation64.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation29.applyInverseTo(rotation78);
        double double80 = rotation79.getAngle();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation5.applyTo(rotation79);
        double double82 = rotation79.getAngle();
        double double83 = rotation79.getQ2();
        double double84 = rotation79.getQ2();
        double[][] doubleArray85 = rotation79.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException86 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(doubleArray85, 1.5704827100495264d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 788.3701330754276d + "'", double83 == 788.3701330754276d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 788.3701330754276d + "'", double84 == 788.3701330754276d);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test12597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12597");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.471272803264239d, 0.8708459440388457d, 0.23160805743135715d);
        double double4 = vector3D3.getX();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.471272803264239d + "'", double4 == 1.471272803264239d);
    }

    @Test
    public void test12598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12598");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.5287508684135855d), 107.5143815840712d, 0.8111383753205208d, 0.10830291305827339d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyTo(rotation30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        double double46 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation18.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation53.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation18.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation11.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D70.subtract(1.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.subtract(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation67.applyTo(vector3D85);
        double double87 = vector3D86.getY();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D86.scalarMultiply(0.5309649148733836d);
        double double90 = vector3D89.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation5.applyInverseTo(vector3D89);
        double double92 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-634.6978979926987d) + "'", double87 == (-634.6978979926987d));
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 669.172940447475d + "'", double90 == 669.172940447475d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 3.1317571081930495d + "'", double92 == 3.1317571081930495d);
    }

    @Test
    public void test12599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12599");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.applyTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation21.applyTo(rotation42);
        double double46 = rotation21.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation21.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder48.getA2();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder48.getA2();
        double[] doubleArray56 = rotation21.getAngles(rotationOrder48);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (-143.96727020572638d), (-0.45973278686101987d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((-0.4073364259823062d), vector3D7, (-0.8461918607585952d), vector3D63);
        double double65 = vector3D7.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.10830291305827339d + "'", double46 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test12600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12600");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str3 = cardanEulerSingularityException2.getPattern();
        java.lang.String str4 = cardanEulerSingularityException2.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException2.getSuppressed();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXY", (java.lang.Object[]) throwableArray6);
        java.lang.String str8 = notARotationMatrixException7.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXY" + "'", str8, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YXY");
    }

    @Test
    public void test12601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12601");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D5.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D23, (double) 100.0f, vector3D37);
        double double39 = vector3D23.getY();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D(2.1678933499060977d, vector3D23, 0.26081761410019294d, vector3D42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
    }

    @Test
    public void test12602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12602");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D53 = rotation51.applyInverseTo(vector3D52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test12603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12603");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.normalize();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D55, (double) (-1));
        double double58 = rotation57.getQ2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test12604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12604");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.negate();
        double double7 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation18.applyTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.negate();
        double double27 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D11, vector3D26);
        double double28 = vector3D26.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D4.subtract(0.4408630673468408d, vector3D26);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.8390715290764523d + "'", double27 == 0.8390715290764523d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-2.7755575615628914E-17d) + "'", double28 == (-2.7755575615628914E-17d));
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test12605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12605");
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.5629528985411225d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(2.1475455860530537d, vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.8390715290764523d, (-0.0013651261847257446d), 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(2.3561944901923444d, vector3D6, 0.7620179160984356d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.negate();
        double double48 = vector3D47.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D47.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D51, (-143.96727020572638d), vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(2.0d, vector3D6, 0.2996643961824783d, vector3D58);
        java.lang.Class<?> wildcardClass61 = vector3D58.getClass();
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2.0d + "'", double48 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test12606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12606");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.1934586046207122d), 0.0016579344306793635d, 1.4951200884960367d, (-0.8292004581690567d), false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D15);
        double double20 = vector3D19.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyInverseTo(rotation21);
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str33 = rotationOrder24.toString();
        java.lang.String str34 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder24.getA2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, 1.580316067234769d, 0.26237485370392877d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, 3.116520608132782d, (-0.0013651261847257446d), (-54.50256143565405d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation22.applyTo(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.5707963267948966d + "'", double20 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.4708762863294462d + "'", double23 == 0.4708762863294462d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXY" + "'", str25, "ZXY");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXY" + "'", str33, "ZXY");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation44);
    }

    @Test
    public void test12607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12607");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.3273551284312965d, 1.164556009381087d, 0.5376341431973777d);
    }

    @Test
    public void test12608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12608");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(44.73431728565376d, vector3D4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, 27.47493735326811d, (double) (byte) 1, (-54.50256143565405d), false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D39, vector3D42, vector3D64);
        double double66 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.orthogonal();
        double double69 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D13, vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str78 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder72.getA2();
        java.lang.String str80 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-0.3760399769745898d), 0.5941575119870542d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((-0.6784272035127924d), vector3D4, 3.0494479105138855E-17d, vector3D70, 1.5788969781424285d, vector3D82, 97.02097113801663d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(24.882865501017502d, 0.15135620392549756d);
        double double92 = vector3D91.getY();
        double double93 = vector3D91.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D70.subtract(0.16253461570464098d, vector3D91);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 3.141592653589793d + "'", double66 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "XYZ" + "'", str78, "XYZ");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "XYZ" + "'", str80, "XYZ");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.24445647922771854d) + "'", double92 == (-0.24445647922771854d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.24987572770084396d) + "'", double93 == (-0.24987572770084396d));
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test12609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12609");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.8787812610140828d, (-18.13640959594133d));
    }

    @Test
    public void test12610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12610");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.subtract(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D63, vector3D66, vector3D88);
        double double90 = vector3D63.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation36.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation92 = rotation36.revert();
        double double93 = rotation92.getQ1();
        double double94 = rotation92.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.5707963267948966d + "'", double90 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test12611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12611");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) (short) 1, (-1.0d), 98.0d);
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation15.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA1();
        java.lang.String str22 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D18.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(16.62763166455332d, 25.06596560241331d);
        double double31 = vector3D30.getY();
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.8292004581690566d, vector3D26, 1.246950552048578d, vector3D30);
        double double33 = vector3D32.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.6654428555205447d + "'", double16 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "YXZ" + "'", str20, "YXZ");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "YXZ" + "'", str22, "YXZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.7936280035504817d) + "'", double31 == (-0.7936280035504817d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.39849834998863237d) + "'", double33 == (-0.39849834998863237d));
    }

    @Test
    public void test12612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12612");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D24);
        double double56 = vector3D24.getX();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D24, 0.7853981633974484d);
        double[][] doubleArray59 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation58.revert();
        double double61 = rotation60.getQ0();
        double double62 = rotation60.getAngle();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-2.0d) + "'", double56 == (-2.0d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.9238795325112867d) + "'", double61 == (-0.9238795325112867d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7853981633974483d + "'", double62 == 0.7853981633974483d);
    }

    @Test
    public void test12613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12613");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D2, 1.1307230243164947d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, 0.5496694388267762d, 0.12637150995481888d, 0.429556888950007d);
        double[] doubleArray15 = rotation6.getAngles(rotationOrder7);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (-0.9036922050915068d), 0.24476820490809906d, 2.9502157553926875d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder16.getA3();
        double[] doubleArray25 = rotation6.getAngles(rotationOrder16);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "YXZ" + "'", str8, "YXZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.1307230243164947, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-0.0, 0.0, 1.1307230243164947]");
    }

    @Test
    public void test12614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12614");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.08344852980719934d), 1.2415014828981374d, 0.7421004107973872d);
    }

    @Test
    public void test12615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12615");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        java.lang.String str5 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D21, (-0.8414709848078965d));
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation19.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12, (-0.9271000934009814d), vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.add(vector3D36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXY" + "'", str5, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test12616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12616");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.42124308432505947d, 1.0214487653061934d, (-0.7670131877750112d), (-2.566370614359173d), false);
    }

    @Test
    public void test12617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12617");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(2.3391267197924392d, 0.6242558681478626d, 0.38914040780458603d);
    }

    @Test
    public void test12618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12618");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, (-0.7683919425686428d));
        double double5 = rotation4.getQ0();
        double double6 = rotation4.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9271000934009814d + "'", double5 == 0.9271000934009814d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test12619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12619");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        notARotationMatrixException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException16);
        java.lang.Object[] objArray28 = notARotationMatrixException16.getArguments();
        java.lang.Throwable[] throwableArray29 = notARotationMatrixException16.getSuppressed();
        java.lang.Throwable[] throwableArray30 = notARotationMatrixException16.getSuppressed();
        java.lang.Throwable[] throwableArray31 = notARotationMatrixException16.getSuppressed();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test12620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12620");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.24987572770084396d), (double) 10L, 0.8342233605065102d);
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.356194490192345d, 44.73549720146294d, 0.2552989384871147d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XYX" + "'", str7, "XYX");
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test12621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12621");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        double double7 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder10.getA3();
        java.lang.String str14 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder10.getA2();
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D9.subtract(vector3D20);
        double double24 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((-0.16624968048555705d), vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D28.subtract(0.496669722445646d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D28.negate();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D28.negate();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply(649.9580153489533d);
        double double63 = vector3D62.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D62);
        double double65 = vector3D9.getAlpha();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.0d) + "'", double24 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.5707963267948966d) + "'", double63 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.5707963267948966d + "'", double65 == 1.5707963267948966d);
    }

    @Test
    public void test12622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12622");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.949327365002713d, 10.618890631312926d, 1.920946278942357E-4d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.2573179145927016d, 0.3345571444794553d, 97.0d);
        java.lang.String str11 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "YXZ" + "'", str11, "YXZ");
    }

    @Test
    public void test12623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12623");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        double double13 = vector3D10.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D46, vector3D49, vector3D71);
        double double73 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        double double82 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D71.add(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, Double.NaN);
        double double88 = vector3D85.getY();
        double double89 = vector3D85.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686427d), 0.6205445805637456d, 0.45973278686101987d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D((-0.6181409508714061d), vector3D4, 0.45973278686101987d, vector3D19, 0.9649660284921133d, vector3D85, 0.6918710786346925d, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D85.scalarMultiply(794.7876615041731d);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D85.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D99 = vector3D98.negate();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.141592653589793d + "'", double73 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test12624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12624");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray36 = rotation30.getAngles(rotationOrder31);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation25.applyInverseTo(rotation30);
        double[][] doubleArray38 = rotation25.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXY", (java.lang.Object[]) doubleArray38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 0.7595398284364924d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
    }

    @Test
    public void test12625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12625");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D25.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation70.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D54.subtract(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation86.applyTo(vector3D88);
        double double90 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D74, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D88);
        double[][] doubleArray92 = rotation91.getMatrix();
        double double93 = rotation91.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D(0.5224674736269327d, 0.9999861708965355d, 0.9949879346007117d);
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation91.applyTo(vector3D97);
        java.lang.Class<?> wildcardClass99 = vector3D98.getClass();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.4533522819483131d + "'", double90 == 1.4533522819483131d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-1.0d) + "'", double93 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test12626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12626");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.9202635195876083d), (double) 1.0f, (-0.4212430843250595d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test12627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12627");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.add((-1.0d), vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D19, (double) 100.0f, vector3D27, (double) (short) -1, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D27.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation5.applyTo(vector3D56);
        double double59 = rotation5.getQ2();
        double double60 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.normalize();
        double double63 = vector3D61.getNorm();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D61, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D61.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.7683919425686428d) + "'", double59 == (-0.7683919425686428d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.7683919425686428d) + "'", double60 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.9999999999999999d + "'", double63 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test12628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12628");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D1, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D11.subtract(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D13, (double) 100.0f, vector3D21, (double) (short) -1, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D5.subtract(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D21, 2.1475455860530537d);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation51.revert();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
    }

    @Test
    public void test12629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12629");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((double) 0, vector3D13);
        double double15 = vector3D13.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(2.0678198605632665d, vector3D16, 1.954992298079218d, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder33.getA2();
        java.lang.String str41 = rotationOrder33.toString();
        java.lang.String str42 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D30.subtract(0.8846219209894443d, vector3D45);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.5707963267948966d + "'", double15 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
    }

    @Test
    public void test12630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12630");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation10.applyTo(vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation29.applyTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation10.applyTo(rotation29);
        double double35 = rotation10.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        double[] doubleArray38 = rotation10.getAngles(rotationOrder36);
        double[][] doubleArray39 = rotation10.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(doubleArray39, 1.5380092504381624d);
        double[][] doubleArray44 = rotation43.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.6502970659532881d) + "'", double35 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-2.942186120029216, -0.06191210684245344, 1.4191356246734994]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
    }

    @Test
    public void test12631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12631");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D57.negate();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D57);
        double double60 = rotation59.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA2();
        java.lang.String str64 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, 0.5378050714624897d, (-0.13182419629852823d), 0.8775825618903728d);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation59.applyTo(rotation69);
        double[][] doubleArray71 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation69.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.5707963267948961d + "'", double60 == 1.5707963267948961d);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "XZY" + "'", str64, "XZY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(rotation72);
    }

    @Test
    public void test12632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12632");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation12.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation12.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str42 = rotationOrder41.toString();
        double[] doubleArray43 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation39.applyTo(rotation49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str52 = rotationOrder51.toString();
        double[] doubleArray53 = rotation39.getAngles(rotationOrder51);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (-0.8367309896698533d), 0.46630897150381445d, 2.1753991605364833d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, 0.9232154062269446d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XYX" + "'", str42, "XYX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "XYX" + "'", str52, "XYX");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test12633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12633");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.22322545173690791d), 0.7183075869834017d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(1.8228860923754615d, 0.0d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D36, vector3D39, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.scalarMultiply(0.5277475438952628d);
        double double66 = vector3D61.getX();
        double double67 = vector3D61.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D9.subtract(2.1349162105446426d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.11940151637535575d), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, 2.2183772473628487d);
        double double74 = vector3D73.getDelta();
        double double75 = vector3D73.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(0.5773502691896258d, vector3D3, (-0.07560588568854028d), vector3D69, (-0.35693432703869876d), vector3D73);
        java.lang.Class<?> wildcardClass77 = vector3D76.getClass();
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1.0d) + "'", double66 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 3.141592653589793d + "'", double67 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.9232154062269446d + "'", double74 == 0.9232154062269446d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test12634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12634");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        double double11 = vector3D4.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D4.subtract((-0.2551713383813414d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D17.scalarMultiply((-0.03563598374487637d));
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        double double26 = vector3D25.getAlpha();
        double double27 = vector3D25.getY();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((-0.8348312433510422d), 0.0d, 2.060217686612772d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D25.add(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.2152515705638135d, vector3D21, (-0.7683919425686427d), vector3D25);
        double double34 = vector3D33.getDelta();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XZX" + "'", str15, "XZX");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.8414709848078965d + "'", double27 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.009982466302471134d) + "'", double34 == (-0.009982466302471134d));
    }

    @Test
    public void test12635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12635");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) notARotationMatrixException17);
        java.lang.String str29 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.String str38 = cardanEulerSingularityException36.getPattern();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException36.getSuppressed();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException36.getSuppressed();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray51);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException53 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray51);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        java.lang.Object[] objArray57 = cardanEulerSingularityException55.getArguments();
        java.lang.String str58 = cardanEulerSingularityException55.getPattern();
        java.lang.Object[] objArray59 = cardanEulerSingularityException55.getArguments();
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException55.getSuppressed();
        notARotationMatrixException53.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.Object[] objArray65 = cardanEulerSingularityException63.getArguments();
        java.lang.String str66 = cardanEulerSingularityException63.getPattern();
        java.lang.Object[] objArray67 = cardanEulerSingularityException63.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException63.getSuppressed();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException63.getSuppressed();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.String str71 = cardanEulerSingularityException55.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Throwable[] throwableArray74 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray75 = cardanEulerSingularityException5.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Euler angles singularity" + "'", str66, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Euler angles singularity" + "'", str71, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test12636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12636");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6654428555205447d, 2.0678198605632665d, (double) 10);
        double double18 = rotation17.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder19.getA2();
        java.lang.String str25 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 2.0357975100483765d, (-0.9202635195876083d), 2.356194490192345d);
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation17.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation30.applyTo(rotation38);
        double double41 = rotation40.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.858431163878729d) + "'", double18 == (-0.858431163878729d));
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZYZ" + "'", str25, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.7265133934792274d) + "'", double31 == (-0.7265133934792274d));
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.15984405773258273d + "'", double41 == 0.15984405773258273d);
    }

    @Test
    public void test12637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12637");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str19 = rotationOrder9.toString();
        java.lang.String str20 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D54, vector3D57, vector3D79);
        double double81 = vector3D79.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D84.subtract(0.0d, vector3D87);
        double double90 = vector3D87.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D87.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D91.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D79.add(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D92);
        double double95 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D96 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D97 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D8, vector3D28);
        double double98 = vector3D8.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXY" + "'", str20, "ZXY");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZYZ" + "'", str23, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 3.141592653589793d + "'", double81 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
    }

    @Test
    public void test12638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12638");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation21.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(0.06847869573979007d, vector3D15, 100.4491529857595d, vector3D49, (-2.0d), vector3D52);
        double double54 = vector3D52.getY();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.negate();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D52.orthogonal();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test12639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12639");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.3064749276757589d, 0.5015459899437228d, 20.0d);
    }

    @Test
    public void test12640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12640");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(2.356194490192345d, 0.5309649148733836d, 1.5707963267948966d);
        double double8 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str18 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder12.getA3();
        double double20 = org.apache.commons.math.geometry.Vector3D.angle(vector3D11, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D19);
        double double22 = rotation21.getQ1();
        double[][] doubleArray23 = rotation21.getMatrix();
        double double24 = rotation21.getQ1();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.1272633691578409d + "'", double8 == 1.1272633691578409d);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYZ" + "'", str18, "XYZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0553984905820601d + "'", double20 == 1.0553984905820601d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.10483202296503055d) + "'", double22 == (-0.10483202296503055d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.10483202296503055d) + "'", double24 == (-0.10483202296503055d));
    }

    @Test
    public void test12641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12641");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        java.lang.String str8 = rotationOrder6.toString();
        double[] doubleArray9 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA3();
        java.lang.String str12 = rotationOrder6.toString();
        java.lang.String str13 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder6.getA1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYX" + "'", str8, "XYX");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XYX" + "'", str12, "XYX");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XYX" + "'", str13, "XYX");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test12642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12642");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-20.0d), 0.464523755405321d);
        double double12 = rotation11.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.1931368575996838d + "'", double12 == 0.1931368575996838d);
    }

    @Test
    public void test12643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12643");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        java.lang.String str3 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 3.1330314046616845d, 0.9166535214993772d, 0.6178548206313739d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation13.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation7.applyTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.7817163787754635d), vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XYX" + "'", str3, "XYX");
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
    }

    @Test
    public void test12644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12644");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str40 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder39.getA1();
        double[] doubleArray43 = rotation11.getAngles(rotationOrder39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str45 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder44.getA1();
        double[] doubleArray48 = rotation11.getAngles(rotationOrder44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D59.subtract(1.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.subtract(vector3D73);
        double double75 = vector3D74.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation58.applyTo(vector3D74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str78 = rotationOrder77.toString();
        double[] doubleArray79 = rotation58.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder77.getA2();
        double[] doubleArray82 = rotation11.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder77.getA1();
        java.lang.String str84 = rotationOrder77.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZYZ" + "'", str40, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.2391603239401561, 2.0413190668629926, -0.6564980782696592]");
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "YXZ" + "'", str45, "YXZ");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[2.053086062517426, -0.2127459841128369, -0.76659061641796]");
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXY" + "'", str78, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.5752220392306203, -0.5752220392306204, 2.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXY" + "'", str84, "ZXY");
    }

    @Test
    public void test12645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12645");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D63.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D53.subtract(0.5114629390766603d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D63.add((double) '4', vector3D78);
        double double80 = vector3D63.getDelta();
        double double81 = vector3D63.getNorm();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
    }

    @Test
    public void test12646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12646");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 3.267168414346192d, 0.8846219209894443d, (-0.7683919425686427d));
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
    }

    @Test
    public void test12647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12647");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        double[][] doubleArray26 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        double double42 = vector3D41.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation37.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZYZ" + "'", str31, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.37481384288189196d + "'", double38 == 0.37481384288189196d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.0d) + "'", double42 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test12648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12648");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        java.lang.String str9 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        double double24 = rotation23.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = vector3D29.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D29.orthogonal();
        double double34 = vector3D29.getY();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D29.negate();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.add((-1.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D39, (double) 100.0f, vector3D47, (double) (short) -1, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D47.add((-1.0d), vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        double double85 = vector3D82.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D82.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D82.scalarMultiply((double) 0.0f);
        double double89 = vector3D82.getNorm();
        double double90 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D78, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D78.scalarMultiply((-0.8292004581690567d));
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation23.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D15.add(0.13599489604735257d, vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D(0.7686031697128382d, vector3D96);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXZ" + "'", str9, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5738046983621651d + "'", double24 == 0.5738046983621651d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.7071067811865475d) + "'", double90 == (-0.7071067811865475d));
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test12649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12649");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray9);
        java.lang.Object[] objArray12 = notARotationMatrixException11.getArguments();
        java.lang.String str13 = notARotationMatrixException11.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray25 = rotation19.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double31 = rotation30.getQ0();
        double double32 = rotation30.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation45.applyTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation45.applyTo(rotation66);
        double double70 = rotation69.getQ3();
        double[][] doubleArray71 = rotation69.getMatrix();
        double double72 = rotation69.getQ0();
        double double73 = rotation69.getAngle();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation19.applyTo(rotation69);
        double[][] doubleArray75 = rotation19.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException76 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXZ", (java.lang.Object[]) doubleArray75);
        java.lang.Object[] objArray77 = notARotationMatrixException76.getArguments();
        java.lang.String str78 = notARotationMatrixException76.getPattern();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException76);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[[0.450732805290736, -0.7019747527151661, 0.5514266812416908], [-0.2979371073921011, 0.46400955251379594, 0.8342233605065102], [-0.8414709848078967, -0.5403023058681397, 2.220446049250313E-16]]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.24893698743024015d + "'", double31 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.8415352216177445d + "'", double32 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.11078585244669703d + "'", double70 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.476811323902129d) + "'", double72 == (-0.476811323902129d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2.1475455860530537d + "'", double73 == 2.1475455860530537d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[[-0.8390715290764524, 2.7755575615628914E-17, -0.5440211108893698], [-0.45777797993636393, 0.54030230586814, 0.7060543458962301], [0.29393586065447347, 0.8414709848078965, -0.4533522819483131]]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ" + "'", str78, "org.apache.commons.math.geometry.NotARotationMatrixException: YXZ");
    }

    @Test
    public void test12650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12650");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) 1, (-1.0d), 98.0d);
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation18.getAxis();
        double double20 = rotation18.getQ2();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation13.applyTo(rotation18);
        java.lang.Class<?> wildcardClass23 = rotation13.getClass();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6654428555205447d + "'", double11 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.27480764008539377d + "'", double20 == 0.27480764008539377d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test12651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12651");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(15.707963267948964d, 1.5586557740357134d, 2.6226154951760052d);
    }

    @Test
    public void test12652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12652");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-0.30671879673173297d));
        double double41 = rotation40.getAngle();
        double[][] doubleArray42 = rotation40.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str44 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA3();
        java.lang.String str46 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, 100.0022140464598d, 0.5277475438952628d, 2.356194490192345d);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation40.applyTo(rotation59);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.30671879673173297d + "'", double41 == 0.30671879673173297d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXY" + "'", str44, "ZXY");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXY" + "'", str46, "ZXY");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation60);
    }

    @Test
    public void test12653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12653");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.8036437989504776d), (-0.033764092852954036d));
    }

    @Test
    public void test12654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12654");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation20.applyTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        double[][] doubleArray25 = rotation20.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray25);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException26);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str29 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException1.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test12655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12655");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA2();
        java.lang.String str12 = rotationOrder10.toString();
        java.lang.String str13 = rotationOrder10.toString();
        double[] doubleArray14 = rotation9.getAngles(rotationOrder10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder10.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXZ" + "'", str13, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.4624934137366232, 2.566370614359173, -1.039831411921513]");
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test12656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12656");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray18 = notARotationMatrixException7.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation32.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        double[][] doubleArray37 = rotation32.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray37);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) notARotationMatrixException38);
        java.lang.Object[] objArray40 = notARotationMatrixException38.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray40);
        java.lang.Throwable[] throwableArray42 = notARotationMatrixException41.getSuppressed();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test12657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12657");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-54.50256143565405d), 0.8775825618903728d, 0.9649660284921133d, 0.5114629390766603d, true);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D9, (double) 100.0f, vector3D17, (double) (short) -1, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D17.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation5.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.negate();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test12658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12658");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.add((-1.0d), vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D71.subtract(1.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.subtract(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D61, vector3D64, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation6.applyInverseTo(rotation87);
        double[][] doubleArray89 = rotation87.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation87.revert();
        double[][] doubleArray91 = rotation90.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) doubleArray91);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test12659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12659");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D28, (double) 100.0f, vector3D36, (double) (short) -1, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D20.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D36, (-0.7683919425686428d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation5.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D36.add((-1.0027048888022863d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) 0L, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D87, 0.5559678498602987d);
        double double90 = vector3D87.getZ();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D82, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation91.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test12660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12660");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.5715627360770987d, 1.52778942692419d);
    }

    @Test
    public void test12661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12661");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.44338402347531586d, 25.06596560241331d, 0.43415197535159783d, false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.44338402347531586d + "'", double6 == 0.44338402347531586d);
    }

    @Test
    public void test12662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12662");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.617866403174436d, (double) 10.0f, (-0.04104628521447248d), 0.6665981901433538d, true);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.6205445805637456d, (double) (short) 1, 2.638427581942488d, true);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 0.04145438869418405d);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation5.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, 0.11078585244669703d, 1.5707963267948966d, (double) (byte) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation37.applyTo(rotation49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyInverseTo(rotation63);
        double double65 = rotation64.getQ2();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation37.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation72.applyTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation37.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation31.applyInverseTo(rotation78);
        double double81 = rotation78.getQ3();
        double double82 = rotation78.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation26.applyInverseTo(rotation78);
        double double84 = rotation83.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(rotationOrder85, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder85.getA2();
        double[] doubleArray91 = rotation83.getAngles(rotationOrder85);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder85.getA1();
        java.lang.String str93 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder85.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation16.applyTo(vector3D95);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.630600263688109d + "'", double6 == 2.630600263688109d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.7803524529878539d + "'", double17 == 0.7803524529878539d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.7604311401305615d + "'", double81 == 0.7604311401305615d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.23869349855450123d + "'", double82 == 0.23869349855450123d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2.1753991605364833d + "'", double84 == 2.1753991605364833d);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.3608600607384158, 1.9716817996469662, -0.21856548626244626]");
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "XYX" + "'", str93, "XYX");
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test12663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12663");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D7, (-0.6551684173807351d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D7.scalarMultiply(0.26237485370392877d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply(0.7604311401305615d);
        double double17 = vector3D14.getNorm();
        double double18 = vector3D14.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D14.normalize();
        double double21 = vector3D14.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.5752220392306202d) + "'", double18 == (-0.5752220392306202d));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.5752220392306202d) + "'", double21 == (-0.5752220392306202d));
    }

    @Test
    public void test12664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12664");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        double double12 = vector3D10.getZ();
        double double13 = vector3D10.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D10.normalize();
        double double15 = vector3D14.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test12665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12665");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        double double16 = vector3D9.getY();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (short) 1, (-1.0d), 98.0d);
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D27, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D9.add((double) (byte) -1, vector3D27);
        double double31 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D39.normalize();
        double double41 = vector3D39.getAlpha();
        double double42 = org.apache.commons.math.geometry.Vector3D.angle(vector3D38, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.negate();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.scalarMultiply((-0.479425538604203d));
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.orthogonal();
        double double48 = vector3D46.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.6654428555205447d + "'", double25 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.5707963267948966d) + "'", double41 == (-1.5707963267948966d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 3.141592653589793d + "'", double42 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.479425538604203d + "'", double48 == 0.479425538604203d);
    }

    @Test
    public void test12666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12666");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D24.getNorm();
        double double26 = vector3D24.getY();
        double double27 = vector3D24.getY();
        double double28 = vector3D24.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.0d + "'", double25 == 2.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.0d) + "'", double26 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.0d) + "'", double27 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
    }

    @Test
    public void test12667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12667");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str3 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException7.getSuppressed();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray10 = notARotationMatrixException5.getArguments();
        java.lang.Throwable[] throwableArray11 = notARotationMatrixException5.getSuppressed();
        java.lang.Object[] objArray12 = notARotationMatrixException5.getArguments();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Cardan angles singularity" + "'", str3, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test12668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12668");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(5.762737524892891d, 0.9989715234526073d, (-0.01638155723992608d));
    }

    @Test
    public void test12669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12669");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation19.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation12.applyTo(rotation68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation68.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D6.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D6.scalarMultiply(0.06212723678806353d);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.orthogonal();
        double double84 = org.apache.commons.math.geometry.Vector3D.angle(vector3D75, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D82.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5878407078179837d + "'", double84 == 1.5878407078179837d);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test12670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12670");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.8228860923754615d, 0.0d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D30, vector3D33, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.scalarMultiply(0.5277475438952628d);
        double double60 = vector3D55.getX();
        double double61 = vector3D55.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D3.subtract(2.1349162105446426d, vector3D55);
        double double63 = vector3D55.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.scalarMultiply((-0.126035424677324d));
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3.141592653589793d + "'", double61 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3.141592653589793d + "'", double63 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test12671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12671");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation15.getAxis();
        double double17 = rotation15.getQ0();
        double double18 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation8.applyTo(rotation15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        double[] doubleArray26 = rotation19.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((-0.4212430843250595d), (-0.0013651261847257446d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D57.negate();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D57.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D2, (-0.7454563732201893d), vector3D27, (double) (short) 0, vector3D32, (-0.21114476788661177d), vector3D60);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D27, 0.0d);
        double double64 = rotation63.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation63.getAxis();
        double double66 = rotation63.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.0d) + "'", double64 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test12672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12672");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray5 = rotation4.getMatrix();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA3();
        double[] doubleArray25 = rotation17.getAngles(rotationOrder18);
        double[] doubleArray26 = rotation4.getAngles(rotationOrder18);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation4.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.45973278686101987d) + "'", double6 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-2.804640934446484, 0.47549431265859154, 0.9176116102223566]");
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test12673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12673");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D31.subtract(vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray60 = rotation59.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation59.applyTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D49.subtract((double) 100.0f, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.scalarMultiply(0.3494625806709468d);
        double double70 = vector3D69.getZ();
        double double71 = vector3D69.getX();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXY" + "'", str62, "ZXY");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-34.47894244756301d) + "'", double70 == (-34.47894244756301d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-3.14088109773956d) + "'", double71 == (-3.14088109773956d));
    }

    @Test
    public void test12674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12674");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 0.4143658251607149d, (-0.5075744969103078d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test12675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12675");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.8600586893795792d, 2.4286248653186604d);
        double double3 = vector3D2.getZ();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.6540815546005447d + "'", double3 == 0.6540815546005447d);
    }

    @Test
    public void test12676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12676");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation11.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyInverseTo(rotation52);
        double double55 = rotation5.getQ1();
        double[][] doubleArray56 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray56, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation58.revert();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.2520878998432229d, 100.0022140464598d, (-8.868313204374247E-18d));
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation59.applyTo(vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D63, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.orthogonal();
        double double77 = vector3D76.getY();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((-9.617943898316641E-4d), vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.45973278686101987d) + "'", double55 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZYZ" + "'", str66, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test12677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12677");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.String str9 = cardanEulerSingularityException7.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray11 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException7.getSuppressed();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException7.getSuppressed();
        java.lang.Object[] objArray14 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray14);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZYZ", objArray14);
        java.lang.String str17 = notARotationMatrixException16.getPattern();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZYZ" + "'", str17, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZYZ");
    }

    @Test
    public void test12678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12678");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.44266332810163755d), (double) (short) -1, (-0.13597071688697315d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        double double11 = vector3D8.getDelta();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D8, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.applyTo(vector3D16);
        double double18 = vector3D16.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D4.add(vector3D16);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
    }

    @Test
    public void test12679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12679");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.008602829323064094d, (-0.6022298663764192d), (-0.185235967298437d));
    }

    @Test
    public void test12680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12680");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0d), 2.23606797749979d, 2.0985845029684933d);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test12681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12681");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.2552989384871147d, 0.9685018602424225d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test12682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12682");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.normalize();
        double double17 = org.apache.commons.math.geometry.Vector3D.angle(vector3D1, vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2.1460183660255168d + "'", double17 == 2.1460183660255168d);
    }

    @Test
    public void test12683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12683");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.5752220392306202d, 0.4598757241370943d, 2.1548697908969627d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (-0.4212430843250595d), (-0.44266332810163755d), (-0.45973278686101987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str15 = rotationOrder14.toString();
        java.lang.String str16 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder14.getA3();
        double[] doubleArray23 = rotation13.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, 0.0d, 0.03335368554704087d, 0.7683919425686428d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D34, (double) (byte) -1);
        double double38 = rotation37.getAngle();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation28.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((-0.41616984846448485d), 1.6134380694273578d, (double) '#', (-0.05514310635936155d), false);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation37.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 0L, 0.0d, 1.8228860923754615d, (double) 100, true);
        double[][] doubleArray54 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation37.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation5.applyInverseTo(rotation53);
        double double57 = rotation53.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "YXZ" + "'", str7, "YXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-0.606594210907236, -0.1696980788134805, -0.5796781798539555]");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9999999999999999d + "'", double38 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.05514310635936155d) + "'", double46 == (-0.05514310635936155d));
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test12684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12684");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D15.subtract((double) 0, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D21.add(2.0d, vector3D32);
        double double34 = vector3D33.getX();
        double double35 = vector3D33.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D40.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((-8.868313204374247E-18d), vector3D33, 0.9649660284921133d, vector3D40, 0.04909141830635927d, vector3D45);
        double double47 = vector3D46.getY();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation5.applyTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation5.getAxis();
        double double50 = vector3D49.getNorm();
        java.lang.Class<?> wildcardClass51 = vector3D49.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.36259815178588733d + "'", double6 == 0.36259815178588733d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.18852894086393088d) + "'", double47 == (-0.18852894086393088d));
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.9999999999999998d + "'", double50 == 0.9999999999999998d);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test12685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12685");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        double double6 = rotation5.getAngle();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        double double9 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.012932544327696d + "'", double6 == 3.012932544327696d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.012932544327696d + "'", double7 == 3.012932544327696d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.44032938768226126d + "'", double9 == 0.44032938768226126d);
    }

    @Test
    public void test12686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12686");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.3078507869034174d), (-0.7683447346047095d), 30.006480473138d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 788.3701330754276d, 0.18816121896055693d, 0.8605691650229957d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XYX" + "'", str4, "XYX");
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test12687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12687");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.4212430843250595d), (-0.0013651261847257446d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.negate();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(0.7212688287676877d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.scalarMultiply((-0.08144824585742245d));
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test12688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12688");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, Double.NaN, 10.0d, 0.42487699275774343d);
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        java.lang.String str11 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
    }

    @Test
    public void test12689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12689");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.add((-1.0d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.negate();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation5.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation5.getAxis();
        double double91 = rotation5.getAngle();
        double double92 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation93 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D((double) 0L, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D96, 0.5559678498602987d);
        org.apache.commons.math.geometry.Rotation rotation99 = rotation5.applyInverseTo(rotation98);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation99);
    }

    @Test
    public void test12690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12690");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.3051881180119337d), (-0.9036922050915068d));
    }

    @Test
    public void test12691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12691");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double[] doubleArray30 = rotation25.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 0.26237485370392877d, 0.8415352216177445d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 0.5403023058681398d, 13.903082980735348d, 2.3114482587377294d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA2();
        java.lang.String str49 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder43.getA2();
        java.lang.String str51 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (-0.03563598374487637d), 0.17956151636130238d, 1.2246467991473532E-16d);
        double[] doubleArray56 = rotation42.getAngles(rotationOrder43);
        double double57 = rotation42.getQ1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ZYZ" + "'", str49, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZYZ" + "'", str51, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.2672025128439466, 1.7279565705273292, 1.3965932176134088]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.04916211401607953d) + "'", double57 == (-0.04916211401607953d));
    }

    @Test
    public void test12692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12692");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.9166535214993772d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test12693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12693");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation13.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation13.applyTo(rotation40);
        double[][] doubleArray42 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Object[] objArray47 = cardanEulerSingularityException45.getArguments();
        java.lang.String str48 = cardanEulerSingularityException45.getPattern();
        java.lang.Object[] objArray49 = cardanEulerSingularityException45.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException45.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.String str58 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.Object[] objArray60 = cardanEulerSingularityException56.getArguments();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.String str62 = cardanEulerSingularityException45.getPattern();
        notARotationMatrixException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray72);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray72);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray77 = cardanEulerSingularityException76.getArguments();
        java.lang.Object[] objArray78 = cardanEulerSingularityException76.getArguments();
        java.lang.String str79 = cardanEulerSingularityException76.getPattern();
        java.lang.Object[] objArray80 = cardanEulerSingularityException76.getArguments();
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException76.getSuppressed();
        notARotationMatrixException74.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        java.lang.String str83 = cardanEulerSingularityException76.getPattern();
        java.lang.Throwable[] throwableArray84 = cardanEulerSingularityException76.getSuppressed();
        java.lang.String str85 = cardanEulerSingularityException76.getPattern();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        java.lang.Object[] objArray87 = cardanEulerSingularityException45.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Euler angles singularity" + "'", str79, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Euler angles singularity" + "'", str85, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
    }

    @Test
    public void test12694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12694");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D5, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-0.30671879673173297d), vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), (-0.4703697977745994d), 524.7609754926534d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D11.add(44.73431728565376d, vector3D16);
        double double18 = vector3D11.getZ();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.30671879673173297d) + "'", double18 == (-0.30671879673173297d));
    }

    @Test
    public void test12695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12695");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.add((-1.0d), vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D19, (double) 100.0f, vector3D27, (double) (short) -1, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D27.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation5.applyTo(vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation65 = rotation64.revert();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation5.applyTo(rotation65);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder69.getA2();
        double[] doubleArray76 = rotation67.getAngles(rotationOrder69);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder69.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.14599455657272695d) + "'", double66 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.2003909367058787d) + "'", double68 == (-0.2003909367058787d));
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.8323354854461835, 0.8112814079205413, -1.8695455530358387]");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test12696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12696");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        double double25 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.add((-1.0d), vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D31, (double) 100.0f, vector3D39, (double) (short) -1, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D39.add((-1.0d), vector3D68);
        double double70 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation27.applyInverseTo(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.10830291305827339d + "'", double25 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test12697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12697");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0d, (double) 0L, 0.9999999999999999d);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 2.2112625254810094d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) doubleArray6);
        java.lang.Throwable[] throwableArray10 = notARotationMatrixException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = notARotationMatrixException9.getSuppressed();
        java.lang.String str12 = notARotationMatrixException9.getPattern();
        java.lang.Object[] objArray13 = notARotationMatrixException9.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[[0.8920048697881606, 0.0, 0.45202578717835057], [-0.0, 1.0000000000000004, 0.0], [-0.45202578717835057, -0.0, 0.8920048697881606]]");
    }

    @Test
    public void test12698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12698");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        double double35 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D5, (-0.8414709848078965d), vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D0.add((-0.8495975243195618d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray62 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.subtract(1.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.subtract(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D78.add((-1.0d), vector3D80);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D78, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation61.applyInverseTo(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder91.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(0.06847869573979007d, vector3D55, 100.4491529857595d, vector3D89, (-2.0d), vector3D92);
        double double94 = vector3D93.getX();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D38.subtract(vector3D93);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXZ" + "'", str4, "YXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XZX" + "'", str8, "XZX");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.0d + "'", double35 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-56.05904118770088d) + "'", double94 == (-56.05904118770088d));
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test12699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12699");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9999999999999999d, (double) (short) 100, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D33, vector3D36, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.add((double) ' ', vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D58.subtract((double) (-1.0f), vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation7.applyInverseTo(vector3D86);
        double double89 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.scalarMultiply(0.9949879346007117d);
        double double92 = vector3D91.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test12700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12700");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        double double21 = rotation13.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D47.subtract(1.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.add((-1.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D36, (double) 100.0f, vector3D44, (double) (short) -1, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D28.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        double double80 = vector3D77.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D44, (-0.7683919425686428d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation13.applyTo(vector3D44);
        double double85 = rotation13.getQ1();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation7.applyTo(rotation13);
        double[][] doubleArray87 = rotation86.getMatrix();
        double double88 = rotation86.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.7683919425686428d) + "'", double21 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.3691205271584663d + "'", double85 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.9525458799050031d + "'", double88 == 0.9525458799050031d);
    }

    @Test
    public void test12701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12701");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.41616984846448485d), 1.6134380694273578d, (double) '#', (-0.05514310635936155d), false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(1.228726716329005d, 0.9949879346007117d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA1();
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation14.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray25 = rotation23.getAngles(rotationOrder24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D8.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation5.applyTo(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test12702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12702");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.normalize();
        double double2 = vector3D0.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.normalize();
        double double7 = vector3D5.getY();
        double double8 = vector3D5.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA3();
        java.lang.String str11 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply(1.69010224065575d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D5.add(vector3D12);
        double double16 = vector3D15.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "XYX" + "'", str11, "XYX");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.7853981633974482d + "'", double16 == 0.7853981633974482d);
    }

    @Test
    public void test12703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12703");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.5920790167803682d), (-0.3352797533984094d), 3.02414860874321d);
    }

    @Test
    public void test12704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12704");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        double double23 = vector3D22.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyTo(rotation42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        double double58 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation30.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation78 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation65.applyTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation30.applyInverseTo(rotation79);
        double double81 = rotation80.getAngle();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation6.applyTo(rotation80);
        double[][] doubleArray83 = rotation82.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray83);
        java.lang.String str85 = notARotationMatrixException84.getPattern();
        java.lang.Object[] objArray86 = notARotationMatrixException84.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException87 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYX", objArray86);
        java.lang.Throwable[] throwableArray88 = notARotationMatrixException87.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str85, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[[830193.206667806, -379200.28563515923, 956470.4679110092], [-693797.6830873819, 1830591.4735872927, 147028.8952556341], [-759785.0930060893, -599316.1640334133, 638339.979817053]]");
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test12705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12705");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test12706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12706");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.0d), (-0.3691205271584663d), (double) (short) -1, 0.24893698743024015d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation18.applyTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D41.subtract((double) 0, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str50 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str58 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder49.getA2();
        double double61 = vector3D60.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D41.add((double) 100L, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation18.applyTo(vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (short) 1, (-1.0d), 98.0d);
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        double[] doubleArray73 = rotation68.getAngles(rotationOrder70);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation18.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation68.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation5.applyTo(rotation87);
        double double90 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXY" + "'", str50, "ZXY");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.6654428555205447d + "'", double69 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXY" + "'", str71, "ZXY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-2.0323790881822563, -0.11021888658218676, -1.2726918719004534]");
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 3.141592653589793d + "'", double90 == 3.141592653589793d);
    }

    @Test
    public void test12707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12707");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation8.applyTo(rotation20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        double double36 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation8.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.subtract(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D63, vector3D66, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation8.applyInverseTo(rotation89);
        double[][] doubleArray91 = rotation89.getMatrix();
        double[][] doubleArray92 = rotation89.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray92);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException94 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray92);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException95 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray92);
        java.lang.String str96 = notARotationMatrixException95.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test12708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12708");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        double[][] doubleArray16 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray16);
        java.lang.Object[] objArray18 = notARotationMatrixException17.getArguments();
        java.lang.String str19 = notARotationMatrixException17.toString();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str19, "org.apache.commons.math.geometry.NotARotationMatrixException: ");
    }

    @Test
    public void test12709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12709");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test12710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12710");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException17);
        java.lang.Object[] objArray29 = notARotationMatrixException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Object[] objArray46 = notARotationMatrixException35.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException48.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.String str54 = cardanEulerSingularityException52.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Object[] objArray56 = cardanEulerSingularityException52.getArguments();
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException35);
        java.lang.Throwable[] throwableArray59 = notARotationMatrixException35.getSuppressed();
        java.lang.Object[] objArray60 = notARotationMatrixException35.getArguments();
        java.lang.Throwable[] throwableArray61 = notARotationMatrixException35.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException62 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) throwableArray61);
        java.lang.String str63 = notARotationMatrixException62.toString();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YZX" + "'", str63, "org.apache.commons.math.geometry.NotARotationMatrixException: YZX");
    }

    @Test
    public void test12711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12711");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.0678198605632665d, 3.0578429566979386d);
    }

    @Test
    public void test12712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12712");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        double double35 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation7.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation7.applyTo(rotation48);
        double[][] doubleArray50 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray50);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(doubleArray50, (-0.01638155723992608d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(doubleArray50);
    }

    @Test
    public void test12713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12713");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getAngle();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.06297555994767086d);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation13.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyInverseTo(rotation26);
        double double28 = rotation20.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation20.applyTo(vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str41 = rotationOrder40.toString();
        java.lang.String str42 = rotationOrder40.toString();
        double[] doubleArray43 = rotation20.getAngles(rotationOrder40);
        java.lang.String str44 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder40.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder40.getA3();
        java.lang.String str48 = rotationOrder40.toString();
        double[] doubleArray49 = rotation14.getAngles(rotationOrder40);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.5373843183446426d) + "'", double9 == (-0.5373843183446426d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2.7076937899714917d + "'", double10 == 2.7076937899714917d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.7683919425686428d) + "'", double28 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "XYX" + "'", str41, "XYX");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XYX" + "'", str42, "XYX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "XYX" + "'", str44, "XYX");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "XYX" + "'", str48, "XYX");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[2.6035479326861783, 1.5924838032829989, 1.1637353047540302]");
    }

    @Test
    public void test12714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12714");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.26081761410019294d, 9.312621355399023E-18d, 1.2246467991473532E-16d);
    }

    @Test
    public void test12715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12715");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D45.subtract((double) 0, vector3D50);
        double double52 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation36.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D51.scalarMultiply((-100.0022140464598d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
    }

    @Test
    public void test12716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12716");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D45.subtract(1.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.subtract(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D35, vector3D38, vector3D60);
        double double62 = vector3D60.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D60.add((double) 0.0f, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D0.add((double) 0.0f, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D0.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str86 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D0.subtract((double) (short) 1, vector3D87);
        double double90 = vector3D87.getX();
        double double91 = vector3D87.getNorm();
        double double92 = vector3D87.getDelta();
        double double93 = vector3D87.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D87, 118.43805429998542d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3.141592653589793d + "'", double62 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ZYZ" + "'", str86, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.5707963267948966d + "'", double92 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test12717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12717");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation3 = new org.apache.commons.math.geometry.Rotation(vector3D1, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation3.applyTo(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D32, vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D30.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        double double68 = vector3D65.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D65.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D70.add(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D60.subtract(0.5114629390766603d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D6.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D6.negate();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(2.1349162105446426d, 5.745303663565185E-4d, (-3.645772184750923d));
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(524.7609754926534d, vector3D6, 0.3013122628264297d, vector3D82);
        double double84 = vector3D6.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D6.negate();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test12718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12718");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.8571275516771671d), (-0.7071067811865475d), (-18.13640959594133d), (-0.4594686209785213d), true);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.03890284181545579d) + "'", double6 == (-0.03890284181545579d));
    }

    @Test
    public void test12719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12719");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray5 = rotation4.getMatrix();
        double double6 = rotation4.getAngle();
        double double7 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract((double) (-1L), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation4.applyTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D37, 1.8350138259443276d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        double double53 = rotation45.getQ0();
        double double54 = rotation45.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str56 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA1();
        java.lang.String str58 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation45.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation39.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation45.revert();
        double double64 = rotation45.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.638427581942488d + "'", double6 == 2.638427581942488d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.8415352216177445d + "'", double7 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5114629390766603d + "'", double53 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5114629390766603d + "'", double54 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "YXZ" + "'", str56, "YXZ");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "YXZ" + "'", str58, "YXZ");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.10830291305827339d + "'", double64 == 0.10830291305827339d);
    }

    @Test
    public void test12720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12720");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        double double59 = rotation58.getAngle();
        double double60 = rotation58.getAngle();
        double double61 = rotation58.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str63 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder62.getA1();
        double[] doubleArray73 = rotation58.getAngles(rotationOrder62);
        double[][] doubleArray74 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation76 = rotation58.applyTo(rotation75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZYZ" + "'", str63, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray74);
    }

    @Test
    public void test12721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12721");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        double double24 = vector3D17.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D33.subtract((double) 0, vector3D38);
        double double40 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder42.getA1();
        double double48 = vector3D47.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(vector3D51);
        double double53 = vector3D51.getX();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D17.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((-0.5114629390766603d), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D17.add((-0.7182585569069458d), vector3D62);
        double double65 = vector3D62.getAlpha();
        double double66 = vector3D62.getNorm();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.42502526448939937d + "'", double53 == 0.42502526448939937d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-3.141592653589793d) + "'", double65 == (-3.141592653589793d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
    }

    @Test
    public void test12722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12722");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation47.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D49, 0.6654428555205447d, vector3D54);
        double double56 = vector3D54.getY();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D54.scalarMultiply((-0.42073549240394825d));
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test12723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12723");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-57.493324223256394d), (-0.029386833329396428d), 1.426484736907568d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZY" + "'", str3, "XZY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test12724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12724");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.24893698743024012d);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test12725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12725");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5711944941453472d, 3.5041988793890034E-5d, (-0.03474713853778303d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12726");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation5.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation38.revert();
        double[][] doubleArray44 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(doubleArray44, 1.5607966601082315d);
        double double47 = rotation46.getAngle();
        double double48 = rotation46.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test12727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12727");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        java.lang.String str9 = rotationOrder1.toString();
        java.lang.String str10 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.negate();
        double double13 = vector3D11.getX();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D11.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D27, (double) 100.0f, vector3D35, (double) (short) -1, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D35.add((-1.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        double double73 = vector3D70.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D70.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D75.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.scalarMultiply(27.47493735326811d);
        double double82 = vector3D81.getDelta();
        double double83 = vector3D81.getY();
        double double84 = vector3D81.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D64.subtract((-59.12044389450646d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D23.add(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test12728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12728");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D29.negate();
        double double31 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        double double38 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D29, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D5, 25.06596560241331d);
        double double42 = rotation41.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-2.0d) + "'", double31 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-2.0d) + "'", double38 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0667756263050353d + "'", double42 == 0.0667756263050353d);
    }

    @Test
    public void test12729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12729");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4212430843250595d), (-0.44266332810163755d), (-0.45973278686101987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str9 = rotationOrder8.toString();
        java.lang.String str10 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA3();
        double[] doubleArray17 = rotation7.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (-0.4487827621891358d), 0.12426313436139437d, 0.9956699613968089d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-0.606594210907236, -0.1696980788134805, -0.5796781798539555]");
    }

    @Test
    public void test12730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12730");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        double double21 = vector3D20.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation4.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder24.getA2();
        java.lang.String str32 = rotationOrder24.toString();
        java.lang.String str33 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.negate();
        double double36 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.negate();
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str41 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA3();
        java.lang.String str43 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str48 = rotationOrder40.toString();
        java.lang.String str49 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder40.getA2();
        double double51 = org.apache.commons.math.geometry.Vector3D.angle(vector3D39, vector3D50);
        double double52 = org.apache.commons.math.geometry.Vector3D.angle(vector3D23, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.negate();
        org.apache.commons.math.geometry.Vector3D vector3D54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXY" + "'", str33, "ZXY");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZXY" + "'", str43, "ZXY");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ZXY" + "'", str48, "ZXY");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ZXY" + "'", str49, "ZXY");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.5707963267948966d + "'", double51 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.5707963267948966d + "'", double52 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test12731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12731");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        java.lang.String str9 = rotationOrder1.toString();
        java.lang.String str10 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.negate();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.scalarMultiply((-3.141592653589793d));
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation22.getAxis();
        double double24 = vector3D23.getY();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation31.getAxis();
        double double33 = rotation31.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        double[] doubleArray36 = rotation31.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract(vector3D40);
        double double47 = vector3D40.getY();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D48.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation31.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(0.5119831332721905d, vector3D15, (-765.2478357286732d), vector3D23, 0.2939358606544733d, vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.39865892577064643d + "'", double24 == 0.39865892577064643d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXY" + "'", str51, "ZXY");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test12732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12732");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(24.882865501017502d, (double) (byte) -1, (-634.6978979926987d), (-0.21114476788661177d), false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.0d) + "'", double6 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.21114476788661177d) + "'", double7 == (-0.21114476788661177d));
    }

    @Test
    public void test12733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12733");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.orthogonal();
        double double17 = vector3D16.getY();
        java.lang.Class<?> wildcardClass18 = vector3D16.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.8846219209894443d + "'", double17 == 0.8846219209894443d);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test12734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12734");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder9.getA2();
        java.lang.String str17 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.6654428555205447d, 2.0678198605632665d, (double) 10);
        double[] doubleArray27 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder9.getA1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 1.9999999999999998, 0.0]");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test12735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12735");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double4 = vector3D3.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 97.02097113801663d + "'", double4 == 97.02097113801663d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test12736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12736");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ0();
        double double8 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        double double15 = vector3D12.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D12.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D19, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.add((-1.0d), vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D31, (double) 100.0f, vector3D39, (double) (short) -1, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D23.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D17.add(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation5.applyTo(vector3D69);
        double double71 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test12737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12737");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D4.add((-3.110368056629538d), vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.normalize();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, 2.0d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation22.applyTo(rotation34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D56.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D56);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray72 = rotation66.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation61.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation22.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, 2.0678198605632665d, (-0.429556888950007d), (double) 100);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation16.applyInverseTo(rotation80);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str85 = rotationOrder84.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D87, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation95.revert();
        org.apache.commons.math.geometry.Rotation rotation97 = rotation89.applyTo(rotation95);
        org.apache.commons.math.geometry.Rotation rotation98 = rotation16.applyTo(rotation97);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ZYZ" + "'", str85, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(rotation98);
    }

    @Test
    public void test12738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12738");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        double double18 = vector3D11.getY();
        double double19 = vector3D11.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract(vector3D25);
        double double32 = vector3D25.getY();
        double double33 = vector3D25.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D25.normalize();
        double double36 = vector3D25.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D21.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation5.applyTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D42);
        double double49 = vector3D42.getY();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D42);
        double double51 = vector3D42.getY();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation5.applyInverseTo(vector3D42);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test12739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12739");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.9999999999999999d, 0.5153978362128364d);
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.add((-1.0d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D7, (double) 100.0f, vector3D15, (double) (short) -1, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D35.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D2.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.negate();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.47011525616512123d + "'", double3 == 0.47011525616512123d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test12740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12740");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.normalize();
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D36);
        double double38 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0189832222323367d + "'", double30 == 1.0189832222323367d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9950371902099892d + "'", double38 == 0.9950371902099892d);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test12741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12741");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.normalize();
        double double8 = vector3D6.getAlpha();
        double double9 = org.apache.commons.math.geometry.Vector3D.angle(vector3D5, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.negate();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((-0.479425538604203d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.normalize();
        double double14 = vector3D13.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.5707963267948966d) + "'", double8 == (-1.5707963267948966d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.141592653589793d + "'", double9 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
    }

    @Test
    public void test12742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12742");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.6665200360546983d), (double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D33, vector3D36, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D31.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D5.add(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double70 = vector3D69.getY();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double74 = vector3D73.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D69.add(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        double double83 = vector3D80.getDelta();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D80, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.applyTo(vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((-0.0128604214268008d), vector3D3, 2.060217686612772d, vector3D5, (-0.29505041818708266d), vector3D73, 0.05101988824888226d, vector3D89);
        double double91 = vector3D3.getNorm();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D3, 0.46903508512661635d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.26237485370392877d + "'", double70 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5153978362128364d + "'", double74 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
    }

    @Test
    public void test12743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12743");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.negate();
        double double36 = vector3D35.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D35, 2.153573489132929d, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D35.subtract(3.1330314046616845d, vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation76 = rotation69.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation75.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str79 = rotationOrder78.toString();
        double[] doubleArray80 = rotation77.getAngles(rotationOrder78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder78.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.orthogonal();
        double double90 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D81, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.7788920347427493d, vector3D35, (-17.14909694667194d), vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D7.subtract(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XZX" + "'", str5, "XZX");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.0d + "'", double36 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "XZX" + "'", str79, "XZX");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[2.055910057912307, 1.7765565406780053, -0.805632409230546]");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test12744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12744");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D40, vector3D43, vector3D65);
        double double67 = vector3D65.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D69.subtract(1.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.negate();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D65.add((double) 0.0f, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation12.applyTo(vector3D84);
        double double86 = vector3D85.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((-0.08144824585742245d), vector3D85, (-0.8013200773557289d), vector3D88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 3.141592653589793d + "'", double67 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
    }

    @Test
    public void test12745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12745");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str26 = cardanEulerSingularityException25.getPattern();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException25.getSuppressed();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException25.getSuppressed();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        double double45 = rotation44.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D65.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D65);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D56, vector3D61);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation70.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation44.applyTo(rotation71);
        double[][] doubleArray73 = rotation44.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray77 = cardanEulerSingularityException76.getArguments();
        java.lang.Object[] objArray78 = cardanEulerSingularityException76.getArguments();
        java.lang.String str79 = cardanEulerSingularityException76.getPattern();
        java.lang.Object[] objArray80 = cardanEulerSingularityException76.getArguments();
        notARotationMatrixException74.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        java.lang.String str82 = cardanEulerSingularityException76.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException85 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray86 = cardanEulerSingularityException85.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException87 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray86);
        cardanEulerSingularityException76.addSuppressed((java.lang.Throwable) notARotationMatrixException87);
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) notARotationMatrixException87);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Euler angles singularity" + "'", str79, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Euler angles singularity" + "'", str82, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
    }

    @Test
    public void test12746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12746");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.0186255278998044d, 1.5788969781424285d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D3.subtract(1.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.add((-1.0d), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D28, vector3D31, vector3D53);
        double double55 = vector3D53.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D53.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        double double64 = vector3D61.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D53.add(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, Double.NaN);
        double double70 = vector3D67.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str72 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D67.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D67);
        double double83 = vector3D82.getNorm();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 3.141592653589793d + "'", double55 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZYZ" + "'", str72, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4141722516152326d + "'", double83 == 1.4141722516152326d);
    }

    @Test
    public void test12747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12747");
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray10 = rotation9.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray10);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray10);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray10);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) doubleArray10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Object[] objArray18 = cardanEulerSingularityException16.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str21 = cardanEulerSingularityException20.getPattern();
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException20.getSuppressed();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException20.getSuppressed();
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Object[] objArray27 = notARotationMatrixException14.getArguments();
        java.lang.String str28 = notARotationMatrixException14.toString();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YZX" + "'", str28, "org.apache.commons.math.geometry.NotARotationMatrixException: YZX");
    }

    @Test
    public void test12748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12748");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0022140464598d, 0.5277475438952628d, 2.356194490192345d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.3241656960079559d), 0.0d, (-0.004280611391220551d));
        java.lang.Class<?> wildcardClass22 = rotationOrder0.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test12749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12749");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 101.0d, 2.0938556754944875d, 0.12637150995481886d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12750");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        double[][] doubleArray15 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 1.5607966601082315d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 1.2474454753632944d);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 268.4709597337993d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(doubleArray15);
    }

    @Test
    public void test12751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12751");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation11.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation53.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, 1.8414709848078965d, (-0.9138363287001148d), 0.428182669496151d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, 0.0d, (-0.12637150995481888d), 0.14599455657272695d);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation53.applyTo(rotation67);
        double double69 = rotation67.getQ1();
        double double70 = rotation67.getQ3();
        java.lang.Class<?> wildcardClass71 = rotation67.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.06297555994767086d + "'", double69 == 0.06297555994767086d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.004605227190596036d + "'", double70 == 0.004605227190596036d);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test12752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12752");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation3 = rotation2.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = rotation3.revert();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract(vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        double double19 = vector3D18.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D18.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D6.add(0.3691205271584663d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.scalarMultiply(0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        double double31 = vector3D28.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D39.subtract((double) 0, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D45.add(2.0d, vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation3.applyInverseTo(vector3D22);
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(rotation5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.8414709848078965d + "'", double61 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test12753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12753");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        java.lang.Object[] objArray6 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.String str30 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) notARotationMatrixException22);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray35 = cardanEulerSingularityException12.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
    }

    @Test
    public void test12754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12754");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation6.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation6.applyTo(vector3D20);
        double[][] doubleArray26 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) (byte) 10);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("YXZ", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(doubleArray26, 0.7423983938032201d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-0.7683919425686428d) + "'", double14 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
    }

    @Test
    public void test12755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12755");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D18.subtract((double) 0, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D24.add(2.0d, vector3D35);
        double double37 = vector3D36.getX();
        double double38 = vector3D36.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D43);
        double double50 = vector3D43.getY();
        double double51 = vector3D43.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D43.normalize();
        double double54 = vector3D43.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(1.981403820949318d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D36.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D5.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D5.negate();
        double double60 = vector3D5.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0d + "'", double38 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test12756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12756");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), 24.882865501017502d, (-2.0d), (double) 100L, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((-0.1934586046207122d), 0.0016579344306793635d, 1.4951200884960367d, (-0.8292004581690567d), false);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation17 = rotation14.applyInverseTo(rotation16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 24.882865501017502d + "'", double6 == 24.882865501017502d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-2.0d) + "'", double7 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-2.7755575615628914E-17d) + "'", double8 == (-2.7755575615628914E-17d));
        org.junit.Assert.assertNotNull(rotation15);
    }

    @Test
    public void test12757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12757");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation46.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyInverseTo(rotation80);
        double double82 = rotation81.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation54.applyInverseTo(rotation81);
        double[][] doubleArray84 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation46.applyTo(rotation54);
        double[][] doubleArray86 = rotation85.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation85.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test12758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12758");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.4731659712580034d, 0.8464661308088944d, (-3.011713490850235d));
    }

    @Test
    public void test12759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12759");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation16.applyTo(rotation43);
        double[][] doubleArray45 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray45);
        java.lang.String str50 = notARotationMatrixException49.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray54 = cardanEulerSingularityException52.getArguments();
        java.lang.String str55 = cardanEulerSingularityException52.getPattern();
        java.lang.Object[] objArray56 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException59.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.String str65 = cardanEulerSingularityException63.getPattern();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.Object[] objArray67 = cardanEulerSingularityException63.getArguments();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.String str69 = cardanEulerSingularityException52.getPattern();
        java.lang.String str70 = cardanEulerSingularityException52.getPattern();
        notARotationMatrixException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Throwable[] throwableArray72 = notARotationMatrixException49.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str50, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test12760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12760");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8342233605065102d, (-10.53200198742562d), (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), 0.9999999999999999d, (double) (short) 1);
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply(100.0d);
        double double20 = vector3D19.getAlpha();
        double double21 = vector3D19.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.negate();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D27.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-0.1934112408002968d), vector3D28, (-0.19537365596023334d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D23.subtract((-0.6466344017118328d), vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.5403850632569267d) + "'", double11 == (-0.5403850632569267d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.279994453009342d + "'", double12 == 1.279994453009342d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.5707963267948966d + "'", double20 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
    }

    @Test
    public void test12761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12761");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.3010124653079922d), 0.8265202996083181d, 0.9896911069000627d, (-0.802655335603289d), true);
    }

    @Test
    public void test12762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12762");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.8846219209894443d, 1.278124800288793d, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation11 = rotation10.revert();
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray22);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray22);
        java.lang.Throwable[] throwableArray25 = notARotationMatrixException24.getSuppressed();
        java.lang.Object[] objArray26 = notARotationMatrixException24.getArguments();
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException24);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
    }

    @Test
    public void test12763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12763");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.42955688895000704d), (-0.12637150995481888d), 0.5859522918857029d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((-27.47493735326811d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test12764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12764");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D31, vector3D34, vector3D56);
        double double58 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D60.subtract(1.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.negate();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D56.add((double) 0.0f, vector3D73);
        double double76 = vector3D75.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation5.applyInverseTo(vector3D75);
        double double78 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation5.getAxis();
        double double80 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.141592653589793d + "'", double58 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.141592653589793d + "'", double76 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2.0d + "'", double78 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2.0d + "'", double80 == 2.0d);
    }

    @Test
    public void test12765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12765");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.0d, 1.7499912870512935d);
    }

    @Test
    public void test12766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12766");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9988651775701691d, 0.05245809842993558d, 3.1317571081930495d, 0.3281855480514748d, false);
    }

    @Test
    public void test12767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12767");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', 0.9919057104354079d, (-0.3010124653079922d), (-10.40733638593415d), false);
    }

    @Test
    public void test12768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12768");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.5440211108893698d), 2.450963251785617d);
    }

    @Test
    public void test12769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12769");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double[][] doubleArray8 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray8, (-0.8552703366073418d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test12770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12770");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.applyTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.7071067811865476d, (-1.0d), (double) ' ');
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation12.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder37.getA2();
        java.lang.String str43 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder37.getA1();
        java.lang.String str50 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation36.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double61 = vector3D60.getY();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double65 = vector3D64.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D60.add(vector3D64);
        double double67 = vector3D60.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract((-0.9902124943143233d), vector3D60);
        double double69 = vector3D55.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D52.add(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.4785186797839096d) + "'", double34 == (-0.4785186797839096d));
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZYZ" + "'", str43, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZYZ" + "'", str50, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.26237485370392877d + "'", double61 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5153978362128364d + "'", double65 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0027048888022863306d + "'", double67 == 0.0027048888022863306d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test12771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12771");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.negate();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D43, 0.26237485370392877d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
    }

    @Test
    public void test12772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12772");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.00000000000001d, (-128.0d), (double) '#');
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, 3.0419236247578776d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D9);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyTo(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
    }

    @Test
    public void test12773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12773");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 0.4424808105122744d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZYZ" + "'", str13, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test12774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12774");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        double[][] doubleArray18 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray18);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", (java.lang.Object[]) doubleArray18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException29.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        notARotationMatrixException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray38 = notARotationMatrixException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation52.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        double[][] doubleArray57 = rotation52.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray57);
        notARotationMatrixException39.addSuppressed((java.lang.Throwable) notARotationMatrixException58);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException61.getSuppressed();
        notARotationMatrixException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException61.getSuppressed();
        notARotationMatrixException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.String str68 = cardanEulerSingularityException61.toString();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str68, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test12775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12775");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(2.28147172247978d, 3.133632087139039d, (-0.03563598374487637d));
    }

    @Test
    public void test12776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12776");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.8350138259443276d, 0.7316279195830642d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply((-2.6347218965989545d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((-0.7686261061565807d), 0.0d, 9990.00005005005d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D4.scalarMultiply(3.1241251492574227d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D12.subtract(vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (-2.7755575615628914E-17d), (-0.7683919425686428d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D21.add(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D21);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test12777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12777");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.00531243045244088d, 0.5403023058681398d);
    }

    @Test
    public void test12778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12778");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D8.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D27.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D54, vector3D57, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D52.normalize();
        double double82 = vector3D52.getDelta();
        double double83 = vector3D52.getNorm();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D23, vector3D28, vector3D52);
        double double85 = vector3D13.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D13.add(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.normalize();
        double double90 = vector3D87.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D87.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "XZX" + "'", str25, "XZX");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2.0d + "'", double83 == 2.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.0d) + "'", double85 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.5707963267948966d + "'", double90 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test12779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12779");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation13.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray61 = rotation55.getAngles(rotationOrder56);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation50.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation25.applyInverseTo(rotation55);
        double[][] doubleArray64 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation5.applyTo(rotation65);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
    }

    @Test
    public void test12780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12780");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(25.055003913957254d, 0.9999999999999999d, 1.1263715099548188d, (-3.957802302920104d), true);
        double double6 = rotation5.getAngle();
        java.lang.Class<?> wildcardClass7 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.33486963692967d + "'", double6 == 0.33486963692967d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test12781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12781");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        double double38 = rotation11.getQ0();
        double double39 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, 0.8390715290764523d, (-0.0013651261847257446d), 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder41.getA3();
        double[] doubleArray52 = rotation11.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation11.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.10830291305827339d + "'", double39 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[2.053086062517426, -0.2127459841128369, -0.76659061641796]");
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test12782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12782");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        double double35 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation7.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.subtract(1.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.subtract(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D62, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation7.applyInverseTo(rotation88);
        double[][] doubleArray90 = rotation88.getMatrix();
        double[][] doubleArray91 = rotation88.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray91);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", (java.lang.Object[]) doubleArray91);
        java.lang.Throwable[] throwableArray94 = notARotationMatrixException93.getSuppressed();
        java.lang.String str95 = notARotationMatrixException93.toString();
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZYZ" + "'", str95, "org.apache.commons.math.geometry.NotARotationMatrixException: ZYZ");
    }

    @Test
    public void test12783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12783");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D3, 0.9920257414636006d);
        double double8 = rotation7.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D25, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D25);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D25, (-1.0d));
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation7.applyInverseTo(rotation38);
        double double42 = rotation7.getQ0();
        double double43 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) 10L, 0.42790151633116d, (-6.626528147811479d), false);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((-0.001575539555759437d), 0.5114629390766603d, (double) (short) 10, 0.0d, false);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation49.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation7.applyTo(rotation55);
        double double59 = rotation55.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.0d) + "'", double8 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.879487112879178d + "'", double42 == 0.879487112879178d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.138441573174606d + "'", double59 == 3.138441573174606d);
    }

    @Test
    public void test12784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12784");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-10.53200198742562d), 0.496669722445646d);
        double double4 = vector3D3.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.add((-1.0d), vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D31, (double) 100.0f, vector3D39, (double) (short) -1, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.orthogonal();
        double double68 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D27, vector3D59);
        double double69 = vector3D59.getDelta();
        double double70 = vector3D59.getY();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D59, (-0.0011140747039051384d));
        double double73 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, (double) 1.0f, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024012d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.orthogonal();
        double double84 = vector3D83.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D83.scalarMultiply(1.898990647180086d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, (double) 1.0f, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D92.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024012d, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D92.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D92.orthogonal();
        double double97 = vector3D96.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D98 = new org.apache.commons.math.geometry.Vector3D((-0.33931220530841594d), vector3D59, (-0.16624968048555705d), vector3D86, (-0.6601292325605388d), vector3D96);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.9944340607881093d) + "'", double68 == (-0.9944340607881093d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.974818103461398d + "'", double73 == 1.974818103461398d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.009999500037496875d) + "'", double84 == (-0.009999500037496875d));
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.009999666686665238d) + "'", double97 == (-0.009999666686665238d));
    }

    @Test
    public void test12785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12785");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.9999999999999999d, 0.5153978362128364d);
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.add((-1.0d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D7, (double) 100.0f, vector3D15, (double) (short) -1, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D35.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D2.subtract(vector3D54);
        double double57 = vector3D2.getDelta();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.47011525616512123d + "'", double3 == 0.47011525616512123d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5153978362128364d + "'", double57 == 0.5153978362128364d);
    }

    @Test
    public void test12786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12786");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D1, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D11.subtract(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D13, (double) 100.0f, vector3D21, (double) (short) -1, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D5.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.add((-1.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.negate();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D5.add(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder76.getA3();
        double double82 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D5, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D81, (-0.009999666686665238d));
        double[][] doubleArray85 = rotation84.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(doubleArray85, 2.7755575615628914E-17d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test12787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12787");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation24.applyTo(vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation24.applyTo(rotation49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D51.subtract(1.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.add((-1.0d), vector3D68);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D68, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation76.revert();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation76.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA3();
        double double82 = vector3D81.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double89 = vector3D88.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D85.subtract(0.0d, vector3D88);
        double double91 = vector3D85.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D84.subtract(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D78, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation49.applyInverseTo(vector3D93);
        double double95 = rotation49.getQ0();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXY" + "'", str80, "ZXY");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.5114629390766603d + "'", double95 == 0.5114629390766603d);
    }

    @Test
    public void test12788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12788");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, 1.8228860923754615d);
        double double56 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation55.revert();
        double double58 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation55.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.6126058204959273d + "'", double58 == 0.6126058204959273d);
        org.junit.Assert.assertNotNull(rotation59);
    }

    @Test
    public void test12789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12789");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D45.add((-1.0d), vector3D74);
        double double76 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D45.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D23.subtract(0.5114629390766603d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.negate();
        double double81 = vector3D79.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 10L, 0.0d);
        double double85 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D79, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D79.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 3.141592653589793d + "'", double81 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 44.59354209385188d + "'", double85 == 44.59354209385188d);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test12790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12790");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.add((-1.0d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.negate();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation5.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation5.getAxis();
        double double92 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 32.0d + "'", double92 == 32.0d);
    }

    @Test
    public void test12791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12791");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.3345571444794553d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test12792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12792");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, 1.8228860923754615d);
        double double56 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation55.revert();
        double double58 = rotation55.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply(0.17877979577947714d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.6126058204959273d + "'", double58 == 0.6126058204959273d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test12793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12793");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str15 = rotationOrder14.toString();
        double[] doubleArray16 = rotation13.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.998892905446833d, 0.06297555994767086d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.scalarMultiply((double) 1);
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.negate();
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder39.getA1();
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation38.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.add(98.0d, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        double double56 = org.apache.commons.math.geometry.Vector3D.angle(vector3D32, vector3D55);
        double double57 = vector3D32.getY();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D26.subtract(vector3D32);
        double double59 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D18.add(0.6528796337721468d, vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XZX" + "'", str15, "XZX");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[2.055910057912307, 1.7765565406780053, -0.805632409230546]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.4054902563068818d + "'", double56 == 1.4054902563068818d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.9202635195876083d) + "'", double57 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 96.01789757297325d + "'", double59 == 96.01789757297325d);
        org.junit.Assert.assertNotNull(vector3D60);
    }

    @Test
    public void test12794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12794");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation5.applyInverseTo(rotation38);
        double double43 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA2();
        java.lang.String str47 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder44.getA1();
        double[] doubleArray49 = rotation5.getAngles(rotationOrder44);
        double double50 = rotation5.getAngle();
        double double51 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.33931220530841594d + "'", double43 == 0.33931220530841594d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "XZY" + "'", str47, "XZY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-0.692484455049887, -0.04691477410505512, -0.003689408947591821]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.6941037165250018d + "'", double50 == 0.6941037165250018d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.009694634437383312d + "'", double51 == 0.009694634437383312d);
    }

    @Test
    public void test12795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12795");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation5.getAngle();
        java.lang.Class<?> wildcardClass8 = rotation5.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.6134380694273582d + "'", double7 == 1.6134380694273582d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test12796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12796");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.5033082423383954d), 0.5033082423383954d, 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D3.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 98.00258485557211d + "'", double5 == 98.00258485557211d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test12797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12797");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        java.lang.String str11 = notARotationMatrixException10.toString();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str11, "org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
    }

    @Test
    public void test12798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12798");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D23, (double) 100.0f, vector3D31, (double) (short) -1, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D15.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D31.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D31.scalarMultiply(1.8027186956254748d);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str65 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getAngle();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024015d, 1.278124800288793d, 0.37481384288189196d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D9.add(vector3D73);
        double double80 = vector3D73.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ZYZ" + "'", str65, "ZYZ");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.5153978362128364d + "'", double70 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 3.1330314046616845d + "'", double71 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.19341301282303186d) + "'", double80 == (-0.19341301282303186d));
    }

    @Test
    public void test12799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12799");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder64.getA3();
        java.lang.String str69 = rotationOrder64.toString();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "XZX" + "'", str69, "XZX");
    }

    @Test
    public void test12800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12800");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.add((-1.0d), vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D76.negate();
        double double78 = vector3D76.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        double double81 = vector3D80.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), vector3D22, (double) 1, vector3D76, (-0.5287508684135855d), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D76.negate();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2.0d + "'", double78 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test12801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12801");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        double[] doubleArray32 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (byte) 10, (double) 0.0f, (-128.0d));
        double[][] doubleArray41 = rotation40.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder48.getA1();
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation47.applyInverseTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation47.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray58 = rotation56.getAngles(rotationOrder57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 0.9557533618644138d);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation40.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation40.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str74 = rotationOrder64.toString();
        java.lang.String str75 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder64.getA2();
        java.lang.String str77 = rotationOrder64.toString();
        double[] doubleArray78 = rotation63.getAngles(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXY" + "'", str74, "ZXY");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ZXY" + "'", str75, "ZXY");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXY" + "'", str77, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-2.70428747312537, -0.38650112649779095, 0.8922118827848956]");
    }

    @Test
    public void test12802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12802");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        double double9 = vector3D2.getY();
        double double10 = vector3D2.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D36, vector3D39, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D34);
        double double64 = vector3D63.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder65.getA2();
        java.lang.String str73 = rotationOrder65.toString();
        java.lang.String str74 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.negate();
        double double77 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D75.negate();
        double double79 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D63, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.scalarMultiply(0.0012965156303606186d);
        double double82 = vector3D75.getY();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXY" + "'", str73, "ZXY");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXY" + "'", str74, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test12803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12803");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((-4.212430843250595d), 0.531212308932249d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D10.subtract((-0.11083328512893442d), vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.scalarMultiply(0.0d);
        double double19 = vector3D16.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.04581027207900877d + "'", double19 == 0.04581027207900877d);
    }

    @Test
    public void test12804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12804");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException6.getArguments();
        java.lang.String str9 = cardanEulerSingularityException6.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException2.getSuppressed();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) throwableArray15);
        java.lang.String str17 = notARotationMatrixException16.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
    }

    @Test
    public void test12805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12805");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.061872561780188226d, 0.45973278686101987d, 2.2207669533633045d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test12806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12806");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.6747691995449356d), 649.9580153489533d, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test12807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12807");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.subtract(vector3D26);
        double double28 = vector3D27.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation11.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation35.applyTo(rotation47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyInverseTo(rotation61);
        double double63 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation35.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation83 = rotation76.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation70.applyTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation35.applyInverseTo(rotation84);
        double double86 = rotation85.getAngle();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation11.applyTo(rotation85);
        double double88 = rotation87.getQ3();
        double double89 = rotation87.getQ2();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation5.applyInverseTo(rotation87);
        double double91 = rotation87.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation87.getAxis();
        double double93 = rotation87.getQ0();
        double double94 = rotation87.getAngle();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-143.96727020572638d) + "'", double88 == (-143.96727020572638d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 785.3994663708453d + "'", double89 == 785.3994663708453d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-546.3002059472775d) + "'", double93 == (-546.3002059472775d));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test12808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12808");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 64.0d, (-0.2003909367058787d), 0.0d);
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYX" + "'", str8, "XYX");
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test12809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12809");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, (double) 1.0f, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D4.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.negate();
        double double7 = vector3D6.getNorm();
        double double8 = vector3D6.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9949879346007117d + "'", double5 == 0.9949879346007117d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.9949879346007117d) + "'", double8 == (-0.9949879346007117d));
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test12810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12810");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA1();
        double[] doubleArray50 = rotation45.getAngles(rotationOrder47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 2.356194490192345d, 100.4491529857595d, (double) (byte) 100);
        double double55 = rotation54.getAngle();
        double double56 = rotation54.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder63.getA1();
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation62.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray73 = rotation71.getAngles(rotationOrder72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        double[] doubleArray79 = rotation54.getAngles(rotationOrder72);
        java.lang.String str80 = rotationOrder72.toString();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2.4070830555118503d + "'", double55 == 2.4070830555118503d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.13678051992484755d + "'", double56 == 0.13678051992484755d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.6471194744837578, 0.5366335152597542, 1.7313312262151561]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "YZY" + "'", str80, "YZY");
    }

    @Test
    public void test12811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12811");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D7, (-0.6551684173807351d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D7.scalarMultiply(0.26237485370392877d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply(0.7604311401305615d);
        double double17 = vector3D14.getNorm();
        double double18 = vector3D14.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D14.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D47, vector3D50, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D72.scalarMultiply(0.5277475438952628d);
        double double77 = vector3D72.getX();
        double double78 = vector3D72.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        double double82 = vector3D81.getY();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.scalarMultiply((-0.11083328512893442d));
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((-0.429556888950007d), (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.scalarMultiply(0.33931220530841594d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(3.0954552227674976d, vector3D72, 0.6279500665709146d, vector3D84, 1.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.5752220392306202d) + "'", double18 == (-0.5752220392306202d));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 3.141592653589793d + "'", double78 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test12812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12812");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, (-3.110368056629538d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation7.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation7.getAxis();
        double double10 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D9);
        double double11 = vector3D9.getY();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D9, 524.7609754926534d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str23 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder14.getA3();
        java.lang.String str25 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder14.getA1();
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation13.applyInverseTo(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6838267645076843d + "'", double10 == 0.6838267645076843d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.3078507869034174d) + "'", double11 == (-0.3078507869034174d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXY" + "'", str25, "ZXY");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test12813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12813");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double[] doubleArray30 = rotation25.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 0.26237485370392877d, 0.8415352216177445d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 0.5403023058681398d, 13.903082980735348d, 2.3114482587377294d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA2();
        java.lang.String str49 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder43.getA2();
        java.lang.String str51 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (-0.03563598374487637d), 0.17956151636130238d, 1.2246467991473532E-16d);
        double[] doubleArray56 = rotation42.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation42.getAxis();
        double double58 = vector3D57.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ZYZ" + "'", str49, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZYZ" + "'", str51, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.2672025128439466, 1.7279565705273292, 1.3965932176134088]");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.5061009744101654d + "'", double58 == 1.5061009744101654d);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test12814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12814");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation19.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation12.applyTo(rotation68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation68.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D6.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D6.scalarMultiply(0.06212723678806353d);
        double double76 = vector3D6.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test12815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12815");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        double double31 = rotation9.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA1();
        java.lang.String str35 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (-0.9202635195876083d), (double) 1.0f, (-0.4212430843250595d));
        double[] doubleArray42 = rotation9.getAngles(rotationOrder32);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder32.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.012535694387858676d + "'", double31 == 0.012535694387858676d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "YXZ" + "'", str33, "YXZ");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "YXZ" + "'", str35, "YXZ");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-0.95919645610503, 1.1160090110610876, 2.48210718935816]");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test12816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12816");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        java.lang.Object[] objArray15 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException11.getSuppressed();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray17);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException18);
        java.lang.String str20 = notARotationMatrixException18.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray25 = cardanEulerSingularityException23.getArguments();
        java.lang.String str26 = cardanEulerSingularityException23.getPattern();
        java.lang.Object[] objArray27 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException23.getSuppressed();
        java.lang.Object[] objArray29 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray30 = cardanEulerSingularityException23.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException23.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        double[][] doubleArray45 = rotation44.getMatrix();
        double[][] doubleArray46 = rotation44.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", (java.lang.Object[]) doubleArray46);
        notARotationMatrixException32.addSuppressed((java.lang.Throwable) notARotationMatrixException47);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException32);
        java.lang.String str50 = notARotationMatrixException32.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str20, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str50, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test12817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12817");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        double double4 = vector3D3.getAlpha();
        double double5 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((-0.14599455657272695d), 3.1330314046616845d, 0.005022802342728373d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(27.47493735326811d, vector3D14);
        double double16 = vector3D10.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        java.lang.String str20 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, 3.1330314046616845d, 0.9166535214993772d, 0.6178548206313739d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyTo(rotation35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation30.applyInverseTo(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D40.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D41.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation24.applyTo(vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(1.4057310811344441d, vector3D10, 0.7380288120022733d, vector3D43, 2.3699207566956093d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D3.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 3.1364351454618995d + "'", double16 == 3.1364351454618995d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "XYX" + "'", str20, "XYX");
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
    }

    @Test
    public void test12818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12818");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D61.subtract(1.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.subtract(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D51, vector3D54, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D76.add((double) ' ', vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D23.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.7604311401305615d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D90.add(vector3D95);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.0d + "'", double25 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test12819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12819");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.4711276743037347d), (-0.3760399769745898d), 0.22999859548528673d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test12820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12820");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D13.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        double double65 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D66.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D29, (-0.7683919425686428d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D6.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D29.negate();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.orthogonal();
        double double72 = vector3D71.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D3.subtract(0.9649660284921133d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test12821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12821");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.37440857548747325d, (-0.5033082423383954d), (-0.4929138111311729d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 44.59354209385188d, 0.30970294454245617d, 0.28366218546322625d);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
    }

    @Test
    public void test12822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12822");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract(vector3D8);
        double double15 = vector3D8.getY();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (short) 1, (-1.0d), 98.0d);
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D26, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D8.add((double) (byte) -1, vector3D26);
        double double30 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D4, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D26.scalarMultiply(0.04145438869418405d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D32);
        double double34 = vector3D32.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        double double37 = vector3D36.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D41);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D69.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray85 = rotation79.getAngles(rotationOrder80);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation74.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation49.applyTo(rotation79);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation79.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D42.subtract(2.28147172247978d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D36.subtract(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D89);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.6654428555205447d + "'", double24 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-16445.115990686714d) + "'", double30 == (-16445.115990686714d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-2.450801860975571d) + "'", double34 == (-2.450801860975571d));
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test12823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12823");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D5.getAlpha();
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.negate();
        double double36 = vector3D34.getX();
        double double37 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double40 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        double double47 = vector3D44.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D44.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D39.subtract(vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str55 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder54.getA3();
        java.lang.String str58 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder54.getA2();
        double double65 = vector3D64.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D44.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D44);
        double double69 = vector3D34.getZ();
        double double70 = org.apache.commons.math.geometry.Vector3D.angle(vector3D9, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-2.0d) + "'", double36 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-2.0d) + "'", double37 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.5707963267948966d + "'", double40 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ZXY" + "'", str55, "ZXY");
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.5707963267948966d + "'", double70 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test12824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12824");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(99.14244106273873d, (-0.6665200360546983d), 0.0d);
        double double4 = vector3D3.getNorm();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 99.14468149546441d + "'", double4 == 99.14468149546441d);
    }

    @Test
    public void test12825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12825");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation25.getAxis();
        double double28 = rotation25.getQ3();
        double double29 = rotation25.getQ1();
        double[][] doubleArray30 = rotation25.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        double double36 = vector3D35.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation42.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D35, 0.8342233605065102d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.scalarMultiply((-20.0d));
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D33.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D64, 0.2182358612485715d);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation25.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.scalarMultiply(0.7604311401305615d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation25.applyInverseTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((-0.21114476788661177d), 0.5496694388267763d, (-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) 1, 0.2194399632114593d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-0.5740247584530956d), vector3D80, 0.5137889913078371d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D74.add(0.06428569370061211d, vector3D80);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.26237485370392877d + "'", double29 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test12826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12826");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D3.scalarMultiply(1.5179595270946264d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test12827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12827");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.6665981901433538d, 0.7278646038295914d);
    }

    @Test
    public void test12828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12828");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(54.54841155384128d, 0.3849691255605494d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D31, vector3D34, vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str59 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract((double) 100L, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.subtract(vector3D74);
        double double81 = vector3D74.getY();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(rotationOrder85, (double) (short) 1, (-1.0d), 98.0d);
        double double90 = rotation89.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation89.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D92, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D74.add((double) (byte) -1, vector3D92);
        double double96 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D70, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D64.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D98 = new org.apache.commons.math.geometry.Vector3D(1.560278100579935d, vector3D97);
        org.apache.commons.math.geometry.Vector3D vector3D99 = new org.apache.commons.math.geometry.Vector3D((-0.17298844104800795d), vector3D3, (-100.0022140464598d), vector3D98);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZYZ" + "'", str59, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.6654428555205447d + "'", double90 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-16445.115990686714d) + "'", double96 == (-16445.115990686714d));
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test12829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12829");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA3();
        java.lang.String str66 = rotationOrder64.toString();
        double[] doubleArray67 = rotation63.getAngles(rotationOrder64);
        java.lang.String str68 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder64.getA1();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray70 = rotation55.getAngles(rotationOrder64);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "XYX" + "'", str66, "XYX");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "XYX" + "'", str68, "XYX");
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test12830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12830");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        double double59 = rotation58.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D61.subtract(1.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.subtract(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D76.add((-1.0d), vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D84.negate();
        double double86 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double91 = vector3D90.getX();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D87.subtract(0.0d, vector3D90);
        double double93 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D84, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D84.scalarMultiply((-143.96727020572638d));
        double double96 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation58.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D97.normalize();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-2.0d) + "'", double86 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-2.0d) + "'", double93 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-2.0d) + "'", double96 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test12831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12831");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D33.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D16.subtract((double) (byte) 10, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D39.scalarMultiply(1.080456683454306d);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.negate();
        double double73 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D47, vector3D72);
        double double74 = vector3D72.getX();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D72);
        double[][] doubleArray76 = rotation75.getMatrix();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "XZX" + "'", str46, "XZX");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2.0d + "'", double73 == 2.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2.0d + "'", double74 == 2.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test12832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12832");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.6665200360546983d), (double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D31, vector3D34, vector3D56);
        double double58 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D56.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.orthogonal();
        double double67 = vector3D66.getZ();
        double double68 = vector3D66.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.add(0.5154025582583576d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.004742997713180494d), vector3D4, (-0.325607453322614d), vector3D69);
        double double71 = vector3D4.getNorm();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.141592653589793d + "'", double58 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.9950371902099892d + "'", double67 == 0.9950371902099892d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
    }

    @Test
    public void test12833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12833");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.1934112408002968d), (-0.25291598322993725d), (-0.6747691995449356d), (-0.45647262536381383d), true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((-0.2551713383813414d), (-0.08153856787190739d), (double) 100, (-0.9902124943143233d), true);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray19 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation18.getAxis();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        double double35 = rotation34.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D55);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation60.revert();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation34.applyTo(rotation61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str64 = rotationOrder63.toString();
        double[] doubleArray65 = rotation61.getAngles(rotationOrder63);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation61.applyTo(rotation71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str74 = rotationOrder73.toString();
        double[] doubleArray75 = rotation61.getAngles(rotationOrder73);
        double double76 = rotation61.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation18.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation11.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation5.applyInverseTo(rotation78);
        double double80 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.009901603992996635d) + "'", double12 == (-0.009901603992996635d));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "XYX" + "'", str64, "XYX");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "XYX" + "'", str74, "XYX");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.5707963267948963d + "'", double76 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.7714519549705618d) + "'", double80 == (-0.7714519549705618d));
    }

    @Test
    public void test12834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12834");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (-0.7525070711305497d), (-0.14599455657272695d));
        double double4 = vector3D3.getZ();
        double double5 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D22);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D22, (-1.0d));
        double double36 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(0.15388504775119377d, 0.428182669496151d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation37.applyInverseTo(vector3D41);
        double double43 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D41);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.14599455657272695d) + "'", double4 == (-0.14599455657272695d));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.7525070711305497d) + "'", double5 == (-0.7525070711305497d));
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.16554973156658878d) + "'", double43 == (-0.16554973156658878d));
    }

    @Test
    public void test12835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12835");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D18.add((-1.0d), vector3D47);
        double double49 = vector3D18.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D18.add((double) 1.0f, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(0.04909141830635927d, vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.add(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, vector3D3, (-0.479425538604203d), vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "YXZ" + "'", str57, "YXZ");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test12836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12836");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        double double9 = vector3D8.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D16.subtract(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.subtract(vector3D30);
        double double32 = vector3D31.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation15.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D8, 0.8342233605065102d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D6.add(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D34, 0.29670794249355786d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XZX" + "'", str5, "XZX");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
    }

    @Test
    public void test12837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12837");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7265133934792274d), (double) 100.0f, (-0.029386833329396428d), (-3.011713490850235d), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
    }

    @Test
    public void test12838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12838");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(649.9580153489533d, 0.28742517866390543d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D31, vector3D34, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D56.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.negate();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (-0.7525070711305497d), (-0.14599455657272695d));
        double double72 = vector3D71.getZ();
        double double73 = vector3D71.getY();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.24186177485288693d, vector3D3, (-0.20960533552726146d), vector3D66, 0.9446070737766514d, vector3D71);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D66, (-0.7957649069979387d));
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.14599455657272695d) + "'", double72 == (-0.14599455657272695d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.7525070711305497d) + "'", double73 == (-0.7525070711305497d));
    }

    @Test
    public void test12839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12839");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        double double36 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(0.9999999999999999d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation37.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D(0.7212688287676877d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.add((-0.4771338767340427d), vector3D45);
        double double47 = vector3D45.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(0.03335368554704087d, 0.8292004581690566d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D45.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.scalarMultiply(2.5843417855249764d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test12840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12840");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYX", objArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Object[] objArray10 = cardanEulerSingularityException8.getArguments();
        java.lang.String str11 = cardanEulerSingularityException8.getPattern();
        java.lang.Object[] objArray12 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException8.getSuppressed();
        java.lang.String str14 = cardanEulerSingularityException8.getPattern();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str19 = cardanEulerSingularityException18.getPattern();
        java.lang.String str20 = cardanEulerSingularityException18.getPattern();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) throwableArray21);
        java.lang.String str23 = notARotationMatrixException22.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException29.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray36 = cardanEulerSingularityException35.getArguments();
        java.lang.Object[] objArray37 = cardanEulerSingularityException35.getArguments();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException35);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray47 = rotation46.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        java.lang.String str54 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException51.getSuppressed();
        notARotationMatrixException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.String str58 = cardanEulerSingularityException51.getPattern();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException51.getSuppressed();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        java.lang.Object[] objArray64 = cardanEulerSingularityException51.getArguments();
        java.lang.String str65 = cardanEulerSingularityException51.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "XYX" + "'", str23, "XYX");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
    }

    @Test
    public void test12841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12841");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test12842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12842");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), 1.9456840668546524d, (-0.7071067811865475d), (double) 10, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyTo(rotation30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        double double46 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation18.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation53.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation18.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation11.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D74);
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ1();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation5.applyInverseTo(rotation77);
        double double81 = rotation80.getAngle();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation80.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D86.scalarMultiply((-4.0d));
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation82.applyTo(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZYZ" + "'", str73, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.05546668618914311d) + "'", double79 == (-0.05546668618914311d));
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test12843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12843");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation45.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation10.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D3.subtract((-2.7755575615628914E-17d), vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.negate();
        double double64 = vector3D63.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double72 = rotation71.getQ2();
        double double73 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation71.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D63.add(0.7525070711305496d, vector3D74);
        double double76 = vector3D63.getY();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9999999999999999d + "'", double64 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZYZ" + "'", str67, "ZYZ");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5153978362128364d + "'", double72 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.1330314046616845d + "'", double73 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.8942012921495908d) + "'", double76 == (-0.8942012921495908d));
    }

    @Test
    public void test12844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12844");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 7.880514097121173d, (double) (byte) 10, (double) (-1.0f));
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YZY" + "'", str5, "YZY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test12845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12845");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.14599455657272695d, (-0.29505041818708266d), 0.07306304911681563d, 0.0d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        double[][] doubleArray7 = rotation5.getMatrix();
        double double8 = rotation5.getQ1();
        double double9 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.8749876620099952d) + "'", double8 == (-0.8749876620099952d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.8749876620099952d) + "'", double9 == (-0.8749876620099952d));
    }

    @Test
    public void test12846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12846");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        double double8 = vector3D7.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation15.revert();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D20, (double) 100.0f, vector3D28, (double) (short) -1, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D28.add((-1.0d), vector3D57);
        double double59 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D28.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str63 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D28.subtract((-0.0d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation16.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        double double76 = vector3D73.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.orthogonal();
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D3, (-0.7059974105119942d), vector3D7, 0.0d, vector3D68, (-0.6205445805637455d), vector3D78);
        double double81 = vector3D68.getY();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZYZ" + "'", str11, "ZYZ");
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXY" + "'", str63, "ZXY");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-46.869349358648726d) + "'", double81 == (-46.869349358648726d));
    }

    @Test
    public void test12847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12847");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D6);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (byte) -1);
        double double10 = rotation9.getQ1();
        double[][] doubleArray11 = rotation9.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray11);
        java.lang.String str13 = notARotationMatrixException12.getPattern();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.3468870131236222d + "'", double10 == 0.3468870131236222d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str13, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test12848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12848");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA3();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 4100.000487804849d, (-2.0d), (-0.35693432703869876d));
        double[][] doubleArray17 = rotation16.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.8662089827552298d) + "'", double5 == (-0.8662089827552298d));
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XZX" + "'", str7, "XZX");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.5911320301150214, 2.1817925909340987, -1.025435474584856]");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test12849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12849");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D46, vector3D49, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D12.subtract(vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA3();
        double double77 = vector3D76.getDelta();
        double double78 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D12, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation11.applyTo(vector3D76);
        double[][] doubleArray80 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException81 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray80);
        java.lang.String str82 = notARotationMatrixException81.toString();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ZXY" + "'", str75, "ZXY");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str82, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test12850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12850");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D31, vector3D34, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D29.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D29.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        double double67 = vector3D64.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.add(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D59.subtract(0.5114629390766603d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D5.subtract(vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D80.add((-3.110368056629538d), vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D59.subtract(vector3D90);
        double double92 = vector3D91.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXY" + "'", str77, "ZXY");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 3.141592653589793d + "'", double92 == 3.141592653589793d);
    }

    @Test
    public void test12851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12851");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D11.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D29, (double) 100.0f, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test12852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12852");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str26 = rotationOrder25.toString();
        java.lang.String str27 = rotationOrder25.toString();
        double[] doubleArray28 = rotation5.getAngles(rotationOrder25);
        java.lang.String str29 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder25.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYX" + "'", str26, "XYX");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XYX" + "'", str27, "XYX");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "XYX" + "'", str29, "XYX");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test12853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12853");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), 0.8342233605065102d);
        double double3 = vector3D2.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D15, (double) 100.0f, vector3D23, (double) (short) -1, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation69 = rotation62.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation68.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D52.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        double double81 = vector3D80.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D84.subtract(0.0d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D82.subtract(vector3D84);
        double double91 = vector3D84.getY();
        double double92 = vector3D84.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D73, vector3D80, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D71);
        double double95 = vector3D11.getZ();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D11.orthogonal();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.5707963267948966d) + "'", double3 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZYZ" + "'", str5, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.0d + "'", double95 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test12854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12854");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), (-0.18759629602171138d), 2.7230063462241425d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test12855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12855");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D59.subtract(1.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.subtract(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D74.add((-1.0d), vector3D76);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D76, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation51.applyInverseTo(rotation84);
        double double87 = rotation51.getQ3();
        double double88 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation51.revert();
        double double90 = rotation89.getQ3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test12856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12856");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        double[] doubleArray32 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (-0.9332786382027722d), (-0.19345799453618315d), 0.0d);
        double[] doubleArray43 = rotation36.getAngles(rotationOrder37);
        double double44 = rotation36.getQ3();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.49377937858215015, 0.055862611692028566, 1.4674348460383597]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.6440076633586569d) + "'", double44 == (-0.6440076633586569d));
    }

    @Test
    public void test12857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12857");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str31 = rotationOrder26.toString();
        double[] doubleArray32 = rotation25.getAngles(rotationOrder26);
        double double33 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation19.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation47.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation69 = rotation62.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation56.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation47.applyTo(rotation68);
        double double72 = rotation71.getQ3();
        double[][] doubleArray73 = rotation71.getMatrix();
        double double74 = rotation71.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str82 = rotationOrder81.toString();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA1();
        java.lang.String str84 = rotationOrder81.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder81.getA3();
        double[] doubleArray86 = rotation80.getAngles(rotationOrder81);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder81.getA2();
        double[] doubleArray88 = rotation71.getAngles(rotationOrder81);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder81.getA2();
        double[] doubleArray90 = rotation19.getAngles(rotationOrder81);
        java.lang.String str91 = rotationOrder81.toString();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder81.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5277475438952628d + "'", double6 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZYZ" + "'", str31, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.44538811899676645d + "'", double33 == 0.44538811899676645d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.11078585244669703d + "'", double72 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.476811323902129d) + "'", double74 == (-0.476811323902129d));
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "YXZ" + "'", str82, "YXZ");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "YXZ" + "'", str84, "YXZ");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-2.234489416233763, 0.563595159307288, -0.6152787481864835]");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-0.004788941348712063, -0.6926518449710786, -0.04385695612533465]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "YXZ" + "'", str91, "YXZ");
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test12858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12858");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation72.getAxis();
        double[][] doubleArray75 = rotation72.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray75);
    }

    @Test
    public void test12859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12859");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, 2.2183772473628487d);
        double double3 = vector3D2.getDelta();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D2, (-0.32647205781784566d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        double double13 = rotation12.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder14.getA2();
        java.lang.String str22 = rotationOrder14.toString();
        java.lang.String str23 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder14.getA1();
        double[] doubleArray26 = rotation12.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder14.getA1();
        double double28 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.06981453489777116d, 3.1330314046616845d, 0.3691205271584663d);
        double double33 = org.apache.commons.math.geometry.Vector3D.angle(vector3D27, vector3D32);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.9232154062269446d + "'", double3 == 0.9232154062269446d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.496669722445646d + "'", double13 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.9867228626928285, -0.5707963267948966, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.647580920567952d + "'", double28 == 0.647580920567952d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.4535500108673287d + "'", double33 == 1.4535500108673287d);
    }

    @Test
    public void test12860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12860");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, (-0.9332786382027722d));
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D27.subtract((double) 0, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str44 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder35.getA2();
        double double47 = vector3D46.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D27.add((double) 100L, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation19.applyTo(vector3D27);
        double double50 = rotation19.getQ3();
        double double51 = rotation19.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder58.getA1();
        double double64 = vector3D63.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation57.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray68 = rotation66.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder67.getA1();
        double[] doubleArray72 = rotation19.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation13.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = null;
        double[] doubleArray75 = rotation73.getAngles(rotationOrder74);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXY" + "'", str36, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXY" + "'", str44, "ZXY");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.36259815178588733d + "'", double50 == 0.36259815178588733d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5224674736269327d + "'", double51 == 0.5224674736269327d);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[2.9906692840172524, 1.0586287435534096, 1.4512107321272978]");
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[2.478707928726724, 2.5135945732152196, -2.574113027396362]");
    }

    @Test
    public void test12861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12861");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getQ1();
        double[][] doubleArray16 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 1.8785030288527285d);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 0.11842402191972519d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.3691205271584663d + "'", double15 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test12862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12862");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-2.7755575615628914E-17d), (-0.7683919425686428d), 1.278124800288793d);
        double double13 = rotation12.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.3008463308471234d + "'", double13 == 0.3008463308471234d);
    }

    @Test
    public void test12863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12863");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9999999999999999d, (double) (short) 100, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D33, vector3D36, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.add((double) ' ', vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D58.subtract((double) (-1.0f), vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation7.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double91 = vector3D90.getX();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double94 = vector3D93.getX();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D90.subtract(0.0d, vector3D93);
        double double96 = vector3D95.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D88.subtract(0.0d, vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D88.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test12864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12864");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D7.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D15, (double) 100.0f, vector3D23, (double) (short) -1, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D7.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D53);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.subtract(1.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D73.add((-1.0d), vector3D75);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D73, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D73);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D73, (-1.0d));
        double double87 = rotation86.getQ2();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation54.applyInverseTo(rotation86);
        double double89 = rotation86.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation86.getAxis();
        // The following exception was thrown during execution in test generation
        try {
            double double91 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D0, vector3D90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7071067811865476d + "'", double55 == 0.7071067811865476d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.8775825618903728d + "'", double89 == 0.8775825618903728d);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test12865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12865");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.0d), (-1.0d), (-0.0d));
        double double4 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.8354149633266263d, 0.0d);
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.24186177485288693d, vector3D9);
        double double12 = vector3D9.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D3.add(233.91718584479247d, vector3D9);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.0d) + "'", double4 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6708700140155747d + "'", double10 == 0.6708700140155747d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test12866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12866");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D39, vector3D42, vector3D64);
        double double66 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.subtract(1.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D64.add((double) 0.0f, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation11.applyTo(vector3D83);
        double double85 = vector3D83.getZ();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D83, 0.9280907887935167d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.normalize();
        double double90 = vector3D88.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder91.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D88, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D93.normalize();
        double double95 = vector3D93.getY();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation87.applyInverseTo(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D93.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 3.141592653589793d + "'", double66 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test12867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12867");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.23892621530389604d, (-0.5287508684135855d), 0.0d);
    }

    @Test
    public void test12868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12868");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        double double38 = rotation11.getQ0();
        double double39 = rotation11.getQ2();
        double double40 = rotation11.getQ3();
        double double41 = rotation11.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.7683919425686428d) + "'", double39 == (-0.7683919425686428d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.10830291305827339d + "'", double40 == 0.10830291305827339d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.3691205271584663d + "'", double41 == 0.3691205271584663d);
    }

    @Test
    public void test12869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12869");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        double double14 = rotation5.getQ1();
        double double15 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.3691205271584663d + "'", double14 == 0.3691205271584663d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.10830291305827339d + "'", double15 == 0.10830291305827339d);
    }

    @Test
    public void test12870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12870");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.4424808105122744d, 0.017118832690706146d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D15, (double) 100.0f, vector3D23, (double) (short) -1, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.add((-1.0d), vector3D52);
        double double54 = vector3D23.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D23.add((double) 1.0f, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.add((-1.0d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.negate();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D87.subtract(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, vector3D58, 0.5153978362128364d, vector3D62, 0.6654428555205447d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D8, 0.9988929054468334d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(1.5281545841624364d, vector3D92);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D92);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test12871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12871");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D11.add((-3.110368056629538d), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation34.applyTo(rotation48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D54.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D57.subtract((double) 0, vector3D62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str74 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder65.getA2();
        double double77 = vector3D76.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D57.add((double) 100L, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation34.applyTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D19.add((-0.6883311189581703d), vector3D79);
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D6.add(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXY" + "'", str74, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-1.688281122707858d) + "'", double81 == (-1.688281122707858d));
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test12872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12872");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        double double30 = rotation29.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str32 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder42.getA3();
        double[] doubleArray49 = rotation41.getAngles(rotationOrder42);
        double[] doubleArray50 = rotation29.getAngles(rotationOrder42);
        double[][] doubleArray51 = rotation29.getMatrix();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZYZ" + "'", str32, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test12873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12873");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        java.lang.String str9 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYX" + "'", str6, "ZYX");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYX" + "'", str9, "ZYX");
    }

    @Test
    public void test12874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12874");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str39 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA3();
        java.lang.String str41 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str46 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder38.getA2();
        double double48 = vector3D47.getY();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyTo(vector3D47);
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.scalarMultiply(0.8942012921495908d);
        double double53 = vector3D52.getY();
        double double54 = vector3D52.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ZXY" + "'", str39, "ZXY");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXY" + "'", str46, "ZXY");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test12875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12875");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        double[][] doubleArray17 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray17, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D27, 0.9446070737766514d);
        double double30 = rotation29.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZYZ" + "'", str22, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.19542211381777824d + "'", double30 == 0.19542211381777824d);
    }

    @Test
    public void test12876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12876");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((double) 0, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(0.9920257414636006d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865475d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((-634.6978979926987d));
        double double21 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D15, vector3D20);
        double double22 = vector3D20.getX();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.0d) + "'", double21 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-482.5256477242087d) + "'", double22 == (-482.5256477242087d));
    }

    @Test
    public void test12877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12877");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        java.lang.String str12 = rotationOrder0.toString();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZYZ" + "'", str13, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test12878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12878");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.add((double) ' ', vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.subtract(1.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D50.subtract((double) (-1.0f), vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D50, (double) '#');
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D84.subtract(0.0d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D87.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D83, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D50, vector3D87);
        double double93 = rotation92.getQ0();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test12879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12879");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (-0.04104628521447248d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D46.subtract(vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray75 = rotation74.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation74.applyTo(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D64.subtract((double) 100.0f, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.scalarMultiply(0.3494625806709468d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D14, vector3D84, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation8.applyTo(rotation87);
        double[][] doubleArray89 = rotation87.getMatrix();
        double double90 = rotation87.getAngle();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXY" + "'", str67, "ZXY");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXY" + "'", str77, "ZXY");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2.402613744489113d + "'", double90 == 2.402613744489113d);
    }

    @Test
    public void test12880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12880");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-10.53200198742562d), 100.0d, (-0.6502970659532881d));
        java.lang.String str15 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-34.81848562482933d), (-9.927305663880512d), 0.9818049624427782d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test12881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12881");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D25.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation70.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D54.subtract(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation86.applyTo(vector3D88);
        double double90 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D74, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D7.add(vector3D88);
        double double92 = vector3D88.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder93 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder93.getA1();
        double double95 = org.apache.commons.math.geometry.Vector3D.angle(vector3D88, vector3D94);
        double double96 = vector3D94.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D94.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D94.negate();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.4533522819483131d + "'", double90 == 1.4533522819483131d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-1.5707963267948966d) + "'", double92 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 3.141592653589793d + "'", double95 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.0d + "'", double96 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test12882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12882");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        double double33 = rotation32.getQ0();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D36, (double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D74.subtract(1.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.subtract(vector3D88);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D62, vector3D64, vector3D67, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D62.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D62.orthogonal();
        double double93 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation38.applyTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation95 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation32.applyInverseTo(rotation95);
        double[][] doubleArray97 = rotation95.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.48235242686889757d) + "'", double33 == (-0.48235242686889757d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.02306666940267499d + "'", double34 == 0.02306666940267499d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.02306666940267499d + "'", double35 == 0.02306666940267499d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test12883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12883");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str21 = rotationOrder16.toString();
        double[] doubleArray22 = rotation15.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        java.lang.String str26 = rotationOrder24.toString();
        double[] doubleArray27 = rotation15.getAngles(rotationOrder24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder24.getA2();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, 0.6314722015699525d, 2.220446049250313E-16d, 0.039971493139474686d);
        double[] doubleArray33 = rotation0.getAngles(rotationOrder24);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZYZ" + "'", str21, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYZ" + "'", str26, "XYZ");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-2.005116664603875, -0.14875510171395484, 0.9711919943660552]");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, -0.0]");
    }

    @Test
    public void test12884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12884");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        double double35 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation7.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation7.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (-0.5033082423383954d));
        double double65 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(1.574525600288955d, vector3D60, 0.9685018602424225d, vector3D66, (-0.3775829393879908d), vector3D77);
        double double79 = vector3D66.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1.0d) + "'", double65 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
    }

    @Test
    public void test12885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12885");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 1, (-1.0d), 98.0d);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyTo(rotation25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        double double41 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation13.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation13.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation5.applyTo(rotation63);
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        double double69 = vector3D68.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.scalarMultiply(0.9280907887935167d);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(3.0494479105138855E-17d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation65.applyTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.37440857548747325d, vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.6654428555205447d + "'", double6 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-919.4168818468384d) + "'", double66 == (-919.4168818468384d));
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test12886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12886");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.03563598374487637d), 0.2996643961824783d, 1.0122694247155644d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation18.applyTo(vector3D20);
        double[][] doubleArray22 = rotation18.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray22);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray22);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray22, 25.06596560241331d);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray22, 0.6918710786346925d);
        double double29 = rotation28.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation28.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA2();
        double double33 = vector3D32.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        double double45 = vector3D38.getY();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D38);
        double double47 = vector3D46.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D46.subtract((-0.7009645491358697d), vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply(Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.negate();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str59 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply(100.0d);
        double double65 = vector3D64.getX();
        double double66 = vector3D64.getX();
        double double67 = vector3D64.getX();
        double double68 = vector3D64.getDelta();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D30, vector3D56, vector3D64);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.7683919425686427d) + "'", double29 == (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.0d) + "'", double47 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXY" + "'", str59, "ZXY");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test12887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12887");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), 24.882865501017502d, (-2.0d), (double) 100L, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((-0.1934586046207122d), 0.0016579344306793635d, 1.4951200884960367d, (-0.8292004581690567d), false);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.applyInverseTo(rotation14);
        double double16 = rotation15.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 24.882865501017502d + "'", double6 == 24.882865501017502d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-2.0d) + "'", double7 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-2.7755575615628914E-17d) + "'", double8 == (-2.7755575615628914E-17d));
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 85.86903183444964d + "'", double16 == 85.86903183444964d);
    }

    @Test
    public void test12888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12888");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4619278456061451d), 0.7316279195830642d, 0.8286204267864343d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
    }

    @Test
    public void test12889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12889");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.14556717101924677d, (-0.24893698743024015d));
    }

    @Test
    public void test12890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12890");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (-0.44266332810163755d), (-0.11083328512893442d), 0.01051822621496166d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation33.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation33.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation17.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation58.revert();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation59.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyInverseTo(rotation73);
        double double75 = rotation67.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D77, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation67.applyTo(vector3D81);
        double[][] doubleArray87 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(doubleArray87, 2.2112625254810094d);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation59.applyInverseTo(rotation89);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation5.applyInverseTo(rotation59);
        double double92 = rotation91.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.005022802342728373d + "'", double60 == 0.005022802342728373d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.7683919425686428d) + "'", double75 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.003575395333563282d + "'", double92 == 0.003575395333563282d);
    }

    @Test
    public void test12891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12891");
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 'a', (double) (short) 100, 100.0022140464598d);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray14);
        java.lang.Throwable[] throwableArray16 = notARotationMatrixException15.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray16);
        java.lang.Throwable[] throwableArray18 = notARotationMatrixException17.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYX", (java.lang.Object[]) throwableArray18);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test12892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12892");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract((double) (-1L), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D8.subtract(0.26237485370392877d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.orthogonal();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXY" + "'", str36, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
    }

    @Test
    public void test12893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12893");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(24.882865501017502d, 0.04909141830635927d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D5.add((-0.8412192543248603d), vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D2.orthogonal();
        double double18 = vector3D17.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }

    @Test
    public void test12894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12894");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str32 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply(100.0d);
        double double38 = vector3D37.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D53, 0.5277475438952628d, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D37, vector3D57, vector3D60);
        double[][] doubleArray62 = rotation61.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder63.getA2();
        double[] doubleArray68 = rotation61.getAngles(rotationOrder63);
        double double69 = rotation61.getAngle();
        double double70 = rotation61.getQ1();
        double double71 = rotation61.getQ1();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.7889941729137517, 0.8004723983924068, 3.1415926535897922]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.5390002603422512d + "'", double69 == 1.5390002603422512d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.5764447261520099d) + "'", double70 == (-0.5764447261520099d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.5764447261520099d) + "'", double71 == (-0.5764447261520099d));
    }

    @Test
    public void test12895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12895");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        double double11 = vector3D3.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D3.normalize();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D13, (double) 0L);
        double double16 = rotation15.getQ1();
        double double17 = rotation15.getQ0();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.0d) + "'", double16 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test12896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12896");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        java.lang.String str11 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test12897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12897");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str28 = notARotationMatrixException5.getPattern();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException50.getSuppressed();
        notARotationMatrixException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException58.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.Object[] objArray68 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException58.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException72.getSuppressed();
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.String str75 = cardanEulerSingularityException58.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str75, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test12898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12898");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation4.getQ1();
        double[][] doubleArray55 = rotation4.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) (short) 1, (-1.0d), 98.0d);
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ1();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation4.applyTo(rotation60);
        double double64 = rotation63.getQ1();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation63.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.45973278686101987d) + "'", double54 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.6654428555205447d + "'", double61 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5277475438952628d + "'", double62 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.06492830331284508d + "'", double64 == 0.06492830331284508d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
    }

    @Test
    public void test12899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12899");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9999633527322347d, 0.9971377788697264d, 0.29670794249355786d, 0.30970294454245617d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation11.getQ0();
        double double20 = rotation11.getAngle();
        double double21 = rotation11.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str23 = rotationOrder22.toString();
        java.lang.String str24 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA1();
        double[] doubleArray26 = rotation11.getAngles(rotationOrder22);
        double double27 = rotation11.getAngle();
        double double28 = rotation11.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 100, (double) (short) 10, (double) 10L);
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder35.getA3();
        double[] doubleArray40 = rotation33.getAngles(rotationOrder35);
        double[] doubleArray41 = rotation11.getAngles(rotationOrder35);
        java.lang.String str42 = rotationOrder35.toString();
        double[] doubleArray43 = rotation5.getAngles(rotationOrder35);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5114629390766603d + "'", double19 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.0678198605632665d + "'", double20 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.3691205271584663d + "'", double21 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "XYX" + "'", str23, "XYX");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "XYX" + "'", str24, "XYX");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.0678198605632665d + "'", double27 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.3691205271584663d + "'", double28 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.8662089827552298d) + "'", double34 == (-0.8662089827552298d));
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "XZX" + "'", str36, "XZX");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.5911320301150214, 2.1817925909340987, -1.025435474584856]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-2.335960244359247, 1.7765565406780053, 1.0856825956774865]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XZX" + "'", str42, "XZX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.5936372521363282, 0.5897230506452691, 3.121581401650895]");
    }

    @Test
    public void test12900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12900");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.String str9 = cardanEulerSingularityException7.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray11 = cardanEulerSingularityException7.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray12);
        java.lang.String str14 = notARotationMatrixException13.getPattern();
        java.lang.Object[] objArray15 = notARotationMatrixException13.getArguments();
        java.lang.Throwable[] throwableArray16 = notARotationMatrixException13.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXZ" + "'", str14, "ZXZ");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test12901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12901");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str32 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply(100.0d);
        double double38 = vector3D37.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D53, 0.5277475438952628d, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D37, vector3D57, vector3D60);
        double double62 = rotation61.getQ1();
        double double63 = rotation61.getQ3();
        double double64 = rotation61.getQ1();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.5764447261520099d) + "'", double62 == (-0.5764447261520099d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2438774314123819d + "'", double63 == 0.2438774314123819d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.5764447261520099d) + "'", double64 == (-0.5764447261520099d));
    }

    @Test
    public void test12902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12902");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (-1), (-0.476811323902129d), (-0.6205445805637455d), 0.5496694388267763d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyTo(rotation29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        double double45 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.applyInverseTo(rotation44);
        double double47 = rotation44.getAngle();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation11.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation48.applyTo(rotation55);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation5.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D59, vector3D60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.8111383753205208d + "'", double57 == 0.8111383753205208d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test12903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12903");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.24445647922771854d), (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D10.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.negate();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D10.add(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder81.getA3();
        double double87 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D10, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D86, (-0.009999666686665238d));
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D2.subtract(0.19525005863916445d, vector3D4);
        double double92 = vector3D91.getY();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.1307688263542203d) + "'", double92 == (-0.1307688263542203d));
    }

    @Test
    public void test12904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12904");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        double double27 = vector3D26.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D26, 0.7604311401305615d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D26.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D26);
        double double43 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.46903508512661635d, vector3D9);
        double double45 = vector3D9.getX();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.5707963267948966d + "'", double43 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
    }

    @Test
    public void test12905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12905");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((-0.012338533676892938d), 0.40103366242023547d, (-0.6641884054157535d), 0.9451557939522999d, false);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((-0.9649660284921133d), 0.5154025582583576d, 0.0d, 0.7071067811865475d, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation5.applyTo(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation29);
    }

    @Test
    public void test12906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12906");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.scalarMultiply((double) 1);
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-0.4212430843250595d), vector3D5, 0.45973278686101987d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double14 = vector3D13.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        double double21 = vector3D18.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D18.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D13.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D13.scalarMultiply(2.2259647441756316d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((-2.0d), (-634.6978979926987d), (double) (short) 1, (double) 1L, false);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D43.subtract((double) 0, vector3D48);
        double double50 = vector3D49.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation34.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D13, (-0.12637150995481888d), vector3D49, 2.0678198605632665d, vector3D62, 0.15135620392549756d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D11.add(vector3D49);
        double double68 = vector3D11.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.5707963267948966d + "'", double14 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 45.973278686101985d + "'", double68 == 45.973278686101985d);
    }

    @Test
    public void test12907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12907");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.9714040953537869d), (-0.14745915310000285d), 18.541062335790524d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test12908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12908");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        double double2 = vector3D1.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.orthogonal();
        double double4 = vector3D1.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str9 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (-2.7755575615628914E-17d), (-0.7683919425686428d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D7.add(vector3D23);
        double double25 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D1, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D7.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
    }

    @Test
    public void test12909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12909");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.9174147756487239d, 0.2391603239401561d);
        double double3 = vector3D2.getX();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.3300499618870458d) + "'", double3 == (-0.3300499618870458d));
    }

    @Test
    public void test12910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12910");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        double double5 = vector3D4.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test12911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12911");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test12912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12912");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str39 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA3();
        java.lang.String str41 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str46 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder38.getA2();
        double double48 = vector3D47.getY();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.revert();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ZXY" + "'", str39, "ZXY");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXY" + "'", str46, "ZXY");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation50);
    }

    @Test
    public void test12913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12913");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.2834385065664332d), 0.5300668199687499d, (double) 1, (-0.009982466302471134d), true);
    }

    @Test
    public void test12914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12914");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double[] doubleArray30 = rotation25.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (-0.8903223073341484d), (-1.1415926535897933d), (-0.05647313889782858d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder27.getA3();
        java.lang.String str41 = rotationOrder27.toString();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
    }

    @Test
    public void test12915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12915");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray5 = rotation4.getMatrix();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D24, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.add((-1.0d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D53, (double) 100.0f, vector3D61, (double) (short) -1, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D45.subtract(vector3D61);
        double double90 = vector3D45.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D45.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) '#', vector3D38, 0.0d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D38.negate();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D24, 0.23869349855450123d, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation4.applyInverseTo(vector3D93);
        double double96 = rotation4.getAngle();
        org.apache.commons.math.geometry.Rotation rotation97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation98 = rotation4.applyInverseTo(rotation97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.45973278686101987d) + "'", double6 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2.638427581942488d + "'", double96 == 2.638427581942488d);
    }

    @Test
    public void test12916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12916");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D45.add((-1.0d), vector3D74);
        double double76 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D45.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D23.subtract(0.5114629390766603d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation93 = rotation86.applyInverseTo(rotation92);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation92.revert();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = vector3D95.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D97 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D95.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.9999999999999999d + "'", double96 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test12917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12917");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder74.getA1();
        double[] doubleArray82 = rotation66.getAngles(rotationOrder74);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (-8.432620648546186d), (-0.6747691995449356d), 10000.0d);
        double double87 = rotation86.getQ2();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation86.revert();
        double double89 = rotation88.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation88.getAxis();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[NaN, NaN, NaN]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.3987149654648925d) + "'", double87 == (-0.3987149654648925d));
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.3570832921666046d + "'", double89 == 0.3570832921666046d);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test12918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12918");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        double double25 = vector3D18.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D34.subtract((double) 0, vector3D39);
        double double41 = vector3D40.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder43.getA1();
        double double49 = vector3D48.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(vector3D52);
        double double54 = vector3D52.getX();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D42, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D52);
        double double57 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(2.4924377791714627d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D58.negate();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.scalarMultiply(0.6469193223286404d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.42502526448939937d + "'", double54 == 0.42502526448939937d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.6174075626500691d + "'", double57 == 0.6174075626500691d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test12919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12919");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double8 = vector3D7.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double12 = vector3D11.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D3.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply((-0.22891725792137424d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        double double32 = rotation24.getQ0();
        double double33 = rotation24.getAngle();
        double double34 = rotation24.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str36 = rotationOrder35.toString();
        java.lang.String str37 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder35.getA1();
        double[] doubleArray39 = rotation24.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str44 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray52 = rotation51.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation51.applyTo(vector3D55);
        double double59 = rotation51.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.subtract(1.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.subtract(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract(0.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D80.add((-1.0d), vector3D82);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D80, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D62.subtract(0.496669722445646d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation51.applyInverseTo(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.6450594246142649d, vector3D17, (-0.0983442429133113d), vector3D41, (-0.3241656960079559d), vector3D93);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.26237485370392877d + "'", double8 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5153978362128364d + "'", double12 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5114629390766603d + "'", double32 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.0678198605632665d + "'", double33 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.3691205271584663d + "'", double34 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "XYX" + "'", str36, "XYX");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "XYX" + "'", str37, "XYX");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXY" + "'", str44, "ZXY");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXY" + "'", str54, "ZXY");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2.9502157553926875d + "'", double59 == 2.9502157553926875d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test12920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12920");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        java.lang.String str13 = rotationOrder0.toString();
        java.lang.String str14 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test12921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12921");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str22 = rotationOrder12.toString();
        java.lang.String str23 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D10.add((-143.96727020572638d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D45.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray61 = rotation55.getAngles(rotationOrder56);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation50.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.subtract(1.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.subtract(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D78.add((-1.0d), vector3D80);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D86, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation89 = rotation55.applyTo(rotation88);
        org.apache.commons.math.geometry.RotationOrder rotationOrder90 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray91 = rotation55.getAngles(rotationOrder90);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(rotationOrder90, 10.0d, 1.8027186956254748d, (-0.4785186797839096d));
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder90.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D96.scalarMultiply(1.182259999018312E-16d);
        double double99 = org.apache.commons.math.geometry.Vector3D.angle(vector3D25, vector3D96);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotationOrder90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 1.5777422382970303d + "'", double99 == 1.5777422382970303d);
    }

    @Test
    public void test12922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12922");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.21114476788661177d), 0.5496694388267763d, (-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) 1, 0.2194399632114593d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((-0.5740247584530956d), vector3D4, 0.5137889913078371d, vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply(100.0d);
        double double18 = vector3D17.getX();
        double double19 = vector3D17.getX();
        double double20 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.subtract(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D46);
        double double49 = vector3D17.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA3();
        java.lang.String str53 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str58 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.normalize();
        double double62 = org.apache.commons.math.geometry.Vector3D.angle(vector3D10, vector3D59);
        double double63 = vector3D59.getX();
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10000.0d + "'", double49 == 10000.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXY" + "'", str51, "ZXY");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.58004056108091d + "'", double62 == 0.58004056108091d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
    }

    @Test
    public void test12923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12923");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.11078585244669703d, 1.5707963267948966d, (double) (byte) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation19.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation13.applyInverseTo(rotation60);
        double double63 = rotation60.getQ3();
        double double64 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation8.applyInverseTo(rotation60);
        double double66 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        double double74 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D76.add(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation65.applyInverseTo(vector3D80);
        double double82 = vector3D80.getX();
        double double83 = vector3D80.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.7604311401305615d + "'", double63 == 0.7604311401305615d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.23869349855450123d + "'", double64 == 0.23869349855450123d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2.1753991605364833d + "'", double66 == 2.1753991605364833d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
    }

    @Test
    public void test12924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12924");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D3.subtract(1.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.add((-1.0d), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D28, vector3D31, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D0.add(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-3.110368056629538d), (-0.5287508684135855d));
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D63);
        double[][] doubleArray65 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray65, 0.15367327332374225d);
        double double68 = rotation67.getQ1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-9.813077866773593E-18d) + "'", double68 == (-9.813077866773593E-18d));
    }

    @Test
    public void test12925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12925");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.0d), (double) 10, Double.NaN, 100.4491529857595d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation52 = rotation25.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation5.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation25.revert();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
    }

    @Test
    public void test12926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12926");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, 100.0022140464598d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply((-16.507805876379134d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D13.subtract(1.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.add((-1.0d), vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D38, vector3D41, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D3.subtract(vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder71.getA2();
        java.lang.String str79 = rotationOrder71.toString();
        java.lang.String str80 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        double double83 = vector3D81.getZ();
        double double84 = vector3D81.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D81.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((-0.009999666686665238d), 268.47048776580107d, (-0.5033082423383954d));
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.scalarMultiply(1.0728787707619287d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D(0.4180214381946339d, (-0.5033082423383954d), 0.7853981633974484d);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D96.negate();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D90.subtract(vector3D96);
        org.apache.commons.math.geometry.Vector3D vector3D99 = new org.apache.commons.math.geometry.Vector3D(2.6991118430775183d, vector3D3, 1.426484736907568d, vector3D85, 0.07932499020447392d, vector3D98);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXY" + "'", str80, "ZXY");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test12927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12927");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 10, (-54.50256143565405d), (-1.0d), 0.8390715290764523d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray41 = rotation35.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation30.applyInverseTo(rotation35);
        double[][] doubleArray43 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation35);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation44.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(24.882865501017502d, (double) (byte) -1, (-634.6978979926987d), (-0.21114476788661177d), false);
        double double52 = rotation51.getAngle();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation51.revert();
        double double54 = rotation53.getAngle();
        double double55 = rotation53.getQ1();
        double double56 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation44.applyTo(rotation53);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.21114476788661177d) + "'", double56 == (-0.21114476788661177d));
        org.junit.Assert.assertNotNull(rotation57);
    }

    @Test
    public void test12928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12928");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D22.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation5.applyTo(vector3D41);
        double double44 = vector3D43.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(0.04546253698241682d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D48.add((-0.8412192543248603d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.scalarMultiply(1.1900368958131755d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.24893698743024015d + "'", double6 == 0.24893698743024015d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test12929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12929");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test12930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12930");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA1();
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(vector3D12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test12931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12931");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 669.172940447475d, (-0.7314357655099082d), 1.5708335735953374d, true);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0023474175543204876d + "'", double6 == 0.0023474175543204876d);
    }

    @Test
    public void test12932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12932");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        java.lang.String str9 = rotationOrder1.toString();
        java.lang.String str10 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.negate();
        double double13 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.negate();
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        java.lang.String str20 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str25 = rotationOrder17.toString();
        java.lang.String str26 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder17.getA2();
        double double28 = org.apache.commons.math.geometry.Vector3D.angle(vector3D16, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(30.006480473138d, vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXY" + "'", str18, "ZXY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXY" + "'", str20, "ZXY");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXY" + "'", str25, "ZXY");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.5707963267948966d + "'", double28 == 1.5707963267948966d);
    }

    @Test
    public void test12933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12933");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((-0.429556888950007d), (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.scalarMultiply(0.33931220530841594d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        double double20 = vector3D17.getDelta();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-16445.115990686714d), vector3D8, 0.8596883376522839d, vector3D30);
        double double36 = vector3D30.getY();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XZX" + "'", str2, "XZX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test12934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12934");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        java.lang.String str10 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D16.subtract(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.add((-1.0d), vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D51.subtract(1.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.subtract(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D41, vector3D44, vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D6, vector3D15, vector3D44);
        double double69 = rotation68.getQ1();
        double double70 = rotation68.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test12935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12935");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException5.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation28 = rotation27.revert();
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.applyInverseTo(rotation28);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(doubleArray31, 0.7853981633974482d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray31);
        java.lang.Throwable[] throwableArray36 = notARotationMatrixException35.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray45 = rotation44.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.Object[] objArray51 = cardanEulerSingularityException49.getArguments();
        java.lang.String str52 = cardanEulerSingularityException49.getPattern();
        java.lang.Object[] objArray53 = cardanEulerSingularityException49.getArguments();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException49.getSuppressed();
        notARotationMatrixException47.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        java.lang.Throwable[] throwableArray56 = notARotationMatrixException47.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException59.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.String str65 = cardanEulerSingularityException63.getPattern();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        java.lang.Object[] objArray67 = cardanEulerSingularityException63.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException63.getSuppressed();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException63.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation84 = rotation77.applyInverseTo(rotation83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation83.applyTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation83.getAxis();
        double[][] doubleArray88 = rotation83.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException89 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray88);
        notARotationMatrixException70.addSuppressed((java.lang.Throwable) notARotationMatrixException89);
        notARotationMatrixException47.addSuppressed((java.lang.Throwable) notARotationMatrixException70);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) notARotationMatrixException70);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException70);
        java.lang.String str94 = notARotationMatrixException5.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str94, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test12936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12936");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        double[][] doubleArray17 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray17, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation25);
        double[][] doubleArray27 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray27, 0.429556888950007d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        double[][] doubleArray56 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation29.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation57.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation71.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        double[][] doubleArray76 = rotation71.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException77 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray76);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(doubleArray76, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation85 = rotation79.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation79.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D86, 0.9446070737766514d);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation57.applyTo(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZYZ" + "'", str22, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZYZ" + "'", str81, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test12937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12937");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.6729992160923566d, (-0.03121952333832107d), 2.164942851390959d);
    }

    @Test
    public void test12938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12938");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation6.getQ0();
        double double15 = rotation6.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.negate();
        double double48 = vector3D46.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply(100.0d);
        double double57 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(0.47011525616512123d, vector3D21, 3.141592653589793d, vector3D46, 0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation6.applyTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.scalarMultiply(0.45072064175038395d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double69 = vector3D68.getY();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double73 = vector3D72.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D68.add(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D64.add(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D75);
        double double77 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((-0.3873179519917884d), vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5114629390766603d + "'", double14 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5114629390766603d + "'", double15 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXY" + "'", str18, "ZXY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2.0d + "'", double48 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXY" + "'", str51, "ZXY");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.5707963267948966d + "'", double57 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.26237485370392877d + "'", double69 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5153978362128364d + "'", double73 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.4164163828156524d) + "'", double77 == (-0.4164163828156524d));
    }

    @Test
    public void test12939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12939");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation25.getAxis();
        double double28 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
    }

    @Test
    public void test12940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12940");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        double[][] doubleArray25 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray25, 2.2112625254810094d);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((-2.0d), (-634.6978979926987d), (double) (short) 1, (double) 1L, false);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D43.subtract((double) 0, vector3D48);
        double double50 = vector3D49.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation34.applyInverseTo(vector3D49);
        double double53 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation27.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation34.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.normalize();
        double double67 = vector3D65.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D65.subtract(vector3D71);
        double double73 = vector3D65.getDelta();
        double double74 = vector3D65.getY();
        double double75 = vector3D65.getZ();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D65, (-0.9036922050915068d));
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation34.applyInverseTo(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA2();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D79, vector3D82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: zero norm for rotation defining vector");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5114629390766603d + "'", double28 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.0d) + "'", double73 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.0d) + "'", double75 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test12941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12941");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder8.getA2();
        double[] doubleArray16 = rotation5.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder8.getA1();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.014101944381758654d + "'", double7 == 0.014101944381758654d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-0.03323413046386535, -0.487505713756293, -0.016763463582294434]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test12942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12942");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str56 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.scalarMultiply(100.0d);
        double double62 = vector3D61.getX();
        double double63 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D61);
        double double65 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D6, vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ZXY" + "'", str56, "ZXY");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test12943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12943");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(144.75038034477544d, 1.4004193839319914d, 0.3849691255605494d);
    }

    @Test
    public void test12944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12944");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5224674736269327d, 0.5941575119870542d, 1.0553984905820601d);
        double[][] doubleArray15 = rotation14.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray15);
    }

    @Test
    public void test12945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12945");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str26 = rotationOrder25.toString();
        java.lang.String str27 = rotationOrder25.toString();
        double[] doubleArray28 = rotation5.getAngles(rotationOrder25);
        java.lang.String str29 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, 0.0d, 0.6708700140155747d, (-0.6716202288802354d));
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder25.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYX" + "'", str26, "XYX");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XYX" + "'", str27, "XYX");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "XYX" + "'", str29, "XYX");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test12946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12946");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        double double5 = vector3D3.getNorm();
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        double double53 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        double double68 = vector3D65.getDelta();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D65, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D77.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D73, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D17, (double) (byte) 10, vector3D60, (double) (short) -1, vector3D65, (double) ' ', vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D3.add(vector3D17);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.2246467991473532E-16d + "'", double6 == 1.2246467991473532E-16d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test12947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12947");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.008561248928108734d, (-8.987746532716779d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyInverseTo(rotation41);
        double double43 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation15.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation50.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation15.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation9.applyInverseTo(rotation56);
        double double59 = rotation9.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        double[] doubleArray63 = rotation9.getAngles(rotationOrder60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 0, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.scalarMultiply(9.057178341178636d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D2.subtract((-0.4741598817790379d), vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.45973278686101987d) + "'", double59 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "XZX" + "'", str61, "XZX");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-2.227294405064556, 2.0413190668629926, -1.906858042085361]");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test12948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12948");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        double double9 = vector3D8.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test12949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12949");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation16.applyTo(rotation43);
        double[][] doubleArray45 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) doubleArray45);
        java.lang.String str50 = notARotationMatrixException49.getPattern();
        java.lang.Class<?> wildcardClass51 = notARotationMatrixException49.getClass();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "XYX" + "'", str50, "XYX");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test12950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12950");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation12.revert();
        double[][] doubleArray15 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray15);
        java.lang.Object[] objArray17 = notARotationMatrixException16.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
    }

    @Test
    public void test12951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12951");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D9.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D25, (-0.7683919425686428d), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D2.subtract(vector3D25);
        double double66 = vector3D65.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 0, (double) (short) 1, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA1();
        double double74 = org.apache.commons.math.geometry.Vector3D.angle(vector3D65, vector3D73);
        double double75 = vector3D73.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D73.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(0.9765213798493405d, vector3D76, 788.3701330754276d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.scalarMultiply((-0.18852894086393088d));
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D81.negate();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXY" + "'", str68, "ZXY");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.7853981633974484d + "'", double74 == 0.7853981633974484d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test12952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12952");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D20.subtract((double) 0, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D26.add(2.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation12.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D26.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str42 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        double double45 = vector3D40.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D40.negate();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(2.949327365002713d, 0.09966865249116204d);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation57 = rotation56.revert();
        double double58 = rotation57.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str70 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.scalarMultiply(100.0d);
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((-10.53200198742562d), vector3D62, (-143.96727020572638d), vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder79.getA3();
        java.lang.String str83 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder79.getA3();
        double double89 = vector3D88.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D62, 2.0985845029684933d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation57.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D62, 1.5707963267948963d);
        org.apache.commons.math.geometry.Vector3D vector3D94 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D62.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.496669722445646d + "'", double58 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXY" + "'", str70, "ZXY");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXY" + "'", str80, "ZXY");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ZXY" + "'", str83, "ZXY");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.5707963267948966d + "'", double89 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test12953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12953");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException6.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        double[][] doubleArray36 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        double double54 = rotation53.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D70, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation79.revert();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation53.applyTo(rotation80);
        double[][] doubleArray82 = rotation53.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray82);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray82);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) notARotationMatrixException84);
        java.lang.String str86 = notARotationMatrixException37.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str86, "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test12954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12954");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D8.add(vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation22.applyTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.subtract(1.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.subtract(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D62, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D11.subtract((-0.1934112408002968d), vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D92.normalize();
        double double94 = vector3D93.getX();
        double double95 = vector3D93.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXY" + "'", str25, "ZXY");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.18989211600994654d + "'", double94 == 0.18989211600994654d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test12955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12955");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation24.applyTo(vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation24.applyTo(rotation49);
        double[][] doubleArray51 = rotation24.getMatrix();
        double[][] doubleArray52 = rotation24.getMatrix();
        double double53 = rotation24.getQ3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test12956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12956");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.04987562112089d, 0.0d, (-6154.230239175292d), 1.505260009229146d, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test12957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12957");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation47.getAxis();
        double double49 = vector3D48.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.scalarMultiply(0.20966096335394535d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.1994504469587317d + "'", double49 == 1.1994504469587317d);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test12958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12958");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.741851996448447d, 0.7805550791513496d);
        double double3 = vector3D2.getNorm();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.9999999999999999d + "'", double3 == 0.9999999999999999d);
    }

    @Test
    public void test12959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12959");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.02143738182962339d, (-0.7071067811865475d), 1.3515155910114225d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
    }

    @Test
    public void test12960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12960");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        double double3 = vector3D2.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.normalize();
        double double5 = vector3D2.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply(100.0d);
        double double13 = vector3D12.getAlpha();
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        double double23 = vector3D20.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.scalarMultiply((-0.5920790167803682d));
        double double33 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-0.9298896263164602d), vector3D15, 0.8220295719855228d, vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.5707963267948966d + "'", double13 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test12961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12961");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.428182669496151d, 101.00150912700792d, 3.141592653589793d, 97.02097113801663d, true);
        double double6 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.1354795568445626d + "'", double6 == 3.1354795568445626d);
    }

    @Test
    public void test12962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12962");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((-0.6502970659532881d), 32.0d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract((-0.9902124943143233d), vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.scalarMultiply(0.2520878998432229d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.8301452433388954d) + "'", double3 == (-0.8301452433388954d));
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test12963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12963");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation45.revert();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.add((-1.0d), vector3D66);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D64, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D64);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D64, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA2();
        double[] doubleArray80 = rotation77.getAngles(rotationOrder78);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) (byte) 10, (double) 0.0f, (-128.0d));
        double[][] doubleArray89 = rotation88.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation47.applyTo(rotation88);
        double double91 = rotation88.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.8822353013490584d) + "'", double91 == (-0.8822353013490584d));
    }

    @Test
    public void test12964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12964");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.applyTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.7071067811865476d, (-1.0d), (double) ' ');
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation12.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 1.0f, (double) (short) 1, 3.141592653589793d);
        double[] doubleArray48 = rotation36.getAngles(rotationOrder37);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 0.33931220530841594d, (double) 100.0f, (-0.7686261061565807d));
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.4785186797839096d) + "'", double34 == (-0.4785186797839096d));
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.591042131028625, 0.6941388201755762, 0.7912385789365644]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.2480014413252729d) + "'", double53 == (-0.2480014413252729d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.3976619784255721d + "'", double54 == 0.3976619784255721d);
    }

    @Test
    public void test12965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12965");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D3.subtract(vector3D5);
        double double12 = vector3D5.getY();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D14, 1.278124800288793d);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray25, 0.0d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException31.getSuppressed();
        java.lang.String str37 = cardanEulerSingularityException31.getPattern();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray45 = rotation44.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray55 = rotation54.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException56 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Object[] objArray61 = cardanEulerSingularityException59.getArguments();
        java.lang.String str62 = cardanEulerSingularityException59.getPattern();
        java.lang.Object[] objArray63 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException59.getSuppressed();
        notARotationMatrixException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException67.getArguments();
        java.lang.String str70 = cardanEulerSingularityException67.getPattern();
        java.lang.Object[] objArray71 = cardanEulerSingularityException67.getArguments();
        java.lang.Throwable[] throwableArray72 = cardanEulerSingularityException67.getSuppressed();
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException67.getSuppressed();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        notARotationMatrixException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        java.lang.Object[] objArray77 = cardanEulerSingularityException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException79 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray80 = cardanEulerSingularityException79.getArguments();
        java.lang.String str81 = cardanEulerSingularityException79.getPattern();
        java.lang.String str82 = cardanEulerSingularityException79.getPattern();
        java.lang.String str83 = cardanEulerSingularityException79.getPattern();
        java.lang.Throwable[] throwableArray84 = cardanEulerSingularityException79.getSuppressed();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException79.getSuppressed();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        notARotationMatrixException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException79);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Euler angles singularity" + "'", str82, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test12966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12966");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation12.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation12.applyTo(rotation39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation12.getAxis();
        double double42 = rotation12.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test12967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12967");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        java.lang.String str11 = rotationOrder0.toString();
        java.lang.String str12 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-20.0d), 0.48235242686889757d, (-0.9113108625632632d));
        java.lang.String str17 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
    }

    @Test
    public void test12968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12968");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder38.getA2();
        double[] doubleArray46 = rotation11.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation11.getAxis();
        double double48 = rotation11.getQ0();
        double double49 = rotation11.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5114629390766603d + "'", double48 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.3691205271584663d + "'", double49 == 0.3691205271584663d);
    }

    @Test
    public void test12969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12969");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 6.69518197608358E-4d, 0.5713967051423308d, (-0.1512028011321867d), false);
    }

    @Test
    public void test12970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12970");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation11 = rotation10.revert();
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 10.618890631312926d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyInverseTo(rotation26);
        double double28 = rotation20.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation20.applyTo(vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str41 = rotationOrder40.toString();
        java.lang.String str42 = rotationOrder40.toString();
        double[] doubleArray43 = rotation20.getAngles(rotationOrder40);
        java.lang.String str44 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder40.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, 2.009786123187427d, 0.5224674736269327d, 0.13599489604735257d);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder40.getA2();
        double[] doubleArray53 = rotation14.getAngles(rotationOrder40);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.7683919425686428d) + "'", double28 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "XYX" + "'", str41, "XYX");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XYX" + "'", str42, "XYX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "XYX" + "'", str44, "XYX");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[2.486764802167917, 2.526619781588924, -0.5081962001248905]");
    }

    @Test
    public void test12971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12971");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation13.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation13.applyTo(rotation40);
        double[][] doubleArray42 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) doubleArray42);
        java.lang.String str44 = notARotationMatrixException43.toString();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: XYX" + "'", str44, "org.apache.commons.math.geometry.NotARotationMatrixException: XYX");
    }

    @Test
    public void test12972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12972");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.0186255278998044d, 0.2520878998432229d);
        double double3 = vector3D2.getX();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.4193240069314981d) + "'", double3 == (-0.4193240069314981d));
    }

    @Test
    public void test12973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12973");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D51.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D51.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyTo(rotation73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation73.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = null;
        double[] doubleArray77 = rotation73.getAngles(rotationOrder76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(1.7249356105587201d, vector3D78, 15.996213391787686d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((-0.5819684858338714d), 2.275653189032593d);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D78.subtract(vector3D88);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[3.141592653589793, 0.010518226214947121, 3.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.8301452433388954d) + "'", double83 == (-0.8301452433388954d));
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test12974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12974");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(44.73431728565376d, vector3D3);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D11);
        double double16 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(0.46630897150381445d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.negate();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.5707963267948966d + "'", double16 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test12975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12975");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation13.getAxis();
        double double15 = vector3D14.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.09138363287001147d, 0.9232154062269446d, 1.1071487177940904d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D14.subtract(100.0022140464598d, vector3D20);
        double double22 = vector3D21.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9999999999999999d + "'", double15 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.6639523875248166d) + "'", double22 == (-1.6639523875248166d));
    }

    @Test
    public void test12976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12976");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.8659616593396997d, (-2.404412423387672d), 1.4329119109954416d);
    }

    @Test
    public void test12977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12977");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder28.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test12978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12978");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        java.lang.String str19 = notARotationMatrixException18.getPattern();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray28 = rotation27.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException38.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.String str44 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        notARotationMatrixException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        notARotationMatrixException30.addSuppressed((java.lang.Throwable) notARotationMatrixException36);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException30);
        java.lang.String str49 = notARotationMatrixException30.getPattern();
        java.lang.Throwable[] throwableArray50 = notARotationMatrixException30.getSuppressed();
        java.lang.String str51 = notARotationMatrixException30.getPattern();
        java.lang.Object[] objArray52 = notARotationMatrixException30.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException53 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray52);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
    }

    @Test
    public void test12979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12979");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double3 = vector3D2.getY();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D2, 1.5707963267948963d);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        double[] doubleArray10 = rotation5.getAngles(rotationOrder7);
        double double11 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        double double25 = rotation17.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation17.applyTo(vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str38 = rotationOrder37.toString();
        java.lang.String str39 = rotationOrder37.toString();
        double[] doubleArray40 = rotation17.getAngles(rotationOrder37);
        java.lang.String str41 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (short) 100, 10.0d, (-0.2551713383813414d));
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder37.getA2();
        java.lang.String str48 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder37.getA1();
        double[] doubleArray52 = rotation5.getAngles(rotationOrder37);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.42487699275774343d + "'", double3 == 0.42487699275774343d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.38468101661851206d + "'", double6 == 0.38468101661851206d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[2.8986555041307933, 1.3892807489199688, -2.095122594958829]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5116251420385008d + "'", double11 == 0.5116251420385008d);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.7683919425686428d) + "'", double25 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "XYX" + "'", str38, "XYX");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "XYX" + "'", str39, "XYX");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "XYX" + "'", str41, "XYX");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "XYX" + "'", str48, "XYX");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.534107867627777, 1.0198185332207665, 0.28139730988535633]");
    }

    @Test
    public void test12980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12980");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation4.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        double[][] doubleArray66 = rotation65.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, 0.5442460378020506d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray66);
    }

    @Test
    public void test12981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12981");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str28 = notARotationMatrixException5.getPattern();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException50.getSuppressed();
        notARotationMatrixException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException58.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.Object[] objArray68 = cardanEulerSingularityException58.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray72 = cardanEulerSingularityException71.getArguments();
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException71.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray76 = cardanEulerSingularityException75.getArguments();
        java.lang.String str77 = cardanEulerSingularityException75.getPattern();
        cardanEulerSingularityException71.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        java.lang.Object[] objArray79 = cardanEulerSingularityException75.getArguments();
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException75.getSuppressed();
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException75.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException82 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray81);
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) notARotationMatrixException82);
        java.lang.String str84 = notARotationMatrixException82.getPattern();
        java.lang.String str85 = notARotationMatrixException82.getPattern();
        java.lang.Object[] objArray86 = notARotationMatrixException82.getArguments();
        java.lang.Object[] objArray87 = notARotationMatrixException82.getArguments();
        java.lang.Throwable[] throwableArray88 = notARotationMatrixException82.getSuppressed();
        java.lang.Throwable[] throwableArray89 = notARotationMatrixException82.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Euler angles singularity" + "'", str77, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str84, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str85, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test12982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12982");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9451557939522999d, (-3.456634865158842d), (-0.07564981465116254d), 0.8775825618903728d, false);
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9451557939522999d + "'", double6 == 0.9451557939522999d);
    }

    @Test
    public void test12983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12983");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.5960187205335067d), 232.2327623749598d, 1.4004193839319914d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test12984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12984");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D22);
        double double53 = vector3D22.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D22.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
    }

    @Test
    public void test12985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12985");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.0d), (-9.617943898316641E-4d), (-0.031224596960255053d), 0.9922854762075431d, true);
    }

    @Test
    public void test12986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12986");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.1636155811153862d, (-4.212430843250595d), 650.821046075453d, 1.5501807665642404d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str9 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.negate();
        double double40 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D14, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D10, (-0.8414709848078965d), vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D10.orthogonal();
        double double43 = vector3D42.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation5.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.normalize();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "YXZ" + "'", str9, "YXZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XZX" + "'", str13, "XZX");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2.0d + "'", double40 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 3.141592653589793d + "'", double43 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test12987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12987");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.applyTo(vector3D19);
        double[][] doubleArray21 = rotation17.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray21);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        notARotationMatrixException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) notARotationMatrixException23);
        java.lang.Throwable[] throwableArray29 = notARotationMatrixException23.getSuppressed();
        java.lang.Throwable[] throwableArray30 = notARotationMatrixException23.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) throwableArray30);
        java.lang.Object[] objArray32 = notARotationMatrixException31.getArguments();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
    }

    @Test
    public void test12988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12988");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        double double14 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.5629528985411225d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(2.1475455860530537d, vector3D21);
        double double23 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D34.subtract((double) 0, vector3D39);
        double double41 = vector3D40.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D40.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((-0.02347577466130089d), vector3D24, (-0.9902124943143233d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5153978362128364d + "'", double23 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
    }

    @Test
    public void test12989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12989");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        double double33 = rotation8.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        double[] doubleArray36 = rotation8.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation8.getAxis();
        double double38 = rotation8.getQ1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(0.24893698743024015d, (double) 0, (double) 1L, 2.356194490192345d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation8.applyInverseTo(rotation44);
        double double46 = rotation44.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.6502970659532881d) + "'", double33 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-2.942186120029216, -0.06191210684245344, 1.4191356246734994]");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.04145438869418405d + "'", double38 == 0.04145438869418405d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.38884839623712686d + "'", double46 == 0.38884839623712686d);
    }

    @Test
    public void test12990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12990");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.4073364259823062d), 0.7675707508815894d, (-1.4150502197785468d), 0.1636155811153862d, true);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.8480465435753188d) + "'", double6 == (-0.8480465435753188d));
    }

    @Test
    public void test12991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12991");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray7);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test12992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12992");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str4 = cardanEulerSingularityException3.getPattern();
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYZ", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.String str19 = cardanEulerSingularityException17.getPattern();
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException17);
        java.lang.Object[] objArray21 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray21);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Object[] objArray27 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException25.getSuppressed();
        notARotationMatrixException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        notARotationMatrixException9.addSuppressed((java.lang.Throwable) notARotationMatrixException23);
        java.lang.String str31 = notARotationMatrixException9.getPattern();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: XYZ" + "'", str31, "org.apache.commons.math.geometry.NotARotationMatrixException: XYZ");
    }

    @Test
    public void test12993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12993");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract(0.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D75.subtract(1.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.subtract(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D63, vector3D65, vector3D68, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D63.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation11.applyTo(vector3D94);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test12994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12994");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.3456649064771664d, (-378.71766086458643d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(0.5033082423383954d, 0.3494625806709468d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D6);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test12995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12995");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        double double11 = vector3D4.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D4.subtract((-0.2551713383813414d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D17.scalarMultiply((-0.03563598374487637d));
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        double double26 = vector3D25.getAlpha();
        double double27 = vector3D25.getY();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((-0.8348312433510422d), 0.0d, 2.060217686612772d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D25.add(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.2152515705638135d, vector3D21, (-0.7683919425686427d), vector3D25);
        double double34 = vector3D25.getX();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XZX" + "'", str15, "XZX");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.8414709848078965d + "'", double27 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5403023058681398d + "'", double34 == 0.5403023058681398d);
    }

    @Test
    public void test12996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12996");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        double double59 = vector3D56.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D56.orthogonal();
        double double61 = org.apache.commons.math.geometry.Vector3D.angle(vector3D52, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D52.scalarMultiply(2.2066895680505194d);
        java.lang.Class<?> wildcardClass64 = vector3D63.getClass();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3.141592653589793d + "'", double61 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test12997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12997");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation13.applyTo(rotation25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        double double41 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation13.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation13.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation6.applyTo(rotation62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.subtract(1.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.subtract(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation62.applyTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation((double) '#', (double) 10.0f, (double) (short) 100, 100.0d, true);
        double double88 = rotation87.getQ1();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation62.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation62.revert();
        double double91 = rotation62.getQ0();
        double[][] doubleArray92 = rotation62.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXZ", (java.lang.Object[]) doubleArray92);
        java.lang.Class<?> wildcardClass94 = notARotationMatrixException93.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.06847869573979007d + "'", double88 == 0.06847869573979007d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-10.53200198742562d) + "'", double91 == (-10.53200198742562d));
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test12998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12998");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D24, 0.39865892577064643d);
        double double59 = rotation58.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D63);
        double double70 = vector3D63.getY();
        double double71 = vector3D63.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D63);
        double double73 = vector3D72.getAlpha();
        double double74 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation58.applyTo(vector3D72);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test12999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12999");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        double double56 = rotation55.getAngle();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 788.3701330754276d + "'", double57 == 788.3701330754276d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-524.7609754926534d) + "'", double58 == (-524.7609754926534d));
    }

    @Test
    public void test13000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test13000");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.1934112408002968d), (-2.0d), 0.0d, 0.15135620392549756d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray15 = rotation14.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation14.applyTo(vector3D18);
        double double22 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (double) 100, 0.0d, (double) (short) -1, true);
        double double29 = rotation28.getQ0();
        double double30 = rotation28.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation43.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        double[][] doubleArray48 = rotation43.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray48, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation56);
        double double58 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation28.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation14.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation5.applyTo(rotation51);
        double double62 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str69 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, 0.0d, 0.0d, 0.0d);
        double double75 = rotation74.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation5.applyInverseTo(rotation74);
        double[][] doubleArray77 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(doubleArray77, (-9.927305663880512d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.0955424909088009d) + "'", double22 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZYZ" + "'", str53, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.7683919425686427d) + "'", double58 == (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.095984644627102d) + "'", double62 == (-0.095984644627102d));
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "XYZ" + "'", str69, "XYZ");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(doubleArray77);
    }
}

