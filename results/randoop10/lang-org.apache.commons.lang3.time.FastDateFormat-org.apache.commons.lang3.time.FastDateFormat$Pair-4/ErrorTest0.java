import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test001");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.lang.String str10 = locale7.getCountry();
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone11.observesDaylightTime();
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11, locale15);
        boolean boolean18 = locale15.hasExtensions();
        boolean boolean19 = locale15.hasExtensions();
        java.lang.String str20 = locale7.getDisplayCountry(locale15);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar17", (calendar9.compareTo(calendar17) == 0) == calendar9.equals(calendar17));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test002");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone34 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat35 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone34);
        java.lang.String str36 = fastDateFormat35.getPattern();
        java.lang.String str38 = fastDateFormat35.format(1645513660686L);
        java.util.Locale locale39 = java.util.Locale.ITALIAN;
        boolean boolean40 = fastDateFormat35.equals((java.lang.Object) locale39);
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(timeZone32, locale39);
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat43 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone32, locale42);
        calendar6.setTimeZone(timeZone32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar41", (calendar26.compareTo(calendar41) == 0) == calendar26.equals(calendar41));
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test003");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Iterator<java.util.Locale> localeItor76 = localeList56.iterator();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test004");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        java.util.Locale locale25 = new java.util.Locale("Japanisch", "\u5354\u8abf\u4e16\u754c\u6642\u9593", "und");
        java.lang.String str26 = locale25.getCountry();
        java.lang.String str27 = timeZone11.getDisplayName(locale25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test005");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder9 = builder0.setWeekDate(16, 3, (int) (byte) 0);
        java.util.Calendar.Builder builder14 = builder9.setTimeOfDay(1970, 124, 4, (int) (short) 10);
        java.util.Calendar.Builder builder15 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder19 = builder15.setWeekDate(16, 3, 100);
        java.util.Calendar.Builder builder23 = builder15.setTimeOfDay((int) (byte) 100, 32770, 12);
        java.util.Calendar.Builder builder25 = builder23.setLenient(false);
        int[] intArray26 = new int[] {};
        java.util.Calendar.Builder builder27 = builder25.setFields(intArray26);
        java.util.Calendar.Builder builder28 = builder9.setFields(intArray26);
        java.util.TimeZone timeZone30 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone30);
        java.lang.String str32 = fastDateFormat31.getPattern();
        java.lang.String str34 = fastDateFormat31.format(1645513660686L);
        java.util.Date date35 = new java.util.Date();
        int int36 = date35.getSeconds();
        java.lang.String str37 = fastDateFormat31.format(date35);
        java.lang.String str39 = fastDateFormat31.format((long) 32769);
        java.util.TimeZone timeZone40 = fastDateFormat31.getTimeZone();
        java.util.TimeZone.setDefault(timeZone40);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(timeZone40);
        timeZone40.setRawOffset(1);
        java.util.Locale locale45 = java.util.Locale.GERMANY;
        java.util.Locale locale47 = new java.util.Locale("Chinese");
        java.lang.String str48 = locale45.getDisplayLanguage(locale47);
        java.lang.String str49 = locale45.toLanguageTag();
        java.util.Calendar calendar50 = java.util.Calendar.getInstance(timeZone40, locale45);
        java.util.Calendar.Builder builder51 = builder28.setTimeZone(timeZone40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar42 and calendar50", (calendar42.compareTo(calendar50) == 0) == calendar42.equals(calendar50));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test006");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int2 = calendar1.getWeeksInWeekYear();
        int int3 = calendar1.getWeeksInWeekYear();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        boolean boolean6 = timeZone4.hasSameRules(timeZone5);
        boolean boolean7 = timeZone4.observesDaylightTime();
        java.util.Locale locale8 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet9 = locale8.getUnicodeLocaleAttributes();
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone4, locale8);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone4);
        calendar1.setTimeZone(timeZone4);
        java.lang.String str13 = timeZone4.getDisplayName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar1 and calendar11", (calendar1.compareTo(calendar11) == 0) == calendar1.equals(calendar11));
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test007");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone1.hasSameRules(timeZone2);
        java.util.TimeZone.setDefault(timeZone2);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone2);
        java.util.TimeZone timeZone9 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int10 = timeZone9.getRawOffset();
        calendar7.setTimeZone(timeZone9);
        java.util.Locale locale13 = new java.util.Locale("Chinese");
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale13);
        java.lang.String str15 = locale13.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat16 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, timeZone9, locale13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar14", (calendar7.compareTo(calendar14) == 0) == calendar7.equals(calendar14));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test008");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        java.util.Locale locale3 = java.util.Locale.getDefault();
        java.lang.String str4 = locale3.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale3);
        java.util.Locale.setDefault(category0, locale3);
        java.util.Locale locale7 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet8 = locale7.getUnicodeLocaleAttributes();
        java.lang.String str9 = locale7.getISO3Country();
        java.lang.String str10 = locale7.getDisplayCountry();
        java.lang.String str11 = locale7.getDisplayVariant();
        java.util.Locale.setDefault(category0, locale7);
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat16 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone15);
        java.lang.String str17 = fastDateFormat16.getPattern();
        java.lang.String str19 = fastDateFormat16.format(1645513660686L);
        java.util.Locale locale20 = java.util.Locale.ITALIAN;
        boolean boolean21 = fastDateFormat16.equals((java.lang.Object) locale20);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone13, locale20);
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.lang.String str25 = locale20.getDisplayVariant(locale23);
        java.lang.String str26 = locale20.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray27 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList28 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList28, languageRangeArray27);
        java.util.Locale locale30 = java.util.Locale.GERMAN;
        java.util.Locale locale31 = java.util.Locale.FRANCE;
        boolean boolean32 = locale31.hasExtensions();
        java.util.Locale locale33 = java.util.Locale.FRANCE;
        java.util.Locale locale34 = java.util.Locale.CHINESE;
        java.lang.String str35 = locale34.getLanguage();
        java.util.Locale[] localeArray36 = new java.util.Locale[] { locale30, locale31, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList37 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList37, localeArray36);
        java.util.Locale.FilteringMode filteringMode39 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList40 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList28, (java.util.Collection<java.util.Locale>) localeList37, filteringMode39);
        java.util.Spliterator<java.util.Locale> localeSpliterator41 = localeList40.spliterator();
        java.util.Iterator<java.util.Locale> localeItor42 = localeList40.iterator();
        java.util.Locale locale43 = java.util.Locale.ROOT;
        boolean boolean44 = localeList40.remove((java.lang.Object) locale43);
        java.lang.String str45 = locale43.getISO3Country();
        java.lang.String str46 = locale20.getDisplayVariant(locale43);
        java.util.Locale.setDefault(category0, locale20);
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        boolean boolean50 = timeZone48.hasSameRules(timeZone49);
        boolean boolean51 = timeZone48.observesDaylightTime();
        java.util.Locale locale52 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet53 = locale52.getUnicodeLocaleAttributes();
        java.util.Calendar calendar54 = java.util.Calendar.getInstance(timeZone48, locale52);
        java.lang.String str55 = locale52.getDisplayVariant();
        java.lang.String str56 = locale52.getDisplayLanguage();
        java.util.Locale.setDefault(category0, locale52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar54", (calendar22.compareTo(calendar54) == 0) == calendar22.equals(calendar54));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test009");
        java.util.Locale locale1 = new java.util.Locale("Chinese");
        java.util.Locale locale3 = new java.util.Locale("Chinese");
        java.util.Calendar calendar4 = java.util.Calendar.getInstance(locale3);
        java.lang.String str5 = locale1.getDisplayVariant(locale3);
        java.lang.String str6 = locale3.getDisplayName();
        java.util.Locale locale7 = java.util.Locale.GERMANY;
        java.util.Locale locale9 = new java.util.Locale("Chinese");
        java.lang.String str10 = locale7.getDisplayLanguage(locale9);
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        boolean boolean13 = locale11.hasExtensions();
        java.lang.String str14 = locale11.getDisplayCountry();
        java.lang.String str15 = locale11.getISO3Language();
        java.util.Locale locale17 = java.util.Locale.getDefault();
        java.lang.String str18 = locale17.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale17);
        java.lang.String str20 = locale11.getDisplayName(locale17);
        java.util.Locale.setDefault(locale11);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone24);
        java.lang.String str26 = fastDateFormat25.getPattern();
        java.lang.String str28 = fastDateFormat25.format(1645513660686L);
        java.util.Locale locale29 = java.util.Locale.ITALIAN;
        boolean boolean30 = fastDateFormat25.equals((java.lang.Object) locale29);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone22, locale29);
        java.util.Locale locale32 = java.util.Locale.FRANCE;
        boolean boolean33 = locale32.hasExtensions();
        java.lang.String str34 = locale29.getDisplayVariant(locale32);
        java.lang.String str35 = locale29.getDisplayScript();
        java.lang.String str36 = locale11.getDisplayCountry(locale29);
        java.lang.String str37 = locale7.getDisplayCountry(locale11);
        java.lang.String str38 = locale3.getDisplayName(locale11);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar4 and calendar31", (calendar4.compareTo(calendar31) == 0) == calendar4.equals(calendar31));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test010");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList1 = java.util.Locale.LanguageRange.parse("TW");
        java.util.Locale locale2 = java.util.Locale.ITALY;
        java.util.Locale locale3 = java.util.Locale.CHINESE;
        java.util.Calendar calendar4 = java.util.Calendar.getInstance(locale3);
        java.util.Locale locale5 = java.util.Locale.FRANCE;
        java.util.Locale locale6 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        boolean boolean9 = locale7.hasExtensions();
        java.lang.String str10 = locale6.getDisplayVariant(locale7);
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.getDefault();
        java.util.Locale locale13 = java.util.Locale.FRANCE;
        boolean boolean14 = locale13.hasExtensions();
        java.util.Locale locale15 = java.util.Locale.CHINESE;
        java.lang.String str16 = locale15.getLanguage();
        boolean boolean17 = locale15.hasExtensions();
        java.lang.String str18 = locale15.getDisplayCountry();
        java.lang.String str19 = locale15.getDisplayLanguage();
        java.lang.String str20 = locale15.getLanguage();
        java.util.Locale locale24 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale24.getDisplayScript(locale25);
        java.util.Locale locale27 = java.util.Locale.FRANCE;
        boolean boolean28 = locale27.hasExtensions();
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.util.Locale locale30 = java.util.Locale.ITALIAN;
        java.util.Locale locale31 = java.util.Locale.US;
        java.util.Locale locale32 = java.util.Locale.US;
        java.util.Locale locale36 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale37 = java.util.Locale.ROOT;
        java.lang.String str38 = locale36.getDisplayScript(locale37);
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.GERMAN;
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.ITALY;
        java.util.Locale locale43 = java.util.Locale.getDefault();
        java.util.Locale locale47 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale48 = java.util.Locale.CHINESE;
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(locale48);
        java.util.Locale locale50 = java.util.Locale.US;
        java.util.Locale locale51 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale52 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale52.getDisplayVariant(locale53);
        java.util.Locale[] localeArray57 = new java.util.Locale[] { locale2, locale3, locale5, locale7, locale11, locale12, locale13, locale15, locale25, locale27, locale29, locale30, locale31, locale32, locale37, locale39, locale40, locale41, locale42, locale43, locale47, locale48, locale50, locale51, locale52 };
        java.util.ArrayList<java.util.Locale> localeList58 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList58, localeArray57);
        boolean boolean60 = localeList58.isEmpty();
        java.util.Locale locale62 = localeList58.get((int) (short) 0);
        java.util.TimeZone timeZone64 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat65 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone64);
        java.lang.String str66 = fastDateFormat65.getPattern();
        java.lang.String str68 = fastDateFormat65.format(1645513660686L);
        java.util.Date date69 = new java.util.Date();
        int int70 = date69.getSeconds();
        java.lang.String str71 = fastDateFormat65.format(date69);
        java.lang.String str73 = fastDateFormat65.format((long) 32769);
        java.util.TimeZone timeZone74 = fastDateFormat65.getTimeZone();
        java.util.TimeZone.setDefault(timeZone74);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone74);
        int int77 = localeList58.indexOf((java.lang.Object) calendar76);
        java.util.Locale.LanguageRange[] languageRangeArray78 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList79 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList79, languageRangeArray78);
        java.util.Locale locale81 = java.util.Locale.GERMAN;
        java.util.Locale locale82 = java.util.Locale.FRANCE;
        boolean boolean83 = locale82.hasExtensions();
        java.util.Locale locale84 = java.util.Locale.FRANCE;
        java.util.Locale locale85 = java.util.Locale.CHINESE;
        java.lang.String str86 = locale85.getLanguage();
        java.util.Locale[] localeArray87 = new java.util.Locale[] { locale81, locale82, locale84, locale85 };
        java.util.ArrayList<java.util.Locale> localeList88 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList88, localeArray87);
        java.util.Locale.FilteringMode filteringMode90 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList91 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList79, (java.util.Collection<java.util.Locale>) localeList88, filteringMode90);
        boolean boolean92 = localeList58.remove((java.lang.Object) filteringMode90);
        java.util.List<java.util.Locale> localeList93 = java.util.Locale.filter(languageRangeList1, (java.util.Collection<java.util.Locale>) localeList58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar49 and calendar76", (calendar49.compareTo(calendar76) == 0) == calendar49.equals(calendar76));
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test011");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Calendar.Builder builder16 = builder12.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        timeZone26.setID("");
        timeZone26.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder35 = builder12.setTimeZone(timeZone26);
        java.util.TimeZone timeZone37 = java.util.TimeZone.getTimeZone("zh_CN");
        java.util.Calendar.Builder builder38 = builder35.setTimeZone(timeZone37);
        java.util.TimeZone timeZone40 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone40);
        java.lang.String str42 = fastDateFormat41.getPattern();
        java.lang.String str44 = fastDateFormat41.format(1645513660686L);
        java.util.Date date45 = new java.util.Date();
        int int46 = date45.getSeconds();
        java.lang.String str47 = fastDateFormat41.format(date45);
        java.lang.String str49 = fastDateFormat41.format((long) 32769);
        java.util.TimeZone timeZone50 = fastDateFormat41.getTimeZone();
        java.util.TimeZone.setDefault(timeZone50);
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone50);
        timeZone50.setRawOffset(1);
        java.util.Locale locale55 = java.util.Locale.GERMANY;
        java.util.Locale locale57 = new java.util.Locale("Chinese");
        java.lang.String str58 = locale55.getDisplayLanguage(locale57);
        java.lang.String str59 = locale55.toLanguageTag();
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone50, locale55);
        boolean boolean61 = timeZone37.hasSameRules(timeZone50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar52", (calendar23.compareTo(calendar52) == 0) == calendar23.equals(calendar52));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test012");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        java.lang.String str2 = locale1.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale1);
        java.lang.String str4 = fastDateFormat3.toString();
        java.util.Date date5 = new java.util.Date();
        int int6 = date5.getTimezoneOffset();
        date5.setMinutes(5);
        int int9 = date5.getSeconds();
        java.lang.String str10 = fastDateFormat3.format(date5);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone11.observesDaylightTime();
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11, locale15);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone11);
        calendar18.setMinimalDaysInFirstWeek(12);
        java.lang.String str21 = fastDateFormat3.format(calendar18);
        java.text.FieldPosition fieldPosition23 = new java.text.FieldPosition(7);
        boolean boolean24 = fastDateFormat3.equals((java.lang.Object) 7);
        boolean boolean25 = fastDateFormat3.getTimeZoneOverridesCalendar();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar18", (calendar17.compareTo(calendar18) == 0) == calendar17.equals(calendar18));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test013");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.lang.String str6 = fastDateFormat2.format(date4);
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(locale7);
        int int10 = calendar8.getActualMinimum((int) (byte) 0);
        java.lang.String str11 = fastDateFormat2.format((java.lang.Object) calendar8);
        java.util.Locale locale12 = java.util.Locale.ITALY;
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale13);
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        java.util.Locale locale16 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale16.getDisplayVariant(locale17);
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.getDefault();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        java.lang.String str28 = locale25.getDisplayCountry();
        java.lang.String str29 = locale25.getDisplayLanguage();
        java.lang.String str30 = locale25.getLanguage();
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        boolean boolean38 = locale37.hasExtensions();
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.util.Locale locale40 = java.util.Locale.ITALIAN;
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.US;
        java.util.Locale locale46 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale47 = java.util.Locale.ROOT;
        java.lang.String str48 = locale46.getDisplayScript(locale47);
        java.util.Locale locale49 = java.util.Locale.US;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.US;
        java.util.Locale locale52 = java.util.Locale.ITALY;
        java.util.Locale locale53 = java.util.Locale.getDefault();
        java.util.Locale locale57 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale58);
        java.util.Locale locale60 = java.util.Locale.US;
        java.util.Locale locale61 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale63 = java.util.Locale.CHINESE;
        java.lang.String str64 = locale63.getLanguage();
        boolean boolean65 = locale63.hasExtensions();
        java.lang.String str66 = locale62.getDisplayVariant(locale63);
        java.util.Locale[] localeArray67 = new java.util.Locale[] { locale12, locale13, locale15, locale17, locale21, locale22, locale23, locale25, locale35, locale37, locale39, locale40, locale41, locale42, locale47, locale49, locale50, locale51, locale52, locale53, locale57, locale58, locale60, locale61, locale62 };
        java.util.ArrayList<java.util.Locale> localeList68 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList68, localeArray67);
        boolean boolean70 = localeList68.isEmpty();
        java.util.Locale locale72 = localeList68.get((int) (short) 0);
        java.util.TimeZone timeZone74 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone74);
        java.lang.String str76 = fastDateFormat75.getPattern();
        java.lang.String str78 = fastDateFormat75.format(1645513660686L);
        java.util.Date date79 = new java.util.Date();
        int int80 = date79.getSeconds();
        java.lang.String str81 = fastDateFormat75.format(date79);
        java.lang.String str83 = fastDateFormat75.format((long) 32769);
        java.util.TimeZone timeZone84 = fastDateFormat75.getTimeZone();
        java.util.TimeZone.setDefault(timeZone84);
        java.util.Calendar calendar86 = java.util.Calendar.getInstance(timeZone84);
        int int87 = localeList68.indexOf((java.lang.Object) calendar86);
        calendar86.setFirstDayOfWeek(42);
        java.lang.String str90 = fastDateFormat2.format(calendar86);
        java.util.Date date91 = calendar86.getTime();
        java.lang.Object obj92 = date91.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar86", (calendar8.compareTo(calendar86) == 0) == calendar8.equals(calendar86));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test014");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.lang.StringBuffer stringBuffer87 = null;
        java.lang.StringBuffer stringBuffer88 = fastDateFormat2.format((long) 28, stringBuffer87);
        java.util.TimeZone timeZone89 = fastDateFormat2.getTimeZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test015");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        java.lang.String str2 = locale1.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale1);
        java.lang.String str4 = fastDateFormat3.toString();
        java.util.Date date5 = new java.util.Date();
        int int6 = date5.getTimezoneOffset();
        date5.setMinutes(5);
        int int9 = date5.getSeconds();
        java.lang.String str10 = fastDateFormat3.format(date5);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone11.observesDaylightTime();
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11, locale15);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone11);
        calendar18.setMinimalDaysInFirstWeek(12);
        java.lang.String str21 = fastDateFormat3.format(calendar18);
        java.text.FieldPosition fieldPosition23 = new java.text.FieldPosition(7);
        boolean boolean24 = fastDateFormat3.equals((java.lang.Object) 7);
        java.util.TimeZone timeZone27 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat28 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone27);
        java.lang.String str29 = fastDateFormat28.getPattern();
        java.text.ParsePosition parsePosition32 = new java.text.ParsePosition(16);
        parsePosition32.setIndex(10);
        java.lang.Object obj35 = fastDateFormat28.parseObject("22 Feb 2022 07:07:40 GMT", parsePosition32);
        java.lang.String str36 = parsePosition32.toString();
        parsePosition32.setIndex((int) '4');
        java.lang.String str39 = parsePosition32.toString();
        parsePosition32.setIndex(18);
        int int42 = parsePosition32.getIndex();
        java.lang.Object obj43 = fastDateFormat3.parseObject("java.util.GregorianCalendar[time=1645513678219,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"7:07:47 AM UTC\",offset=1,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=4,ERA=1,YEAR=2022,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=53,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=7,HOUR_OF_DAY=7,MINUTE=7,SECOND=58,MILLISECOND=220,ZONE_OFFSET=1,DST_OFFSET=0]", parsePosition32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar18", (calendar17.compareTo(calendar18) == 0) == calendar17.equals(calendar18));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test016");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int12 = timeZone1.getOffset(1645513660365L);
        int int14 = timeZone1.getOffset((long) 22);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        boolean boolean18 = timeZone16.hasSameRules(timeZone17);
        boolean boolean19 = timeZone15.hasSameRules(timeZone16);
        java.lang.String str20 = timeZone16.getID();
        boolean boolean21 = timeZone1.hasSameRules(timeZone16);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone24);
        java.lang.String str26 = fastDateFormat25.getPattern();
        java.lang.String str28 = fastDateFormat25.format(1645513660686L);
        java.util.Locale locale29 = java.util.Locale.ITALIAN;
        boolean boolean30 = fastDateFormat25.equals((java.lang.Object) locale29);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone22, locale29);
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(timeZone16, locale29);
        java.util.Locale locale36 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale37 = java.util.Locale.ROOT;
        java.lang.String str38 = locale36.getDisplayScript(locale37);
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(locale36);
        int int40 = calendar39.getWeekYear();
        java.time.Instant instant41 = calendar39.toInstant();
        int int43 = calendar39.getActualMaximum(12);
        calendar39.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone47 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat48 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone47);
        java.lang.String str49 = fastDateFormat48.getPattern();
        java.lang.String str51 = fastDateFormat48.format(1645513660686L);
        java.util.Date date52 = new java.util.Date();
        int int53 = date52.getSeconds();
        java.lang.String str54 = fastDateFormat48.format(date52);
        java.lang.String str56 = fastDateFormat48.format((long) 32769);
        java.util.TimeZone timeZone57 = fastDateFormat48.getTimeZone();
        java.util.TimeZone.setDefault(timeZone57);
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(timeZone57);
        timeZone57.setRawOffset(4);
        calendar39.setTimeZone(timeZone57);
        boolean boolean63 = timeZone16.hasSameRules(timeZone57);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar31 and calendar39", (calendar31.compareTo(calendar39) == 0) == calendar31.equals(calendar39));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test017");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        java.util.Locale locale25 = new java.util.Locale("French (Canada)", "", "\u4e2d\u6587\u4e2d\u570b)");
        java.lang.String str26 = locale16.getDisplayScript(locale25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test018");
        java.util.Locale locale0 = java.util.Locale.GERMANY;
        java.util.Locale locale2 = new java.util.Locale("Chinese");
        java.lang.String str3 = locale0.getDisplayLanguage(locale2);
        java.util.Locale locale4 = java.util.Locale.CHINESE;
        java.lang.String str5 = locale4.getLanguage();
        boolean boolean6 = locale4.hasExtensions();
        java.lang.String str7 = locale4.getDisplayCountry();
        java.lang.String str8 = locale4.getISO3Language();
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.lang.String str11 = locale10.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale10);
        java.lang.String str13 = locale4.getDisplayName(locale10);
        java.util.Locale.setDefault(locale4);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.Locale locale22 = java.util.Locale.ITALIAN;
        boolean boolean23 = fastDateFormat18.equals((java.lang.Object) locale22);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone15, locale22);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.lang.String str27 = locale22.getDisplayVariant(locale25);
        java.lang.String str28 = locale22.getDisplayScript();
        java.lang.String str29 = locale4.getDisplayCountry(locale22);
        java.lang.String str30 = locale0.getDisplayCountry(locale4);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(locale4);
        java.lang.String str32 = locale4.getDisplayVariant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar24 and calendar31", (calendar24.compareTo(calendar31) == 0) == calendar24.equals(calendar31));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test019");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        boolean boolean5 = timeZone3.hasSameRules(timeZone4);
        boolean boolean6 = timeZone2.hasSameRules(timeZone3);
        timeZone2.setID("\u4e2d\u6587\u53f0\u7063)");
        int int10 = timeZone2.getOffset(1645513548538L);
        boolean boolean11 = timeZone2.observesDaylightTime();
        java.util.Locale locale14 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale14);
        java.util.Locale locale16 = java.util.Locale.CANADA;
        java.lang.String str17 = locale14.getDisplayName(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone2, locale16);
        java.util.TimeZone timeZone21 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute22 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray23 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList24 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList24, languageRangeArray23);
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.FRANCE;
        boolean boolean28 = locale27.hasExtensions();
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        java.util.Locale locale30 = java.util.Locale.CHINESE;
        java.lang.String str31 = locale30.getLanguage();
        java.util.Locale[] localeArray32 = new java.util.Locale[] { locale26, locale27, locale29, locale30 };
        java.util.ArrayList<java.util.Locale> localeList33 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList33, localeArray32);
        java.util.Locale.FilteringMode filteringMode35 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList36 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList24, (java.util.Collection<java.util.Locale>) localeList33, filteringMode35);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList38 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        java.util.Set<java.lang.String> strSet41 = locale39.getUnicodeLocaleAttributes();
        java.lang.String str42 = java.util.Locale.lookupTag(languageRangeList38, (java.util.Collection<java.lang.String>) strSet41);
        boolean boolean43 = localeList36.containsAll((java.util.Collection<java.lang.String>) strSet41);
        boolean boolean45 = localeList36.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator46 = localeList36.spliterator();
        java.util.Locale locale50 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale51 = java.util.Locale.ROOT;
        java.lang.String str52 = locale50.getDisplayScript(locale51);
        java.lang.String str53 = locale50.getISO3Language();
        boolean boolean54 = localeList36.add(locale50);
        boolean boolean55 = attribute22.equals((java.lang.Object) locale50);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat56 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone21, locale50);
        boolean boolean57 = timeZone2.hasSameRules(timeZone21);
        java.text.ParsePosition parsePosition59 = new java.text.ParsePosition(16);
        java.util.Locale locale60 = java.util.Locale.CHINESE;
        java.lang.String str61 = locale60.getLanguage();
        boolean boolean62 = locale60.hasExtensions();
        boolean boolean63 = parsePosition59.equals((java.lang.Object) locale60);
        java.util.Locale locale64 = locale60.stripExtensions();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat65 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (short) 0, timeZone21, locale60);
        java.util.TimeZone timeZone66 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone67 = java.util.TimeZone.getDefault();
        boolean boolean68 = timeZone66.hasSameRules(timeZone67);
        boolean boolean69 = timeZone66.observesDaylightTime();
        java.util.Locale locale70 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet71 = locale70.getUnicodeLocaleAttributes();
        java.util.Calendar calendar72 = java.util.Calendar.getInstance(timeZone66, locale70);
        boolean boolean73 = timeZone66.observesDaylightTime();
        timeZone66.setRawOffset(43);
        boolean boolean76 = fastDateFormat65.equals((java.lang.Object) timeZone66);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar72", (calendar18.compareTo(calendar72) == 0) == calendar18.equals(calendar72));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test020");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        java.util.Locale locale22 = java.util.Locale.ENGLISH;
        java.lang.String str23 = locale22.getLanguage();
        java.lang.String str24 = locale16.getDisplayName(locale22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test021");
        java.util.Locale locale0 = java.util.Locale.GERMANY;
        java.util.Locale locale2 = new java.util.Locale("Chinese");
        java.lang.String str3 = locale0.getDisplayLanguage(locale2);
        java.util.Locale locale4 = java.util.Locale.CHINESE;
        java.lang.String str5 = locale4.getLanguage();
        boolean boolean6 = locale4.hasExtensions();
        java.lang.String str7 = locale4.getDisplayCountry();
        java.lang.String str8 = locale4.getISO3Language();
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.lang.String str11 = locale10.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale10);
        java.lang.String str13 = locale4.getDisplayName(locale10);
        java.util.Locale.setDefault(locale4);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.Locale locale22 = java.util.Locale.ITALIAN;
        boolean boolean23 = fastDateFormat18.equals((java.lang.Object) locale22);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone15, locale22);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.lang.String str27 = locale22.getDisplayVariant(locale25);
        java.lang.String str28 = locale22.getDisplayScript();
        java.lang.String str29 = locale4.getDisplayCountry(locale22);
        java.lang.String str30 = locale0.getDisplayCountry(locale4);
        java.util.Set<java.lang.String> strSet31 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(locale4);
        java.util.Set<java.lang.Character> charSet33 = locale4.getExtensionKeys();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar24 and calendar32", (calendar24.compareTo(calendar32) == 0) == calendar24.equals(calendar32));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test022");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder11 = builder5.set(7, 28);
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Locale locale19 = java.util.Locale.ITALIAN;
        boolean boolean20 = fastDateFormat15.equals((java.lang.Object) locale19);
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone12, locale19);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone12);
        java.util.Calendar.Builder builder23 = builder5.setTimeZone(timeZone12);
        int int24 = timeZone12.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar21 and calendar22", (calendar21.compareTo(calendar22) == 0) == calendar21.equals(calendar22));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test023");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder4 = builder0.setWeekDate(16, 3, 100);
        java.util.Calendar.Builder builder8 = builder0.setTimeOfDay((int) (byte) 100, 32770, 12);
        java.util.Calendar.Builder builder12 = builder8.setDate(6, 23, 1);
        java.util.Calendar.Builder builder16 = builder12.setTimeOfDay(22, (int) (short) 10, 16);
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str20 = fastDateFormat19.getPattern();
        java.lang.String str22 = fastDateFormat19.format(1645513660686L);
        java.lang.String str24 = fastDateFormat19.format((long) 40);
        java.util.TimeZone timeZone25 = fastDateFormat19.getTimeZone();
        java.util.TimeZone timeZone26 = fastDateFormat19.getTimeZone();
        java.util.Calendar.Builder builder27 = builder16.setTimeZone(timeZone26);
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone30);
        java.lang.String str32 = fastDateFormat31.getPattern();
        java.lang.String str34 = fastDateFormat31.format(1645513660686L);
        java.util.Locale locale35 = java.util.Locale.ITALIAN;
        boolean boolean36 = fastDateFormat31.equals((java.lang.Object) locale35);
        java.util.Calendar calendar37 = java.util.Calendar.getInstance(timeZone28, locale35);
        java.util.TimeZone.setDefault(timeZone28);
        java.util.Calendar.Builder builder39 = builder16.setTimeZone(timeZone28);
        java.util.Calendar.Builder builder43 = builder16.setDate(2022, (int) (short) 100, 48);
        java.util.TimeZone timeZone45 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat46 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone45);
        java.lang.String str47 = fastDateFormat46.getPattern();
        java.lang.String str49 = fastDateFormat46.format(1645513660686L);
        java.util.Date date50 = new java.util.Date();
        int int51 = date50.getSeconds();
        java.lang.String str52 = fastDateFormat46.format(date50);
        java.lang.String str54 = fastDateFormat46.format((long) 32769);
        java.util.TimeZone timeZone55 = fastDateFormat46.getTimeZone();
        java.util.TimeZone.setDefault(timeZone55);
        java.util.Calendar calendar57 = java.util.Calendar.getInstance(timeZone55);
        timeZone55.setRawOffset(4);
        java.util.Calendar.Builder builder60 = builder43.setTimeZone(timeZone55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar37 and calendar57", (calendar37.compareTo(calendar57) == 0) == calendar37.equals(calendar57));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test024");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        java.lang.String str2 = locale1.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale1);
        java.lang.String str4 = fastDateFormat3.toString();
        java.util.Date date5 = new java.util.Date();
        int int6 = date5.getTimezoneOffset();
        date5.setMinutes(5);
        int int9 = date5.getSeconds();
        java.lang.String str10 = fastDateFormat3.format(date5);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone11.observesDaylightTime();
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11, locale15);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone11);
        calendar18.setMinimalDaysInFirstWeek(12);
        java.lang.String str21 = fastDateFormat3.format(calendar18);
        java.text.ParsePosition parsePosition24 = new java.text.ParsePosition(4);
        java.lang.Object obj25 = fastDateFormat3.parseObject("22 Feb 2022 07:08:05 GMT", parsePosition24);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar18", (calendar17.compareTo(calendar18) == 0) == calendar17.equals(calendar18));
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test025");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder11 = builder5.set(7, 28);
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Locale locale19 = java.util.Locale.ITALIAN;
        boolean boolean20 = fastDateFormat15.equals((java.lang.Object) locale19);
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone12, locale19);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone12);
        java.util.Calendar.Builder builder23 = builder5.setTimeZone(timeZone12);
        java.util.Calendar.Builder builder25 = builder5.setLenient(true);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar21 and calendar22", (calendar21.compareTo(calendar22) == 0) == calendar21.equals(calendar22));
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test026");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Calendar calendar4 = java.util.Calendar.getInstance(timeZone3);
        timeZone3.setID("zh_TW");
        java.util.Locale locale11 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale12 = java.util.Locale.ROOT;
        java.lang.String str13 = locale11.getDisplayScript(locale12);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale11);
        int int16 = calendar14.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone17 = calendar14.getTimeZone();
        java.util.Locale locale18 = java.util.Locale.GERMANY;
        java.util.Locale locale20 = new java.util.Locale("Chinese");
        java.lang.String str21 = locale18.getDisplayLanguage(locale20);
        java.lang.String str22 = locale18.getDisplayCountry();
        java.util.Set<java.lang.String> strSet23 = locale18.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone17, locale18);
        java.lang.String str25 = locale18.getISO3Country();
        java.util.Locale locale27 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat28 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale27);
        java.lang.String str29 = locale27.getISO3Country();
        java.util.Locale locale30 = java.util.Locale.CHINESE;
        java.lang.String str31 = locale30.getLanguage();
        boolean boolean32 = locale30.hasExtensions();
        java.lang.String str33 = locale30.getDisplayCountry();
        java.lang.String str34 = locale30.getDisplayLanguage();
        java.lang.String str35 = locale30.getLanguage();
        java.lang.String str36 = locale27.getDisplayVariant(locale30);
        java.text.FieldPosition fieldPosition38 = new java.text.FieldPosition(32770);
        int int39 = fieldPosition38.getBeginIndex();
        java.text.Format.Field field40 = fieldPosition38.getFieldAttribute();
        java.util.Locale.Builder builder41 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.lang.String str45 = locale44.getLanguage();
        boolean boolean46 = locale44.hasExtensions();
        java.lang.String str47 = locale43.getDisplayVariant(locale44);
        java.util.Locale.Builder builder48 = builder42.setLocale(locale43);
        java.util.Locale locale49 = builder48.build();
        java.util.Locale.Builder builder51 = builder48.addUnicodeLocaleAttribute("German");
        java.util.Locale.Builder builder54 = builder51.setExtension('a', "ita");
        java.util.Locale locale55 = builder54.build();
        boolean boolean56 = fieldPosition38.equals((java.lang.Object) locale55);
        java.lang.String str57 = locale55.getISO3Language();
        java.lang.String str58 = locale30.getDisplayVariant(locale55);
        java.lang.String str59 = locale18.getDisplayName(locale55);
        java.lang.String str60 = timeZone3.getDisplayName(locale55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar4 and calendar14", (calendar4.compareTo(calendar14) == 0) == calendar4.equals(calendar14));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test027");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        java.util.Calendar calendar3 = java.util.Calendar.getInstance(timeZone0);
        int int5 = calendar3.getActualMinimum(6);
        java.util.TimeZone timeZone7 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone7);
        java.lang.String str9 = fastDateFormat8.getPattern();
        java.lang.String str11 = fastDateFormat8.format(1645513660686L);
        java.util.TimeZone timeZone12 = fastDateFormat8.getTimeZone();
        java.lang.String str13 = timeZone12.getID();
        java.util.Locale locale14 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale15 = java.util.Locale.CHINESE;
        java.lang.String str16 = locale15.getLanguage();
        boolean boolean17 = locale15.hasExtensions();
        java.lang.String str18 = locale14.getDisplayVariant(locale15);
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone12, locale14);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(locale14);
        boolean boolean21 = calendar3.before((java.lang.Object) calendar20);
        calendar3.roll(0, 30);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar19 and calendar20", (calendar19.compareTo(calendar20) == 0) == calendar19.equals(calendar20));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test028");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Locale.LanguageRange[] languageRangeArray76 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList77 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList77, languageRangeArray76);
        java.util.Locale locale79 = java.util.Locale.GERMAN;
        java.util.Locale locale80 = java.util.Locale.FRANCE;
        boolean boolean81 = locale80.hasExtensions();
        java.util.Locale locale82 = java.util.Locale.FRANCE;
        java.util.Locale locale83 = java.util.Locale.CHINESE;
        java.lang.String str84 = locale83.getLanguage();
        java.util.Locale[] localeArray85 = new java.util.Locale[] { locale79, locale80, locale82, locale83 };
        java.util.ArrayList<java.util.Locale> localeList86 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList86, localeArray85);
        java.util.Locale.FilteringMode filteringMode88 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList89 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList77, (java.util.Collection<java.util.Locale>) localeList86, filteringMode88);
        boolean boolean90 = localeList56.remove((java.lang.Object) filteringMode88);
        boolean boolean92 = localeList56.remove((java.lang.Object) 100.0f);
        java.util.ListIterator<java.util.Locale> localeItor93 = localeList56.listIterator();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test029");
        java.util.Calendar calendar0 = java.util.Calendar.getInstance();
        long long1 = calendar0.getTimeInMillis();
        java.util.Locale locale2 = java.util.Locale.GERMANY;
        java.util.Locale locale4 = new java.util.Locale("Chinese");
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.util.Locale locale6 = java.util.Locale.CHINESE;
        java.lang.String str7 = locale6.getLanguage();
        boolean boolean8 = locale6.hasExtensions();
        java.lang.String str9 = locale6.getDisplayCountry();
        java.lang.String str10 = locale6.getISO3Language();
        java.util.Locale locale12 = java.util.Locale.getDefault();
        java.lang.String str13 = locale12.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale12);
        java.lang.String str15 = locale6.getDisplayName(locale12);
        java.util.Locale.setDefault(locale6);
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone19);
        java.lang.String str21 = fastDateFormat20.getPattern();
        java.lang.String str23 = fastDateFormat20.format(1645513660686L);
        java.util.Locale locale24 = java.util.Locale.ITALIAN;
        boolean boolean25 = fastDateFormat20.equals((java.lang.Object) locale24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone17, locale24);
        java.util.Locale locale27 = java.util.Locale.FRANCE;
        boolean boolean28 = locale27.hasExtensions();
        java.lang.String str29 = locale24.getDisplayVariant(locale27);
        java.lang.String str30 = locale24.getDisplayScript();
        java.lang.String str31 = locale6.getDisplayCountry(locale24);
        java.lang.String str32 = locale2.getDisplayCountry(locale6);
        java.util.Set<java.lang.String> strSet33 = locale6.getUnicodeLocaleAttributes();
        boolean boolean34 = calendar0.before((java.lang.Object) locale6);
        boolean boolean35 = locale6.hasExtensions();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar0 and calendar26", (calendar0.compareTo(calendar26) == 0) == calendar0.equals(calendar26));
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test030");
        java.util.Locale locale2 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale2);
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getTimezoneOffset();
        date6.setMinutes(5);
        boolean boolean10 = date4.after(date6);
        java.util.TimeZone timeZone12 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone12);
        java.lang.String str14 = fastDateFormat13.getPattern();
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        java.lang.String str17 = fastDateFormat13.format(date15);
        boolean boolean18 = date4.before(date15);
        java.lang.String str19 = fastDateFormat3.format(date4);
        java.util.TimeZone timeZone20 = fastDateFormat3.getTimeZone();
        java.util.Locale locale21 = java.util.Locale.ITALIAN;
        java.util.Locale locale24 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022", "GMT+00:00");
        java.lang.String str25 = locale21.getDisplayName(locale24);
        java.util.Set<java.lang.String> strSet26 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone20, locale21);
        java.util.Locale.Builder builder28 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder29 = builder28.clear();
        java.util.Locale locale30 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.lang.String str32 = locale31.getLanguage();
        boolean boolean33 = locale31.hasExtensions();
        java.lang.String str34 = locale30.getDisplayVariant(locale31);
        java.util.Locale.Builder builder35 = builder29.setLocale(locale30);
        java.util.Locale locale36 = builder35.build();
        java.util.Locale.Builder builder38 = builder35.addUnicodeLocaleAttribute("German");
        java.util.Locale locale39 = java.util.Locale.TAIWAN;
        java.util.Locale locale40 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str41 = locale39.getDisplayLanguage(locale40);
        java.util.Locale.Builder builder42 = builder35.setLocale(locale39);
        java.util.Locale.Builder builder44 = builder42.removeUnicodeLocaleAttribute("CAN");
        java.util.Locale locale45 = builder42.build();
        java.lang.String str46 = locale45.getDisplayVariant();
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale45);
        java.util.Calendar calendar48 = java.util.Calendar.getInstance(locale45);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(timeZone20, locale45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar27 and calendar47", (calendar27.compareTo(calendar47) == 0) == calendar27.equals(calendar47));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test031");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone0.hasSameRules(timeZone9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone0);
        java.util.Locale locale15 = java.util.Locale.ITALY;
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(locale16);
        java.util.Locale locale18 = java.util.Locale.FRANCE;
        java.util.Locale locale19 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        boolean boolean22 = locale20.hasExtensions();
        java.lang.String str23 = locale19.getDisplayVariant(locale20);
        java.util.Locale locale24 = java.util.Locale.GERMAN;
        java.util.Locale locale25 = java.util.Locale.getDefault();
        java.util.Locale locale26 = java.util.Locale.FRANCE;
        boolean boolean27 = locale26.hasExtensions();
        java.util.Locale locale28 = java.util.Locale.CHINESE;
        java.lang.String str29 = locale28.getLanguage();
        boolean boolean30 = locale28.hasExtensions();
        java.lang.String str31 = locale28.getDisplayCountry();
        java.lang.String str32 = locale28.getDisplayLanguage();
        java.lang.String str33 = locale28.getLanguage();
        java.util.Locale locale37 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale38 = java.util.Locale.ROOT;
        java.lang.String str39 = locale37.getDisplayScript(locale38);
        java.util.Locale locale40 = java.util.Locale.FRANCE;
        boolean boolean41 = locale40.hasExtensions();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.util.Locale locale43 = java.util.Locale.ITALIAN;
        java.util.Locale locale44 = java.util.Locale.US;
        java.util.Locale locale45 = java.util.Locale.US;
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale49.getDisplayScript(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.US;
        java.util.Locale locale55 = java.util.Locale.ITALY;
        java.util.Locale locale56 = java.util.Locale.getDefault();
        java.util.Locale locale60 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale61 = java.util.Locale.CHINESE;
        java.util.Calendar calendar62 = java.util.Calendar.getInstance(locale61);
        java.util.Locale locale63 = java.util.Locale.US;
        java.util.Locale locale64 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale65 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale66 = java.util.Locale.CHINESE;
        java.lang.String str67 = locale66.getLanguage();
        boolean boolean68 = locale66.hasExtensions();
        java.lang.String str69 = locale65.getDisplayVariant(locale66);
        java.util.Locale[] localeArray70 = new java.util.Locale[] { locale15, locale16, locale18, locale20, locale24, locale25, locale26, locale28, locale38, locale40, locale42, locale43, locale44, locale45, locale50, locale52, locale53, locale54, locale55, locale56, locale60, locale61, locale63, locale64, locale65 };
        java.util.ArrayList<java.util.Locale> localeList71 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList71, localeArray70);
        boolean boolean73 = localeList71.isEmpty();
        java.util.Locale locale75 = localeList71.get((int) (short) 0);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone0, locale75);
        java.time.Instant instant77 = calendar76.toInstant();
        int int78 = calendar76.getWeeksInWeekYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar14", (calendar6.compareTo(calendar14) == 0) == calendar6.equals(calendar14));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test032");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Calendar.Builder builder16 = builder12.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        timeZone26.setID("");
        timeZone26.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder35 = builder12.setTimeZone(timeZone26);
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        boolean boolean40 = locale38.hasExtensions();
        boolean boolean41 = parsePosition37.equals((java.lang.Object) locale38);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(locale38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale38);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale57.getDisplayVariant(locale58);
        java.util.Locale.setDefault(locale58);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone54, locale58);
        java.lang.String str64 = locale44.getDisplayLanguage(locale58);
        java.util.Locale locale65 = locale58.stripExtensions();
        java.lang.String str66 = locale38.getDisplayLanguage(locale65);
        java.lang.String str67 = locale65.getScript();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone26, locale65);
        java.util.Locale locale69 = java.util.Locale.ENGLISH;
        java.util.Locale locale70 = locale69.stripExtensions();
        java.lang.String str71 = timeZone26.getDisplayName(locale70);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar68", (calendar23.compareTo(calendar68) == 0) == calendar23.equals(calendar68));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test033");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Locale locale76 = java.util.Locale.CHINESE;
        java.lang.String str77 = locale76.getLanguage();
        boolean boolean78 = locale76.hasExtensions();
        java.lang.String str79 = locale76.getDisplayCountry();
        java.util.Set<java.lang.String> strSet80 = locale76.getUnicodeLocaleKeys();
        boolean boolean81 = localeList56.removeAll((java.util.Collection<java.lang.String>) strSet80);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test034");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.time.Instant instant81 = calendar78.toInstant();
        java.util.Date date82 = java.util.Date.from(instant81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test035");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Locale locale17 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale18 = java.util.Locale.ROOT;
        java.lang.String str19 = locale17.getDisplayScript(locale18);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(locale17);
        int int22 = calendar20.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone23 = calendar20.getTimeZone();
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale26 = new java.util.Locale("Chinese");
        java.lang.String str27 = locale24.getDisplayLanguage(locale26);
        java.lang.String str28 = locale24.getDisplayCountry();
        java.util.Set<java.lang.String> strSet29 = locale24.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat30 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone23, locale24);
        java.util.Calendar.Builder builder31 = builder0.setTimeZone(timeZone23);
        java.util.Locale locale32 = java.util.Locale.getDefault();
        java.util.Locale locale33 = null;
        java.lang.String str34 = locale32.getDisplayCountry(locale33);
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        boolean boolean37 = locale35.hasExtensions();
        java.lang.String str38 = locale35.getDisplayCountry();
        java.util.Set<java.lang.String> strSet39 = locale35.getUnicodeLocaleKeys();
        java.lang.String str40 = locale32.getDisplayLanguage(locale35);
        java.util.Locale locale41 = java.util.Locale.CHINESE;
        java.lang.String str42 = locale41.getLanguage();
        boolean boolean43 = locale41.hasExtensions();
        java.lang.String str44 = locale41.getDisplayCountry();
        java.lang.String str45 = locale41.getISO3Language();
        java.util.Locale locale47 = java.util.Locale.getDefault();
        java.lang.String str48 = locale47.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat49 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale47);
        java.lang.String str50 = locale41.getDisplayName(locale47);
        java.util.Locale.setDefault(locale41);
        java.util.TimeZone timeZone52 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone54 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat55 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone54);
        java.lang.String str56 = fastDateFormat55.getPattern();
        java.lang.String str58 = fastDateFormat55.format(1645513660686L);
        java.util.Locale locale59 = java.util.Locale.ITALIAN;
        boolean boolean60 = fastDateFormat55.equals((java.lang.Object) locale59);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone52, locale59);
        java.util.Locale locale62 = java.util.Locale.FRANCE;
        boolean boolean63 = locale62.hasExtensions();
        java.lang.String str64 = locale59.getDisplayVariant(locale62);
        java.lang.String str65 = locale59.getDisplayScript();
        java.lang.String str66 = locale41.getDisplayCountry(locale59);
        java.lang.String str67 = locale59.getCountry();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(locale59);
        java.util.Locale.setDefault(locale59);
        java.lang.String str70 = locale32.getDisplayScript(locale59);
        java.util.Calendar.Builder builder71 = builder0.setLocale(locale32);
        java.util.Locale.Builder builder72 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder73 = builder72.clear();
        java.util.Locale locale74 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale75 = java.util.Locale.CHINESE;
        java.lang.String str76 = locale75.getLanguage();
        boolean boolean77 = locale75.hasExtensions();
        java.lang.String str78 = locale74.getDisplayVariant(locale75);
        java.util.Locale.Builder builder79 = builder73.setLocale(locale74);
        java.util.Locale locale80 = builder79.build();
        java.util.Locale.Builder builder82 = builder79.addUnicodeLocaleAttribute("German");
        java.util.Locale.Builder builder83 = builder82.clear();
        java.util.Locale.Builder builder84 = builder82.clear();
        java.util.Locale.Builder builder86 = builder82.setLanguage("Italian");
        java.util.Locale locale87 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale88 = java.util.Locale.CHINESE;
        java.lang.String str89 = locale88.getLanguage();
        boolean boolean90 = locale88.hasExtensions();
        java.lang.String str91 = locale87.getDisplayVariant(locale88);
        java.util.Locale.setDefault(locale88);
        java.lang.String str93 = locale88.getDisplayLanguage();
        java.lang.String str94 = locale88.toLanguageTag();
        java.util.Locale.Builder builder95 = builder86.setLocale(locale88);
        java.util.Calendar.Builder builder96 = builder71.setLocale(locale88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar20 and calendar61", (calendar20.compareTo(calendar61) == 0) == calendar20.equals(calendar61));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test036");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        boolean boolean76 = localeList56.isEmpty();
        java.util.ListIterator<java.util.Locale> localeItor77 = localeList56.listIterator();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test037");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        int int77 = calendar74.getGreatestMinimum(5);
        java.util.Date date78 = calendar74.getTime();
        date78.setYear((int) (short) 10);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test038");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Date date86 = calendar84.getTime();
        calendar84.clear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test039");
        java.util.Locale locale0 = java.util.Locale.GERMANY;
        java.util.Locale locale2 = new java.util.Locale("Chinese");
        java.lang.String str3 = locale0.getDisplayLanguage(locale2);
        java.util.Locale locale4 = java.util.Locale.CHINESE;
        java.lang.String str5 = locale4.getLanguage();
        boolean boolean6 = locale4.hasExtensions();
        java.lang.String str7 = locale4.getDisplayCountry();
        java.lang.String str8 = locale4.getISO3Language();
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.lang.String str11 = locale10.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale10);
        java.lang.String str13 = locale4.getDisplayName(locale10);
        java.util.Locale.setDefault(locale4);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.Locale locale22 = java.util.Locale.ITALIAN;
        boolean boolean23 = fastDateFormat18.equals((java.lang.Object) locale22);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone15, locale22);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.lang.String str27 = locale22.getDisplayVariant(locale25);
        java.lang.String str28 = locale22.getDisplayScript();
        java.lang.String str29 = locale4.getDisplayCountry(locale22);
        java.lang.String str30 = locale0.getDisplayCountry(locale4);
        java.util.Set<java.lang.String> strSet31 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(locale4);
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(locale4);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar24 and calendar32", (calendar24.compareTo(calendar32) == 0) == calendar24.equals(calendar32));
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test040");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.Locale locale8 = java.util.Locale.ITALIAN;
        boolean boolean9 = fastDateFormat4.equals((java.lang.Object) locale8);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone1, locale8);
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.lang.String str13 = locale8.getDisplayVariant(locale11);
        java.lang.String str14 = locale8.getDisplayName();
        java.lang.String str15 = locale8.getISO3Language();
        java.util.Locale.setDefault(category0, locale8);
        java.util.Locale locale17 = java.util.Locale.TAIWAN;
        java.util.Locale locale18 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str19 = locale17.getDisplayLanguage(locale18);
        java.util.Locale locale20 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        boolean boolean23 = locale21.hasExtensions();
        java.lang.String str24 = locale20.getDisplayVariant(locale21);
        java.lang.String str25 = locale17.getDisplayLanguage(locale21);
        java.lang.String str26 = locale17.getDisplayVariant();
        java.lang.String str27 = locale17.getDisplayLanguage();
        java.util.Locale.setDefault(category0, locale17);
        java.util.Locale locale29 = java.util.Locale.getDefault(category0);
        java.util.Locale locale30 = java.util.Locale.TAIWAN;
        java.util.Locale locale31 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str32 = locale30.getDisplayLanguage(locale31);
        java.lang.String str33 = locale30.getLanguage();
        java.util.Locale locale35 = new java.util.Locale("Chinese");
        java.util.Locale locale36 = locale35.stripExtensions();
        java.lang.String str37 = locale30.getDisplayLanguage(locale35);
        java.util.Locale locale39 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute40 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean42 = attribute40.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale43 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.lang.String str45 = locale44.getLanguage();
        boolean boolean46 = locale44.hasExtensions();
        java.lang.String str47 = locale43.getDisplayVariant(locale44);
        java.util.Locale locale48 = locale43.stripExtensions();
        boolean boolean49 = attribute40.equals((java.lang.Object) locale48);
        java.lang.String str50 = locale39.getDisplayLanguage(locale48);
        java.lang.String str51 = locale30.getDisplayCountry(locale48);
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(locale30);
        java.lang.String str53 = locale29.getDisplayCountry(locale30);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar52", (calendar10.compareTo(calendar52) == 0) == calendar10.equals(calendar52));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test041");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Date date86 = calendar84.getTime();
        java.time.Instant instant87 = date86.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test042");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        timeZone11.setRawOffset(63);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test043");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone19.observesDaylightTime();
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet24 = locale23.getUnicodeLocaleAttributes();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone19, locale23);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone19);
        java.lang.String str27 = fastDateFormat2.format((java.lang.Object) calendar26);
        int int28 = calendar26.getWeeksInWeekYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar25", (calendar10.compareTo(calendar25) == 0) == calendar10.equals(calendar25));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test044");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int11 = timeZone1.getRawOffset();
        java.util.Locale locale15 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale15);
        int int20 = calendar18.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone21 = calendar18.getTimeZone();
        boolean boolean22 = timeZone1.hasSameRules(timeZone21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date24 = calendar23.getTime();
        int int25 = date24.getMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar23", (calendar18.compareTo(calendar23) == 0) == calendar18.equals(calendar23));
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test045");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone19.observesDaylightTime();
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet24 = locale23.getUnicodeLocaleAttributes();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone19, locale23);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone19);
        java.lang.String str27 = fastDateFormat2.format((java.lang.Object) calendar26);
        calendar26.setLenient(true);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar25", (calendar10.compareTo(calendar25) == 0) == calendar10.equals(calendar25));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test046");
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Date date7 = new java.util.Date();
        int int8 = date7.getSeconds();
        java.lang.String str9 = fastDateFormat3.format(date7);
        java.lang.String str11 = fastDateFormat3.format((long) 32769);
        java.util.TimeZone timeZone12 = fastDateFormat3.getTimeZone();
        java.util.TimeZone.setDefault(timeZone12);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone12);
        timeZone12.setRawOffset(1);
        java.util.Locale locale17 = java.util.Locale.GERMANY;
        java.util.Locale locale19 = new java.util.Locale("Chinese");
        java.lang.String str20 = locale17.getDisplayLanguage(locale19);
        java.lang.String str21 = locale17.toLanguageTag();
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone12, locale17);
        java.util.Locale locale25 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat26 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale25);
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.lang.String str28 = locale25.getDisplayName(locale27);
        java.util.Locale locale30 = new java.util.Locale("deu");
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone34 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat35 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone34);
        java.lang.String str36 = fastDateFormat35.getPattern();
        java.lang.String str38 = fastDateFormat35.format(1645513660686L);
        java.util.Locale locale39 = java.util.Locale.ITALIAN;
        boolean boolean40 = fastDateFormat35.equals((java.lang.Object) locale39);
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(timeZone32, locale39);
        java.util.Locale locale42 = java.util.Locale.FRANCE;
        boolean boolean43 = locale42.hasExtensions();
        java.lang.String str44 = locale39.getDisplayVariant(locale42);
        java.lang.String str45 = locale39.getDisplayName();
        java.lang.String str46 = locale39.getISO3Language();
        java.lang.String str47 = locale30.getDisplayName(locale39);
        java.util.Locale locale48 = java.util.Locale.TAIWAN;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str50 = locale48.getDisplayLanguage(locale49);
        java.lang.String str51 = locale48.getLanguage();
        java.util.Locale locale53 = new java.util.Locale("Chinese");
        java.util.Locale locale54 = locale53.stripExtensions();
        java.lang.String str55 = locale48.getDisplayLanguage(locale53);
        java.lang.String str56 = locale39.getDisplayName(locale53);
        java.lang.String str57 = locale25.getDisplayCountry(locale39);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat58 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone12, locale39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar14 and calendar22", (calendar14.compareTo(calendar22) == 0) == calendar14.equals(calendar22));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test047");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.time.Instant instant7 = calendar6.toInstant();
        java.util.Date date8 = calendar6.getTime();
        java.util.TimeZone timeZone9 = calendar6.getTimeZone();
        int int10 = timeZone9.getRawOffset();
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone13 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone13);
        java.lang.String str15 = fastDateFormat14.getPattern();
        java.lang.String str17 = fastDateFormat14.format(1645513660686L);
        java.util.Locale locale18 = java.util.Locale.ITALIAN;
        boolean boolean19 = fastDateFormat14.equals((java.lang.Object) locale18);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone11, locale18);
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone11);
        boolean boolean23 = timeZone9.hasSameRules(timeZone11);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar20 and calendar22", (calendar20.compareTo(calendar22) == 0) == calendar20.equals(calendar22));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test048");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int12 = timeZone1.getOffset(1645513660365L);
        int int14 = timeZone1.getOffset((long) 22);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        boolean boolean18 = timeZone16.hasSameRules(timeZone17);
        boolean boolean19 = timeZone15.hasSameRules(timeZone16);
        java.lang.String str20 = timeZone16.getID();
        boolean boolean21 = timeZone1.hasSameRules(timeZone16);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone24);
        java.lang.String str26 = fastDateFormat25.getPattern();
        java.lang.String str28 = fastDateFormat25.format(1645513660686L);
        java.util.Locale locale29 = java.util.Locale.ITALIAN;
        boolean boolean30 = fastDateFormat25.equals((java.lang.Object) locale29);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone22, locale29);
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(timeZone16, locale29);
        timeZone16.setRawOffset(14);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar31 and calendar32", (calendar31.compareTo(calendar32) == 0) == calendar31.equals(calendar32));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test049");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean16 = timeZone2.hasSameRules(timeZone15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        boolean boolean22 = locale21.hasExtensions();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        java.util.Locale locale24 = java.util.Locale.CHINESE;
        java.lang.String str25 = locale24.getLanguage();
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale20, locale21, locale23, locale24 };
        java.util.ArrayList<java.util.Locale> localeList27 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList27, localeArray26);
        java.util.Locale.FilteringMode filteringMode29 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList30 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList27, filteringMode29);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList32 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Set<java.lang.String> strSet35 = locale33.getUnicodeLocaleAttributes();
        java.lang.String str36 = java.util.Locale.lookupTag(languageRangeList32, (java.util.Collection<java.lang.String>) strSet35);
        boolean boolean37 = localeList30.containsAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean39 = localeList30.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator40 = localeList30.spliterator();
        java.util.Locale locale44 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale44.getISO3Language();
        boolean boolean48 = localeList30.add(locale44);
        java.util.ListIterator<java.util.Locale> localeItor49 = localeList30.listIterator();
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder50.clear();
        java.util.Locale locale52 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale52.getDisplayVariant(locale53);
        java.util.Locale.Builder builder57 = builder51.setLocale(locale52);
        java.util.Locale locale58 = builder57.build();
        java.util.Locale.Builder builder60 = builder57.addUnicodeLocaleAttribute("German");
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str63 = locale61.getDisplayLanguage(locale62);
        java.util.Locale.Builder builder64 = builder57.setLocale(locale61);
        java.lang.String str65 = locale61.getISO3Country();
        boolean boolean66 = localeList30.add(locale61);
        java.lang.String str67 = locale61.toLanguageTag();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone2, locale61);
        timeZone2.setRawOffset(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar68", (calendar11.compareTo(calendar68) == 0) == calendar11.equals(calendar68));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test050");
        java.text.ParsePosition parsePosition1 = new java.text.ParsePosition(16);
        parsePosition1.setIndex(10);
        java.util.Locale locale4 = java.util.Locale.CHINESE;
        java.util.Calendar calendar5 = java.util.Calendar.getInstance(locale4);
        int int7 = calendar5.getActualMinimum((int) (byte) 0);
        boolean boolean8 = calendar5.isWeekDateSupported();
        java.util.Date date9 = calendar5.getTime();
        java.util.Locale.LanguageRange[] languageRangeArray10 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList11 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList11, languageRangeArray10);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.FRANCE;
        boolean boolean15 = locale14.hasExtensions();
        java.util.Locale locale16 = java.util.Locale.FRANCE;
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        java.util.Locale[] localeArray19 = new java.util.Locale[] { locale13, locale14, locale16, locale17 };
        java.util.ArrayList<java.util.Locale> localeList20 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList20, localeArray19);
        java.util.Locale.FilteringMode filteringMode22 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList23 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList11, (java.util.Collection<java.util.Locale>) localeList20, filteringMode22);
        boolean boolean24 = localeList23.isEmpty();
        java.util.Calendar.Builder builder25 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder29 = builder25.setWeekDate(16, 3, 100);
        boolean boolean30 = localeList23.remove((java.lang.Object) builder25);
        java.util.Calendar.Builder builder32 = builder25.setLenient(true);
        java.util.Calendar.Builder builder36 = builder32.setTimeOfDay(0, 122, 28);
        boolean boolean37 = calendar5.after((java.lang.Object) builder36);
        java.util.Calendar.Builder builder41 = builder36.setDate(3, (int) (short) -1, 7);
        boolean boolean42 = parsePosition1.equals((java.lang.Object) builder41);
        java.text.AttributedCharacterIterator.Attribute attribute43 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.lang.String str44 = attribute43.toString();
        java.util.TimeZone timeZone45 = java.util.TimeZone.getDefault();
        boolean boolean46 = attribute43.equals((java.lang.Object) timeZone45);
        java.util.Calendar.Builder builder47 = builder41.setTimeZone(timeZone45);
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone50 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat51 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone50);
        java.lang.String str52 = fastDateFormat51.getPattern();
        java.lang.String str54 = fastDateFormat51.format(1645513660686L);
        java.util.Locale locale55 = java.util.Locale.ITALIAN;
        boolean boolean56 = fastDateFormat51.equals((java.lang.Object) locale55);
        java.util.Calendar calendar57 = java.util.Calendar.getInstance(timeZone48, locale55);
        java.util.Locale locale58 = java.util.Locale.FRANCE;
        boolean boolean59 = locale58.hasExtensions();
        java.lang.String str60 = locale55.getDisplayVariant(locale58);
        java.lang.String str61 = locale55.getISO3Country();
        java.lang.String str62 = locale55.getDisplayName();
        java.lang.String str63 = timeZone45.getDisplayName(locale55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar5 and calendar57", (calendar5.compareTo(calendar57) == 0) == calendar5.equals(calendar57));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test051");
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.TimeZone timeZone7 = fastDateFormat3.getTimeZone();
        java.lang.String str8 = timeZone7.getID();
        timeZone7.setID("22 Feb 2022 07:07:49 GMT");
        timeZone7.setID("\u4e0b\u5348\u65f6\u5206\u79d2");
        java.util.Locale locale13 = java.util.Locale.ITALY;
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(locale14);
        java.util.Locale locale16 = java.util.Locale.FRANCE;
        java.util.Locale locale17 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale18 = java.util.Locale.CHINESE;
        java.lang.String str19 = locale18.getLanguage();
        boolean boolean20 = locale18.hasExtensions();
        java.lang.String str21 = locale17.getDisplayVariant(locale18);
        java.util.Locale locale22 = java.util.Locale.GERMAN;
        java.util.Locale locale23 = java.util.Locale.getDefault();
        java.util.Locale locale24 = java.util.Locale.FRANCE;
        boolean boolean25 = locale24.hasExtensions();
        java.util.Locale locale26 = java.util.Locale.CHINESE;
        java.lang.String str27 = locale26.getLanguage();
        boolean boolean28 = locale26.hasExtensions();
        java.lang.String str29 = locale26.getDisplayCountry();
        java.lang.String str30 = locale26.getDisplayLanguage();
        java.lang.String str31 = locale26.getLanguage();
        java.util.Locale locale35 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale36 = java.util.Locale.ROOT;
        java.lang.String str37 = locale35.getDisplayScript(locale36);
        java.util.Locale locale38 = java.util.Locale.FRANCE;
        boolean boolean39 = locale38.hasExtensions();
        java.util.Locale locale40 = java.util.Locale.CHINESE;
        java.util.Locale locale41 = java.util.Locale.ITALIAN;
        java.util.Locale locale42 = java.util.Locale.US;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale47 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale48 = java.util.Locale.ROOT;
        java.lang.String str49 = locale47.getDisplayScript(locale48);
        java.util.Locale locale50 = java.util.Locale.US;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.ITALY;
        java.util.Locale locale54 = java.util.Locale.getDefault();
        java.util.Locale locale58 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale59 = java.util.Locale.CHINESE;
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(locale59);
        java.util.Locale locale61 = java.util.Locale.US;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale63 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale64 = java.util.Locale.CHINESE;
        java.lang.String str65 = locale64.getLanguage();
        boolean boolean66 = locale64.hasExtensions();
        java.lang.String str67 = locale63.getDisplayVariant(locale64);
        java.util.Locale[] localeArray68 = new java.util.Locale[] { locale13, locale14, locale16, locale18, locale22, locale23, locale24, locale26, locale36, locale38, locale40, locale41, locale42, locale43, locale48, locale50, locale51, locale52, locale53, locale54, locale58, locale59, locale61, locale62, locale63 };
        java.util.ArrayList<java.util.Locale> localeList69 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList69, localeArray68);
        boolean boolean71 = localeList69.isEmpty();
        java.util.Spliterator<java.util.Locale> localeSpliterator72 = localeList69.spliterator();
        java.util.Locale locale74 = localeList69.get(11);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone7, locale74);
        java.util.Locale locale77 = new java.util.Locale("deu");
        java.lang.String str78 = locale77.getDisplayLanguage();
        java.util.TimeZone timeZone79 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone81 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat82 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone81);
        java.lang.String str83 = fastDateFormat82.getPattern();
        java.lang.String str85 = fastDateFormat82.format(1645513660686L);
        java.util.Locale locale86 = java.util.Locale.ITALIAN;
        boolean boolean87 = fastDateFormat82.equals((java.lang.Object) locale86);
        java.util.Calendar calendar88 = java.util.Calendar.getInstance(timeZone79, locale86);
        java.util.Locale locale89 = java.util.Locale.FRANCE;
        boolean boolean90 = locale89.hasExtensions();
        java.lang.String str91 = locale86.getDisplayVariant(locale89);
        java.lang.String str92 = locale86.getDisplayName();
        java.lang.String str93 = locale86.getISO3Language();
        java.lang.String str94 = locale77.getDisplayName(locale86);
        java.util.Set<java.lang.String> strSet95 = locale77.getUnicodeLocaleAttributes();
        java.lang.String str96 = timeZone7.getDisplayName(locale77);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar15 and calendar88", (calendar15.compareTo(calendar88) == 0) == calendar15.equals(calendar88));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test052");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        calendar78.setFirstDayOfWeek(42);
        boolean boolean82 = calendar78.isWeekDateSupported();
        calendar78.setLenient(false);
        java.lang.String str85 = fastDateFormat2.format(calendar78);
        java.util.Locale locale86 = java.util.Locale.CHINESE;
        java.util.Calendar calendar87 = java.util.Calendar.getInstance(locale86);
        int int89 = calendar87.getActualMinimum((int) (byte) 0);
        java.time.Instant instant90 = calendar87.toInstant();
        calendar87.set(6, 7, 45);
        calendar87.setLenient(false);
        java.lang.StringBuffer stringBuffer97 = null;
        java.lang.StringBuffer stringBuffer98 = fastDateFormat2.format(calendar87, stringBuffer97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test053");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone0.hasSameRules(timeZone9);
        timeZone0.setRawOffset(117);
        boolean boolean16 = timeZone0.observesDaylightTime();
        java.util.Locale locale20 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale21 = java.util.Locale.ROOT;
        java.lang.String str22 = locale20.getDisplayScript(locale21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale20);
        int int25 = calendar23.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone26 = calendar23.getTimeZone();
        java.util.Locale locale29 = java.util.Locale.ITALIAN;
        java.util.Locale locale32 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022", "GMT+00:00");
        java.lang.String str33 = locale29.getDisplayName(locale32);
        java.lang.String str34 = calendar23.getDisplayName(12, 32770, locale29);
        java.lang.String str35 = locale29.getDisplayName();
        java.lang.String str36 = timeZone0.getDisplayName(locale29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar23", (calendar6.compareTo(calendar23) == 0) == calendar6.equals(calendar23));
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test054");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        boolean boolean76 = localeList56.isEmpty();
        boolean boolean77 = localeList56.isEmpty();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test055");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone19.observesDaylightTime();
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet24 = locale23.getUnicodeLocaleAttributes();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone19, locale23);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone19);
        java.lang.String str27 = fastDateFormat2.format((java.lang.Object) calendar26);
        boolean boolean28 = calendar26.isLenient();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar25", (calendar10.compareTo(calendar25) == 0) == calendar10.equals(calendar25));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test056");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.Locale locale8 = java.util.Locale.ITALIAN;
        boolean boolean9 = fastDateFormat4.equals((java.lang.Object) locale8);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone1, locale8);
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.lang.String str13 = locale8.getDisplayVariant(locale11);
        java.lang.String str14 = locale8.getDisplayName();
        java.lang.String str15 = locale8.getISO3Language();
        java.util.Locale.setDefault(category0, locale8);
        java.util.Locale locale17 = java.util.Locale.getDefault(category0);
        java.util.Locale locale18 = java.util.Locale.getDefault(category0);
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.util.Locale locale20 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str21 = locale19.getDisplayLanguage(locale20);
        java.lang.String str22 = locale19.getLanguage();
        java.util.Locale locale24 = new java.util.Locale("Chinese");
        java.util.Locale locale25 = locale24.stripExtensions();
        java.lang.String str26 = locale19.getDisplayLanguage(locale24);
        java.util.Locale locale28 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute29 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean31 = attribute29.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale32 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        boolean boolean35 = locale33.hasExtensions();
        java.lang.String str36 = locale32.getDisplayVariant(locale33);
        java.util.Locale locale37 = locale32.stripExtensions();
        boolean boolean38 = attribute29.equals((java.lang.Object) locale37);
        java.lang.String str39 = locale28.getDisplayLanguage(locale37);
        java.lang.String str40 = locale19.getDisplayCountry(locale37);
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(locale19);
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.lang.String str47 = locale42.getLanguage();
        java.lang.String str48 = locale19.getDisplayScript(locale42);
        java.lang.String str49 = locale18.getDisplayCountry(locale19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar41", (calendar10.compareTo(calendar41) == 0) == calendar10.equals(calendar41));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test057");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        calendar84.set(1200000, 122, 12, 600037, 25, 1200000);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test058");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean16 = timeZone2.hasSameRules(timeZone15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        boolean boolean22 = locale21.hasExtensions();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        java.util.Locale locale24 = java.util.Locale.CHINESE;
        java.lang.String str25 = locale24.getLanguage();
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale20, locale21, locale23, locale24 };
        java.util.ArrayList<java.util.Locale> localeList27 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList27, localeArray26);
        java.util.Locale.FilteringMode filteringMode29 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList30 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList27, filteringMode29);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList32 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Set<java.lang.String> strSet35 = locale33.getUnicodeLocaleAttributes();
        java.lang.String str36 = java.util.Locale.lookupTag(languageRangeList32, (java.util.Collection<java.lang.String>) strSet35);
        boolean boolean37 = localeList30.containsAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean39 = localeList30.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator40 = localeList30.spliterator();
        java.util.Locale locale44 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale44.getISO3Language();
        boolean boolean48 = localeList30.add(locale44);
        java.util.ListIterator<java.util.Locale> localeItor49 = localeList30.listIterator();
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder50.clear();
        java.util.Locale locale52 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale52.getDisplayVariant(locale53);
        java.util.Locale.Builder builder57 = builder51.setLocale(locale52);
        java.util.Locale locale58 = builder57.build();
        java.util.Locale.Builder builder60 = builder57.addUnicodeLocaleAttribute("German");
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str63 = locale61.getDisplayLanguage(locale62);
        java.util.Locale.Builder builder64 = builder57.setLocale(locale61);
        java.lang.String str65 = locale61.getISO3Country();
        boolean boolean66 = localeList30.add(locale61);
        java.lang.String str67 = locale61.toLanguageTag();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone2, locale61);
        int int70 = timeZone2.getOffset(1645513756451L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar68", (calendar11.compareTo(calendar68) == 0) == calendar11.equals(calendar68));
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test059");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.StringBuffer stringBuffer4 = null;
        java.lang.StringBuffer stringBuffer5 = fastDateFormat2.format((long) 124, stringBuffer4);
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        boolean boolean8 = timeZone6.hasSameRules(timeZone7);
        boolean boolean9 = timeZone6.observesDaylightTime();
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet11 = locale10.getUnicodeLocaleAttributes();
        java.util.Calendar calendar12 = java.util.Calendar.getInstance(timeZone6, locale10);
        calendar12.set((int) (short) -1, 8, (-1));
        java.lang.StringBuffer stringBuffer17 = null;
        java.lang.StringBuffer stringBuffer18 = fastDateFormat2.format(calendar12, stringBuffer17);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        boolean boolean22 = timeZone20.hasSameRules(timeZone21);
        boolean boolean23 = timeZone19.hasSameRules(timeZone20);
        java.util.TimeZone.setDefault(timeZone20);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone20);
        java.util.TimeZone timeZone27 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int28 = timeZone27.getRawOffset();
        calendar25.setTimeZone(timeZone27);
        calendar25.setFirstDayOfWeek(6);
        boolean boolean32 = calendar25.isWeekDateSupported();
        java.util.TimeZone timeZone34 = java.util.TimeZone.getTimeZone("zh_CN");
        calendar25.setTimeZone(timeZone34);
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(timeZone34);
        calendar12.setTimeZone(timeZone34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar36", (calendar25.compareTo(calendar36) == 0) == calendar25.equals(calendar36));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test060");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Spliterator<java.util.Locale> localeSpliterator76 = localeList56.spliterator();
        java.lang.Object[] objArray77 = localeList56.toArray();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test061");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone14.observesDaylightTime();
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone14);
        java.lang.String str21 = timeZone14.getID();
        java.util.Calendar.Builder builder22 = builder13.setTimeZone(timeZone14);
        java.util.Calendar.Builder builder26 = builder13.setTimeOfDay(7200000, 23, 48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar20", (calendar11.compareTo(calendar20) == 0) == calendar11.equals(calendar20));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test062");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = calendar10.getTimeZone();
        java.util.Locale locale20 = java.util.Locale.ITALY;
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale21);
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        java.util.Locale locale24 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        java.lang.String str28 = locale24.getDisplayVariant(locale25);
        java.util.Locale locale29 = java.util.Locale.GERMAN;
        java.util.Locale locale30 = java.util.Locale.getDefault();
        java.util.Locale locale31 = java.util.Locale.FRANCE;
        boolean boolean32 = locale31.hasExtensions();
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        boolean boolean35 = locale33.hasExtensions();
        java.lang.String str36 = locale33.getDisplayCountry();
        java.lang.String str37 = locale33.getDisplayLanguage();
        java.lang.String str38 = locale33.getLanguage();
        java.util.Locale locale42 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale43 = java.util.Locale.ROOT;
        java.lang.String str44 = locale42.getDisplayScript(locale43);
        java.util.Locale locale45 = java.util.Locale.FRANCE;
        boolean boolean46 = locale45.hasExtensions();
        java.util.Locale locale47 = java.util.Locale.CHINESE;
        java.util.Locale locale48 = java.util.Locale.ITALIAN;
        java.util.Locale locale49 = java.util.Locale.US;
        java.util.Locale locale50 = java.util.Locale.US;
        java.util.Locale locale54 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale54.getDisplayScript(locale55);
        java.util.Locale locale57 = java.util.Locale.US;
        java.util.Locale locale58 = java.util.Locale.GERMAN;
        java.util.Locale locale59 = java.util.Locale.US;
        java.util.Locale locale60 = java.util.Locale.ITALY;
        java.util.Locale locale61 = java.util.Locale.getDefault();
        java.util.Locale locale65 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale66 = java.util.Locale.CHINESE;
        java.util.Calendar calendar67 = java.util.Calendar.getInstance(locale66);
        java.util.Locale locale68 = java.util.Locale.US;
        java.util.Locale locale69 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale70 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale71 = java.util.Locale.CHINESE;
        java.lang.String str72 = locale71.getLanguage();
        boolean boolean73 = locale71.hasExtensions();
        java.lang.String str74 = locale70.getDisplayVariant(locale71);
        java.util.Locale[] localeArray75 = new java.util.Locale[] { locale20, locale21, locale23, locale25, locale29, locale30, locale31, locale33, locale43, locale45, locale47, locale48, locale49, locale50, locale55, locale57, locale58, locale59, locale60, locale61, locale65, locale66, locale68, locale69, locale70 };
        java.util.ArrayList<java.util.Locale> localeList76 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList76, localeArray75);
        boolean boolean78 = localeList76.isEmpty();
        java.util.Locale locale80 = localeList76.get((int) (short) 0);
        java.util.Date date81 = new java.util.Date();
        int int82 = date81.getSeconds();
        java.util.Date date83 = new java.util.Date();
        int int84 = date83.getTimezoneOffset();
        date83.setMinutes(5);
        boolean boolean87 = date81.after(date83);
        int int88 = date81.getHours();
        int int89 = localeList76.lastIndexOf((java.lang.Object) date81);
        date81.setMonth(0);
        boolean boolean92 = timeZone19.inDaylightTime(date81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar22", (calendar10.compareTo(calendar22) == 0) == calendar10.equals(calendar22));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test063");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        int int30 = timeZone24.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar26", (calendar6.compareTo(calendar26) == 0) == calendar6.equals(calendar26));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test064");
        java.util.Locale locale0 = java.util.Locale.TAIWAN;
        java.util.Locale locale1 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str2 = locale0.getDisplayLanguage(locale1);
        java.lang.String str3 = locale0.getLanguage();
        java.util.Locale locale5 = new java.util.Locale("Chinese");
        java.util.Locale locale6 = locale5.stripExtensions();
        java.lang.String str7 = locale0.getDisplayLanguage(locale5);
        java.lang.String str8 = locale5.toLanguageTag();
        java.lang.String str9 = locale5.getISO3Country();
        java.lang.String str10 = locale5.getLanguage();
        java.lang.String str11 = locale5.getScript();
        java.util.Calendar.Builder builder12 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder17 = builder12.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder22 = builder12.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder24 = builder12.setLenient(false);
        java.util.Locale locale29 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale29.getDisplayScript(locale30);
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(locale29);
        int int34 = calendar32.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone35 = calendar32.getTimeZone();
        java.util.Locale locale36 = java.util.Locale.GERMANY;
        java.util.Locale locale38 = new java.util.Locale("Chinese");
        java.lang.String str39 = locale36.getDisplayLanguage(locale38);
        java.lang.String str40 = locale36.getDisplayCountry();
        java.util.Set<java.lang.String> strSet41 = locale36.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat42 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone35, locale36);
        java.util.Calendar.Builder builder43 = builder12.setTimeZone(timeZone35);
        java.util.Locale locale44 = java.util.Locale.getDefault();
        java.util.Locale locale45 = null;
        java.lang.String str46 = locale44.getDisplayCountry(locale45);
        java.util.Locale locale47 = java.util.Locale.CHINESE;
        java.lang.String str48 = locale47.getLanguage();
        boolean boolean49 = locale47.hasExtensions();
        java.lang.String str50 = locale47.getDisplayCountry();
        java.util.Set<java.lang.String> strSet51 = locale47.getUnicodeLocaleKeys();
        java.lang.String str52 = locale44.getDisplayLanguage(locale47);
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale53.getDisplayCountry();
        java.lang.String str57 = locale53.getISO3Language();
        java.util.Locale locale59 = java.util.Locale.getDefault();
        java.lang.String str60 = locale59.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat61 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale59);
        java.lang.String str62 = locale53.getDisplayName(locale59);
        java.util.Locale.setDefault(locale53);
        java.util.TimeZone timeZone64 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Locale locale71 = java.util.Locale.ITALIAN;
        boolean boolean72 = fastDateFormat67.equals((java.lang.Object) locale71);
        java.util.Calendar calendar73 = java.util.Calendar.getInstance(timeZone64, locale71);
        java.util.Locale locale74 = java.util.Locale.FRANCE;
        boolean boolean75 = locale74.hasExtensions();
        java.lang.String str76 = locale71.getDisplayVariant(locale74);
        java.lang.String str77 = locale71.getDisplayScript();
        java.lang.String str78 = locale53.getDisplayCountry(locale71);
        java.lang.String str79 = locale71.getCountry();
        java.util.Calendar calendar80 = java.util.Calendar.getInstance(locale71);
        java.util.Locale.setDefault(locale71);
        java.lang.String str82 = locale44.getDisplayScript(locale71);
        java.util.Calendar.Builder builder83 = builder12.setLocale(locale44);
        java.lang.String str84 = locale5.getDisplayScript(locale44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar32 and calendar73", (calendar32.compareTo(calendar73) == 0) == calendar32.equals(calendar73));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test065");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int11 = timeZone1.getRawOffset();
        java.util.Locale locale15 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale15);
        int int20 = calendar18.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone21 = calendar18.getTimeZone();
        boolean boolean22 = timeZone1.hasSameRules(timeZone21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date24 = calendar23.getTime();
        date24.setTime((long) 45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar23", (calendar18.compareTo(calendar23) == 0) == calendar18.equals(calendar23));
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test066");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.lang.String str87 = fastDateFormat2.format(1645513732598L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar51 and calendar78", (calendar51.compareTo(calendar78) == 0) == calendar51.equals(calendar78));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test067");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        java.time.Instant instant9 = calendar6.toInstant();
        calendar6.set(8, 6, 50, 43, 9);
        int int16 = calendar6.getFirstDayOfWeek();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        boolean boolean20 = timeZone18.hasSameRules(timeZone19);
        boolean boolean21 = timeZone17.hasSameRules(timeZone18);
        java.util.TimeZone.setDefault(timeZone18);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone18);
        java.util.Date date24 = new java.util.Date();
        int int25 = date24.getTimezoneOffset();
        date24.setMinutes(5);
        calendar23.setTime(date24);
        java.util.TimeZone timeZone29 = calendar23.getTimeZone();
        java.lang.String str30 = timeZone29.getID();
        calendar6.setTimeZone(timeZone29);
        java.util.Date date32 = calendar6.getTime();
        java.util.Calendar.Builder builder33 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder38 = builder33.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar39 = builder33.build();
        java.util.Calendar.Builder builder43 = builder33.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder45 = builder33.setLenient(true);
        java.util.Calendar.Builder builder50 = builder45.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone51 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone52 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone53 = java.util.TimeZone.getDefault();
        boolean boolean54 = timeZone52.hasSameRules(timeZone53);
        boolean boolean55 = timeZone51.hasSameRules(timeZone52);
        timeZone51.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone51.setID("und");
        java.util.Calendar.Builder builder60 = builder45.setTimeZone(timeZone51);
        timeZone51.setRawOffset((int) 'x');
        java.util.TimeZone timeZone65 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone66 = java.util.TimeZone.getDefault();
        boolean boolean67 = timeZone65.hasSameRules(timeZone66);
        java.util.Locale locale68 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale69 = java.util.Locale.CHINESE;
        java.lang.String str70 = locale69.getLanguage();
        boolean boolean71 = locale69.hasExtensions();
        java.lang.String str72 = locale68.getDisplayVariant(locale69);
        java.util.Locale.setDefault(locale69);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat74 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone65, locale69);
        boolean boolean75 = timeZone51.hasSameRules(timeZone65);
        java.util.Locale locale77 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022");
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(locale77);
        java.util.Calendar calendar79 = java.util.Calendar.getInstance(timeZone51, locale77);
        boolean boolean80 = calendar6.before((java.lang.Object) timeZone51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar78 and calendar79", (calendar78.compareTo(calendar79) == 0) == calendar78.equals(calendar79));
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test068");
        java.util.Locale locale4 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale5 = java.util.Locale.ROOT;
        java.lang.String str6 = locale4.getDisplayScript(locale5);
        java.lang.String str7 = locale4.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale4);
        java.lang.String str9 = locale4.getLanguage();
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet11 = locale10.getUnicodeLocaleAttributes();
        java.lang.String str12 = locale4.getDisplayScript(locale10);
        java.util.Calendar.Builder builder13 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder17 = builder13.setWeekDate(16, 3, 100);
        java.util.Locale locale18 = java.util.Locale.GERMANY;
        java.util.Locale locale20 = new java.util.Locale("Chinese");
        java.lang.String str21 = locale18.getDisplayLanguage(locale20);
        java.util.Calendar.Builder builder22 = builder13.setLocale(locale20);
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        boolean boolean25 = timeZone23.hasSameRules(timeZone24);
        boolean boolean26 = timeZone23.observesDaylightTime();
        java.util.Locale locale27 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet28 = locale27.getUnicodeLocaleAttributes();
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone23, locale27);
        java.lang.String str30 = locale27.getDisplayVariant();
        java.lang.String str31 = locale27.getDisplayVariant();
        java.util.Calendar.Builder builder32 = builder22.setLocale(locale27);
        java.util.Set<java.lang.Character> charSet33 = locale27.getExtensionKeys();
        java.lang.String str34 = locale10.getDisplayLanguage(locale27);
        java.util.Locale locale35 = java.util.Locale.KOREAN;
        java.lang.String str36 = locale35.toLanguageTag();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList38 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray39 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList40 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList40, languageRangeArray39);
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.FRANCE;
        boolean boolean44 = locale43.hasExtensions();
        java.util.Locale locale45 = java.util.Locale.FRANCE;
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.lang.String str47 = locale46.getLanguage();
        java.util.Locale[] localeArray48 = new java.util.Locale[] { locale42, locale43, locale45, locale46 };
        java.util.ArrayList<java.util.Locale> localeList49 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList49, localeArray48);
        java.util.Locale.FilteringMode filteringMode51 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList52 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList40, (java.util.Collection<java.util.Locale>) localeList49, filteringMode51);
        java.util.List<java.util.Locale> localeList53 = java.util.Locale.filter(languageRangeList38, (java.util.Collection<java.util.Locale>) localeList52);
        localeList53.clear();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone57 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat58 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone57);
        java.lang.String str59 = fastDateFormat58.getPattern();
        java.lang.String str61 = fastDateFormat58.format(1645513660686L);
        java.util.Locale locale62 = java.util.Locale.ITALIAN;
        boolean boolean63 = fastDateFormat58.equals((java.lang.Object) locale62);
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(timeZone55, locale62);
        java.util.Locale locale65 = java.util.Locale.FRANCE;
        boolean boolean66 = locale65.hasExtensions();
        java.lang.String str67 = locale62.getDisplayVariant(locale65);
        java.lang.String str68 = locale62.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray69 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList70 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList70, languageRangeArray69);
        java.util.Locale locale72 = java.util.Locale.GERMAN;
        java.util.Locale locale73 = java.util.Locale.FRANCE;
        boolean boolean74 = locale73.hasExtensions();
        java.util.Locale locale75 = java.util.Locale.FRANCE;
        java.util.Locale locale76 = java.util.Locale.CHINESE;
        java.lang.String str77 = locale76.getLanguage();
        java.util.Locale[] localeArray78 = new java.util.Locale[] { locale72, locale73, locale75, locale76 };
        java.util.ArrayList<java.util.Locale> localeList79 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList79, localeArray78);
        java.util.Locale.FilteringMode filteringMode81 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList82 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList70, (java.util.Collection<java.util.Locale>) localeList79, filteringMode81);
        java.util.Spliterator<java.util.Locale> localeSpliterator83 = localeList82.spliterator();
        java.util.Iterator<java.util.Locale> localeItor84 = localeList82.iterator();
        java.util.Locale locale85 = java.util.Locale.ROOT;
        boolean boolean86 = localeList82.remove((java.lang.Object) locale85);
        java.lang.String str87 = locale85.getISO3Country();
        java.lang.String str88 = locale62.getDisplayVariant(locale85);
        java.lang.String str89 = locale85.getScript();
        boolean boolean90 = localeList53.add(locale85);
        java.lang.String str91 = locale35.getDisplayScript(locale85);
        java.lang.String str92 = locale10.getDisplayLanguage(locale35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar29 and calendar64", (calendar29.compareTo(calendar64) == 0) == calendar29.equals(calendar64));
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test069");
        java.text.FieldPosition fieldPosition1 = new java.text.FieldPosition(32770);
        fieldPosition1.setEndIndex((int) (byte) 1);
        java.lang.String str4 = fieldPosition1.toString();
        int int5 = fieldPosition1.getBeginIndex();
        java.text.Format.Field field6 = fieldPosition1.getFieldAttribute();
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        boolean boolean10 = timeZone8.hasSameRules(timeZone9);
        boolean boolean11 = timeZone7.hasSameRules(timeZone8);
        java.util.TimeZone.setDefault(timeZone8);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone8);
        long long14 = calendar13.getTimeInMillis();
        int int15 = calendar13.getWeeksInWeekYear();
        calendar13.setLenient(false);
        int int18 = calendar13.getWeeksInWeekYear();
        java.util.Locale locale19 = java.util.Locale.GERMANY;
        java.util.Locale locale21 = new java.util.Locale("Chinese");
        java.lang.String str22 = locale19.getDisplayLanguage(locale21);
        java.util.Locale locale23 = java.util.Locale.CHINESE;
        java.lang.String str24 = locale23.getLanguage();
        boolean boolean25 = locale23.hasExtensions();
        java.lang.String str26 = locale23.getDisplayCountry();
        java.lang.String str27 = locale23.getISO3Language();
        java.util.Locale locale29 = java.util.Locale.getDefault();
        java.lang.String str30 = locale29.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale29);
        java.lang.String str32 = locale23.getDisplayName(locale29);
        java.util.Locale.setDefault(locale23);
        java.util.TimeZone timeZone34 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone36);
        java.lang.String str38 = fastDateFormat37.getPattern();
        java.lang.String str40 = fastDateFormat37.format(1645513660686L);
        java.util.Locale locale41 = java.util.Locale.ITALIAN;
        boolean boolean42 = fastDateFormat37.equals((java.lang.Object) locale41);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(timeZone34, locale41);
        java.util.Locale locale44 = java.util.Locale.FRANCE;
        boolean boolean45 = locale44.hasExtensions();
        java.lang.String str46 = locale41.getDisplayVariant(locale44);
        java.lang.String str47 = locale41.getDisplayScript();
        java.lang.String str48 = locale23.getDisplayCountry(locale41);
        java.lang.String str49 = locale19.getDisplayCountry(locale23);
        java.util.Set<java.lang.String> strSet50 = locale23.getUnicodeLocaleAttributes();
        boolean boolean51 = calendar13.before((java.lang.Object) strSet50);
        boolean boolean52 = fieldPosition1.equals((java.lang.Object) strSet50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar43", (calendar13.compareTo(calendar43) == 0) == calendar13.equals(calendar43));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test070");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.lang.String str81 = fastDateFormat2.toString();
        java.util.Date date82 = new java.util.Date();
        java.lang.String str83 = date82.toGMTString();
        int int84 = date82.getYear();
        int int85 = date82.getSeconds();
        int int86 = date82.getHours();
        java.lang.StringBuffer stringBuffer87 = null;
        java.lang.StringBuffer stringBuffer88 = fastDateFormat2.format(date82, stringBuffer87);
        date82.setSeconds(292269054);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test071");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone0);
        calendar7.setMinimalDaysInFirstWeek(12);
        java.util.Date date10 = new java.util.Date();
        int int11 = date10.getDay();
        int int12 = date10.getTimezoneOffset();
        int int13 = date10.getYear();
        java.util.Date date14 = new java.util.Date();
        int int15 = date14.getSeconds();
        java.util.Date date16 = new java.util.Date();
        int int17 = date16.getTimezoneOffset();
        date16.setMinutes(5);
        boolean boolean20 = date14.after(date16);
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.util.Date date25 = new java.util.Date();
        int int26 = date25.getSeconds();
        java.lang.String str27 = fastDateFormat23.format(date25);
        boolean boolean28 = date14.before(date25);
        java.util.Date date29 = new java.util.Date();
        int int30 = date29.getTimezoneOffset();
        date29.setMinutes((int) (byte) -1);
        int int33 = date29.getMonth();
        boolean boolean34 = date25.after(date29);
        boolean boolean35 = date10.after(date25);
        int int36 = date10.getDay();
        java.util.TimeZone timeZone37 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone38 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone39 = java.util.TimeZone.getDefault();
        boolean boolean40 = timeZone38.hasSameRules(timeZone39);
        boolean boolean41 = timeZone37.hasSameRules(timeZone38);
        java.util.TimeZone.setDefault(timeZone38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(timeZone38);
        long long44 = calendar43.getTimeInMillis();
        calendar43.setTimeInMillis(1645513661984L);
        int int48 = calendar43.getMinimum(6);
        java.util.Date date49 = calendar43.getTime();
        boolean boolean50 = date10.before(date49);
        calendar7.setTime(date10);
        date10.setMonth(7200000);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar7", (calendar6.compareTo(calendar7) == 0) == calendar6.equals(calendar7));
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test072");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone0.hasSameRules(timeZone9);
        timeZone9.setID("7:08:36 AM UTC");
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str20 = fastDateFormat19.getPattern();
        java.lang.String str22 = fastDateFormat19.format(1645513660686L);
        java.lang.String str24 = fastDateFormat19.format((long) 40);
        java.util.TimeZone timeZone25 = fastDateFormat19.getTimeZone();
        java.util.TimeZone timeZone26 = fastDateFormat19.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone26);
        java.util.TimeZone timeZone30 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute31 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray32 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList33 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList33, languageRangeArray32);
        java.util.Locale locale35 = java.util.Locale.GERMAN;
        java.util.Locale locale36 = java.util.Locale.FRANCE;
        boolean boolean37 = locale36.hasExtensions();
        java.util.Locale locale38 = java.util.Locale.FRANCE;
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale35, locale36, locale38, locale39 };
        java.util.ArrayList<java.util.Locale> localeList42 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList42, localeArray41);
        java.util.Locale.FilteringMode filteringMode44 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList45 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList33, (java.util.Collection<java.util.Locale>) localeList42, filteringMode44);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList47 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale48 = java.util.Locale.CHINESE;
        java.lang.String str49 = locale48.getLanguage();
        java.util.Set<java.lang.String> strSet50 = locale48.getUnicodeLocaleAttributes();
        java.lang.String str51 = java.util.Locale.lookupTag(languageRangeList47, (java.util.Collection<java.lang.String>) strSet50);
        boolean boolean52 = localeList45.containsAll((java.util.Collection<java.lang.String>) strSet50);
        boolean boolean54 = localeList45.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator55 = localeList45.spliterator();
        java.util.Locale locale59 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale60 = java.util.Locale.ROOT;
        java.lang.String str61 = locale59.getDisplayScript(locale60);
        java.lang.String str62 = locale59.getISO3Language();
        boolean boolean63 = localeList45.add(locale59);
        boolean boolean64 = attribute31.equals((java.lang.Object) locale59);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat65 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone30, locale59);
        java.util.Calendar calendar66 = java.util.Calendar.getInstance(timeZone26, locale59);
        java.util.Locale locale70 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale71 = java.util.Locale.TAIWAN;
        java.util.Locale locale72 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str73 = locale71.getDisplayLanguage(locale72);
        java.lang.String str74 = locale71.getLanguage();
        java.util.Locale locale76 = new java.util.Locale("Chinese");
        java.util.Locale locale77 = locale76.stripExtensions();
        java.lang.String str78 = locale71.getDisplayLanguage(locale76);
        java.lang.String str79 = locale70.getDisplayCountry(locale71);
        java.lang.String str80 = locale59.getDisplayLanguage(locale71);
        java.util.Calendar calendar81 = java.util.Calendar.getInstance(timeZone9, locale59);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar66", (calendar6.compareTo(calendar66) == 0) == calendar6.equals(calendar66));
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test073");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        java.lang.String str2 = locale1.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale1);
        java.lang.String str4 = fastDateFormat3.toString();
        java.util.Date date5 = new java.util.Date();
        int int6 = date5.getTimezoneOffset();
        date5.setMinutes(5);
        int int9 = date5.getSeconds();
        java.lang.String str10 = fastDateFormat3.format(date5);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone11.observesDaylightTime();
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11, locale15);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone11);
        calendar18.setMinimalDaysInFirstWeek(12);
        java.lang.String str21 = fastDateFormat3.format(calendar18);
        java.lang.String str22 = fastDateFormat3.getPattern();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar18", (calendar17.compareTo(calendar18) == 0) == calendar17.equals(calendar18));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test074");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder0.build();
        java.util.Calendar.Builder builder10 = builder0.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder12 = builder0.setLenient(true);
        java.util.Calendar.Builder builder17 = builder12.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone18.hasSameRules(timeZone19);
        timeZone18.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone18.setID("und");
        java.util.Calendar.Builder builder27 = builder12.setTimeZone(timeZone18);
        timeZone18.setRawOffset((int) 'x');
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        java.util.Locale locale35 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale36 = java.util.Locale.CHINESE;
        java.lang.String str37 = locale36.getLanguage();
        boolean boolean38 = locale36.hasExtensions();
        java.lang.String str39 = locale35.getDisplayVariant(locale36);
        java.util.Locale.setDefault(locale36);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone32, locale36);
        boolean boolean42 = timeZone18.hasSameRules(timeZone32);
        java.util.Locale locale44 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022");
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(locale44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone18, locale44);
        timeZone18.setID("29 Jun 1940 19:52:42 GMT");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar45 and calendar46", (calendar45.compareTo(calendar46) == 0) == calendar45.equals(calendar46));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test075");
        java.util.Locale locale1 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022");
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Set<java.lang.String> strSet3 = locale1.getUnicodeLocaleAttributes();
        java.util.Locale locale8 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale9 = java.util.Locale.ROOT;
        java.lang.String str10 = locale8.getDisplayScript(locale9);
        java.lang.String str11 = locale8.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale8);
        java.lang.String str13 = locale8.getDisplayScript();
        java.lang.String str14 = locale8.getDisplayVariant();
        java.lang.String str15 = locale1.getDisplayScript(locale8);
        java.util.Locale locale17 = new java.util.Locale("deu");
        java.lang.String str18 = locale17.getDisplayLanguage();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone21 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat22 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone21);
        java.lang.String str23 = fastDateFormat22.getPattern();
        java.lang.String str25 = fastDateFormat22.format(1645513660686L);
        java.util.Locale locale26 = java.util.Locale.ITALIAN;
        boolean boolean27 = fastDateFormat22.equals((java.lang.Object) locale26);
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone19, locale26);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.lang.String str31 = locale26.getDisplayVariant(locale29);
        java.lang.String str32 = locale26.getDisplayName();
        java.lang.String str33 = locale26.getISO3Language();
        java.lang.String str34 = locale17.getDisplayName(locale26);
        java.lang.String str35 = locale1.getDisplayCountry(locale26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar28", (calendar2.compareTo(calendar28) == 0) == calendar2.equals(calendar28));
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test076");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder11 = builder5.set(7, 28);
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Locale locale19 = java.util.Locale.ITALIAN;
        boolean boolean20 = fastDateFormat15.equals((java.lang.Object) locale19);
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone12, locale19);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone12);
        java.util.Calendar.Builder builder23 = builder5.setTimeZone(timeZone12);
        java.util.Calendar.Builder builder27 = builder23.setTimeOfDay(47, 19, 32770);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar21 and calendar22", (calendar21.compareTo(calendar22) == 0) == calendar21.equals(calendar22));
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test077");
        java.text.FieldPosition fieldPosition1 = new java.text.FieldPosition((int) (byte) 1);
        java.util.Locale locale2 = java.util.Locale.TAIWAN;
        java.util.Locale locale3 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str4 = locale2.getDisplayLanguage(locale3);
        java.lang.String str5 = locale2.getLanguage();
        java.util.Locale locale7 = new java.util.Locale("Chinese");
        java.util.Locale locale8 = locale7.stripExtensions();
        java.lang.String str9 = locale2.getDisplayLanguage(locale7);
        java.util.Locale locale11 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute12 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean14 = attribute12.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale15 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.lang.String str17 = locale16.getLanguage();
        boolean boolean18 = locale16.hasExtensions();
        java.lang.String str19 = locale15.getDisplayVariant(locale16);
        java.util.Locale locale20 = locale15.stripExtensions();
        boolean boolean21 = attribute12.equals((java.lang.Object) locale20);
        java.lang.String str22 = locale11.getDisplayLanguage(locale20);
        java.lang.String str23 = locale2.getDisplayCountry(locale20);
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone26);
        java.lang.String str28 = fastDateFormat27.getPattern();
        java.lang.String str30 = fastDateFormat27.format(1645513660686L);
        java.util.Locale locale31 = java.util.Locale.ITALIAN;
        boolean boolean32 = fastDateFormat27.equals((java.lang.Object) locale31);
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(timeZone24, locale31);
        java.util.Locale locale34 = java.util.Locale.FRANCE;
        boolean boolean35 = locale34.hasExtensions();
        java.lang.String str36 = locale31.getDisplayVariant(locale34);
        java.lang.String str37 = locale31.getDisplayScript();
        java.lang.String str38 = locale31.getLanguage();
        java.lang.String str39 = locale20.getDisplayCountry(locale31);
        java.util.Set<java.lang.String> strSet40 = locale20.getUnicodeLocaleAttributes();
        boolean boolean41 = fieldPosition1.equals((java.lang.Object) strSet40);
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        boolean boolean45 = timeZone43.hasSameRules(timeZone44);
        boolean boolean46 = timeZone43.observesDaylightTime();
        int int47 = timeZone43.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat48 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone43);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(timeZone43);
        boolean boolean50 = fieldPosition1.equals((java.lang.Object) timeZone43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar33 and calendar49", (calendar33.compareTo(calendar49) == 0) == calendar33.equals(calendar49));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test078");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone11.observesDaylightTime();
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11, locale15);
        boolean boolean18 = timeZone11.observesDaylightTime();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        boolean boolean22 = timeZone20.hasSameRules(timeZone21);
        boolean boolean23 = timeZone19.hasSameRules(timeZone20);
        boolean boolean24 = timeZone11.hasSameRules(timeZone20);
        java.lang.String str25 = timeZone20.getID();
        boolean boolean26 = timeZone1.hasSameRules(timeZone20);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone20);
        java.util.Locale locale28 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.lang.String str30 = locale29.getLanguage();
        boolean boolean31 = locale29.hasExtensions();
        java.lang.String str32 = locale28.getDisplayVariant(locale29);
        java.util.Locale.setDefault(locale29);
        java.lang.String str34 = locale29.getDisplayLanguage();
        java.lang.String str35 = locale29.toLanguageTag();
        java.lang.String str36 = timeZone20.getDisplayName(locale29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar27", (calendar17.compareTo(calendar27) == 0) == calendar17.equals(calendar27));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test079");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.lang.String str6 = fastDateFormat2.format(date4);
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(locale7);
        int int10 = calendar8.getActualMinimum((int) (byte) 0);
        java.lang.String str11 = fastDateFormat2.format((java.lang.Object) calendar8);
        java.util.Locale locale12 = java.util.Locale.ITALY;
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale13);
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        java.util.Locale locale16 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale16.getDisplayVariant(locale17);
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.getDefault();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        java.lang.String str28 = locale25.getDisplayCountry();
        java.lang.String str29 = locale25.getDisplayLanguage();
        java.lang.String str30 = locale25.getLanguage();
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        boolean boolean38 = locale37.hasExtensions();
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.util.Locale locale40 = java.util.Locale.ITALIAN;
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.US;
        java.util.Locale locale46 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale47 = java.util.Locale.ROOT;
        java.lang.String str48 = locale46.getDisplayScript(locale47);
        java.util.Locale locale49 = java.util.Locale.US;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.US;
        java.util.Locale locale52 = java.util.Locale.ITALY;
        java.util.Locale locale53 = java.util.Locale.getDefault();
        java.util.Locale locale57 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale58);
        java.util.Locale locale60 = java.util.Locale.US;
        java.util.Locale locale61 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale63 = java.util.Locale.CHINESE;
        java.lang.String str64 = locale63.getLanguage();
        boolean boolean65 = locale63.hasExtensions();
        java.lang.String str66 = locale62.getDisplayVariant(locale63);
        java.util.Locale[] localeArray67 = new java.util.Locale[] { locale12, locale13, locale15, locale17, locale21, locale22, locale23, locale25, locale35, locale37, locale39, locale40, locale41, locale42, locale47, locale49, locale50, locale51, locale52, locale53, locale57, locale58, locale60, locale61, locale62 };
        java.util.ArrayList<java.util.Locale> localeList68 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList68, localeArray67);
        boolean boolean70 = localeList68.isEmpty();
        java.util.Locale locale72 = localeList68.get((int) (short) 0);
        java.util.TimeZone timeZone74 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone74);
        java.lang.String str76 = fastDateFormat75.getPattern();
        java.lang.String str78 = fastDateFormat75.format(1645513660686L);
        java.util.Date date79 = new java.util.Date();
        int int80 = date79.getSeconds();
        java.lang.String str81 = fastDateFormat75.format(date79);
        java.lang.String str83 = fastDateFormat75.format((long) 32769);
        java.util.TimeZone timeZone84 = fastDateFormat75.getTimeZone();
        java.util.TimeZone.setDefault(timeZone84);
        java.util.Calendar calendar86 = java.util.Calendar.getInstance(timeZone84);
        int int87 = localeList68.indexOf((java.lang.Object) calendar86);
        calendar86.setFirstDayOfWeek(42);
        java.lang.String str90 = fastDateFormat2.format(calendar86);
        java.lang.String str91 = fastDateFormat2.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar86", (calendar8.compareTo(calendar86) == 0) == calendar8.equals(calendar86));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test080");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Calendar.Builder builder16 = builder12.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        timeZone26.setID("");
        timeZone26.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder35 = builder12.setTimeZone(timeZone26);
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        boolean boolean40 = locale38.hasExtensions();
        boolean boolean41 = parsePosition37.equals((java.lang.Object) locale38);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(locale38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale38);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale57.getDisplayVariant(locale58);
        java.util.Locale.setDefault(locale58);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone54, locale58);
        java.lang.String str64 = locale44.getDisplayLanguage(locale58);
        java.util.Locale locale65 = locale58.stripExtensions();
        java.lang.String str66 = locale38.getDisplayLanguage(locale65);
        java.lang.String str67 = locale65.getScript();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone26, locale65);
        int int69 = timeZone26.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar68", (calendar23.compareTo(calendar68) == 0) == calendar23.equals(calendar68));
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test081");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Calendar.Builder builder86 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder88 = builder86.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder90 = builder88.setLenient(true);
        java.util.Calendar calendar91 = builder90.build();
        java.lang.String str92 = fastDateFormat2.format(calendar91);
        java.lang.Object obj93 = calendar91.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test082");
        java.util.Locale.LanguageRange[] languageRangeArray0 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList1 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList1, languageRangeArray0);
        java.util.Locale locale3 = java.util.Locale.GERMAN;
        java.util.Locale locale4 = java.util.Locale.FRANCE;
        boolean boolean5 = locale4.hasExtensions();
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        java.util.Locale[] localeArray9 = new java.util.Locale[] { locale3, locale4, locale6, locale7 };
        java.util.ArrayList<java.util.Locale> localeList10 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList10, localeArray9);
        java.util.Locale.FilteringMode filteringMode12 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList13 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList1, (java.util.Collection<java.util.Locale>) localeList10, filteringMode12);
        java.util.Spliterator<java.util.Locale> localeSpliterator14 = localeList13.spliterator();
        java.util.Iterator<java.util.Locale> localeItor15 = localeList13.iterator();
        java.util.Locale locale16 = java.util.Locale.ROOT;
        boolean boolean17 = localeList13.remove((java.lang.Object) locale16);
        boolean boolean18 = localeList13.isEmpty();
        java.util.Locale locale19 = java.util.Locale.CHINA;
        java.util.Locale[] localeArray20 = new java.util.Locale[] { locale19 };
        java.util.Locale[] localeArray21 = localeList13.toArray(localeArray20);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        boolean boolean25 = timeZone23.hasSameRules(timeZone24);
        boolean boolean26 = timeZone22.hasSameRules(timeZone23);
        java.util.TimeZone.setDefault(timeZone23);
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone23);
        calendar28.set(8, 4);
        int int32 = calendar28.getWeeksInWeekYear();
        java.util.Locale locale36 = new java.util.Locale("", "hi!", "");
        boolean boolean37 = calendar28.before((java.lang.Object) locale36);
        java.lang.String str38 = locale36.getDisplayName();
        java.util.Locale locale39 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet40 = locale39.getUnicodeLocaleAttributes();
        java.util.Locale locale41 = locale39.stripExtensions();
        java.lang.String str42 = locale36.getDisplayScript(locale41);
        boolean boolean43 = localeList13.add(locale36);
        java.util.Calendar.Builder builder44 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder48 = builder44.setWeekDate(16, 3, 100);
        java.util.Calendar.Builder builder52 = builder44.setTimeOfDay((int) (byte) 100, 32770, 12);
        java.util.Calendar.Builder builder56 = builder52.setDate(6, 23, 1);
        java.util.Calendar.Builder builder60 = builder56.setTimeOfDay(22, (int) (short) 10, 16);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.lang.String str68 = fastDateFormat63.format((long) 40);
        java.util.TimeZone timeZone69 = fastDateFormat63.getTimeZone();
        java.util.TimeZone timeZone70 = fastDateFormat63.getTimeZone();
        java.util.Calendar.Builder builder71 = builder60.setTimeZone(timeZone70);
        java.util.TimeZone timeZone72 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone74 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone74);
        java.lang.String str76 = fastDateFormat75.getPattern();
        java.lang.String str78 = fastDateFormat75.format(1645513660686L);
        java.util.Locale locale79 = java.util.Locale.ITALIAN;
        boolean boolean80 = fastDateFormat75.equals((java.lang.Object) locale79);
        java.util.Calendar calendar81 = java.util.Calendar.getInstance(timeZone72, locale79);
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar.Builder builder83 = builder60.setTimeZone(timeZone72);
        java.util.Calendar.Builder builder87 = builder60.setDate(2022, (int) (short) 100, 48);
        boolean boolean88 = localeList13.equals((java.lang.Object) builder87);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar28 and calendar81", (calendar28.compareTo(calendar81) == 0) == calendar28.equals(calendar81));
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test083");
        java.util.Locale.LanguageRange languageRange2 = new java.util.Locale.LanguageRange("gregory", (double) (short) 0);
        java.lang.String str3 = languageRange2.getRange();
        java.util.Locale.LanguageRange languageRange6 = new java.util.Locale.LanguageRange("gregory", (double) (short) 0);
        java.util.Locale.LanguageRange[] languageRangeArray7 = new java.util.Locale.LanguageRange[] { languageRange2, languageRange6 };
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList8 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList8, languageRangeArray7);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap10 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList11 = java.util.Locale.LanguageRange.mapEquivalents((java.util.List<java.util.Locale.LanguageRange>) languageRangeList8, strMap10);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList13 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray14 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList15 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList15, languageRangeArray14);
        java.util.Locale locale17 = java.util.Locale.GERMAN;
        java.util.Locale locale18 = java.util.Locale.FRANCE;
        boolean boolean19 = locale18.hasExtensions();
        java.util.Locale locale20 = java.util.Locale.FRANCE;
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        java.util.Locale[] localeArray23 = new java.util.Locale[] { locale17, locale18, locale20, locale21 };
        java.util.ArrayList<java.util.Locale> localeList24 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList24, localeArray23);
        java.util.Locale.FilteringMode filteringMode26 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList27 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList15, (java.util.Collection<java.util.Locale>) localeList24, filteringMode26);
        java.util.List<java.util.Locale> localeList28 = java.util.Locale.filter(languageRangeList13, (java.util.Collection<java.util.Locale>) localeList27);
        localeList28.clear();
        int int30 = localeList28.size();
        boolean boolean31 = localeList28.isEmpty();
        java.util.Locale locale32 = java.util.Locale.lookup(languageRangeList11, (java.util.Collection<java.util.Locale>) localeList28);
        int int34 = localeList28.indexOf((java.lang.Object) 83933478180000L);
        java.util.TimeZone timeZone37 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat38 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone37);
        java.lang.String str39 = fastDateFormat38.getPattern();
        java.lang.String str41 = fastDateFormat38.format(1645513660686L);
        java.util.TimeZone timeZone42 = fastDateFormat38.getTimeZone();
        java.lang.String str43 = timeZone42.getID();
        java.util.Locale locale44 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale45 = java.util.Locale.CHINESE;
        java.lang.String str46 = locale45.getLanguage();
        boolean boolean47 = locale45.hasExtensions();
        java.lang.String str48 = locale44.getDisplayVariant(locale45);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(timeZone42, locale44);
        localeList28.add(0, locale44);
        java.util.TimeZone timeZone51 = java.util.TimeZone.getDefault();
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone51);
        java.lang.Object obj53 = timeZone51.clone();
        int int54 = localeList28.lastIndexOf(obj53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar49 and calendar52", (calendar49.compareTo(calendar52) == 0) == calendar49.equals(calendar52));
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test084");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Locale.LanguageRange[] languageRangeArray76 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList77 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList77, languageRangeArray76);
        java.util.Locale locale79 = java.util.Locale.GERMAN;
        java.util.Locale locale80 = java.util.Locale.FRANCE;
        boolean boolean81 = locale80.hasExtensions();
        java.util.Locale locale82 = java.util.Locale.FRANCE;
        java.util.Locale locale83 = java.util.Locale.CHINESE;
        java.lang.String str84 = locale83.getLanguage();
        java.util.Locale[] localeArray85 = new java.util.Locale[] { locale79, locale80, locale82, locale83 };
        java.util.ArrayList<java.util.Locale> localeList86 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList86, localeArray85);
        java.util.Locale.FilteringMode filteringMode88 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList89 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList77, (java.util.Collection<java.util.Locale>) localeList86, filteringMode88);
        boolean boolean90 = localeList56.remove((java.lang.Object) filteringMode88);
        boolean boolean92 = localeList56.remove((java.lang.Object) 100.0f);
        int int94 = localeList56.lastIndexOf((java.lang.Object) "29 Aug 2022 23:59:59 GMT");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test085");
        java.util.Locale.LanguageRange[] languageRangeArray0 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList1 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList1, languageRangeArray0);
        java.util.Locale locale3 = java.util.Locale.GERMAN;
        java.util.Locale locale4 = java.util.Locale.FRANCE;
        boolean boolean5 = locale4.hasExtensions();
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        java.util.Locale[] localeArray9 = new java.util.Locale[] { locale3, locale4, locale6, locale7 };
        java.util.ArrayList<java.util.Locale> localeList10 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList10, localeArray9);
        java.util.Locale.FilteringMode filteringMode12 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList13 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList1, (java.util.Collection<java.util.Locale>) localeList10, filteringMode12);
        java.util.Spliterator<java.util.Locale> localeSpliterator14 = localeList13.spliterator();
        java.util.Iterator<java.util.Locale> localeItor15 = localeList13.iterator();
        java.util.Locale locale16 = java.util.Locale.ROOT;
        boolean boolean17 = localeList13.remove((java.lang.Object) locale16);
        boolean boolean18 = localeList13.isEmpty();
        localeList13.clear();
        localeList13.clear();
        localeList13.clear();
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone23);
        java.lang.String str25 = fastDateFormat24.getPattern();
        java.lang.String str27 = fastDateFormat24.format(1645513660686L);
        java.lang.String str29 = fastDateFormat24.format((long) 'x');
        int int30 = localeList13.indexOf((java.lang.Object) 'x');
        int int32 = localeList13.indexOf((java.lang.Object) 1645513765951L);
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone34 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        boolean boolean36 = timeZone34.hasSameRules(timeZone35);
        boolean boolean37 = timeZone33.hasSameRules(timeZone34);
        java.util.TimeZone.setDefault(timeZone34);
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(timeZone34);
        long long40 = calendar39.getTimeInMillis();
        int int41 = calendar39.getWeeksInWeekYear();
        calendar39.setLenient(false);
        int int44 = calendar39.getWeeksInWeekYear();
        java.util.Locale locale45 = java.util.Locale.GERMANY;
        java.util.Locale locale47 = new java.util.Locale("Chinese");
        java.lang.String str48 = locale45.getDisplayLanguage(locale47);
        java.util.Locale locale49 = java.util.Locale.CHINESE;
        java.lang.String str50 = locale49.getLanguage();
        boolean boolean51 = locale49.hasExtensions();
        java.lang.String str52 = locale49.getDisplayCountry();
        java.lang.String str53 = locale49.getISO3Language();
        java.util.Locale locale55 = java.util.Locale.getDefault();
        java.lang.String str56 = locale55.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat57 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale55);
        java.lang.String str58 = locale49.getDisplayName(locale55);
        java.util.Locale.setDefault(locale49);
        java.util.TimeZone timeZone60 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Locale locale67 = java.util.Locale.ITALIAN;
        boolean boolean68 = fastDateFormat63.equals((java.lang.Object) locale67);
        java.util.Calendar calendar69 = java.util.Calendar.getInstance(timeZone60, locale67);
        java.util.Locale locale70 = java.util.Locale.FRANCE;
        boolean boolean71 = locale70.hasExtensions();
        java.lang.String str72 = locale67.getDisplayVariant(locale70);
        java.lang.String str73 = locale67.getDisplayScript();
        java.lang.String str74 = locale49.getDisplayCountry(locale67);
        java.lang.String str75 = locale45.getDisplayCountry(locale49);
        java.util.Set<java.lang.String> strSet76 = locale49.getUnicodeLocaleAttributes();
        boolean boolean77 = calendar39.before((java.lang.Object) strSet76);
        boolean boolean78 = localeList13.retainAll((java.util.Collection<java.lang.String>) strSet76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar39 and calendar69", (calendar39.compareTo(calendar69) == 0) == calendar39.equals(calendar69));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test086");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.TimeZone.setDefault(timeZone0);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone0);
        boolean boolean12 = timeZone0.useDaylightTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar11", (calendar9.compareTo(calendar11) == 0) == calendar9.equals(calendar11));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test087");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int11 = timeZone1.getRawOffset();
        java.util.Locale locale15 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale15);
        int int20 = calendar18.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone21 = calendar18.getTimeZone();
        boolean boolean22 = timeZone1.hasSameRules(timeZone21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date24 = calendar23.getTime();
        int int25 = date24.getDate();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar23", (calendar18.compareTo(calendar23) == 0) == calendar18.equals(calendar23));
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test088");
        java.text.FieldPosition fieldPosition1 = new java.text.FieldPosition(32770);
        int int2 = fieldPosition1.getBeginIndex();
        boolean boolean4 = fieldPosition1.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone6 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone6);
        java.lang.String str8 = fastDateFormat7.getPattern();
        java.lang.String str10 = fastDateFormat7.format(1645513660686L);
        java.util.Locale locale11 = java.util.Locale.ITALIAN;
        boolean boolean12 = fastDateFormat7.equals((java.lang.Object) locale11);
        int int13 = fastDateFormat7.getMaxLengthEstimate();
        boolean boolean14 = fieldPosition1.equals((java.lang.Object) fastDateFormat7);
        java.util.TimeZone timeZone15 = fastDateFormat7.getTimeZone();
        java.lang.String str16 = fastDateFormat7.toString();
        int int17 = fastDateFormat7.getMaxLengthEstimate();
        java.lang.String str19 = fastDateFormat7.format((long) 41);
        boolean boolean21 = fastDateFormat7.equals((java.lang.Object) "7:07:46 AM UTC");
        java.util.TimeZone timeZone22 = fastDateFormat7.getTimeZone();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        boolean boolean25 = timeZone23.hasSameRules(timeZone24);
        boolean boolean26 = timeZone23.observesDaylightTime();
        java.util.Locale locale27 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet28 = locale27.getUnicodeLocaleAttributes();
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone23, locale27);
        int int31 = timeZone23.getOffset(0L);
        boolean boolean32 = timeZone22.hasSameRules(timeZone23);
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        boolean boolean37 = locale35.hasExtensions();
        java.lang.String str38 = locale35.getDisplayCountry();
        java.util.Set<java.lang.String> strSet39 = locale35.getUnicodeLocaleAttributes();
        java.lang.String str40 = locale35.getDisplayName();
        java.util.Locale locale41 = java.util.Locale.CHINESE;
        java.lang.String str42 = locale41.getLanguage();
        boolean boolean43 = locale41.hasExtensions();
        java.lang.String str44 = locale41.getDisplayCountry();
        java.lang.String str45 = locale41.getISO3Language();
        java.util.Locale locale47 = java.util.Locale.getDefault();
        java.lang.String str48 = locale47.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat49 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale47);
        java.lang.String str50 = locale41.getDisplayName(locale47);
        java.util.Locale.setDefault(locale41);
        java.util.TimeZone timeZone52 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone54 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat55 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone54);
        java.lang.String str56 = fastDateFormat55.getPattern();
        java.lang.String str58 = fastDateFormat55.format(1645513660686L);
        java.util.Locale locale59 = java.util.Locale.ITALIAN;
        boolean boolean60 = fastDateFormat55.equals((java.lang.Object) locale59);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone52, locale59);
        java.util.Locale locale62 = java.util.Locale.FRANCE;
        boolean boolean63 = locale62.hasExtensions();
        java.lang.String str64 = locale59.getDisplayVariant(locale62);
        java.lang.String str65 = locale59.getDisplayScript();
        java.lang.String str66 = locale41.getDisplayCountry(locale59);
        java.lang.String str67 = locale59.getCountry();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(locale59);
        java.util.Locale.setDefault(locale59);
        java.lang.String str70 = locale35.getDisplayLanguage(locale59);
        java.lang.String str71 = timeZone23.getDisplayName(false, (int) (byte) 1, locale35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar29 and calendar61", (calendar29.compareTo(calendar61) == 0) == calendar29.equals(calendar61));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test089");
        java.text.AttributedCharacterIterator.Attribute attribute0 = java.text.AttributedCharacterIterator.Attribute.READING;
        java.lang.Object obj1 = null;
        boolean boolean2 = attribute0.equals(obj1);
        java.util.Locale.LanguageRange[] languageRangeArray3 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList4 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList4, languageRangeArray3);
        java.util.Locale locale6 = java.util.Locale.GERMAN;
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        boolean boolean8 = locale7.hasExtensions();
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        java.util.Locale locale10 = java.util.Locale.CHINESE;
        java.lang.String str11 = locale10.getLanguage();
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale6, locale7, locale9, locale10 };
        java.util.ArrayList<java.util.Locale> localeList13 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList13, localeArray12);
        java.util.Locale.FilteringMode filteringMode15 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList4, (java.util.Collection<java.util.Locale>) localeList13, filteringMode15);
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.util.Set<java.lang.String> strSet21 = locale17.getUnicodeLocaleKeys();
        java.util.stream.Stream<java.lang.String> strStream22 = strSet21.parallelStream();
        java.util.Locale.FilteringMode filteringMode23 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.lang.String> strList24 = java.util.Locale.filterTags((java.util.List<java.util.Locale.LanguageRange>) languageRangeList4, (java.util.Collection<java.lang.String>) strSet21, filteringMode23);
        boolean boolean25 = attribute0.equals((java.lang.Object) languageRangeList4);
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone26.observesDaylightTime();
        java.util.Locale locale30 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet31 = locale30.getUnicodeLocaleAttributes();
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(timeZone26, locale30);
        boolean boolean33 = timeZone26.observesDaylightTime();
        java.util.TimeZone timeZone34 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        boolean boolean37 = timeZone35.hasSameRules(timeZone36);
        boolean boolean38 = timeZone34.hasSameRules(timeZone35);
        boolean boolean39 = timeZone26.hasSameRules(timeZone35);
        timeZone26.setRawOffset(117);
        boolean boolean42 = timeZone26.observesDaylightTime();
        timeZone26.setID("3.59.06 GMT+00:00");
        boolean boolean45 = attribute0.equals((java.lang.Object) "3.59.06 GMT+00:00");
        java.lang.String str46 = attribute0.toString();
        java.lang.String str47 = attribute0.toString();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        boolean boolean50 = timeZone48.hasSameRules(timeZone49);
        boolean boolean51 = timeZone48.observesDaylightTime();
        java.util.Locale locale52 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet53 = locale52.getUnicodeLocaleAttributes();
        java.util.Calendar calendar54 = java.util.Calendar.getInstance(timeZone48, locale52);
        boolean boolean55 = timeZone48.observesDaylightTime();
        java.util.TimeZone timeZone56 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone57 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone58 = java.util.TimeZone.getDefault();
        boolean boolean59 = timeZone57.hasSameRules(timeZone58);
        boolean boolean60 = timeZone56.hasSameRules(timeZone57);
        boolean boolean61 = timeZone48.hasSameRules(timeZone57);
        java.lang.String str62 = timeZone57.getID();
        boolean boolean63 = attribute0.equals((java.lang.Object) str62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar32 and calendar54", (calendar32.compareTo(calendar54) == 0) == calendar32.equals(calendar54));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test090");
        java.text.FieldPosition fieldPosition1 = new java.text.FieldPosition(32770);
        int int2 = fieldPosition1.getBeginIndex();
        boolean boolean4 = fieldPosition1.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone6 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone6);
        java.lang.String str8 = fastDateFormat7.getPattern();
        java.lang.String str10 = fastDateFormat7.format(1645513660686L);
        java.util.Locale locale11 = java.util.Locale.ITALIAN;
        boolean boolean12 = fastDateFormat7.equals((java.lang.Object) locale11);
        int int13 = fastDateFormat7.getMaxLengthEstimate();
        boolean boolean14 = fieldPosition1.equals((java.lang.Object) fastDateFormat7);
        java.util.TimeZone timeZone15 = fastDateFormat7.getTimeZone();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone16.hasSameRules(timeZone17);
        java.util.TimeZone.setDefault(timeZone17);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone17);
        calendar22.set(8, 4);
        calendar22.setMinimalDaysInFirstWeek(4);
        java.lang.String str28 = calendar22.getCalendarType();
        java.time.Instant instant29 = calendar22.toInstant();
        java.util.Date date30 = java.util.Date.from(instant29);
        java.lang.String str31 = fastDateFormat7.format(date30);
        java.util.TimeZone timeZone33 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat34 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone33);
        java.lang.String str35 = fastDateFormat34.getPattern();
        java.lang.String str37 = fastDateFormat34.format(1645513660686L);
        java.util.Date date38 = new java.util.Date();
        int int39 = date38.getSeconds();
        java.lang.String str40 = fastDateFormat34.format(date38);
        java.lang.String str42 = fastDateFormat34.format((long) 32769);
        java.util.TimeZone timeZone43 = fastDateFormat34.getTimeZone();
        java.lang.String str45 = fastDateFormat34.format(1645513662945L);
        java.util.TimeZone timeZone46 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone47 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        boolean boolean49 = timeZone47.hasSameRules(timeZone48);
        boolean boolean50 = timeZone46.hasSameRules(timeZone47);
        boolean boolean51 = timeZone46.observesDaylightTime();
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone46);
        int int54 = calendar52.getActualMaximum((int) (byte) 10);
        calendar52.setLenient(false);
        java.util.Date date57 = new java.util.Date();
        int int58 = date57.getSeconds();
        long long59 = date57.getTime();
        date57.setTime((long) (byte) 0);
        date57.setYear(4);
        calendar52.setTime(date57);
        java.util.Date date66 = new java.util.Date(1645513677217L);
        date66.setTime(1645513677065L);
        calendar52.setTime(date66);
        java.lang.String str70 = fastDateFormat34.format(calendar52);
        java.lang.String str71 = fastDateFormat7.format(calendar52);
        java.util.TimeZone timeZone73 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone74 = java.util.TimeZone.getDefault();
        boolean boolean75 = timeZone73.hasSameRules(timeZone74);
        boolean boolean76 = timeZone73.observesDaylightTime();
        int int77 = timeZone73.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat78 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone73);
        timeZone73.setRawOffset(9);
        timeZone73.setID("7:07:40 AM UTC");
        int int83 = timeZone73.getRawOffset();
        java.util.Locale locale87 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale88 = java.util.Locale.ROOT;
        java.lang.String str89 = locale87.getDisplayScript(locale88);
        java.util.Calendar calendar90 = java.util.Calendar.getInstance(locale87);
        int int92 = calendar90.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone93 = calendar90.getTimeZone();
        boolean boolean94 = timeZone73.hasSameRules(timeZone93);
        java.util.Calendar calendar95 = java.util.Calendar.getInstance(timeZone73);
        boolean boolean96 = calendar95.isWeekDateSupported();
        boolean boolean97 = fastDateFormat7.equals((java.lang.Object) boolean96);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar90", (calendar22.compareTo(calendar90) == 0) == calendar22.equals(calendar90));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test091");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        java.util.Locale locale3 = java.util.Locale.getDefault();
        java.lang.String str4 = locale3.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale3);
        java.util.Locale.setDefault(category0, locale3);
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        boolean boolean9 = locale7.hasExtensions();
        java.lang.String str10 = locale7.getDisplayCountry();
        java.lang.String str11 = locale7.getISO3Language();
        java.util.Locale locale13 = java.util.Locale.getDefault();
        java.lang.String str14 = locale13.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale13);
        java.lang.String str16 = locale7.getDisplayName(locale13);
        java.util.Locale.setDefault(locale7);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat21 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone20);
        java.lang.String str22 = fastDateFormat21.getPattern();
        java.lang.String str24 = fastDateFormat21.format(1645513660686L);
        java.util.Locale locale25 = java.util.Locale.ITALIAN;
        boolean boolean26 = fastDateFormat21.equals((java.lang.Object) locale25);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone18, locale25);
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        boolean boolean29 = locale28.hasExtensions();
        java.lang.String str30 = locale25.getDisplayVariant(locale28);
        java.lang.String str31 = locale25.getDisplayScript();
        java.lang.String str32 = locale7.getDisplayCountry(locale25);
        java.lang.String str33 = locale25.getCountry();
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(locale25);
        java.lang.String str35 = locale3.getDisplayScript(locale25);
        java.util.Locale locale37 = new java.util.Locale("Chinese");
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(locale37);
        java.lang.String str39 = locale37.getCountry();
        java.util.Locale locale44 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale44.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat48 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale44);
        java.lang.String str49 = locale37.getDisplayLanguage(locale44);
        java.lang.String str50 = locale25.getDisplayLanguage(locale37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar27 and calendar38", (calendar27.compareTo(calendar38) == 0) == calendar27.equals(calendar38));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test092");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean16 = timeZone2.hasSameRules(timeZone15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        boolean boolean22 = locale21.hasExtensions();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        java.util.Locale locale24 = java.util.Locale.CHINESE;
        java.lang.String str25 = locale24.getLanguage();
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale20, locale21, locale23, locale24 };
        java.util.ArrayList<java.util.Locale> localeList27 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList27, localeArray26);
        java.util.Locale.FilteringMode filteringMode29 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList30 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList27, filteringMode29);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList32 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Set<java.lang.String> strSet35 = locale33.getUnicodeLocaleAttributes();
        java.lang.String str36 = java.util.Locale.lookupTag(languageRangeList32, (java.util.Collection<java.lang.String>) strSet35);
        boolean boolean37 = localeList30.containsAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean39 = localeList30.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator40 = localeList30.spliterator();
        java.util.Locale locale44 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale44.getISO3Language();
        boolean boolean48 = localeList30.add(locale44);
        java.util.ListIterator<java.util.Locale> localeItor49 = localeList30.listIterator();
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder50.clear();
        java.util.Locale locale52 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale52.getDisplayVariant(locale53);
        java.util.Locale.Builder builder57 = builder51.setLocale(locale52);
        java.util.Locale locale58 = builder57.build();
        java.util.Locale.Builder builder60 = builder57.addUnicodeLocaleAttribute("German");
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str63 = locale61.getDisplayLanguage(locale62);
        java.util.Locale.Builder builder64 = builder57.setLocale(locale61);
        java.lang.String str65 = locale61.getISO3Country();
        boolean boolean66 = localeList30.add(locale61);
        java.lang.String str67 = locale61.toLanguageTag();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone2, locale61);
        java.util.Calendar calendar69 = java.util.Calendar.getInstance(locale61);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar68", (calendar11.compareTo(calendar68) == 0) == calendar11.equals(calendar68));
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test093");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str32 = fastDateFormat31.toString();
        java.text.ParsePosition parsePosition35 = new java.text.ParsePosition(16);
        parsePosition35.setIndex(10);
        parsePosition35.setIndex(0);
        java.lang.Object obj40 = fastDateFormat31.parseObject("Taiwan", parsePosition35);
        java.util.TimeZone timeZone41 = fastDateFormat31.getTimeZone();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.lang.String str47 = locale42.getLanguage();
        java.util.Locale.Builder builder48 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder48.clear();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale.Builder builder55 = builder49.setLocale(locale50);
        java.util.Locale locale56 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder57 = builder55.setLocale(locale56);
        java.util.Locale locale58 = builder55.build();
        java.lang.String str59 = locale42.getDisplayScript(locale58);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone41, locale42);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone41);
        calendar6.setTimeZone(timeZone41);
        boolean boolean64 = calendar6.after((java.lang.Object) (-909616799000L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar60 and calendar61", (calendar60.compareTo(calendar61) == 0) == calendar60.equals(calendar61));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test094");
        java.util.Locale.Builder builder1 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder1.clear();
        java.util.Locale.Builder builder3 = builder1.clearExtensions();
        java.text.ParsePosition parsePosition5 = new java.text.ParsePosition(16);
        java.util.Locale locale6 = java.util.Locale.CHINESE;
        java.lang.String str7 = locale6.getLanguage();
        boolean boolean8 = locale6.hasExtensions();
        boolean boolean9 = parsePosition5.equals((java.lang.Object) locale6);
        java.lang.String str10 = locale6.getDisplayCountry();
        java.util.Locale.Builder builder11 = builder3.setLocale(locale6);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, locale6);
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        boolean boolean15 = timeZone13.hasSameRules(timeZone14);
        boolean boolean16 = timeZone13.observesDaylightTime();
        java.util.Locale locale17 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet18 = locale17.getUnicodeLocaleAttributes();
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone13, locale17);
        calendar19.setMinimalDaysInFirstWeek(32769);
        java.lang.String str22 = fastDateFormat12.format(calendar19);
        java.util.Calendar.Builder builder23 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder28 = builder23.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar29 = builder23.build();
        calendar29.set(59, 48, 5, 999, 55);
        java.lang.String str36 = fastDateFormat12.format(calendar29);
        calendar29.add((int) 'u', 0);
        java.text.ParsePosition parsePosition41 = new java.text.ParsePosition(16);
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        boolean boolean44 = timeZone42.hasSameRules(timeZone43);
        boolean boolean45 = parsePosition41.equals((java.lang.Object) timeZone43);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone43);
        boolean boolean47 = calendar29.after((java.lang.Object) timeZone43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar19 and calendar46", (calendar19.compareTo(calendar46) == 0) == calendar19.equals(calendar46));
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test095");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.TimeZone timeZone8 = fastDateFormat4.getTimeZone();
        java.lang.String str9 = timeZone8.getID();
        java.util.Locale locale10 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        boolean boolean13 = locale11.hasExtensions();
        java.lang.String str14 = locale10.getDisplayVariant(locale11);
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(timeZone8, locale10);
        java.lang.String str17 = locale10.getExtension('a');
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone1, locale10);
        int int19 = timeZone1.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar15 and calendar18", (calendar15.compareTo(calendar18) == 0) == calendar15.equals(calendar18));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test096");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Locale locale12 = java.util.Locale.FRANCE;
        java.util.Map<java.lang.String, java.lang.Integer> strMap13 = calendar9.getDisplayNames((int) (byte) 1, (int) (short) 0, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone15.observesDaylightTime();
        int int19 = timeZone15.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone15);
        timeZone15.setRawOffset(9);
        timeZone15.setID("7:07:40 AM UTC");
        int int26 = timeZone15.getOffset(1645513660365L);
        int int28 = timeZone15.getOffset((long) 22);
        calendar9.setTimeZone(timeZone15);
        timeZone15.setID("22 Feb 2022 07:08:27 GMT");
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        boolean boolean35 = timeZone32.observesDaylightTime();
        java.util.Locale locale36 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet37 = locale36.getUnicodeLocaleAttributes();
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone32, locale36);
        boolean boolean39 = timeZone32.observesDaylightTime();
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone41 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        boolean boolean43 = timeZone41.hasSameRules(timeZone42);
        boolean boolean44 = timeZone40.hasSameRules(timeZone41);
        boolean boolean45 = timeZone32.hasSameRules(timeZone41);
        boolean boolean46 = timeZone15.hasSameRules(timeZone41);
        boolean boolean47 = timeZone15.observesDaylightTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar38", (calendar9.compareTo(calendar38) == 0) == calendar9.equals(calendar38));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test097");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder12 = builder5.setWeekDate((int) (short) 10, (int) (short) 1, 22);
        java.util.Calendar.Builder builder16 = builder5.setTimeOfDay(43, (int) 'a', 0);
        java.util.Calendar.Builder builder19 = builder16.set((int) (short) 0, 23);
        java.util.Calendar.Builder builder22 = builder19.set((int) (short) 10, 20);
        java.util.Calendar.Builder builder24 = builder22.setLenient(false);
        java.util.Calendar.Builder builder29 = builder22.setTimeOfDay(8, 56, 1, 0);
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone32 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat33 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone32);
        java.lang.String str34 = fastDateFormat33.getPattern();
        java.lang.String str36 = fastDateFormat33.format(1645513660686L);
        java.util.Locale locale37 = java.util.Locale.ITALIAN;
        boolean boolean38 = fastDateFormat33.equals((java.lang.Object) locale37);
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(timeZone30, locale37);
        java.util.Locale locale40 = java.util.Locale.FRANCE;
        boolean boolean41 = locale40.hasExtensions();
        java.lang.String str42 = locale37.getDisplayVariant(locale40);
        java.lang.String str43 = locale37.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray44 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList45 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList45, languageRangeArray44);
        java.util.Locale locale47 = java.util.Locale.GERMAN;
        java.util.Locale locale48 = java.util.Locale.FRANCE;
        boolean boolean49 = locale48.hasExtensions();
        java.util.Locale locale50 = java.util.Locale.FRANCE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        java.util.Locale[] localeArray53 = new java.util.Locale[] { locale47, locale48, locale50, locale51 };
        java.util.ArrayList<java.util.Locale> localeList54 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList54, localeArray53);
        java.util.Locale.FilteringMode filteringMode56 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList57 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList45, (java.util.Collection<java.util.Locale>) localeList54, filteringMode56);
        java.util.Spliterator<java.util.Locale> localeSpliterator58 = localeList57.spliterator();
        java.util.Iterator<java.util.Locale> localeItor59 = localeList57.iterator();
        java.util.Locale locale60 = java.util.Locale.ROOT;
        boolean boolean61 = localeList57.remove((java.lang.Object) locale60);
        java.lang.String str62 = locale60.getISO3Country();
        java.lang.String str63 = locale37.getDisplayVariant(locale60);
        java.lang.String str64 = locale60.getScript();
        java.lang.String str65 = locale60.toLanguageTag();
        java.lang.String str66 = locale60.getDisplayScript();
        java.util.Calendar.Builder builder67 = builder22.setLocale(locale60);
        java.util.TimeZone timeZone68 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone69 = java.util.TimeZone.getDefault();
        boolean boolean70 = timeZone68.hasSameRules(timeZone69);
        boolean boolean71 = timeZone68.observesDaylightTime();
        java.util.Locale locale72 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet73 = locale72.getUnicodeLocaleAttributes();
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone68, locale72);
        boolean boolean75 = locale72.hasExtensions();
        java.util.Set<java.lang.String> strSet76 = locale72.getUnicodeLocaleKeys();
        java.lang.String str77 = locale72.getDisplayCountry();
        java.lang.String str78 = locale60.getDisplayCountry(locale72);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar39 and calendar74", (calendar39.compareTo(calendar74) == 0) == calendar39.equals(calendar74));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test098");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        timeZone1.setID("7:07:58 AM UTC");
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone1);
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone9.observesDaylightTime();
        int int13 = timeZone9.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone9);
        timeZone9.setRawOffset(9);
        timeZone9.setID("7:07:40 AM UTC");
        int int20 = timeZone9.getOffset(1645513660365L);
        int int22 = timeZone9.getOffset((long) 22);
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        boolean boolean26 = timeZone24.hasSameRules(timeZone25);
        boolean boolean27 = timeZone23.hasSameRules(timeZone24);
        java.lang.String str28 = timeZone24.getID();
        boolean boolean29 = timeZone9.hasSameRules(timeZone24);
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone32 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat33 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone32);
        java.lang.String str34 = fastDateFormat33.getPattern();
        java.lang.String str36 = fastDateFormat33.format(1645513660686L);
        java.util.Locale locale37 = java.util.Locale.ITALIAN;
        boolean boolean38 = fastDateFormat33.equals((java.lang.Object) locale37);
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(timeZone30, locale37);
        java.util.Calendar calendar40 = java.util.Calendar.getInstance(timeZone24, locale37);
        java.util.Locale locale41 = java.util.Locale.TAIWAN;
        java.util.Locale locale42 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str43 = locale41.getDisplayLanguage(locale42);
        java.lang.String str44 = locale41.getLanguage();
        java.util.Locale locale46 = new java.util.Locale("Chinese");
        java.util.Locale locale47 = locale46.stripExtensions();
        java.lang.String str48 = locale41.getDisplayLanguage(locale46);
        java.util.Locale locale50 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute51 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean53 = attribute51.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale locale59 = locale54.stripExtensions();
        boolean boolean60 = attribute51.equals((java.lang.Object) locale59);
        java.lang.String str61 = locale50.getDisplayLanguage(locale59);
        java.lang.String str62 = locale41.getDisplayCountry(locale59);
        java.lang.String str63 = locale37.getDisplayScript(locale41);
        java.util.Locale locale64 = locale41.stripExtensions();
        java.util.Locale locale65 = locale41.stripExtensions();
        java.util.Calendar calendar66 = java.util.Calendar.getInstance(timeZone1, locale65);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar39", (calendar7.compareTo(calendar39) == 0) == calendar7.equals(calendar39));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test099");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        calendar6.set(8, 4);
        int int10 = calendar6.getWeeksInWeekYear();
        calendar6.setWeekDate(2022, 10, (int) (byte) 1);
        calendar6.setTimeInMillis((long) 12);
        calendar6.set(1970, (int) '#', 0, 28, (int) (byte) 0, 0);
        java.util.TimeZone timeZone25 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat26 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone25);
        java.lang.String str27 = fastDateFormat26.getPattern();
        java.lang.String str29 = fastDateFormat26.format(1645513660686L);
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        boolean boolean32 = timeZone30.hasSameRules(timeZone31);
        boolean boolean33 = timeZone30.observesDaylightTime();
        java.util.Locale locale34 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet35 = locale34.getUnicodeLocaleAttributes();
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(timeZone30, locale34);
        boolean boolean37 = timeZone30.observesDaylightTime();
        java.util.TimeZone timeZone38 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone39 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        boolean boolean41 = timeZone39.hasSameRules(timeZone40);
        boolean boolean42 = timeZone38.hasSameRules(timeZone39);
        boolean boolean43 = timeZone30.hasSameRules(timeZone39);
        boolean boolean44 = fastDateFormat26.equals((java.lang.Object) timeZone30);
        java.lang.String str45 = timeZone30.getID();
        calendar6.setTimeZone(timeZone30);
        timeZone30.setID("7:05:23 AM UTC");
        java.util.Locale.Category category49 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale50 = java.util.Locale.getDefault(category49);
        java.util.Locale.LanguageRange[] languageRangeArray51 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList52 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList52, languageRangeArray51);
        java.util.Locale locale54 = java.util.Locale.GERMAN;
        java.util.Locale locale55 = java.util.Locale.FRANCE;
        boolean boolean56 = locale55.hasExtensions();
        java.util.Locale locale57 = java.util.Locale.FRANCE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale54, locale55, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList52, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Spliterator<java.util.Locale> localeSpliterator65 = localeList64.spliterator();
        java.util.Iterator<java.util.Locale> localeItor66 = localeList64.iterator();
        java.util.Locale locale67 = java.util.Locale.ROOT;
        boolean boolean68 = localeList64.remove((java.lang.Object) locale67);
        java.lang.String str69 = locale67.getISO3Country();
        java.util.Locale.setDefault(category49, locale67);
        java.lang.String str71 = locale67.getISO3Language();
        java.lang.String str72 = locale67.toLanguageTag();
        java.util.TimeZone timeZone73 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone75 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat76 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone75);
        java.lang.String str77 = fastDateFormat76.getPattern();
        java.lang.String str79 = fastDateFormat76.format(1645513660686L);
        java.util.Locale locale80 = java.util.Locale.ITALIAN;
        boolean boolean81 = fastDateFormat76.equals((java.lang.Object) locale80);
        java.util.Calendar calendar82 = java.util.Calendar.getInstance(timeZone73, locale80);
        java.lang.String str83 = locale80.getCountry();
        java.util.Set<java.lang.String> strSet84 = locale80.getUnicodeLocaleKeys();
        java.lang.String str85 = locale67.getDisplayScript(locale80);
        java.lang.String str86 = locale67.getVariant();
        java.util.Calendar calendar87 = java.util.Calendar.getInstance(timeZone30, locale67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar36 and calendar82", (calendar36.compareTo(calendar82) == 0) == calendar36.equals(calendar82));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test100");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Calendar.Builder builder86 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder88 = builder86.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder90 = builder88.setLenient(true);
        java.util.Calendar calendar91 = builder90.build();
        java.lang.String str92 = fastDateFormat2.format(calendar91);
        int int93 = calendar91.getWeeksInWeekYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test101");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        calendar78.setFirstDayOfWeek(42);
        boolean boolean82 = calendar78.isWeekDateSupported();
        calendar78.setLenient(false);
        java.lang.String str85 = fastDateFormat2.format(calendar78);
        java.util.TimeZone timeZone87 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat88 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone87);
        java.lang.String str89 = fastDateFormat88.getPattern();
        java.util.Date date90 = new java.util.Date();
        int int91 = date90.getSeconds();
        java.lang.String str92 = fastDateFormat88.format(date90);
        date90.setYear(6);
        date90.setSeconds(124);
        boolean boolean97 = calendar78.before((java.lang.Object) date90);
        int int98 = date90.getTimezoneOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test102");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        java.lang.Object obj22 = timeZone11.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test103");
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap1 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList2 = java.util.Locale.LanguageRange.parse("zh", strMap1);
        java.util.Locale.LanguageRange[] languageRangeArray3 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList4 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList4, languageRangeArray3);
        java.util.Locale locale6 = java.util.Locale.GERMAN;
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        boolean boolean8 = locale7.hasExtensions();
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        java.util.Locale locale10 = java.util.Locale.CHINESE;
        java.lang.String str11 = locale10.getLanguage();
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale6, locale7, locale9, locale10 };
        java.util.ArrayList<java.util.Locale> localeList13 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList13, localeArray12);
        java.util.Locale.FilteringMode filteringMode15 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList4, (java.util.Collection<java.util.Locale>) localeList13, filteringMode15);
        java.util.Set<java.lang.String> strSet17 = java.util.Calendar.getAvailableCalendarTypes();
        java.util.stream.Stream<java.lang.String> strStream18 = strSet17.parallelStream();
        java.util.List<java.lang.String> strList19 = java.util.Locale.filterTags((java.util.List<java.util.Locale.LanguageRange>) languageRangeList4, (java.util.Collection<java.lang.String>) strSet17);
        java.util.Set<java.lang.String> strSet20 = java.util.Calendar.getAvailableCalendarTypes();
        java.util.stream.Stream<java.lang.String> strStream21 = strSet20.stream();
        java.lang.String str22 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList4, (java.util.Collection<java.lang.String>) strSet20);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList24 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray25 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList26 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList26, languageRangeArray25);
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.FRANCE;
        java.util.Locale locale32 = java.util.Locale.CHINESE;
        java.lang.String str33 = locale32.getLanguage();
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale28, locale29, locale31, locale32 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList26, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter(languageRangeList24, (java.util.Collection<java.util.Locale>) localeList38);
        localeList38.clear();
        java.util.Locale.FilteringMode filteringMode41 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList42 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList4, (java.util.Collection<java.util.Locale>) localeList38, filteringMode41);
        java.util.Calendar.Builder builder43 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder48 = builder43.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder52 = builder43.setWeekDate(16, 3, (int) (byte) 0);
        java.util.Calendar.Builder builder56 = builder43.setDate(122, 56, 55);
        boolean boolean57 = localeList38.remove((java.lang.Object) 55);
        java.util.ListIterator<java.util.Locale> localeItor58 = localeList38.listIterator();
        java.util.Locale.FilteringMode filteringMode59 = java.util.Locale.FilteringMode.AUTOSELECT_FILTERING;
        java.util.List<java.util.Locale> localeList60 = java.util.Locale.filter(languageRangeList2, (java.util.Collection<java.util.Locale>) localeList38, filteringMode59);
        int int61 = localeList60.size();
        java.util.TimeZone timeZone63 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone63);
        java.lang.String str65 = fastDateFormat64.toString();
        boolean boolean66 = fastDateFormat64.getTimeZoneOverridesCalendar();
        java.util.TimeZone timeZone68 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.Calendar.Builder builder69 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder73 = builder69.setWeekDate(16, 3, 100);
        java.util.Locale locale74 = java.util.Locale.GERMANY;
        java.util.Locale locale76 = new java.util.Locale("Chinese");
        java.lang.String str77 = locale74.getDisplayLanguage(locale76);
        java.util.Calendar.Builder builder78 = builder69.setLocale(locale76);
        java.util.TimeZone timeZone79 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone80 = java.util.TimeZone.getDefault();
        boolean boolean81 = timeZone79.hasSameRules(timeZone80);
        boolean boolean82 = timeZone79.observesDaylightTime();
        java.util.Locale locale83 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet84 = locale83.getUnicodeLocaleAttributes();
        java.util.Calendar calendar85 = java.util.Calendar.getInstance(timeZone79, locale83);
        java.lang.String str86 = locale83.getDisplayVariant();
        java.lang.String str87 = locale83.getDisplayVariant();
        java.util.Calendar.Builder builder88 = builder78.setLocale(locale83);
        java.util.Calendar calendar89 = java.util.Calendar.getInstance(timeZone68, locale83);
        boolean boolean91 = calendar89.before((java.lang.Object) "\u5e74\u6708\u65e5\u661f\u671f\u4e8c\u4e0a\u5348\u65f6\u5206\u79d2");
        java.lang.String str92 = fastDateFormat64.format(calendar89);
        boolean boolean93 = localeList60.remove((java.lang.Object) str92);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar85 and calendar89", (calendar85.compareTo(calendar89) == 0) == calendar85.equals(calendar89));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test104");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        calendar74.setFirstDayOfWeek(42);
        boolean boolean78 = calendar74.isWeekDateSupported();
        int int79 = calendar74.getWeeksInWeekYear();
        java.util.Date date80 = calendar74.getTime();
        java.lang.Class<?> wildcardClass81 = date80.getClass();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test105");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute3 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray4 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList5 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList5, languageRangeArray4);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        boolean boolean9 = locale8.hasExtensions();
        java.util.Locale locale10 = java.util.Locale.FRANCE;
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale7, locale8, locale10, locale11 };
        java.util.ArrayList<java.util.Locale> localeList14 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList14, localeArray13);
        java.util.Locale.FilteringMode filteringMode16 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList17 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList5, (java.util.Collection<java.util.Locale>) localeList14, filteringMode16);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList19 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        java.util.Set<java.lang.String> strSet22 = locale20.getUnicodeLocaleAttributes();
        java.lang.String str23 = java.util.Locale.lookupTag(languageRangeList19, (java.util.Collection<java.lang.String>) strSet22);
        boolean boolean24 = localeList17.containsAll((java.util.Collection<java.lang.String>) strSet22);
        boolean boolean26 = localeList17.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator27 = localeList17.spliterator();
        java.util.Locale locale31 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.lang.String str33 = locale31.getDisplayScript(locale32);
        java.lang.String str34 = locale31.getISO3Language();
        boolean boolean35 = localeList17.add(locale31);
        boolean boolean36 = attribute3.equals((java.lang.Object) locale31);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone2, locale31);
        java.time.ZoneId zoneId38 = timeZone2.toZoneId();
        java.util.TimeZone timeZone39 = java.util.TimeZone.getTimeZone(zoneId38);
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone42 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat43 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone42);
        java.lang.String str44 = fastDateFormat43.getPattern();
        java.lang.String str46 = fastDateFormat43.format(1645513660686L);
        java.util.Locale locale47 = java.util.Locale.ITALIAN;
        boolean boolean48 = fastDateFormat43.equals((java.lang.Object) locale47);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(timeZone40, locale47);
        java.util.Locale locale52 = java.util.Locale.FRANCE;
        java.util.Map<java.lang.String, java.lang.Integer> strMap53 = calendar49.getDisplayNames((int) (byte) 1, (int) (short) 0, locale52);
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone56 = java.util.TimeZone.getDefault();
        boolean boolean57 = timeZone55.hasSameRules(timeZone56);
        boolean boolean58 = timeZone55.observesDaylightTime();
        int int59 = timeZone55.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat60 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone55);
        timeZone55.setRawOffset(9);
        timeZone55.setID("7:07:40 AM UTC");
        int int66 = timeZone55.getOffset(1645513660365L);
        int int68 = timeZone55.getOffset((long) 22);
        calendar49.setTimeZone(timeZone55);
        timeZone55.setID("22 Feb 2022 07:08:27 GMT");
        java.util.TimeZone timeZone72 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone73 = java.util.TimeZone.getDefault();
        boolean boolean74 = timeZone72.hasSameRules(timeZone73);
        boolean boolean75 = timeZone72.observesDaylightTime();
        java.util.Locale locale76 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet77 = locale76.getUnicodeLocaleAttributes();
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone72, locale76);
        boolean boolean79 = timeZone72.observesDaylightTime();
        java.util.TimeZone timeZone80 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        boolean boolean84 = timeZone80.hasSameRules(timeZone81);
        boolean boolean85 = timeZone72.hasSameRules(timeZone81);
        boolean boolean86 = timeZone55.hasSameRules(timeZone81);
        boolean boolean87 = timeZone39.hasSameRules(timeZone55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar49 and calendar78", (calendar49.compareTo(calendar78) == 0) == calendar49.equals(calendar78));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test106");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.lang.String str6 = fastDateFormat2.format(date4);
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(locale7);
        int int10 = calendar8.getActualMinimum((int) (byte) 0);
        java.lang.String str11 = fastDateFormat2.format((java.lang.Object) calendar8);
        java.util.Locale locale12 = java.util.Locale.ITALY;
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale13);
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        java.util.Locale locale16 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale16.getDisplayVariant(locale17);
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.getDefault();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        java.lang.String str28 = locale25.getDisplayCountry();
        java.lang.String str29 = locale25.getDisplayLanguage();
        java.lang.String str30 = locale25.getLanguage();
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        boolean boolean38 = locale37.hasExtensions();
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.util.Locale locale40 = java.util.Locale.ITALIAN;
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.US;
        java.util.Locale locale46 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale47 = java.util.Locale.ROOT;
        java.lang.String str48 = locale46.getDisplayScript(locale47);
        java.util.Locale locale49 = java.util.Locale.US;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.US;
        java.util.Locale locale52 = java.util.Locale.ITALY;
        java.util.Locale locale53 = java.util.Locale.getDefault();
        java.util.Locale locale57 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale58);
        java.util.Locale locale60 = java.util.Locale.US;
        java.util.Locale locale61 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale63 = java.util.Locale.CHINESE;
        java.lang.String str64 = locale63.getLanguage();
        boolean boolean65 = locale63.hasExtensions();
        java.lang.String str66 = locale62.getDisplayVariant(locale63);
        java.util.Locale[] localeArray67 = new java.util.Locale[] { locale12, locale13, locale15, locale17, locale21, locale22, locale23, locale25, locale35, locale37, locale39, locale40, locale41, locale42, locale47, locale49, locale50, locale51, locale52, locale53, locale57, locale58, locale60, locale61, locale62 };
        java.util.ArrayList<java.util.Locale> localeList68 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList68, localeArray67);
        boolean boolean70 = localeList68.isEmpty();
        java.util.Locale locale72 = localeList68.get((int) (short) 0);
        java.util.TimeZone timeZone74 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone74);
        java.lang.String str76 = fastDateFormat75.getPattern();
        java.lang.String str78 = fastDateFormat75.format(1645513660686L);
        java.util.Date date79 = new java.util.Date();
        int int80 = date79.getSeconds();
        java.lang.String str81 = fastDateFormat75.format(date79);
        java.lang.String str83 = fastDateFormat75.format((long) 32769);
        java.util.TimeZone timeZone84 = fastDateFormat75.getTimeZone();
        java.util.TimeZone.setDefault(timeZone84);
        java.util.Calendar calendar86 = java.util.Calendar.getInstance(timeZone84);
        int int87 = localeList68.indexOf((java.lang.Object) calendar86);
        calendar86.setFirstDayOfWeek(42);
        java.lang.String str90 = fastDateFormat2.format(calendar86);
        java.util.Date date91 = calendar86.getTime();
        date91.setTime(1645513805521L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar86", (calendar8.compareTo(calendar86) == 0) == calendar8.equals(calendar86));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test107");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Calendar.Builder builder16 = builder12.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        timeZone26.setID("");
        timeZone26.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder35 = builder12.setTimeZone(timeZone26);
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        boolean boolean40 = locale38.hasExtensions();
        boolean boolean41 = parsePosition37.equals((java.lang.Object) locale38);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(locale38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale38);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale57.getDisplayVariant(locale58);
        java.util.Locale.setDefault(locale58);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone54, locale58);
        java.lang.String str64 = locale44.getDisplayLanguage(locale58);
        java.util.Locale locale65 = locale58.stripExtensions();
        java.lang.String str66 = locale38.getDisplayLanguage(locale65);
        java.lang.String str67 = locale65.getScript();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone26, locale65);
        timeZone26.setRawOffset(7200000);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar68", (calendar23.compareTo(calendar68) == 0) == calendar23.equals(calendar68));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test108");
        java.util.Locale.Builder builder1 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder1.clear();
        java.util.Locale.Builder builder3 = builder1.clearExtensions();
        java.text.ParsePosition parsePosition5 = new java.text.ParsePosition(16);
        java.util.Locale locale6 = java.util.Locale.CHINESE;
        java.lang.String str7 = locale6.getLanguage();
        boolean boolean8 = locale6.hasExtensions();
        boolean boolean9 = parsePosition5.equals((java.lang.Object) locale6);
        java.lang.String str10 = locale6.getDisplayCountry();
        java.util.Locale.Builder builder11 = builder3.setLocale(locale6);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, locale6);
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        boolean boolean15 = timeZone13.hasSameRules(timeZone14);
        boolean boolean16 = timeZone13.observesDaylightTime();
        java.util.Locale locale17 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet18 = locale17.getUnicodeLocaleAttributes();
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone13, locale17);
        calendar19.setMinimalDaysInFirstWeek(32769);
        java.lang.String str22 = fastDateFormat12.format(calendar19);
        java.util.Calendar.Builder builder23 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder28 = builder23.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar29 = builder23.build();
        calendar29.set(59, 48, 5, 999, 55);
        java.lang.String str36 = fastDateFormat12.format(calendar29);
        java.lang.String str37 = fastDateFormat12.toString();
        boolean boolean38 = fastDateFormat12.getTimeZoneOverridesCalendar();
        java.util.TimeZone timeZone40 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone40);
        java.lang.String str42 = fastDateFormat41.getPattern();
        java.lang.String str44 = fastDateFormat41.format(1645513660686L);
        java.util.TimeZone timeZone45 = fastDateFormat41.getTimeZone();
        java.lang.String str46 = timeZone45.getID();
        java.util.Locale locale47 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale48 = java.util.Locale.CHINESE;
        java.lang.String str49 = locale48.getLanguage();
        boolean boolean50 = locale48.hasExtensions();
        java.lang.String str51 = locale47.getDisplayVariant(locale48);
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone45, locale47);
        java.util.Calendar calendar53 = java.util.Calendar.getInstance(locale47);
        java.util.TimeZone timeZone54 = calendar53.getTimeZone();
        java.lang.String str55 = fastDateFormat12.format(calendar53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar19 and calendar52", (calendar19.compareTo(calendar52) == 0) == calendar19.equals(calendar52));
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test109");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Locale locale10 = java.util.Locale.FRANCE;
        boolean boolean11 = locale10.hasExtensions();
        java.lang.String str12 = locale7.getDisplayVariant(locale10);
        java.lang.String str13 = locale7.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray14 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList15 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList15, languageRangeArray14);
        java.util.Locale locale17 = java.util.Locale.GERMAN;
        java.util.Locale locale18 = java.util.Locale.FRANCE;
        boolean boolean19 = locale18.hasExtensions();
        java.util.Locale locale20 = java.util.Locale.FRANCE;
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        java.util.Locale[] localeArray23 = new java.util.Locale[] { locale17, locale18, locale20, locale21 };
        java.util.ArrayList<java.util.Locale> localeList24 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList24, localeArray23);
        java.util.Locale.FilteringMode filteringMode26 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList27 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList15, (java.util.Collection<java.util.Locale>) localeList24, filteringMode26);
        java.util.Spliterator<java.util.Locale> localeSpliterator28 = localeList27.spliterator();
        java.util.Iterator<java.util.Locale> localeItor29 = localeList27.iterator();
        java.util.Locale locale30 = java.util.Locale.ROOT;
        boolean boolean31 = localeList27.remove((java.lang.Object) locale30);
        java.lang.String str32 = locale30.getISO3Country();
        java.lang.String str33 = locale7.getDisplayVariant(locale30);
        java.util.Locale locale34 = java.util.Locale.ROOT;
        java.lang.String str35 = locale34.getDisplayLanguage();
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(locale34);
        java.lang.String str37 = locale7.getDisplayCountry(locale34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar36", (calendar9.compareTo(calendar36) == 0) == calendar9.equals(calendar36));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test110");
        java.util.Date date0 = new java.util.Date();
        int int1 = date0.getSeconds();
        java.util.Date date2 = new java.util.Date();
        int int3 = date2.getTimezoneOffset();
        date2.setMinutes(5);
        boolean boolean6 = date0.after(date2);
        java.util.TimeZone timeZone8 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat9 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone8);
        java.lang.String str10 = fastDateFormat9.getPattern();
        java.util.Date date11 = new java.util.Date();
        int int12 = date11.getSeconds();
        java.lang.String str13 = fastDateFormat9.format(date11);
        boolean boolean14 = date0.before(date11);
        date11.setHours(40);
        date11.setTime((long) 2);
        java.util.Date date19 = new java.util.Date();
        java.lang.String str20 = date19.toGMTString();
        int int21 = date19.getYear();
        int int22 = date19.getSeconds();
        int int23 = date19.getHours();
        date19.setMonth(50);
        boolean boolean26 = date11.after(date19);
        date19.setYear(48);
        date19.setTime(1645513670572L);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance();
        long long32 = calendar31.getTimeInMillis();
        calendar31.setLenient(false);
        java.time.Instant instant35 = calendar31.toInstant();
        java.util.Date date36 = java.util.Date.from(instant35);
        java.util.Date date38 = new java.util.Date(1645513676073L);
        boolean boolean39 = date36.before(date38);
        boolean boolean40 = date19.before(date38);
        java.time.Instant instant41 = date19.toInstant();
        java.lang.String str42 = date19.toLocaleString();
        java.util.Date date49 = new java.util.Date((int) (byte) 10, 40, (int) '#', (int) (short) 100, 11, 8);
        java.util.Locale locale54 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale54.getDisplayScript(locale55);
        java.lang.String str57 = locale54.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat58 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale54);
        java.util.Locale locale59 = java.util.Locale.CHINESE;
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(locale59);
        int int62 = calendar60.getActualMinimum((int) (byte) 0);
        boolean boolean63 = calendar60.isWeekDateSupported();
        java.util.Date date64 = calendar60.getTime();
        date64.setMonth(23);
        java.lang.String str67 = fastDateFormat58.format(date64);
        java.util.Date date68 = new java.util.Date();
        java.lang.String str69 = date68.toGMTString();
        int int70 = date68.getYear();
        java.lang.String str71 = fastDateFormat58.format(date68);
        int int72 = date68.getMonth();
        boolean boolean73 = date49.before(date68);
        boolean boolean74 = date19.after(date49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar31 and calendar60", (calendar31.compareTo(calendar60) == 0) == calendar31.equals(calendar60));
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test111");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.Calendar.Builder builder17 = builder8.setDate(3, 14, 0);
        java.util.Calendar.Builder builder20 = builder8.set((int) (byte) 10, 54);
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale21);
        long long23 = calendar22.getTimeInMillis();
        int int25 = calendar22.getGreatestMinimum(14);
        int int26 = calendar22.getWeekYear();
        java.util.Calendar.Builder builder27 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder32 = builder27.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar33 = builder32.build();
        java.util.Calendar.Builder builder35 = builder32.setLenient(true);
        java.util.Calendar.Builder builder39 = builder35.setDate(0, 0, (int) (byte) 0);
        java.util.Calendar.Builder builder43 = builder35.setDate((int) (byte) 10, 44, 0);
        boolean boolean44 = calendar22.before((java.lang.Object) builder43);
        java.util.Calendar.Builder builder45 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder49 = builder45.setWeekDate(16, 3, 100);
        java.util.Locale locale50 = java.util.Locale.GERMANY;
        java.util.Locale locale52 = new java.util.Locale("Chinese");
        java.lang.String str53 = locale50.getDisplayLanguage(locale52);
        java.util.Calendar.Builder builder54 = builder45.setLocale(locale52);
        java.util.Calendar.Builder builder55 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder60 = builder55.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder65 = builder55.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder67 = builder55.setLenient(false);
        java.util.Calendar.Builder builder71 = builder67.setDate(31, (int) (short) 10, (int) 'u');
        java.util.Calendar.Builder builder72 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder76 = builder72.setWeekDate(16, 3, 100);
        java.util.Calendar.Builder builder80 = builder72.setTimeOfDay((int) (byte) 100, 32770, 12);
        java.util.Calendar.Builder builder82 = builder80.setLenient(false);
        int[] intArray83 = new int[] {};
        java.util.Calendar.Builder builder84 = builder82.setFields(intArray83);
        java.util.Calendar.Builder builder85 = builder67.setFields(intArray83);
        java.util.Calendar.Builder builder86 = builder54.setFields(intArray83);
        java.util.Calendar.Builder builder87 = builder43.setFields(intArray83);
        java.util.Calendar.Builder builder88 = builder20.setFields(intArray83);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar22", (calendar11.compareTo(calendar22) == 0) == calendar11.equals(calendar22));
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test112");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.TimeZone timeZone8 = fastDateFormat4.getTimeZone();
        java.lang.String str9 = timeZone8.getID();
        java.util.Locale locale10 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        boolean boolean13 = locale11.hasExtensions();
        java.lang.String str14 = locale10.getDisplayVariant(locale11);
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(timeZone8, locale10);
        java.lang.String str17 = locale10.getExtension('a');
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone1, locale10);
        java.util.Set<java.lang.String> strSet19 = locale10.getUnicodeLocaleAttributes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar15 and calendar18", (calendar15.compareTo(calendar18) == 0) == calendar15.equals(calendar18));
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test113");
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.lang.String str2 = locale1.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        java.text.ParsePosition parsePosition5 = new java.text.ParsePosition(16);
        java.util.Locale locale6 = java.util.Locale.CHINESE;
        java.lang.String str7 = locale6.getLanguage();
        boolean boolean8 = locale6.hasExtensions();
        boolean boolean9 = parsePosition5.equals((java.lang.Object) locale6);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(locale6);
        java.lang.String str11 = locale6.getISO3Language();
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.lang.String str20 = fastDateFormat15.format((long) 40);
        java.util.TimeZone timeZone21 = fastDateFormat15.getTimeZone();
        java.util.TimeZone timeZone22 = fastDateFormat15.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone22);
        java.util.TimeZone timeZone26 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute27 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray28 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList29 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList29, languageRangeArray28);
        java.util.Locale locale31 = java.util.Locale.GERMAN;
        java.util.Locale locale32 = java.util.Locale.FRANCE;
        boolean boolean33 = locale32.hasExtensions();
        java.util.Locale locale34 = java.util.Locale.FRANCE;
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        java.util.Locale[] localeArray37 = new java.util.Locale[] { locale31, locale32, locale34, locale35 };
        java.util.ArrayList<java.util.Locale> localeList38 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList38, localeArray37);
        java.util.Locale.FilteringMode filteringMode40 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList41 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList29, (java.util.Collection<java.util.Locale>) localeList38, filteringMode40);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList43 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.lang.String str45 = locale44.getLanguage();
        java.util.Set<java.lang.String> strSet46 = locale44.getUnicodeLocaleAttributes();
        java.lang.String str47 = java.util.Locale.lookupTag(languageRangeList43, (java.util.Collection<java.lang.String>) strSet46);
        boolean boolean48 = localeList41.containsAll((java.util.Collection<java.lang.String>) strSet46);
        boolean boolean50 = localeList41.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator51 = localeList41.spliterator();
        java.util.Locale locale55 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale56 = java.util.Locale.ROOT;
        java.lang.String str57 = locale55.getDisplayScript(locale56);
        java.lang.String str58 = locale55.getISO3Language();
        boolean boolean59 = localeList41.add(locale55);
        boolean boolean60 = attribute27.equals((java.lang.Object) locale55);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat61 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone26, locale55);
        java.util.Calendar calendar62 = java.util.Calendar.getInstance(timeZone22, locale55);
        java.lang.String str63 = locale6.getDisplayVariant(locale55);
        java.util.Locale locale64 = java.util.Locale.FRANCE;
        boolean boolean65 = locale64.hasExtensions();
        java.lang.String str66 = locale64.getCountry();
        java.lang.String str67 = locale64.getDisplayLanguage();
        java.lang.String str68 = locale55.getDisplayName(locale64);
        java.lang.String str69 = locale1.getDisplayLanguage(locale64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar62", (calendar10.compareTo(calendar62) == 0) == calendar10.equals(calendar62));
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test114");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        boolean boolean16 = timeZone14.hasSameRules(timeZone15);
        boolean boolean17 = timeZone13.hasSameRules(timeZone14);
        boolean boolean18 = timeZone13.observesDaylightTime();
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone13);
        java.util.Calendar.Builder builder20 = builder12.setTimeZone(timeZone13);
        java.util.Calendar.Builder builder24 = builder20.setTimeOfDay(0, 54, 13);
        java.util.Calendar.Builder builder28 = builder24.setTimeOfDay(8, 122, 51);
        java.util.Calendar.Builder builder32 = builder24.setTimeOfDay(25, 52, 0);
        java.util.Locale locale34 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute35 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean37 = attribute35.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale38 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        boolean boolean41 = locale39.hasExtensions();
        java.lang.String str42 = locale38.getDisplayVariant(locale39);
        java.util.Locale locale43 = locale38.stripExtensions();
        boolean boolean44 = attribute35.equals((java.lang.Object) locale43);
        java.lang.String str45 = locale34.getDisplayLanguage(locale43);
        java.util.TimeZone timeZone47 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat48 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone47);
        java.lang.String str49 = fastDateFormat48.getPattern();
        java.lang.String str51 = fastDateFormat48.format(1645513660686L);
        java.util.TimeZone timeZone52 = fastDateFormat48.getTimeZone();
        java.lang.String str53 = timeZone52.getID();
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(timeZone52, locale54);
        java.lang.String str61 = locale54.getExtension('a');
        java.util.Locale locale62 = locale54.stripExtensions();
        java.lang.String str63 = locale34.getDisplayScript(locale62);
        java.util.Calendar.Builder builder64 = builder32.setLocale(locale34);
        java.util.Locale locale67 = new java.util.Locale("", "\u4e0a\u5348\u65f6\u5206\u79d2");
        java.lang.String str68 = locale67.getDisplayName();
        java.util.Calendar.Builder builder69 = builder32.setLocale(locale67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar19 and calendar59", (calendar19.compareTo(calendar59) == 0) == calendar19.equals(calendar59));
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test115");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone0);
        calendar7.setMinimalDaysInFirstWeek(12);
        java.util.Date date10 = new java.util.Date();
        int int11 = date10.getDay();
        int int12 = date10.getTimezoneOffset();
        int int13 = date10.getYear();
        java.util.Date date14 = new java.util.Date();
        int int15 = date14.getSeconds();
        java.util.Date date16 = new java.util.Date();
        int int17 = date16.getTimezoneOffset();
        date16.setMinutes(5);
        boolean boolean20 = date14.after(date16);
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.util.Date date25 = new java.util.Date();
        int int26 = date25.getSeconds();
        java.lang.String str27 = fastDateFormat23.format(date25);
        boolean boolean28 = date14.before(date25);
        java.util.Date date29 = new java.util.Date();
        int int30 = date29.getTimezoneOffset();
        date29.setMinutes((int) (byte) -1);
        int int33 = date29.getMonth();
        boolean boolean34 = date25.after(date29);
        boolean boolean35 = date10.after(date25);
        int int36 = date10.getDay();
        java.util.TimeZone timeZone37 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone38 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone39 = java.util.TimeZone.getDefault();
        boolean boolean40 = timeZone38.hasSameRules(timeZone39);
        boolean boolean41 = timeZone37.hasSameRules(timeZone38);
        java.util.TimeZone.setDefault(timeZone38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(timeZone38);
        long long44 = calendar43.getTimeInMillis();
        calendar43.setTimeInMillis(1645513661984L);
        int int48 = calendar43.getMinimum(6);
        java.util.Date date49 = calendar43.getTime();
        boolean boolean50 = date10.before(date49);
        calendar7.setTime(date10);
        java.util.Date date52 = calendar7.getTime();
        java.util.Date date56 = new java.util.Date(2, (int) (byte) -1, (int) '4');
        int int57 = date56.getMinutes();
        date56.setYear(32772);
        java.util.Date date60 = new java.util.Date();
        int int61 = date60.getSeconds();
        java.util.Date date62 = new java.util.Date();
        int int63 = date62.getTimezoneOffset();
        date62.setMinutes(5);
        boolean boolean66 = date60.after(date62);
        date60.setSeconds(32770);
        boolean boolean69 = date56.before(date60);
        int int70 = date60.getMonth();
        boolean boolean71 = calendar7.after((java.lang.Object) date60);
        date60.setTime(1645513677217L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar7", (calendar6.compareTo(calendar7) == 0) == calendar6.equals(calendar7));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test116");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.lang.String str6 = fastDateFormat2.format(date4);
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(locale7);
        int int10 = calendar8.getActualMinimum((int) (byte) 0);
        java.lang.String str11 = fastDateFormat2.format((java.lang.Object) calendar8);
        java.util.Locale locale12 = java.util.Locale.ITALY;
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale13);
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        java.util.Locale locale16 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale16.getDisplayVariant(locale17);
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.getDefault();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        java.lang.String str28 = locale25.getDisplayCountry();
        java.lang.String str29 = locale25.getDisplayLanguage();
        java.lang.String str30 = locale25.getLanguage();
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        boolean boolean38 = locale37.hasExtensions();
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.util.Locale locale40 = java.util.Locale.ITALIAN;
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.US;
        java.util.Locale locale46 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale47 = java.util.Locale.ROOT;
        java.lang.String str48 = locale46.getDisplayScript(locale47);
        java.util.Locale locale49 = java.util.Locale.US;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.US;
        java.util.Locale locale52 = java.util.Locale.ITALY;
        java.util.Locale locale53 = java.util.Locale.getDefault();
        java.util.Locale locale57 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale58);
        java.util.Locale locale60 = java.util.Locale.US;
        java.util.Locale locale61 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale63 = java.util.Locale.CHINESE;
        java.lang.String str64 = locale63.getLanguage();
        boolean boolean65 = locale63.hasExtensions();
        java.lang.String str66 = locale62.getDisplayVariant(locale63);
        java.util.Locale[] localeArray67 = new java.util.Locale[] { locale12, locale13, locale15, locale17, locale21, locale22, locale23, locale25, locale35, locale37, locale39, locale40, locale41, locale42, locale47, locale49, locale50, locale51, locale52, locale53, locale57, locale58, locale60, locale61, locale62 };
        java.util.ArrayList<java.util.Locale> localeList68 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList68, localeArray67);
        boolean boolean70 = localeList68.isEmpty();
        java.util.Locale locale72 = localeList68.get((int) (short) 0);
        java.util.TimeZone timeZone74 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone74);
        java.lang.String str76 = fastDateFormat75.getPattern();
        java.lang.String str78 = fastDateFormat75.format(1645513660686L);
        java.util.Date date79 = new java.util.Date();
        int int80 = date79.getSeconds();
        java.lang.String str81 = fastDateFormat75.format(date79);
        java.lang.String str83 = fastDateFormat75.format((long) 32769);
        java.util.TimeZone timeZone84 = fastDateFormat75.getTimeZone();
        java.util.TimeZone.setDefault(timeZone84);
        java.util.Calendar calendar86 = java.util.Calendar.getInstance(timeZone84);
        int int87 = localeList68.indexOf((java.lang.Object) calendar86);
        calendar86.setFirstDayOfWeek(42);
        java.lang.String str90 = fastDateFormat2.format(calendar86);
        java.util.Date date91 = calendar86.getTime();
        date91.setYear(2);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar59 and calendar86", (calendar59.compareTo(calendar86) == 0) == calendar59.equals(calendar86));
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test117");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        java.util.TimeZone timeZone8 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int9 = timeZone8.getRawOffset();
        calendar6.setTimeZone(timeZone8);
        calendar6.setFirstDayOfWeek(6);
        boolean boolean13 = calendar6.isWeekDateSupported();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("zh_CN");
        calendar6.setTimeZone(timeZone15);
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone15);
        java.util.TimeZone.setDefault(timeZone15);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar17", (calendar6.compareTo(calendar17) == 0) == calendar6.equals(calendar17));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test118");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.TimeZone.setDefault(timeZone0);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone0);
        java.util.Date date12 = new java.util.Date();
        int int13 = date12.getSeconds();
        java.util.Date date14 = new java.util.Date();
        int int15 = date14.getTimezoneOffset();
        date14.setMinutes(5);
        boolean boolean18 = date12.after(date14);
        java.time.Instant instant19 = date12.toInstant();
        date12.setSeconds((int) (short) 1);
        java.lang.String str22 = date12.toGMTString();
        java.util.Date date29 = new java.util.Date(5, 17, 57, 6, 51, 45);
        java.util.Date date30 = new java.util.Date();
        java.lang.String str31 = date30.toGMTString();
        int int32 = date30.getYear();
        int int33 = date30.getSeconds();
        int int34 = date30.getHours();
        date30.setMonth(50);
        boolean boolean37 = date29.after(date30);
        int int38 = date29.getMonth();
        boolean boolean39 = date12.after(date29);
        boolean boolean40 = timeZone0.inDaylightTime(date29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar11", (calendar9.compareTo(calendar11) == 0) == calendar9.equals(calendar11));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test119");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        boolean boolean76 = localeList56.isEmpty();
        int int77 = localeList56.size();
        java.util.Locale locale78 = java.util.Locale.TAIWAN;
        java.util.Locale locale79 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str80 = locale78.getDisplayLanguage(locale79);
        java.lang.String str81 = locale79.getCountry();
        int int82 = localeList56.indexOf((java.lang.Object) locale79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test120");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone0);
        java.lang.String str11 = timeZone0.getID();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar10", (calendar9.compareTo(calendar10) == 0) == calendar9.equals(calendar10));
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test121");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder0.build();
        java.util.Calendar.Builder builder10 = builder0.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder12 = builder0.setLenient(true);
        java.util.Calendar.Builder builder17 = builder12.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone18.hasSameRules(timeZone19);
        timeZone18.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone18.setID("und");
        java.util.Calendar.Builder builder27 = builder12.setTimeZone(timeZone18);
        timeZone18.setRawOffset((int) 'x');
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        java.util.Locale locale35 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale36 = java.util.Locale.CHINESE;
        java.lang.String str37 = locale36.getLanguage();
        boolean boolean38 = locale36.hasExtensions();
        java.lang.String str39 = locale35.getDisplayVariant(locale36);
        java.util.Locale.setDefault(locale36);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone32, locale36);
        boolean boolean42 = timeZone18.hasSameRules(timeZone32);
        java.util.Locale locale44 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022");
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(locale44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone18, locale44);
        timeZone18.setID("France");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar45 and calendar46", (calendar45.compareTo(calendar46) == 0) == calendar45.equals(calendar46));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test122");
        java.util.Locale locale2 = new java.util.Locale("22 Feb 2022 07:07:43 GMT", "\u7fa9\u5927\u5229\u6587");
        java.util.Set<java.lang.Character> charSet3 = locale2.getExtensionKeys();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.Locale locale65 = locale64.stripExtensions();
        java.lang.String str66 = locale2.getDisplayVariant(locale65);
        java.util.Calendar calendar67 = java.util.Calendar.getInstance(locale65);
        java.util.Set<java.lang.Character> charSet68 = locale65.getExtensionKeys();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar67", (calendar6.compareTo(calendar67) == 0) == calendar6.equals(calendar67));
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test123");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str32 = fastDateFormat31.toString();
        java.text.ParsePosition parsePosition35 = new java.text.ParsePosition(16);
        parsePosition35.setIndex(10);
        parsePosition35.setIndex(0);
        java.lang.Object obj40 = fastDateFormat31.parseObject("Taiwan", parsePosition35);
        java.util.TimeZone timeZone41 = fastDateFormat31.getTimeZone();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.lang.String str47 = locale42.getLanguage();
        java.util.Locale.Builder builder48 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder48.clear();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale.Builder builder55 = builder49.setLocale(locale50);
        java.util.Locale locale56 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder57 = builder55.setLocale(locale56);
        java.util.Locale locale58 = builder55.build();
        java.lang.String str59 = locale42.getDisplayScript(locale58);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone41, locale42);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone41);
        calendar6.setTimeZone(timeZone41);
        long long63 = calendar6.getTimeInMillis();
        long long64 = calendar6.getTimeInMillis();
        java.util.TimeZone timeZone65 = null;
        calendar6.setTimeZone(timeZone65);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar60", (calendar26.compareTo(calendar60) == 0) == calendar26.equals(calendar60));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test124");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder2 = builder0.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder4 = builder2.setLenient(true);
        java.util.Calendar.Builder builder6 = builder2.setInstant(1645513662945L);
        java.util.Calendar.Builder builder8 = builder6.setInstant(10L);
        java.util.Locale locale10 = new java.util.Locale("deu");
        java.lang.String str11 = locale10.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet12 = locale10.getUnicodeLocaleAttributes();
        java.util.Calendar.Builder builder13 = builder6.setLocale(locale10);
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        timeZone15.setID("7:07:58 AM UTC");
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone15);
        java.util.Calendar.Builder builder22 = builder13.setTimeZone(timeZone15);
        java.util.TimeZone timeZone24 = java.util.TimeZone.getTimeZone("22 Feb 2022 07:07:40 GMT");
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        boolean boolean29 = timeZone27.hasSameRules(timeZone28);
        java.util.Calendar calendar30 = java.util.Calendar.getInstance(timeZone27);
        int int32 = calendar30.getActualMinimum(6);
        calendar30.set((int) (short) 1, 41, 16, 16, 32772);
        int int39 = calendar30.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone40 = calendar30.getTimeZone();
        int int42 = timeZone40.getOffset((long) 'x');
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat43 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e0a\u5348 02:02:00", timeZone40);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u5fb7\u6587\u5fb7\u56fd)", timeZone40);
        boolean boolean45 = timeZone24.hasSameRules(timeZone40);
        boolean boolean46 = timeZone15.hasSameRules(timeZone40);
        java.util.Locale locale47 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet48 = locale47.getUnicodeLocaleAttributes();
        java.lang.String str49 = locale47.getDisplayName();
        java.util.TimeZone timeZone50 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone51 = java.util.TimeZone.getDefault();
        boolean boolean52 = timeZone50.hasSameRules(timeZone51);
        boolean boolean53 = timeZone50.observesDaylightTime();
        int int55 = timeZone50.getOffset((long) 10);
        java.util.TimeZone.setDefault(timeZone50);
        java.util.Locale.LanguageRange[] languageRangeArray57 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList58 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList58, languageRangeArray57);
        java.util.Locale locale60 = java.util.Locale.GERMAN;
        java.util.Locale locale61 = java.util.Locale.FRANCE;
        boolean boolean62 = locale61.hasExtensions();
        java.util.Locale locale63 = java.util.Locale.FRANCE;
        java.util.Locale locale64 = java.util.Locale.CHINESE;
        java.lang.String str65 = locale64.getLanguage();
        java.util.Locale[] localeArray66 = new java.util.Locale[] { locale60, locale61, locale63, locale64 };
        java.util.ArrayList<java.util.Locale> localeList67 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList67, localeArray66);
        java.util.Locale.FilteringMode filteringMode69 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList70 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList58, (java.util.Collection<java.util.Locale>) localeList67, filteringMode69);
        java.util.Locale locale71 = java.util.Locale.CHINESE;
        java.util.Calendar calendar72 = java.util.Calendar.getInstance(locale71);
        boolean boolean73 = localeList67.contains((java.lang.Object) locale71);
        java.lang.String str74 = locale71.getVariant();
        java.util.Calendar calendar75 = java.util.Calendar.getInstance(timeZone50, locale71);
        java.lang.String str76 = locale47.getDisplayName(locale71);
        java.util.Calendar calendar77 = java.util.Calendar.getInstance(timeZone40, locale71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar21 and calendar72", (calendar21.compareTo(calendar72) == 0) == calendar21.equals(calendar72));
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test125");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.lang.String str1 = locale0.getLanguage();
        boolean boolean2 = locale0.hasExtensions();
        java.lang.String str3 = locale0.getDisplayCountry();
        java.lang.String str4 = locale0.getISO3Language();
        java.util.Locale locale6 = java.util.Locale.getDefault();
        java.lang.String str7 = locale6.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale6);
        java.lang.String str9 = locale0.getDisplayName(locale6);
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Locale locale11 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str12 = locale10.getDisplayLanguage(locale11);
        java.util.Locale locale13 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.lang.String str15 = locale14.getLanguage();
        boolean boolean16 = locale14.hasExtensions();
        java.lang.String str17 = locale13.getDisplayVariant(locale14);
        java.lang.String str18 = locale10.getDisplayLanguage(locale14);
        java.lang.String str19 = locale6.getDisplayScript(locale14);
        java.util.Locale.Category category20 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale22 = new java.util.Locale("Chinese");
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale22);
        java.lang.String str24 = locale22.getCountry();
        java.util.Locale.setDefault(category20, locale22);
        java.util.TimeZone timeZone27 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat28 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone27);
        java.lang.String str29 = fastDateFormat28.getPattern();
        java.lang.String str31 = fastDateFormat28.format(1645513660686L);
        java.util.TimeZone timeZone32 = fastDateFormat28.getTimeZone();
        java.lang.String str33 = timeZone32.getID();
        java.util.Locale locale34 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        boolean boolean37 = locale35.hasExtensions();
        java.lang.String str38 = locale34.getDisplayVariant(locale35);
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(timeZone32, locale34);
        java.lang.String str41 = locale34.getExtension('a');
        java.util.Locale locale42 = locale34.stripExtensions();
        java.util.Locale.setDefault(category20, locale42);
        java.lang.String str44 = locale6.getDisplayScript(locale42);
        java.lang.String str45 = locale6.getDisplayCountry();
        java.lang.String str46 = locale6.getDisplayScript();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar39", (calendar23.compareTo(calendar39) == 0) == calendar23.equals(calendar39));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test126");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone1.hasSameRules(timeZone2);
        java.util.TimeZone.setDefault(timeZone2);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone2);
        java.util.TimeZone timeZone9 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int10 = timeZone9.getRawOffset();
        calendar7.setTimeZone(timeZone9);
        calendar7.setFirstDayOfWeek(6);
        boolean boolean14 = calendar7.isWeekDateSupported();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getTimeZone("zh_CN");
        calendar7.setTimeZone(timeZone16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone16);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone16);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar18", (calendar7.compareTo(calendar18) == 0) == calendar7.equals(calendar18));
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test127");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str32 = fastDateFormat31.toString();
        java.text.ParsePosition parsePosition35 = new java.text.ParsePosition(16);
        parsePosition35.setIndex(10);
        parsePosition35.setIndex(0);
        java.lang.Object obj40 = fastDateFormat31.parseObject("Taiwan", parsePosition35);
        java.util.TimeZone timeZone41 = fastDateFormat31.getTimeZone();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.lang.String str47 = locale42.getLanguage();
        java.util.Locale.Builder builder48 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder48.clear();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale.Builder builder55 = builder49.setLocale(locale50);
        java.util.Locale locale56 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder57 = builder55.setLocale(locale56);
        java.util.Locale locale58 = builder55.build();
        java.lang.String str59 = locale42.getDisplayScript(locale58);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone41, locale42);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone41);
        calendar6.setTimeZone(timeZone41);
        int int63 = calendar6.getWeeksInWeekYear();
        calendar6.set(2, 32772);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar60", (calendar26.compareTo(calendar60) == 0) == calendar26.equals(calendar60));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test128");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        int int76 = calendar74.getWeekYear();
        java.util.Calendar.Builder builder77 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder82 = builder77.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar83 = builder82.build();
        java.util.Calendar.Builder builder85 = builder82.setLenient(true);
        java.util.Locale locale86 = java.util.Locale.FRANCE;
        boolean boolean87 = locale86.hasExtensions();
        java.util.Calendar calendar88 = java.util.Calendar.getInstance(locale86);
        java.util.Locale locale89 = locale86.stripExtensions();
        java.util.Calendar.Builder builder90 = builder85.setLocale(locale86);
        java.util.Calendar calendar91 = builder85.build();
        calendar91.set((int) (short) 1, 11, 559, (int) (short) 10, 1003);
        int int98 = calendar74.compareTo(calendar91);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar88", (calendar2.compareTo(calendar88) == 0) == calendar2.equals(calendar88));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test129");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Locale.LanguageRange[] languageRangeArray76 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList77 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList77, languageRangeArray76);
        java.util.Locale locale79 = java.util.Locale.GERMAN;
        java.util.Locale locale80 = java.util.Locale.FRANCE;
        boolean boolean81 = locale80.hasExtensions();
        java.util.Locale locale82 = java.util.Locale.FRANCE;
        java.util.Locale locale83 = java.util.Locale.CHINESE;
        java.lang.String str84 = locale83.getLanguage();
        java.util.Locale[] localeArray85 = new java.util.Locale[] { locale79, locale80, locale82, locale83 };
        java.util.ArrayList<java.util.Locale> localeList86 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList86, localeArray85);
        java.util.Locale.FilteringMode filteringMode88 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList89 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList77, (java.util.Collection<java.util.Locale>) localeList86, filteringMode88);
        boolean boolean90 = localeList56.remove((java.lang.Object) filteringMode88);
        boolean boolean91 = localeList56.isEmpty();
        java.util.List<java.util.Locale> localeList94 = localeList56.subList(14, 16);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test130");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale16);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test131");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList1 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray2 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList3 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList3, languageRangeArray2);
        java.util.Locale locale5 = java.util.Locale.GERMAN;
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        boolean boolean7 = locale6.hasExtensions();
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale5, locale6, locale8, locale9 };
        java.util.ArrayList<java.util.Locale> localeList12 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList12, localeArray11);
        java.util.Locale.FilteringMode filteringMode14 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList15 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList3, (java.util.Collection<java.util.Locale>) localeList12, filteringMode14);
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter(languageRangeList1, (java.util.Collection<java.util.Locale>) localeList15);
        localeList16.clear();
        boolean boolean19 = localeList16.contains((java.lang.Object) 11);
        boolean boolean21 = localeList16.remove((java.lang.Object) "22 Feb 2022 07:07:43 GMT");
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone23);
        java.lang.String str25 = fastDateFormat24.getPattern();
        java.lang.String str27 = fastDateFormat24.format(1645513660686L);
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        java.lang.String str30 = fastDateFormat24.format(date28);
        java.lang.String str32 = fastDateFormat24.format((long) 32769);
        java.util.TimeZone timeZone33 = fastDateFormat24.getTimeZone();
        int int34 = localeList16.indexOf((java.lang.Object) fastDateFormat24);
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        boolean boolean37 = timeZone35.hasSameRules(timeZone36);
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone35);
        int int39 = calendar38.getFirstDayOfWeek();
        long long40 = calendar38.getTimeInMillis();
        java.lang.String str41 = fastDateFormat24.format(calendar38);
        java.util.TimeZone timeZone43 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone43);
        java.lang.String str45 = fastDateFormat44.getPattern();
        java.lang.String str47 = fastDateFormat44.format(1645513660686L);
        java.util.TimeZone timeZone48 = fastDateFormat44.getTimeZone();
        java.lang.String str49 = timeZone48.getID();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Calendar calendar55 = java.util.Calendar.getInstance(timeZone48, locale50);
        boolean boolean56 = fastDateFormat24.equals((java.lang.Object) calendar55);
        java.util.Date date60 = new java.util.Date((int) (short) 0, 1, (int) '4');
        java.lang.String str61 = fastDateFormat24.format(date60);
        int int62 = date60.getDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar38 and calendar55", (calendar38.compareTo(calendar55) == 0) == calendar38.equals(calendar55));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test132");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        java.util.Locale locale3 = java.util.Locale.getDefault();
        java.lang.String str4 = locale3.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale3);
        java.util.Locale.setDefault(category0, locale3);
        java.util.Locale locale7 = java.util.Locale.getDefault(category0);
        java.util.Locale locale9 = java.util.Locale.forLanguageTag("zh");
        java.lang.String str10 = locale9.getVariant();
        java.util.Locale.LanguageRange[] languageRangeArray11 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList12 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList12, languageRangeArray11);
        java.util.Locale locale14 = java.util.Locale.GERMAN;
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.FRANCE;
        java.util.Locale locale18 = java.util.Locale.CHINESE;
        java.lang.String str19 = locale18.getLanguage();
        java.util.Locale[] localeArray20 = new java.util.Locale[] { locale14, locale15, locale17, locale18 };
        java.util.ArrayList<java.util.Locale> localeList21 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList21, localeArray20);
        java.util.Locale.FilteringMode filteringMode23 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList24 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList12, (java.util.Collection<java.util.Locale>) localeList21, filteringMode23);
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(locale25);
        boolean boolean27 = localeList21.contains((java.lang.Object) locale25);
        java.util.Set<java.lang.String> strSet28 = locale25.getUnicodeLocaleKeys();
        java.lang.String str29 = locale9.getDisplayScript(locale25);
        java.util.Locale.setDefault(category0, locale25);
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        boolean boolean35 = timeZone32.observesDaylightTime();
        int int36 = timeZone32.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone32);
        timeZone32.setRawOffset(9);
        timeZone32.setID("7:07:40 AM UTC");
        int int43 = timeZone32.getOffset(1645513660365L);
        int int45 = timeZone32.getOffset((long) 22);
        java.util.TimeZone timeZone46 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone47 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        boolean boolean49 = timeZone47.hasSameRules(timeZone48);
        boolean boolean50 = timeZone46.hasSameRules(timeZone47);
        java.lang.String str51 = timeZone47.getID();
        boolean boolean52 = timeZone32.hasSameRules(timeZone47);
        java.util.TimeZone timeZone53 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat56 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone55);
        java.lang.String str57 = fastDateFormat56.getPattern();
        java.lang.String str59 = fastDateFormat56.format(1645513660686L);
        java.util.Locale locale60 = java.util.Locale.ITALIAN;
        boolean boolean61 = fastDateFormat56.equals((java.lang.Object) locale60);
        java.util.Calendar calendar62 = java.util.Calendar.getInstance(timeZone53, locale60);
        java.util.Calendar calendar63 = java.util.Calendar.getInstance(timeZone47, locale60);
        java.util.Locale locale64 = java.util.Locale.TAIWAN;
        java.util.Locale locale65 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str66 = locale64.getDisplayLanguage(locale65);
        java.lang.String str67 = locale64.getLanguage();
        java.util.Locale locale69 = new java.util.Locale("Chinese");
        java.util.Locale locale70 = locale69.stripExtensions();
        java.lang.String str71 = locale64.getDisplayLanguage(locale69);
        java.util.Locale locale73 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute74 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean76 = attribute74.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale77 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale78 = java.util.Locale.CHINESE;
        java.lang.String str79 = locale78.getLanguage();
        boolean boolean80 = locale78.hasExtensions();
        java.lang.String str81 = locale77.getDisplayVariant(locale78);
        java.util.Locale locale82 = locale77.stripExtensions();
        boolean boolean83 = attribute74.equals((java.lang.Object) locale82);
        java.lang.String str84 = locale73.getDisplayLanguage(locale82);
        java.lang.String str85 = locale64.getDisplayCountry(locale82);
        java.lang.String str86 = locale60.getDisplayScript(locale64);
        java.util.Locale.setDefault(category0, locale60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar62", (calendar26.compareTo(calendar62) == 0) == calendar26.equals(calendar62));
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test133");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.lang.Object obj4 = fastDateFormat2.clone();
        java.util.Date date10 = new java.util.Date(11, 9, 8, (int) 'x', 9);
        int int11 = date10.getMinutes();
        date10.setYear(41);
        java.lang.String str14 = fastDateFormat2.format((java.lang.Object) date10);
        boolean boolean15 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.util.Date date19 = new java.util.Date(13, 6, 17);
        long long20 = date19.getTime();
        int int21 = date19.getSeconds();
        java.lang.StringBuffer stringBuffer22 = null;
        java.lang.StringBuffer stringBuffer23 = fastDateFormat2.format(date19, stringBuffer22);
        java.util.TimeZone timeZone26 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone26);
        java.lang.String str29 = fastDateFormat27.format((long) (byte) -1);
        java.text.ParsePosition parsePosition32 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj33 = fastDateFormat27.parseObject("GMT+00:00", parsePosition32);
        java.lang.String str34 = fastDateFormat27.getPattern();
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        int int38 = parsePosition37.getErrorIndex();
        parsePosition37.setErrorIndex(22);
        int int41 = parsePosition37.getErrorIndex();
        int int42 = parsePosition37.getIndex();
        parsePosition37.setIndex((int) 'x');
        java.lang.Object obj45 = fastDateFormat27.parseObject("22 Feb 2022 07:07:43 GMT", parsePosition37);
        java.lang.Object obj46 = fastDateFormat2.parseObject("1 Jan 1970 00:00:00 GMT", parsePosition37);
        java.util.Calendar calendar47 = java.util.Calendar.getInstance();
        int int48 = calendar47.getWeeksInWeekYear();
        long long49 = calendar47.getTimeInMillis();
        java.lang.String str50 = fastDateFormat2.format((java.lang.Object) long49);
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(locale51);
        calendar52.set(47, 46, 41, 0, 23);
        java.util.Locale locale62 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale63 = java.util.Locale.ROOT;
        java.lang.String str64 = locale62.getDisplayScript(locale63);
        java.util.Calendar calendar65 = java.util.Calendar.getInstance(locale62);
        boolean boolean66 = calendar52.before((java.lang.Object) calendar65);
        java.time.Instant instant67 = calendar65.toInstant();
        calendar65.setMinimalDaysInFirstWeek(1200000);
        java.lang.StringBuffer stringBuffer70 = null;
        java.lang.StringBuffer stringBuffer71 = fastDateFormat2.format(calendar65, stringBuffer70);
        int int72 = fastDateFormat2.getMaxLengthEstimate();
        java.util.Locale locale73 = fastDateFormat2.getLocale();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar47 and calendar65", (calendar47.compareTo(calendar65) == 0) == calendar47.equals(calendar65));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test134");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        int int14 = fastDateFormat13.getMaxLengthEstimate();
        java.util.TimeZone timeZone15 = fastDateFormat13.getTimeZone();
        java.util.Locale locale19 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale19);
        int int24 = calendar22.getActualMinimum((int) (short) 1);
        calendar22.setFirstDayOfWeek(24);
        calendar22.setMinimalDaysInFirstWeek(25);
        boolean boolean29 = fastDateFormat13.equals((java.lang.Object) 25);
        java.util.Locale locale30 = fastDateFormat13.getLocale();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar22", (calendar11.compareTo(calendar22) == 0) == calendar11.equals(calendar22));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test135");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone0.hasSameRules(timeZone9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone0);
        java.util.TimeZone timeZone16 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone16);
        java.lang.String str19 = fastDateFormat17.format((long) (byte) -1);
        java.text.ParsePosition parsePosition22 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj23 = fastDateFormat17.parseObject("GMT+00:00", parsePosition22);
        java.util.TimeZone timeZone24 = fastDateFormat17.getTimeZone();
        java.util.TimeZone timeZone25 = fastDateFormat17.getTimeZone();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList27 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray28 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList29 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList29, languageRangeArray28);
        java.util.Locale locale31 = java.util.Locale.GERMAN;
        java.util.Locale locale32 = java.util.Locale.FRANCE;
        boolean boolean33 = locale32.hasExtensions();
        java.util.Locale locale34 = java.util.Locale.FRANCE;
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        java.util.Locale[] localeArray37 = new java.util.Locale[] { locale31, locale32, locale34, locale35 };
        java.util.ArrayList<java.util.Locale> localeList38 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList38, localeArray37);
        java.util.Locale.FilteringMode filteringMode40 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList41 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList29, (java.util.Collection<java.util.Locale>) localeList38, filteringMode40);
        java.util.List<java.util.Locale> localeList42 = java.util.Locale.filter(languageRangeList27, (java.util.Collection<java.util.Locale>) localeList41);
        localeList42.clear();
        int int44 = localeList42.size();
        java.util.Locale locale46 = java.util.Locale.TAIWAN;
        java.util.Locale locale47 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str48 = locale46.getDisplayLanguage(locale47);
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.lang.String str51 = locale50.getLanguage();
        boolean boolean52 = locale50.hasExtensions();
        java.lang.String str53 = locale49.getDisplayVariant(locale50);
        java.lang.String str54 = locale46.getDisplayLanguage(locale50);
        java.lang.String str55 = locale46.getDisplayVariant();
        localeList42.add(0, locale46);
        java.util.Locale locale58 = new java.util.Locale("Chinese");
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale58);
        java.lang.String str60 = locale58.getCountry();
        java.lang.String str61 = locale58.getScript();
        java.util.Locale locale62 = locale58.stripExtensions();
        java.lang.String str63 = locale46.getDisplayVariant(locale62);
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(locale46);
        java.lang.String str65 = locale46.getScript();
        java.util.Set<java.lang.Character> charSet66 = locale46.getExtensionKeys();
        java.util.Calendar calendar67 = java.util.Calendar.getInstance(timeZone25, locale46);
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone0, locale46);
        timeZone0.setID("1970-1-1 0:00:32");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar59", (calendar6.compareTo(calendar59) == 0) == calendar6.equals(calendar59));
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test136");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Locale locale10 = java.util.Locale.FRANCE;
        boolean boolean11 = locale10.hasExtensions();
        java.lang.String str12 = locale7.getDisplayVariant(locale10);
        java.lang.String str13 = locale10.getISO3Country();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone16);
        java.lang.String str18 = fastDateFormat17.getPattern();
        java.lang.String str20 = fastDateFormat17.format(1645513660686L);
        java.util.Locale locale21 = java.util.Locale.ITALIAN;
        boolean boolean22 = fastDateFormat17.equals((java.lang.Object) locale21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone14, locale21);
        java.util.Locale locale24 = java.util.Locale.FRANCE;
        boolean boolean25 = locale24.hasExtensions();
        java.lang.String str26 = locale21.getDisplayVariant(locale24);
        java.lang.String str27 = locale21.getDisplayScript();
        java.lang.String str28 = locale21.getLanguage();
        java.util.Locale.setDefault(locale21);
        java.lang.String str30 = locale10.getDisplayVariant(locale21);
        java.util.Locale.Category category31 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale33 = new java.util.Locale("Chinese");
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(locale33);
        java.lang.String str35 = locale33.getCountry();
        java.util.Locale.setDefault(category31, locale33);
        java.util.Locale locale37 = java.util.Locale.getDefault(category31);
        java.lang.String str38 = locale37.getDisplayCountry();
        java.lang.String str39 = locale10.getDisplayVariant(locale37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar34", (calendar9.compareTo(calendar34) == 0) == calendar9.equals(calendar34));
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test137");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Calendar.Builder builder16 = builder12.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        timeZone26.setID("");
        timeZone26.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder35 = builder12.setTimeZone(timeZone26);
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        boolean boolean40 = locale38.hasExtensions();
        boolean boolean41 = parsePosition37.equals((java.lang.Object) locale38);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(locale38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale38);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale57.getDisplayVariant(locale58);
        java.util.Locale.setDefault(locale58);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone54, locale58);
        java.lang.String str64 = locale44.getDisplayLanguage(locale58);
        java.util.Locale locale65 = locale58.stripExtensions();
        java.lang.String str66 = locale38.getDisplayLanguage(locale65);
        java.lang.String str67 = locale65.getScript();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone26, locale65);
        java.util.Locale.Builder builder69 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder70 = builder69.clear();
        java.util.Locale locale71 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale72 = java.util.Locale.CHINESE;
        java.lang.String str73 = locale72.getLanguage();
        boolean boolean74 = locale72.hasExtensions();
        java.lang.String str75 = locale71.getDisplayVariant(locale72);
        java.util.Locale.Builder builder76 = builder70.setLocale(locale71);
        java.util.Locale locale77 = builder76.build();
        java.util.Locale.setDefault(locale77);
        java.lang.String str79 = locale77.getISO3Language();
        java.util.Set<java.lang.Character> charSet80 = locale77.getExtensionKeys();
        java.lang.String str81 = locale77.getDisplayVariant();
        java.lang.String str82 = timeZone26.getDisplayName(locale77);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar68", (calendar23.compareTo(calendar68) == 0) == calendar23.equals(calendar68));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test138");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.Locale locale8 = java.util.Locale.ITALIAN;
        boolean boolean9 = fastDateFormat4.equals((java.lang.Object) locale8);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone1, locale8);
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.lang.String str13 = locale8.getDisplayVariant(locale11);
        java.lang.String str14 = locale8.getDisplayName();
        java.lang.String str15 = locale8.getISO3Language();
        java.util.Locale.setDefault(category0, locale8);
        java.util.Locale locale17 = java.util.Locale.getDefault(category0);
        java.util.Locale locale18 = java.util.Locale.getDefault(category0);
        java.text.ParsePosition parsePosition20 = new java.text.ParsePosition(16);
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        boolean boolean23 = locale21.hasExtensions();
        boolean boolean24 = parsePosition20.equals((java.lang.Object) locale21);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(locale21);
        java.lang.String str26 = locale21.getISO3Language();
        java.util.Locale locale27 = locale21.stripExtensions();
        java.util.Set<java.lang.String> strSet28 = locale27.getUnicodeLocaleAttributes();
        java.lang.String str29 = locale18.getDisplayVariant(locale27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar25", (calendar10.compareTo(calendar25) == 0) == calendar10.equals(calendar25));
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test139");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone1);
        java.util.Locale locale8 = java.util.Locale.ITALY;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        java.util.Locale locale12 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale12.getDisplayVariant(locale13);
        java.util.Locale locale17 = java.util.Locale.GERMAN;
        java.util.Locale locale18 = java.util.Locale.getDefault();
        java.util.Locale locale19 = java.util.Locale.FRANCE;
        boolean boolean20 = locale19.hasExtensions();
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        boolean boolean23 = locale21.hasExtensions();
        java.lang.String str24 = locale21.getDisplayCountry();
        java.lang.String str25 = locale21.getDisplayLanguage();
        java.lang.String str26 = locale21.getLanguage();
        java.util.Locale locale30 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale31 = java.util.Locale.ROOT;
        java.lang.String str32 = locale30.getDisplayScript(locale31);
        java.util.Locale locale33 = java.util.Locale.FRANCE;
        boolean boolean34 = locale33.hasExtensions();
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.util.Locale locale36 = java.util.Locale.ITALIAN;
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.US;
        java.util.Locale locale42 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale43 = java.util.Locale.ROOT;
        java.lang.String str44 = locale42.getDisplayScript(locale43);
        java.util.Locale locale45 = java.util.Locale.US;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.US;
        java.util.Locale locale48 = java.util.Locale.ITALY;
        java.util.Locale locale49 = java.util.Locale.getDefault();
        java.util.Locale locale53 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale54 = java.util.Locale.CHINESE;
        java.util.Calendar calendar55 = java.util.Calendar.getInstance(locale54);
        java.util.Locale locale56 = java.util.Locale.US;
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale59 = java.util.Locale.CHINESE;
        java.lang.String str60 = locale59.getLanguage();
        boolean boolean61 = locale59.hasExtensions();
        java.lang.String str62 = locale58.getDisplayVariant(locale59);
        java.util.Locale[] localeArray63 = new java.util.Locale[] { locale8, locale9, locale11, locale13, locale17, locale18, locale19, locale21, locale31, locale33, locale35, locale36, locale37, locale38, locale43, locale45, locale46, locale47, locale48, locale49, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList64 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList64, localeArray63);
        boolean boolean66 = localeList64.isEmpty();
        java.util.Locale locale68 = localeList64.get((int) (short) 0);
        java.util.TimeZone timeZone70 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat71 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone70);
        java.lang.String str72 = fastDateFormat71.getPattern();
        java.lang.String str74 = fastDateFormat71.format(1645513660686L);
        java.util.Date date75 = new java.util.Date();
        int int76 = date75.getSeconds();
        java.lang.String str77 = fastDateFormat71.format(date75);
        java.lang.String str79 = fastDateFormat71.format((long) 32769);
        java.util.TimeZone timeZone80 = fastDateFormat71.getTimeZone();
        java.util.TimeZone.setDefault(timeZone80);
        java.util.Calendar calendar82 = java.util.Calendar.getInstance(timeZone80);
        int int83 = localeList64.indexOf((java.lang.Object) calendar82);
        calendar82.setFirstDayOfWeek(42);
        boolean boolean86 = calendar82.isWeekDateSupported();
        calendar82.setLenient(false);
        java.util.TimeZone timeZone89 = calendar82.getTimeZone();
        boolean boolean90 = timeZone1.hasSameRules(timeZone89);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar82", (calendar7.compareTo(calendar82) == 0) == calendar7.equals(calendar82));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test140");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone1);
        timeZone1.setRawOffset(10);
        java.util.Locale.Builder builder10 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder11 = builder10.clear();
        java.util.Locale locale12 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale12.getDisplayVariant(locale13);
        java.util.Locale.Builder builder17 = builder11.setLocale(locale12);
        java.util.Locale locale19 = new java.util.Locale("Chinese");
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(locale19);
        java.lang.String str21 = locale19.getCountry();
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale19);
        java.lang.String str23 = locale12.getDisplayScript(locale19);
        java.lang.String str24 = timeZone1.getDisplayName(locale12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar20", (calendar7.compareTo(calendar20) == 0) == calendar7.equals(calendar20));
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test141");
        java.text.ParsePosition parsePosition1 = new java.text.ParsePosition(16);
        java.util.Locale locale2 = java.util.Locale.CHINESE;
        java.lang.String str3 = locale2.getLanguage();
        boolean boolean4 = locale2.hasExtensions();
        boolean boolean5 = parsePosition1.equals((java.lang.Object) locale2);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale2);
        java.lang.String str7 = locale2.getISO3Language();
        java.util.TimeZone timeZone10 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone10);
        java.lang.String str12 = fastDateFormat11.getPattern();
        java.lang.String str14 = fastDateFormat11.format(1645513660686L);
        java.lang.String str16 = fastDateFormat11.format((long) 40);
        java.util.TimeZone timeZone17 = fastDateFormat11.getTimeZone();
        java.util.TimeZone timeZone18 = fastDateFormat11.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone18);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute23 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray24 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList25 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList25, languageRangeArray24);
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        boolean boolean29 = locale28.hasExtensions();
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.lang.String str32 = locale31.getLanguage();
        java.util.Locale[] localeArray33 = new java.util.Locale[] { locale27, locale28, locale30, locale31 };
        java.util.ArrayList<java.util.Locale> localeList34 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList34, localeArray33);
        java.util.Locale.FilteringMode filteringMode36 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList37 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList25, (java.util.Collection<java.util.Locale>) localeList34, filteringMode36);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList39 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale40 = java.util.Locale.CHINESE;
        java.lang.String str41 = locale40.getLanguage();
        java.util.Set<java.lang.String> strSet42 = locale40.getUnicodeLocaleAttributes();
        java.lang.String str43 = java.util.Locale.lookupTag(languageRangeList39, (java.util.Collection<java.lang.String>) strSet42);
        boolean boolean44 = localeList37.containsAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean46 = localeList37.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator47 = localeList37.spliterator();
        java.util.Locale locale51 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale52 = java.util.Locale.ROOT;
        java.lang.String str53 = locale51.getDisplayScript(locale52);
        java.lang.String str54 = locale51.getISO3Language();
        boolean boolean55 = localeList37.add(locale51);
        boolean boolean56 = attribute23.equals((java.lang.Object) locale51);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat57 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone22, locale51);
        java.util.Calendar calendar58 = java.util.Calendar.getInstance(timeZone18, locale51);
        java.lang.String str59 = locale2.getDisplayVariant(locale51);
        java.util.Set<java.lang.Character> charSet60 = locale2.getExtensionKeys();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar58", (calendar6.compareTo(calendar58) == 0) == calendar6.equals(calendar58));
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test142");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        java.util.TimeZone timeZone8 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int9 = timeZone8.getRawOffset();
        calendar6.setTimeZone(timeZone8);
        calendar6.setFirstDayOfWeek(6);
        boolean boolean13 = calendar6.isWeekDateSupported();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("zh_CN");
        calendar6.setTimeZone(timeZone15);
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone15);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone15);
        int int19 = calendar18.getMinimalDaysInFirstWeek();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar17", (calendar6.compareTo(calendar17) == 0) == calendar6.equals(calendar17));
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test143");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList1 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray2 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList3 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList3, languageRangeArray2);
        java.util.Locale locale5 = java.util.Locale.GERMAN;
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        boolean boolean7 = locale6.hasExtensions();
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale5, locale6, locale8, locale9 };
        java.util.ArrayList<java.util.Locale> localeList12 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList12, localeArray11);
        java.util.Locale.FilteringMode filteringMode14 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList15 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList3, (java.util.Collection<java.util.Locale>) localeList12, filteringMode14);
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter(languageRangeList1, (java.util.Collection<java.util.Locale>) localeList15);
        localeList16.clear();
        boolean boolean19 = localeList16.contains((java.lang.Object) 11);
        boolean boolean21 = localeList16.remove((java.lang.Object) "22 Feb 2022 07:07:43 GMT");
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone23);
        java.lang.String str25 = fastDateFormat24.getPattern();
        java.lang.String str27 = fastDateFormat24.format(1645513660686L);
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        java.lang.String str30 = fastDateFormat24.format(date28);
        java.lang.String str32 = fastDateFormat24.format((long) 32769);
        java.util.TimeZone timeZone33 = fastDateFormat24.getTimeZone();
        int int34 = localeList16.indexOf((java.lang.Object) fastDateFormat24);
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        boolean boolean37 = timeZone35.hasSameRules(timeZone36);
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone35);
        int int39 = calendar38.getFirstDayOfWeek();
        long long40 = calendar38.getTimeInMillis();
        java.lang.String str41 = fastDateFormat24.format(calendar38);
        java.util.TimeZone timeZone43 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone43);
        java.lang.String str45 = fastDateFormat44.getPattern();
        java.lang.String str47 = fastDateFormat44.format(1645513660686L);
        java.util.TimeZone timeZone48 = fastDateFormat44.getTimeZone();
        java.lang.String str49 = timeZone48.getID();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Calendar calendar55 = java.util.Calendar.getInstance(timeZone48, locale50);
        boolean boolean56 = fastDateFormat24.equals((java.lang.Object) calendar55);
        java.util.Date date60 = new java.util.Date((int) (short) 0, 1, (int) '4');
        java.lang.String str61 = fastDateFormat24.format(date60);
        date60.setMonth(21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar38 and calendar55", (calendar38.compareTo(calendar55) == 0) == calendar38.equals(calendar55));
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test144");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        java.util.Calendar calendar3 = java.util.Calendar.getInstance(timeZone0);
        calendar3.setFirstDayOfWeek(10);
        boolean boolean6 = calendar3.isWeekDateSupported();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        boolean boolean10 = timeZone8.hasSameRules(timeZone9);
        boolean boolean11 = timeZone8.observesDaylightTime();
        int int12 = timeZone8.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone8);
        timeZone8.setRawOffset(9);
        timeZone8.setID("7:07:40 AM UTC");
        int int19 = timeZone8.getOffset(1645513660365L);
        int int21 = timeZone8.getOffset((long) 22);
        boolean boolean22 = timeZone8.observesDaylightTime();
        boolean boolean23 = timeZone8.observesDaylightTime();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList25 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray26 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList27 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList27, languageRangeArray26);
        java.util.Locale locale29 = java.util.Locale.GERMAN;
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        boolean boolean31 = locale30.hasExtensions();
        java.util.Locale locale32 = java.util.Locale.FRANCE;
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale29, locale30, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList27, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.util.List<java.util.Locale> localeList40 = java.util.Locale.filter(languageRangeList25, (java.util.Collection<java.util.Locale>) localeList39);
        localeList40.clear();
        boolean boolean43 = localeList40.contains((java.lang.Object) 11);
        boolean boolean45 = localeList40.remove((java.lang.Object) "22 Feb 2022 07:07:43 GMT");
        java.util.Spliterator<java.util.Locale> localeSpliterator46 = localeList40.spliterator();
        boolean boolean47 = localeList40.isEmpty();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat49 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.util.Locale locale50 = fastDateFormat49.getLocale();
        boolean boolean51 = localeList40.add(locale50);
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone8, locale50);
        calendar3.setTimeZone(timeZone8);
        boolean boolean54 = timeZone8.useDaylightTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar3 and calendar52", (calendar3.compareTo(calendar52) == 0) == calendar3.equals(calendar52));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test145");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Date date86 = calendar84.getTime();
        calendar84.setTimeInMillis(1058141837640000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test146");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.time.Instant instant7 = calendar6.toInstant();
        int int8 = calendar6.getWeeksInWeekYear();
        java.lang.String str9 = calendar6.getCalendarType();
        java.util.TimeZone timeZone10 = calendar6.getTimeZone();
        int int12 = calendar6.getLeastMaximum(2);
        int int13 = calendar6.getMinimalDaysInFirstWeek();
        java.util.Calendar.Builder builder14 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder19 = builder14.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar20 = builder19.build();
        java.util.Calendar.Builder builder22 = builder19.setLenient(true);
        java.util.Calendar.Builder builder25 = builder19.set(7, 28);
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone28 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat29 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone28);
        java.lang.String str30 = fastDateFormat29.getPattern();
        java.lang.String str32 = fastDateFormat29.format(1645513660686L);
        java.util.Locale locale33 = java.util.Locale.ITALIAN;
        boolean boolean34 = fastDateFormat29.equals((java.lang.Object) locale33);
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(timeZone26, locale33);
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(timeZone26);
        java.util.Calendar.Builder builder37 = builder19.setTimeZone(timeZone26);
        calendar6.setTimeZone(timeZone26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar35 and calendar36", (calendar35.compareTo(calendar36) == 0) == calendar35.equals(calendar36));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test147");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone1.hasSameRules(timeZone2);
        java.util.TimeZone.setDefault(timeZone2);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (byte) 0, timeZone2);
        timeZone2.setRawOffset((int) (byte) 1);
        java.util.TimeZone timeZone11 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone11);
        java.lang.String str13 = fastDateFormat12.getPattern();
        java.lang.String str15 = fastDateFormat12.format(1645513660686L);
        java.util.Locale locale16 = fastDateFormat12.getLocale();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone17);
        int int22 = calendar20.getActualMinimum(6);
        calendar20.set((int) (short) 1, 41, 16, 16, 32772);
        int int29 = calendar20.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone30 = calendar20.getTimeZone();
        java.util.Date date31 = calendar20.getTime();
        java.lang.String str32 = fastDateFormat12.format((java.lang.Object) date31);
        int int33 = fastDateFormat12.getMaxLengthEstimate();
        java.util.Locale locale34 = java.util.Locale.CHINESE;
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(locale34);
        long long36 = calendar35.getTimeInMillis();
        java.lang.String str37 = calendar35.getCalendarType();
        java.util.Date date38 = calendar35.getTime();
        int int39 = calendar35.getMinimalDaysInFirstWeek();
        java.lang.String str40 = fastDateFormat12.format(calendar35);
        java.util.Locale locale41 = fastDateFormat12.getLocale();
        java.lang.String str42 = locale41.getISO3Country();
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(timeZone2, locale41);
        timeZone2.setID("Wed Jul 09 10:12:31 GMT+00:00 4");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar35 and calendar43", (calendar35.compareTo(calendar43) == 0) == calendar35.equals(calendar43));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test148");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder0.build();
        java.util.Calendar.Builder builder10 = builder0.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder12 = builder0.setLenient(true);
        java.util.Calendar.Builder builder17 = builder12.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone18.hasSameRules(timeZone19);
        timeZone18.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone18.setID("und");
        java.util.Calendar.Builder builder27 = builder12.setTimeZone(timeZone18);
        timeZone18.setRawOffset((int) 'x');
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        java.util.Locale locale35 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale36 = java.util.Locale.CHINESE;
        java.lang.String str37 = locale36.getLanguage();
        boolean boolean38 = locale36.hasExtensions();
        java.lang.String str39 = locale35.getDisplayVariant(locale36);
        java.util.Locale.setDefault(locale36);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone32, locale36);
        boolean boolean42 = timeZone18.hasSameRules(timeZone32);
        java.util.Locale locale44 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022");
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(locale44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone18, locale44);
        java.lang.Object obj47 = timeZone18.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar45 and calendar46", (calendar45.compareTo(calendar46) == 0) == calendar45.equals(calendar46));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test149");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        int int76 = localeList56.size();
        java.util.Spliterator<java.util.Locale> localeSpliterator77 = localeList56.spliterator();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test150");
        java.util.Locale locale4 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale5 = java.util.Locale.ROOT;
        java.lang.String str6 = locale4.getDisplayScript(locale5);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(locale4);
        int int9 = calendar7.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone10 = calendar7.getTimeZone();
        java.util.Locale locale11 = java.util.Locale.GERMANY;
        java.util.Locale locale13 = new java.util.Locale("Chinese");
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String str15 = locale11.getDisplayCountry();
        java.util.Set<java.lang.String> strSet16 = locale11.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone10, locale11);
        java.lang.String str18 = locale11.getVariant();
        java.util.Locale locale21 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat22 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale21);
        java.util.Locale locale23 = java.util.Locale.CANADA;
        java.lang.String str24 = locale21.getDisplayName(locale23);
        java.util.Locale locale26 = new java.util.Locale("deu");
        java.lang.String str27 = locale26.getDisplayLanguage();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone30);
        java.lang.String str32 = fastDateFormat31.getPattern();
        java.lang.String str34 = fastDateFormat31.format(1645513660686L);
        java.util.Locale locale35 = java.util.Locale.ITALIAN;
        boolean boolean36 = fastDateFormat31.equals((java.lang.Object) locale35);
        java.util.Calendar calendar37 = java.util.Calendar.getInstance(timeZone28, locale35);
        java.util.Locale locale38 = java.util.Locale.FRANCE;
        boolean boolean39 = locale38.hasExtensions();
        java.lang.String str40 = locale35.getDisplayVariant(locale38);
        java.lang.String str41 = locale35.getDisplayName();
        java.lang.String str42 = locale35.getISO3Language();
        java.lang.String str43 = locale26.getDisplayName(locale35);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.lang.String str52 = locale35.getDisplayName(locale49);
        java.lang.String str53 = locale21.getDisplayCountry(locale35);
        java.lang.String str54 = locale11.getDisplayScript(locale35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar37", (calendar7.compareTo(calendar37) == 0) == calendar7.equals(calendar37));
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test151");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.lang.Object obj4 = fastDateFormat2.clone();
        java.util.Date date10 = new java.util.Date(11, 9, 8, (int) 'x', 9);
        int int11 = date10.getMinutes();
        date10.setYear(41);
        java.lang.String str14 = fastDateFormat2.format((java.lang.Object) date10);
        boolean boolean15 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str21 = fastDateFormat19.format((long) (byte) -1);
        java.text.ParsePosition parsePosition24 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj25 = fastDateFormat19.parseObject("GMT+00:00", parsePosition24);
        java.text.ParsePosition parsePosition28 = new java.text.ParsePosition(16);
        parsePosition28.setIndex(10);
        java.lang.Object obj31 = fastDateFormat19.parseObject("java.text.ParsePosition[index=16,errorIndex=-1]", parsePosition28);
        java.lang.String str32 = parsePosition28.toString();
        java.lang.Object obj33 = fastDateFormat2.parseObject("22 Feb 2022 07:07:44 GMT", parsePosition28);
        java.lang.String str34 = fastDateFormat2.toString();
        java.util.TimeZone timeZone35 = fastDateFormat2.getTimeZone();
        java.util.Date date36 = new java.util.Date();
        int int37 = date36.getSeconds();
        java.util.Date date38 = new java.util.Date();
        int int39 = date38.getTimezoneOffset();
        date38.setMinutes(5);
        boolean boolean42 = date36.after(date38);
        java.util.Date date43 = new java.util.Date();
        int int44 = date43.getSeconds();
        long long45 = date43.getTime();
        date43.setTime((long) (byte) 0);
        java.util.Date date48 = new java.util.Date();
        int int49 = date48.getDay();
        int int50 = date48.getTimezoneOffset();
        boolean boolean51 = date43.after(date48);
        date43.setMinutes(18);
        boolean boolean54 = date36.before(date43);
        int int55 = date43.getMonth();
        java.lang.String str56 = fastDateFormat2.format(date43);
        java.util.TimeZone timeZone57 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone58 = java.util.TimeZone.getDefault();
        boolean boolean59 = timeZone57.hasSameRules(timeZone58);
        boolean boolean60 = timeZone57.observesDaylightTime();
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet62 = locale61.getUnicodeLocaleAttributes();
        java.util.Calendar calendar63 = java.util.Calendar.getInstance(timeZone57, locale61);
        boolean boolean64 = timeZone57.observesDaylightTime();
        java.util.TimeZone timeZone65 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone66 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone67 = java.util.TimeZone.getDefault();
        boolean boolean68 = timeZone66.hasSameRules(timeZone67);
        boolean boolean69 = timeZone65.hasSameRules(timeZone66);
        boolean boolean70 = timeZone57.hasSameRules(timeZone66);
        timeZone66.setRawOffset((int) '4');
        java.util.Calendar calendar73 = java.util.Calendar.getInstance(timeZone66);
        boolean boolean74 = fastDateFormat2.equals((java.lang.Object) timeZone66);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar63 and calendar73", (calendar63.compareTo(calendar73) == 0) == calendar63.equals(calendar73));
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test152");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int3 = calendar1.getActualMinimum((int) (byte) 0);
        int int4 = calendar1.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(timeZone5);
        int int9 = calendar8.getFirstDayOfWeek();
        boolean boolean10 = calendar1.before((java.lang.Object) calendar8);
        calendar1.setLenient(true);
        calendar1.roll(0, (int) (short) -1);
        calendar1.set(57, 2022, (int) 'x');
        calendar1.setTimeInMillis(1645513694363L);
        java.util.Calendar.Builder builder22 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder24 = builder22.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder26 = builder24.setLenient(true);
        java.util.Calendar.Builder builder28 = builder26.setLenient(true);
        java.util.TimeZone timeZone30 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone30);
        java.lang.String str32 = fastDateFormat31.getPattern();
        java.text.ParsePosition parsePosition35 = new java.text.ParsePosition(16);
        parsePosition35.setIndex(10);
        java.lang.Object obj38 = fastDateFormat31.parseObject("FastDateFormat[]", parsePosition35);
        boolean boolean39 = fastDateFormat31.getTimeZoneOverridesCalendar();
        java.text.ParsePosition parsePosition42 = new java.text.ParsePosition(16);
        int int43 = parsePosition42.getErrorIndex();
        java.lang.Object obj44 = fastDateFormat31.parseObject("Coordinated Universal Time", parsePosition42);
        java.lang.String str45 = fastDateFormat31.getPattern();
        java.util.TimeZone timeZone46 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone47 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        boolean boolean49 = timeZone47.hasSameRules(timeZone48);
        boolean boolean50 = timeZone46.hasSameRules(timeZone47);
        java.util.TimeZone.setDefault(timeZone47);
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone47);
        calendar52.set(8, 4);
        calendar52.setMinimalDaysInFirstWeek(4);
        java.lang.String str58 = calendar52.getCalendarType();
        java.time.Instant instant59 = calendar52.toInstant();
        java.util.Date date60 = java.util.Date.from(instant59);
        java.lang.String str61 = fastDateFormat31.format(date60);
        java.util.Calendar.Builder builder62 = builder28.setInstant(date60);
        java.util.Calendar.Builder builder63 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder68 = builder63.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar69 = builder68.build();
        boolean boolean71 = calendar69.after((java.lang.Object) 1L);
        java.util.TimeZone timeZone73 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone74 = java.util.TimeZone.getDefault();
        boolean boolean75 = timeZone73.hasSameRules(timeZone74);
        boolean boolean76 = timeZone73.observesDaylightTime();
        int int77 = timeZone73.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat78 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone73);
        timeZone73.setRawOffset(9);
        timeZone73.setID("7:07:40 AM UTC");
        int int83 = timeZone73.getRawOffset();
        calendar69.setTimeZone(timeZone73);
        java.util.TimeZone.setDefault(timeZone73);
        java.util.Calendar.Builder builder86 = builder28.setTimeZone(timeZone73);
        java.util.Date date93 = new java.util.Date(17, 16, 292278994, 52, 12, 122);
        date93.setMonth(9);
        date93.setYear(6);
        java.util.Calendar.Builder builder98 = builder86.setInstant(date93);
        boolean boolean99 = calendar1.equals((java.lang.Object) builder98);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar52", (calendar8.compareTo(calendar52) == 0) == calendar8.equals(calendar52));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test153");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList1 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray2 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList3 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList3, languageRangeArray2);
        java.util.Locale locale5 = java.util.Locale.GERMAN;
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        boolean boolean7 = locale6.hasExtensions();
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale5, locale6, locale8, locale9 };
        java.util.ArrayList<java.util.Locale> localeList12 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList12, localeArray11);
        java.util.Locale.FilteringMode filteringMode14 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList15 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList3, (java.util.Collection<java.util.Locale>) localeList12, filteringMode14);
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter(languageRangeList1, (java.util.Collection<java.util.Locale>) localeList15);
        localeList15.clear();
        java.lang.Object[] objArray18 = localeList15.toArray();
        java.util.Locale locale19 = java.util.Locale.CHINESE;
        java.lang.String str20 = locale19.getLanguage();
        boolean boolean21 = locale19.hasExtensions();
        java.lang.String str22 = locale19.getDisplayCountry();
        java.util.Set<java.lang.String> strSet23 = locale19.getUnicodeLocaleKeys();
        boolean boolean24 = localeList15.removeAll((java.util.Collection<java.lang.String>) strSet23);
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat28 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone27);
        java.lang.String str29 = fastDateFormat28.getPattern();
        java.lang.String str31 = fastDateFormat28.format(1645513660686L);
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        boolean boolean33 = fastDateFormat28.equals((java.lang.Object) locale32);
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(timeZone25, locale32);
        java.lang.String str35 = locale32.getCountry();
        java.util.Set<java.lang.String> strSet36 = locale32.getUnicodeLocaleKeys();
        boolean boolean37 = localeList15.retainAll((java.util.Collection<java.lang.String>) strSet36);
        java.util.TimeZone timeZone38 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone39 = java.util.TimeZone.getDefault();
        boolean boolean40 = timeZone38.hasSameRules(timeZone39);
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(timeZone38);
        int int43 = calendar41.getActualMinimum(6);
        calendar41.setLenient(false);
        calendar41.setLenient(true);
        int int49 = calendar41.getMinimum(3);
        boolean boolean51 = calendar41.before((java.lang.Object) "22-feb-2022 7.08.37");
        int int53 = calendar41.getMinimum(1);
        boolean boolean54 = localeList15.equals((java.lang.Object) int53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar34 and calendar41", (calendar34.compareTo(calendar41) == 0) == calendar34.equals(calendar41));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test154");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str32 = fastDateFormat31.toString();
        java.text.ParsePosition parsePosition35 = new java.text.ParsePosition(16);
        parsePosition35.setIndex(10);
        parsePosition35.setIndex(0);
        java.lang.Object obj40 = fastDateFormat31.parseObject("Taiwan", parsePosition35);
        java.util.TimeZone timeZone41 = fastDateFormat31.getTimeZone();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.lang.String str47 = locale42.getLanguage();
        java.util.Locale.Builder builder48 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder48.clear();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale.Builder builder55 = builder49.setLocale(locale50);
        java.util.Locale locale56 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder57 = builder55.setLocale(locale56);
        java.util.Locale locale58 = builder55.build();
        java.lang.String str59 = locale42.getDisplayScript(locale58);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone41, locale42);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone41);
        calendar6.setTimeZone(timeZone41);
        java.util.TimeZone timeZone64 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat65 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone64);
        java.lang.String str66 = fastDateFormat65.getPattern();
        java.lang.String str68 = fastDateFormat65.format(1645513660686L);
        java.util.Date date69 = new java.util.Date();
        int int70 = date69.getSeconds();
        java.lang.String str71 = fastDateFormat65.format(date69);
        java.lang.String str73 = fastDateFormat65.format((long) 32769);
        java.util.Locale locale74 = fastDateFormat65.getLocale();
        java.util.TimeZone timeZone75 = fastDateFormat65.getTimeZone();
        java.lang.String str76 = timeZone75.getID();
        int int78 = timeZone75.getOffset(1645513660365L);
        calendar6.setTimeZone(timeZone75);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar60", (calendar26.compareTo(calendar60) == 0) == calendar26.equals(calendar60));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test155");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.text.ParsePosition parsePosition6 = new java.text.ParsePosition(16);
        parsePosition6.setIndex(10);
        java.lang.Object obj9 = fastDateFormat2.parseObject("FastDateFormat[]", parsePosition6);
        boolean boolean10 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.text.ParsePosition parsePosition13 = new java.text.ParsePosition(16);
        int int14 = parsePosition13.getErrorIndex();
        java.lang.Object obj15 = fastDateFormat2.parseObject("Coordinated Universal Time", parsePosition13);
        java.lang.String str16 = fastDateFormat2.getPattern();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        boolean boolean20 = timeZone18.hasSameRules(timeZone19);
        boolean boolean21 = timeZone17.hasSameRules(timeZone18);
        java.util.TimeZone.setDefault(timeZone18);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone18);
        calendar23.set(8, 4);
        calendar23.setMinimalDaysInFirstWeek(4);
        java.lang.String str29 = calendar23.getCalendarType();
        java.time.Instant instant30 = calendar23.toInstant();
        java.util.Date date31 = java.util.Date.from(instant30);
        java.lang.String str32 = fastDateFormat2.format(date31);
        java.util.TimeZone timeZone33 = fastDateFormat2.getTimeZone();
        java.util.Locale.Category category34 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale36 = new java.util.Locale("Chinese");
        java.util.Calendar calendar37 = java.util.Calendar.getInstance(locale36);
        java.lang.String str38 = locale36.getCountry();
        java.util.Locale.setDefault(category34, locale36);
        java.util.Locale locale40 = java.util.Locale.getDefault(category34);
        java.util.Locale locale41 = java.util.Locale.getDefault(category34);
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.util.Locale locale48 = java.util.Locale.forLanguageTag("zh");
        java.lang.String str49 = locale42.getDisplayLanguage(locale48);
        java.util.Locale.Category category50 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale51 = java.util.Locale.getDefault(category50);
        java.util.Locale locale52 = java.util.Locale.getDefault(category50);
        java.util.Locale.Builder builder53 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder54 = builder53.clear();
        java.util.Locale locale55 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale56 = java.util.Locale.CHINESE;
        java.lang.String str57 = locale56.getLanguage();
        boolean boolean58 = locale56.hasExtensions();
        java.lang.String str59 = locale55.getDisplayVariant(locale56);
        java.util.Locale.Builder builder60 = builder54.setLocale(locale55);
        java.util.Locale.Builder builder62 = builder60.removeUnicodeLocaleAttribute("German");
        java.util.Locale locale63 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale64 = java.util.Locale.CHINESE;
        java.lang.String str65 = locale64.getLanguage();
        boolean boolean66 = locale64.hasExtensions();
        java.lang.String str67 = locale63.getDisplayVariant(locale64);
        java.util.Locale locale68 = locale63.stripExtensions();
        java.util.Locale.setDefault(locale63);
        java.util.Locale.Builder builder70 = builder62.setLocale(locale63);
        java.util.Locale.setDefault(category50, locale63);
        java.lang.String str72 = locale63.getDisplayLanguage();
        java.lang.String str73 = locale42.getDisplayVariant(locale63);
        java.lang.String str74 = locale63.getDisplayCountry();
        java.util.Locale.setDefault(category34, locale63);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone33, locale63);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar37", (calendar23.compareTo(calendar37) == 0) == calendar23.equals(calendar37));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test156");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str4 = fastDateFormat2.format((long) (byte) -1);
        java.text.ParsePosition parsePosition7 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj8 = fastDateFormat2.parseObject("GMT+00:00", parsePosition7);
        java.util.TimeZone timeZone9 = fastDateFormat2.getTimeZone();
        java.util.TimeZone timeZone10 = fastDateFormat2.getTimeZone();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList12 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray13 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList14 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList14, languageRangeArray13);
        java.util.Locale locale16 = java.util.Locale.GERMAN;
        java.util.Locale locale17 = java.util.Locale.FRANCE;
        boolean boolean18 = locale17.hasExtensions();
        java.util.Locale locale19 = java.util.Locale.FRANCE;
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        java.util.Locale[] localeArray22 = new java.util.Locale[] { locale16, locale17, locale19, locale20 };
        java.util.ArrayList<java.util.Locale> localeList23 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList23, localeArray22);
        java.util.Locale.FilteringMode filteringMode25 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList26 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList14, (java.util.Collection<java.util.Locale>) localeList23, filteringMode25);
        java.util.List<java.util.Locale> localeList27 = java.util.Locale.filter(languageRangeList12, (java.util.Collection<java.util.Locale>) localeList26);
        localeList27.clear();
        int int29 = localeList27.size();
        java.util.Locale locale31 = java.util.Locale.TAIWAN;
        java.util.Locale locale32 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str33 = locale31.getDisplayLanguage(locale32);
        java.util.Locale locale34 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        boolean boolean37 = locale35.hasExtensions();
        java.lang.String str38 = locale34.getDisplayVariant(locale35);
        java.lang.String str39 = locale31.getDisplayLanguage(locale35);
        java.lang.String str40 = locale31.getDisplayVariant();
        localeList27.add(0, locale31);
        java.util.Locale locale43 = new java.util.Locale("Chinese");
        java.util.Calendar calendar44 = java.util.Calendar.getInstance(locale43);
        java.lang.String str45 = locale43.getCountry();
        java.lang.String str46 = locale43.getScript();
        java.util.Locale locale47 = locale43.stripExtensions();
        java.lang.String str48 = locale31.getDisplayVariant(locale47);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(locale31);
        java.lang.String str50 = locale31.getScript();
        java.util.Set<java.lang.Character> charSet51 = locale31.getExtensionKeys();
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone10, locale31);
        java.lang.String str53 = timeZone10.getDisplayName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar44 and calendar52", (calendar44.compareTo(calendar52) == 0) == calendar44.equals(calendar52));
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test157");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.Date date81 = new java.util.Date();
        int int82 = date81.getSeconds();
        long long83 = date81.getTime();
        java.util.Date date84 = new java.util.Date();
        int int85 = date84.getTimezoneOffset();
        date84.setMinutes(5);
        int int88 = date84.getSeconds();
        long long89 = date84.getTime();
        boolean boolean90 = date81.before(date84);
        java.lang.String str91 = fastDateFormat2.format(date81);
        date81.setMinutes(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test158");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat1 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str2 = fastDateFormat1.toString();
        java.text.ParsePosition parsePosition5 = new java.text.ParsePosition(16);
        parsePosition5.setIndex(10);
        parsePosition5.setIndex(0);
        java.lang.Object obj10 = fastDateFormat1.parseObject("Taiwan", parsePosition5);
        java.util.Locale locale11 = fastDateFormat1.getLocale();
        java.util.Locale locale13 = new java.util.Locale("deu");
        java.lang.String str14 = locale13.getDisplayLanguage();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.Locale locale22 = java.util.Locale.ITALIAN;
        boolean boolean23 = fastDateFormat18.equals((java.lang.Object) locale22);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone15, locale22);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.lang.String str27 = locale22.getDisplayVariant(locale25);
        java.lang.String str28 = locale22.getDisplayName();
        java.lang.String str29 = locale22.getISO3Language();
        java.lang.String str30 = locale13.getDisplayName(locale22);
        java.util.Locale locale31 = java.util.Locale.TAIWAN;
        java.util.Locale locale32 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str33 = locale31.getDisplayLanguage(locale32);
        java.lang.String str34 = locale31.getLanguage();
        java.util.Locale locale36 = new java.util.Locale("Chinese");
        java.util.Locale locale37 = locale36.stripExtensions();
        java.lang.String str38 = locale31.getDisplayLanguage(locale36);
        java.lang.String str39 = locale22.getDisplayName(locale36);
        boolean boolean40 = fastDateFormat1.equals((java.lang.Object) locale36);
        java.util.Calendar.Builder builder41 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder46 = builder41.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar47 = builder41.build();
        java.util.Calendar.Builder builder51 = builder41.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder53 = builder41.setLenient(true);
        java.util.Calendar.Builder builder58 = builder53.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.Calendar.Builder builder62 = builder53.setWeekDate(13, 0, 0);
        java.util.Locale locale67 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale68 = java.util.Locale.ROOT;
        java.lang.String str69 = locale67.getDisplayScript(locale68);
        java.lang.String str70 = locale67.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat71 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale67);
        java.lang.String str72 = locale67.getLanguage();
        java.util.Locale locale73 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet74 = locale73.getUnicodeLocaleAttributes();
        java.lang.String str75 = locale67.getDisplayScript(locale73);
        java.util.Calendar.Builder builder76 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder80 = builder76.setWeekDate(16, 3, 100);
        java.util.Locale locale81 = java.util.Locale.GERMANY;
        java.util.Locale locale83 = new java.util.Locale("Chinese");
        java.lang.String str84 = locale81.getDisplayLanguage(locale83);
        java.util.Calendar.Builder builder85 = builder76.setLocale(locale83);
        java.util.TimeZone timeZone86 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone87 = java.util.TimeZone.getDefault();
        boolean boolean88 = timeZone86.hasSameRules(timeZone87);
        boolean boolean89 = timeZone86.observesDaylightTime();
        java.util.Locale locale90 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet91 = locale90.getUnicodeLocaleAttributes();
        java.util.Calendar calendar92 = java.util.Calendar.getInstance(timeZone86, locale90);
        java.lang.String str93 = locale90.getDisplayVariant();
        java.lang.String str94 = locale90.getDisplayVariant();
        java.util.Calendar.Builder builder95 = builder85.setLocale(locale90);
        java.util.Set<java.lang.Character> charSet96 = locale90.getExtensionKeys();
        java.lang.String str97 = locale73.getDisplayLanguage(locale90);
        java.util.Calendar.Builder builder98 = builder53.setLocale(locale73);
        java.lang.String str99 = locale36.getDisplayScript(locale73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar24 and calendar92", (calendar24.compareTo(calendar92) == 0) == calendar24.equals(calendar92));
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test159");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.lang.Object obj11 = fastDateFormat2.clone();
        java.util.TimeZone timeZone12 = fastDateFormat2.getTimeZone();
        java.util.Locale locale15 = new java.util.Locale("7:07:58 AM UTC", "ko");
        java.util.Calendar calendar16 = java.util.Calendar.getInstance(locale15);
        java.lang.String str17 = locale15.getDisplayScript();
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone12, locale15);
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar16 and calendar18", (calendar16.compareTo(calendar18) == 0) == calendar16.equals(calendar18));
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test160");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.TimeZone timeZone8 = fastDateFormat4.getTimeZone();
        java.lang.String str9 = timeZone8.getID();
        java.util.Locale locale10 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        boolean boolean13 = locale11.hasExtensions();
        java.lang.String str14 = locale10.getDisplayVariant(locale11);
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(timeZone8, locale10);
        java.lang.String str17 = locale10.getExtension('a');
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone1, locale10);
        java.lang.String str19 = locale10.getISO3Language();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar15 and calendar18", (calendar15.compareTo(calendar18) == 0) == calendar15.equals(calendar18));
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test161");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.util.Locale locale3 = fastDateFormat2.getLocale();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone5.observesDaylightTime();
        int int9 = timeZone5.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat10 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone5);
        timeZone5.setRawOffset(9);
        timeZone5.setID("7:07:40 AM UTC");
        int int16 = timeZone5.getOffset(1645513660365L);
        int int18 = timeZone5.getOffset((long) 22);
        boolean boolean19 = timeZone5.observesDaylightTime();
        boolean boolean20 = timeZone5.observesDaylightTime();
        java.lang.String str21 = timeZone5.getID();
        timeZone5.setRawOffset(44);
        java.util.Locale.LanguageRange[] languageRangeArray24 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList25 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList25, languageRangeArray24);
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        boolean boolean29 = locale28.hasExtensions();
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.lang.String str32 = locale31.getLanguage();
        java.util.Locale[] localeArray33 = new java.util.Locale[] { locale27, locale28, locale30, locale31 };
        java.util.ArrayList<java.util.Locale> localeList34 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList34, localeArray33);
        java.util.Locale.FilteringMode filteringMode36 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList37 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList25, (java.util.Collection<java.util.Locale>) localeList34, filteringMode36);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(locale38);
        boolean boolean40 = localeList34.contains((java.lang.Object) locale38);
        java.util.Set<java.lang.String> strSet41 = locale38.getUnicodeLocaleKeys();
        java.util.Locale locale42 = java.util.Locale.TAIWAN;
        java.util.Locale locale43 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str44 = locale42.getDisplayLanguage(locale43);
        java.lang.String str45 = locale42.getDisplayLanguage();
        java.lang.String str46 = locale38.getDisplayVariant(locale42);
        java.text.ParsePosition parsePosition48 = new java.text.ParsePosition(16);
        java.util.Locale locale49 = java.util.Locale.CHINESE;
        java.lang.String str50 = locale49.getLanguage();
        boolean boolean51 = locale49.hasExtensions();
        boolean boolean52 = parsePosition48.equals((java.lang.Object) locale49);
        java.util.Calendar calendar53 = java.util.Calendar.getInstance(locale49);
        java.lang.String str54 = locale38.getDisplayCountry(locale49);
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale55.getDisplayCountry();
        java.lang.String str59 = locale55.getISO3Language();
        java.util.Locale locale61 = java.util.Locale.getDefault();
        java.lang.String str62 = locale61.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale61);
        java.lang.String str64 = locale55.getDisplayName(locale61);
        java.util.Locale locale65 = java.util.Locale.TAIWAN;
        java.util.Locale locale66 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str67 = locale65.getDisplayLanguage(locale66);
        java.util.Locale locale68 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale69 = java.util.Locale.CHINESE;
        java.lang.String str70 = locale69.getLanguage();
        boolean boolean71 = locale69.hasExtensions();
        java.lang.String str72 = locale68.getDisplayVariant(locale69);
        java.lang.String str73 = locale65.getDisplayLanguage(locale69);
        java.lang.String str74 = locale61.getDisplayScript(locale69);
        java.lang.String str75 = locale49.getDisplayScript(locale61);
        java.util.Locale locale76 = locale61.stripExtensions();
        java.util.Calendar calendar77 = java.util.Calendar.getInstance(timeZone5, locale61);
        java.lang.String str78 = locale3.getDisplayName(locale61);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar39 and calendar77", (calendar39.compareTo(calendar77) == 0) == calendar39.equals(calendar77));
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test162");
        java.util.Locale.Category category0 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale2 = new java.util.Locale("Chinese");
        java.util.Calendar calendar3 = java.util.Calendar.getInstance(locale2);
        java.lang.String str4 = locale2.getCountry();
        java.util.Locale.setDefault(category0, locale2);
        java.util.TimeZone timeZone7 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone7);
        java.lang.String str9 = fastDateFormat8.getPattern();
        java.lang.String str11 = fastDateFormat8.format(1645513660686L);
        java.util.TimeZone timeZone12 = fastDateFormat8.getTimeZone();
        java.lang.String str13 = timeZone12.getID();
        java.util.Locale locale14 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale15 = java.util.Locale.CHINESE;
        java.lang.String str16 = locale15.getLanguage();
        boolean boolean17 = locale15.hasExtensions();
        java.lang.String str18 = locale14.getDisplayVariant(locale15);
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone12, locale14);
        java.lang.String str21 = locale14.getExtension('a');
        java.util.Locale locale22 = locale14.stripExtensions();
        java.util.Locale.setDefault(category0, locale22);
        java.util.TimeZone timeZone25 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat26 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone25);
        java.lang.String str27 = fastDateFormat26.getPattern();
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        java.lang.String str30 = fastDateFormat26.format(date28);
        java.util.TimeZone timeZone33 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat34 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone33);
        java.lang.String str35 = fastDateFormat34.getPattern();
        java.lang.String str37 = fastDateFormat34.format(1645513660686L);
        java.util.TimeZone timeZone38 = fastDateFormat34.getTimeZone();
        java.lang.String str39 = fastDateFormat34.toString();
        java.text.ParsePosition parsePosition42 = new java.text.ParsePosition(16);
        int int43 = parsePosition42.getErrorIndex();
        int int44 = parsePosition42.getErrorIndex();
        int int45 = parsePosition42.getErrorIndex();
        java.lang.Object obj46 = fastDateFormat34.parseObject("\u5fb7\u570b", parsePosition42);
        java.lang.Object obj47 = fastDateFormat26.parseObject("ko", parsePosition42);
        java.util.Locale locale50 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat51 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale50);
        java.util.Date date52 = new java.util.Date();
        int int53 = date52.getSeconds();
        java.util.Date date54 = new java.util.Date();
        int int55 = date54.getTimezoneOffset();
        date54.setMinutes(5);
        boolean boolean58 = date52.after(date54);
        java.util.TimeZone timeZone60 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat61 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone60);
        java.lang.String str62 = fastDateFormat61.getPattern();
        java.util.Date date63 = new java.util.Date();
        int int64 = date63.getSeconds();
        java.lang.String str65 = fastDateFormat61.format(date63);
        boolean boolean66 = date52.before(date63);
        java.lang.String str67 = fastDateFormat51.format(date52);
        java.util.TimeZone timeZone68 = fastDateFormat51.getTimeZone();
        java.util.Locale locale69 = java.util.Locale.ITALIAN;
        java.util.Locale locale72 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022", "GMT+00:00");
        java.lang.String str73 = locale69.getDisplayName(locale72);
        java.util.Set<java.lang.String> strSet74 = locale69.getUnicodeLocaleAttributes();
        java.util.Calendar calendar75 = java.util.Calendar.getInstance(timeZone68, locale69);
        boolean boolean76 = fastDateFormat26.equals((java.lang.Object) locale69);
        java.lang.String str77 = locale69.toLanguageTag();
        java.util.Locale.setDefault(category0, locale69);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar3 and calendar75", (calendar3.compareTo(calendar75) == 0) == calendar3.equals(calendar75));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test163");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        java.util.Locale locale5 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet6 = locale5.getUnicodeLocaleAttributes();
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone1, locale5);
        boolean boolean8 = timeZone1.observesDaylightTime();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        boolean boolean12 = timeZone10.hasSameRules(timeZone11);
        boolean boolean13 = timeZone9.hasSameRules(timeZone10);
        boolean boolean14 = timeZone1.hasSameRules(timeZone10);
        timeZone10.setRawOffset((int) '4');
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone10);
        java.util.Locale locale19 = java.util.Locale.forLanguageTag("luned\354 13 giugno 0012");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e0a\u5348\u65f6\u5206\u79d2", timeZone10, locale19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar17", (calendar7.compareTo(calendar17) == 0) == calendar7.equals(calendar17));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test164");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Calendar.Builder builder86 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder88 = builder86.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder90 = builder88.setLenient(true);
        java.util.Calendar calendar91 = builder90.build();
        java.lang.String str92 = fastDateFormat2.format(calendar91);
        int int93 = calendar91.getFirstDayOfWeek();
        calendar91.set(17, 0, 122, 69, 54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test165");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder11 = builder5.set(7, 28);
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Locale locale19 = java.util.Locale.ITALIAN;
        boolean boolean20 = fastDateFormat15.equals((java.lang.Object) locale19);
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone12, locale19);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone12);
        java.util.Calendar.Builder builder23 = builder5.setTimeZone(timeZone12);
        boolean boolean24 = timeZone12.useDaylightTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar21 and calendar22", (calendar21.compareTo(calendar22) == 0) == calendar21.equals(calendar22));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test166");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = calendar10.getTimeZone();
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        boolean boolean24 = timeZone22.hasSameRules(timeZone23);
        boolean boolean25 = timeZone22.observesDaylightTime();
        int int26 = timeZone22.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone22);
        timeZone22.setRawOffset(9);
        timeZone22.setID("7:07:40 AM UTC");
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        boolean boolean35 = timeZone32.observesDaylightTime();
        java.util.Locale locale36 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet37 = locale36.getUnicodeLocaleAttributes();
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone32, locale36);
        boolean boolean39 = timeZone32.observesDaylightTime();
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone41 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        boolean boolean43 = timeZone41.hasSameRules(timeZone42);
        boolean boolean44 = timeZone40.hasSameRules(timeZone41);
        boolean boolean45 = timeZone32.hasSameRules(timeZone41);
        java.lang.String str46 = timeZone41.getID();
        boolean boolean47 = timeZone22.hasSameRules(timeZone41);
        java.util.Locale locale51 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale52 = java.util.Locale.ROOT;
        java.lang.String str53 = locale51.getDisplayScript(locale52);
        java.lang.String str54 = locale51.getISO3Language();
        java.lang.String str55 = locale51.getVariant();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat56 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone22, locale51);
        java.lang.String str57 = locale51.getCountry();
        java.util.Calendar calendar58 = java.util.Calendar.getInstance(timeZone19, locale51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar38", (calendar10.compareTo(calendar38) == 0) == calendar10.equals(calendar38));
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test167");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int11 = timeZone1.getRawOffset();
        java.util.Locale locale15 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale15);
        int int20 = calendar18.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone21 = calendar18.getTimeZone();
        boolean boolean22 = timeZone1.hasSameRules(timeZone21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date24 = calendar23.getTime();
        date24.setYear(21);
        date24.setDate(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar23", (calendar18.compareTo(calendar23) == 0) == calendar18.equals(calendar23));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test168");
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        int int4 = calendar2.getActualMinimum((int) (byte) 0);
        boolean boolean5 = calendar2.isWeekDateSupported();
        java.util.Date date6 = calendar2.getTime();
        java.util.Locale.LanguageRange[] languageRangeArray7 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList8 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList8, languageRangeArray7);
        java.util.Locale locale10 = java.util.Locale.GERMAN;
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.FRANCE;
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.lang.String str15 = locale14.getLanguage();
        java.util.Locale[] localeArray16 = new java.util.Locale[] { locale10, locale11, locale13, locale14 };
        java.util.ArrayList<java.util.Locale> localeList17 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList17, localeArray16);
        java.util.Locale.FilteringMode filteringMode19 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList20 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList8, (java.util.Collection<java.util.Locale>) localeList17, filteringMode19);
        boolean boolean21 = localeList20.isEmpty();
        java.util.Calendar.Builder builder22 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder26 = builder22.setWeekDate(16, 3, 100);
        boolean boolean27 = localeList20.remove((java.lang.Object) builder22);
        java.util.Calendar.Builder builder29 = builder22.setLenient(true);
        java.util.Calendar.Builder builder33 = builder29.setTimeOfDay(0, 122, 28);
        boolean boolean34 = calendar2.after((java.lang.Object) builder33);
        java.util.Calendar.Builder builder38 = builder33.setDate(3, (int) (short) -1, 7);
        java.util.Calendar.Builder builder42 = builder38.setTimeOfDay(7200000, (int) (short) 0, 54);
        java.util.Calendar.Builder builder46 = builder42.setDate(1904, 2022, 4666);
        java.util.TimeZone timeZone47 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        boolean boolean50 = timeZone48.hasSameRules(timeZone49);
        boolean boolean51 = timeZone47.hasSameRules(timeZone48);
        timeZone47.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone47.setID("und");
        timeZone47.setID("\u4e0a\u5348\u65f6\u5206\u79d2 UTC");
        java.lang.String str58 = timeZone47.getID();
        java.util.Calendar.Builder builder59 = builder46.setTimeZone(timeZone47);
        java.util.Calendar.Builder builder60 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder65 = builder60.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar66 = builder65.build();
        boolean boolean68 = calendar66.after((java.lang.Object) 1L);
        java.util.TimeZone timeZone70 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone71 = java.util.TimeZone.getDefault();
        boolean boolean72 = timeZone70.hasSameRules(timeZone71);
        boolean boolean73 = timeZone70.observesDaylightTime();
        int int74 = timeZone70.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone70);
        timeZone70.setRawOffset(9);
        timeZone70.setID("7:07:40 AM UTC");
        int int80 = timeZone70.getRawOffset();
        calendar66.setTimeZone(timeZone70);
        java.util.TimeZone.setDefault(timeZone70);
        java.util.Locale locale83 = java.util.Locale.TRADITIONAL_CHINESE;
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(locale83);
        java.util.Locale.Category category85 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale86 = java.util.Locale.getDefault(category85);
        java.util.Locale locale87 = java.util.Locale.getDefault(category85);
        java.lang.String str88 = locale83.getDisplayScript(locale87);
        java.util.Calendar calendar89 = java.util.Calendar.getInstance(timeZone70, locale83);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat90 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(1, timeZone47, locale83);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar84", (calendar2.compareTo(calendar84) == 0) == calendar2.equals(calendar84));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test169");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale9);
        boolean boolean15 = locale9.hasExtensions();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.TimeZone timeZone22 = fastDateFormat18.getTimeZone();
        java.lang.String str23 = timeZone22.getID();
        java.util.Locale locale24 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        java.lang.String str28 = locale24.getDisplayVariant(locale25);
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone22, locale24);
        java.lang.String str31 = locale24.getExtension('a');
        java.util.Locale locale32 = locale24.stripExtensions();
        java.lang.String str33 = locale32.getDisplayLanguage();
        java.lang.String str34 = locale32.getCountry();
        java.lang.String str35 = locale9.getDisplayVariant(locale32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar29", (calendar11.compareTo(calendar29) == 0) == calendar11.equals(calendar29));
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test170");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        java.util.TimeZone timeZone8 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int9 = timeZone8.getRawOffset();
        calendar6.setTimeZone(timeZone8);
        calendar6.setFirstDayOfWeek(6);
        boolean boolean13 = calendar6.isWeekDateSupported();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("zh_CN");
        calendar6.setTimeZone(timeZone15);
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone15);
        java.util.Date date18 = calendar17.getTime();
        int int19 = date18.getTimezoneOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar17", (calendar6.compareTo(calendar17) == 0) == calendar6.equals(calendar17));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test171");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int8 = calendar6.getActualMinimum((int) (short) 1);
        java.time.Instant instant9 = calendar6.toInstant();
        java.time.Instant instant10 = calendar6.toInstant();
        java.util.TimeZone timeZone12 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone12);
        java.lang.String str14 = fastDateFormat13.getPattern();
        java.lang.String str16 = fastDateFormat13.format(1645513660686L);
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        boolean boolean31 = fastDateFormat13.equals((java.lang.Object) timeZone17);
        java.util.TimeZone timeZone33 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat34 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone33);
        java.lang.String str35 = fastDateFormat34.getPattern();
        java.lang.String str37 = fastDateFormat34.format(1645513660686L);
        java.util.TimeZone timeZone38 = fastDateFormat34.getTimeZone();
        int int39 = timeZone38.getRawOffset();
        java.lang.String str40 = timeZone38.getID();
        boolean boolean41 = timeZone17.hasSameRules(timeZone38);
        java.util.TimeZone.setDefault(timeZone38);
        timeZone38.setRawOffset(63);
        java.util.Locale locale45 = java.util.Locale.TAIWAN;
        java.util.Locale locale46 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str47 = locale45.getDisplayLanguage(locale46);
        java.lang.String str48 = locale45.getLanguage();
        java.util.Locale locale50 = new java.util.Locale("Chinese");
        java.util.Locale locale51 = locale50.stripExtensions();
        java.lang.String str52 = locale45.getDisplayLanguage(locale50);
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone56 = java.util.TimeZone.getDefault();
        boolean boolean57 = timeZone55.hasSameRules(timeZone56);
        java.util.Locale locale58 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale59 = java.util.Locale.CHINESE;
        java.lang.String str60 = locale59.getLanguage();
        boolean boolean61 = locale59.hasExtensions();
        java.lang.String str62 = locale58.getDisplayVariant(locale59);
        java.util.Locale.setDefault(locale59);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone55, locale59);
        java.lang.String str65 = locale45.getDisplayLanguage(locale59);
        java.lang.String str66 = locale45.getCountry();
        java.lang.String str67 = locale45.getCountry();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone38, locale45);
        calendar68.setFirstDayOfWeek(38);
        java.util.TimeZone timeZone71 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone72 = java.util.TimeZone.getDefault();
        boolean boolean73 = timeZone71.hasSameRules(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone71);
        calendar68.setTimeZone(timeZone71);
        calendar6.setTimeZone(timeZone71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar68 and calendar74", (calendar68.compareTo(calendar74) == 0) == calendar68.equals(calendar74));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test172");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.lang.String str81 = fastDateFormat2.toString();
        java.util.Date date82 = new java.util.Date();
        java.lang.String str83 = date82.toGMTString();
        int int84 = date82.getYear();
        int int85 = date82.getSeconds();
        int int86 = date82.getHours();
        java.lang.StringBuffer stringBuffer87 = null;
        java.lang.StringBuffer stringBuffer88 = fastDateFormat2.format(date82, stringBuffer87);
        java.lang.Object obj89 = fastDateFormat2.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test173");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int11 = timeZone1.getRawOffset();
        java.util.Locale locale15 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale15);
        int int20 = calendar18.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone21 = calendar18.getTimeZone();
        boolean boolean22 = timeZone1.hasSameRules(timeZone21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date24 = calendar23.getTime();
        date24.setYear(21);
        date24.setMonth(12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar23", (calendar18.compareTo(calendar23) == 0) == calendar18.equals(calendar23));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test174");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int2 = calendar1.getWeeksInWeekYear();
        int int3 = calendar1.getWeeksInWeekYear();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        boolean boolean6 = timeZone4.hasSameRules(timeZone5);
        boolean boolean7 = timeZone4.observesDaylightTime();
        java.util.Locale locale8 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet9 = locale8.getUnicodeLocaleAttributes();
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone4, locale8);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone4);
        calendar1.setTimeZone(timeZone4);
        java.util.Date date13 = calendar1.getTime();
        java.util.Date date14 = new java.util.Date();
        int int15 = date14.getSeconds();
        java.util.Date date16 = new java.util.Date();
        int int17 = date16.getTimezoneOffset();
        date16.setMinutes(5);
        boolean boolean20 = date14.after(date16);
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.util.Date date25 = new java.util.Date();
        int int26 = date25.getSeconds();
        java.lang.String str27 = fastDateFormat23.format(date25);
        boolean boolean28 = date14.before(date25);
        date25.setHours(40);
        java.util.Date date31 = new java.util.Date();
        int int32 = date31.getSeconds();
        long long33 = date31.getTime();
        date31.setTime((long) (byte) 0);
        boolean boolean36 = date25.before(date31);
        int int37 = date25.getTimezoneOffset();
        boolean boolean38 = date13.before(date25);
        date25.setDate(1904);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar1 and calendar11", (calendar1.compareTo(calendar11) == 0) == calendar1.equals(calendar11));
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test175");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone0.hasSameRules(timeZone9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone0);
        java.util.TimeZone timeZone16 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone16);
        java.lang.String str19 = fastDateFormat17.format((long) (byte) -1);
        java.text.ParsePosition parsePosition22 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj23 = fastDateFormat17.parseObject("GMT+00:00", parsePosition22);
        java.util.TimeZone timeZone24 = fastDateFormat17.getTimeZone();
        java.util.TimeZone timeZone25 = fastDateFormat17.getTimeZone();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList27 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray28 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList29 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList29, languageRangeArray28);
        java.util.Locale locale31 = java.util.Locale.GERMAN;
        java.util.Locale locale32 = java.util.Locale.FRANCE;
        boolean boolean33 = locale32.hasExtensions();
        java.util.Locale locale34 = java.util.Locale.FRANCE;
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        java.util.Locale[] localeArray37 = new java.util.Locale[] { locale31, locale32, locale34, locale35 };
        java.util.ArrayList<java.util.Locale> localeList38 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList38, localeArray37);
        java.util.Locale.FilteringMode filteringMode40 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList41 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList29, (java.util.Collection<java.util.Locale>) localeList38, filteringMode40);
        java.util.List<java.util.Locale> localeList42 = java.util.Locale.filter(languageRangeList27, (java.util.Collection<java.util.Locale>) localeList41);
        localeList42.clear();
        int int44 = localeList42.size();
        java.util.Locale locale46 = java.util.Locale.TAIWAN;
        java.util.Locale locale47 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str48 = locale46.getDisplayLanguage(locale47);
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.lang.String str51 = locale50.getLanguage();
        boolean boolean52 = locale50.hasExtensions();
        java.lang.String str53 = locale49.getDisplayVariant(locale50);
        java.lang.String str54 = locale46.getDisplayLanguage(locale50);
        java.lang.String str55 = locale46.getDisplayVariant();
        localeList42.add(0, locale46);
        java.util.Locale locale58 = new java.util.Locale("Chinese");
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale58);
        java.lang.String str60 = locale58.getCountry();
        java.lang.String str61 = locale58.getScript();
        java.util.Locale locale62 = locale58.stripExtensions();
        java.lang.String str63 = locale46.getDisplayVariant(locale62);
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(locale46);
        java.lang.String str65 = locale46.getScript();
        java.util.Set<java.lang.Character> charSet66 = locale46.getExtensionKeys();
        java.util.Calendar calendar67 = java.util.Calendar.getInstance(timeZone25, locale46);
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone0, locale46);
        java.util.Locale locale72 = new java.util.Locale("und", "hi!", "java.util.GregorianCalendar[time=1645513663341,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"Etc/UTC\",offset=-1,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2022,MONTH=1,WEEK_OF_YEAR=9,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=53,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=7,HOUR_OF_DAY=7,MINUTE=7,SECOND=43,MILLISECOND=340,ZONE_OFFSET=-1,DST_OFFSET=0]");
        java.util.Locale locale73 = locale72.stripExtensions();
        boolean boolean74 = calendar68.after((java.lang.Object) locale72);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar67", (calendar6.compareTo(calendar67) == 0) == calendar6.equals(calendar67));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test176");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.Locale locale8 = java.util.Locale.ITALIAN;
        boolean boolean9 = fastDateFormat4.equals((java.lang.Object) locale8);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone1, locale8);
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.lang.String str13 = locale8.getDisplayVariant(locale11);
        java.lang.String str14 = locale8.getDisplayName();
        java.lang.String str15 = locale8.getISO3Language();
        java.util.Locale.setDefault(category0, locale8);
        java.util.Locale locale17 = java.util.Locale.TAIWAN;
        java.util.Locale locale18 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str19 = locale17.getDisplayLanguage(locale18);
        java.util.Locale locale20 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        boolean boolean23 = locale21.hasExtensions();
        java.lang.String str24 = locale20.getDisplayVariant(locale21);
        java.lang.String str25 = locale17.getDisplayLanguage(locale21);
        java.lang.String str26 = locale17.getDisplayVariant();
        java.lang.String str27 = locale17.getDisplayLanguage();
        java.util.Locale.setDefault(category0, locale17);
        java.util.Locale locale29 = java.util.Locale.getDefault(category0);
        java.text.ParsePosition parsePosition31 = new java.text.ParsePosition(16);
        java.util.Locale locale32 = java.util.Locale.CHINESE;
        java.lang.String str33 = locale32.getLanguage();
        boolean boolean34 = locale32.hasExtensions();
        boolean boolean35 = parsePosition31.equals((java.lang.Object) locale32);
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(locale32);
        java.util.Calendar calendar37 = java.util.Calendar.getInstance(locale32);
        java.util.Locale locale38 = java.util.Locale.TAIWAN;
        java.util.Locale locale39 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str40 = locale38.getDisplayLanguage(locale39);
        java.lang.String str41 = locale38.getLanguage();
        java.util.Locale locale43 = new java.util.Locale("Chinese");
        java.util.Locale locale44 = locale43.stripExtensions();
        java.lang.String str45 = locale38.getDisplayLanguage(locale43);
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        boolean boolean50 = timeZone48.hasSameRules(timeZone49);
        java.util.Locale locale51 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale52 = java.util.Locale.CHINESE;
        java.lang.String str53 = locale52.getLanguage();
        boolean boolean54 = locale52.hasExtensions();
        java.lang.String str55 = locale51.getDisplayVariant(locale52);
        java.util.Locale.setDefault(locale52);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat57 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone48, locale52);
        java.lang.String str58 = locale38.getDisplayLanguage(locale52);
        java.util.Locale locale59 = locale52.stripExtensions();
        java.lang.String str60 = locale32.getDisplayLanguage(locale59);
        java.util.Locale.setDefault(category0, locale59);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar36", (calendar10.compareTo(calendar36) == 0) == calendar10.equals(calendar36));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test177");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        java.util.Calendar calendar3 = java.util.Calendar.getInstance(timeZone0);
        calendar3.setFirstDayOfWeek(10);
        boolean boolean6 = calendar3.isWeekDateSupported();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        boolean boolean10 = timeZone8.hasSameRules(timeZone9);
        boolean boolean11 = timeZone8.observesDaylightTime();
        int int12 = timeZone8.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone8);
        timeZone8.setRawOffset(9);
        timeZone8.setID("7:07:40 AM UTC");
        int int19 = timeZone8.getOffset(1645513660365L);
        int int21 = timeZone8.getOffset((long) 22);
        boolean boolean22 = timeZone8.observesDaylightTime();
        boolean boolean23 = timeZone8.observesDaylightTime();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList25 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray26 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList27 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList27, languageRangeArray26);
        java.util.Locale locale29 = java.util.Locale.GERMAN;
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        boolean boolean31 = locale30.hasExtensions();
        java.util.Locale locale32 = java.util.Locale.FRANCE;
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale29, locale30, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList27, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.util.List<java.util.Locale> localeList40 = java.util.Locale.filter(languageRangeList25, (java.util.Collection<java.util.Locale>) localeList39);
        localeList40.clear();
        boolean boolean43 = localeList40.contains((java.lang.Object) 11);
        boolean boolean45 = localeList40.remove((java.lang.Object) "22 Feb 2022 07:07:43 GMT");
        java.util.Spliterator<java.util.Locale> localeSpliterator46 = localeList40.spliterator();
        boolean boolean47 = localeList40.isEmpty();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat49 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.util.Locale locale50 = fastDateFormat49.getLocale();
        boolean boolean51 = localeList40.add(locale50);
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone8, locale50);
        calendar3.setTimeZone(timeZone8);
        int int54 = timeZone8.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar3 and calendar52", (calendar3.compareTo(calendar52) == 0) == calendar3.equals(calendar52));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test178");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder7 = builder0.setLenient(true);
        java.util.Calendar.Builder builder11 = builder0.setWeekDate((int) (short) -1, 6, 24);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        java.lang.String str13 = locale12.getLanguage();
        boolean boolean14 = locale12.hasExtensions();
        java.lang.String str15 = locale12.getDisplayCountry();
        java.lang.String str16 = locale12.getISO3Language();
        java.util.Locale locale18 = java.util.Locale.getDefault();
        java.lang.String str19 = locale18.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale18);
        java.lang.String str21 = locale12.getDisplayName(locale18);
        java.util.Locale.setDefault(locale12);
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone25 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat26 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone25);
        java.lang.String str27 = fastDateFormat26.getPattern();
        java.lang.String str29 = fastDateFormat26.format(1645513660686L);
        java.util.Locale locale30 = java.util.Locale.ITALIAN;
        boolean boolean31 = fastDateFormat26.equals((java.lang.Object) locale30);
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(timeZone23, locale30);
        java.util.Locale locale33 = java.util.Locale.FRANCE;
        boolean boolean34 = locale33.hasExtensions();
        java.lang.String str35 = locale30.getDisplayVariant(locale33);
        java.lang.String str36 = locale30.getDisplayScript();
        java.lang.String str37 = locale12.getDisplayCountry(locale30);
        java.util.Locale locale38 = locale12.stripExtensions();
        java.util.Calendar.Builder builder39 = builder0.setLocale(locale12);
        java.util.Calendar.Builder builder40 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder44 = builder40.setWeekDate(16, 3, 100);
        java.util.Calendar.Builder builder48 = builder40.setTimeOfDay((int) (byte) 100, 32770, 12);
        java.util.Calendar.Builder builder52 = builder48.setWeekDate(7, (int) (byte) 0, 12);
        java.util.Locale locale55 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat56 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale55);
        java.util.Date date57 = new java.util.Date();
        int int58 = date57.getSeconds();
        java.util.Date date59 = new java.util.Date();
        int int60 = date59.getTimezoneOffset();
        date59.setMinutes(5);
        boolean boolean63 = date57.after(date59);
        java.util.TimeZone timeZone65 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat66 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone65);
        java.lang.String str67 = fastDateFormat66.getPattern();
        java.util.Date date68 = new java.util.Date();
        int int69 = date68.getSeconds();
        java.lang.String str70 = fastDateFormat66.format(date68);
        boolean boolean71 = date57.before(date68);
        java.lang.String str72 = fastDateFormat56.format(date57);
        java.util.TimeZone timeZone73 = fastDateFormat56.getTimeZone();
        java.util.Calendar.Builder builder74 = builder52.setTimeZone(timeZone73);
        boolean boolean75 = timeZone73.observesDaylightTime();
        timeZone73.setID("22. Februar 2022");
        java.util.TimeZone.setDefault(timeZone73);
        java.util.Calendar.Builder builder79 = builder0.setTimeZone(timeZone73);
        java.util.TimeZone timeZone80 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        boolean boolean82 = timeZone80.hasSameRules(timeZone81);
        boolean boolean83 = timeZone80.observesDaylightTime();
        java.util.Locale locale84 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet85 = locale84.getUnicodeLocaleAttributes();
        java.util.Calendar calendar86 = java.util.Calendar.getInstance(timeZone80, locale84);
        boolean boolean87 = locale84.hasExtensions();
        boolean boolean88 = locale84.hasExtensions();
        java.lang.String str89 = locale84.getLanguage();
        java.util.Calendar calendar90 = java.util.Calendar.getInstance(timeZone73, locale84);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar32 and calendar86", (calendar32.compareTo(calendar86) == 0) == calendar32.equals(calendar86));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test179");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str32 = fastDateFormat31.toString();
        java.text.ParsePosition parsePosition35 = new java.text.ParsePosition(16);
        parsePosition35.setIndex(10);
        parsePosition35.setIndex(0);
        java.lang.Object obj40 = fastDateFormat31.parseObject("Taiwan", parsePosition35);
        java.util.TimeZone timeZone41 = fastDateFormat31.getTimeZone();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.lang.String str47 = locale42.getLanguage();
        java.util.Locale.Builder builder48 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder48.clear();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale.Builder builder55 = builder49.setLocale(locale50);
        java.util.Locale locale56 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder57 = builder55.setLocale(locale56);
        java.util.Locale locale58 = builder55.build();
        java.lang.String str59 = locale42.getDisplayScript(locale58);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone41, locale42);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone41);
        calendar6.setTimeZone(timeZone41);
        int int63 = calendar6.getWeeksInWeekYear();
        java.util.Calendar.Builder builder64 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder69 = builder64.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar70 = builder69.build();
        java.util.Calendar.Builder builder72 = builder69.setLenient(true);
        java.util.Locale locale73 = java.util.Locale.FRANCE;
        boolean boolean74 = locale73.hasExtensions();
        java.util.Calendar calendar75 = java.util.Calendar.getInstance(locale73);
        java.util.Locale locale76 = locale73.stripExtensions();
        java.util.Calendar.Builder builder77 = builder72.setLocale(locale73);
        java.util.Calendar.Builder builder81 = builder72.setDate(3, 14, 0);
        java.util.Calendar.Builder builder86 = builder72.setTimeOfDay(11, (int) '#', 15, 49);
        java.util.Calendar.Builder builder88 = builder86.setLenient(false);
        boolean boolean89 = calendar6.after((java.lang.Object) builder86);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar60", (calendar26.compareTo(calendar60) == 0) == calendar26.equals(calendar60));
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test180");
        java.util.Calendar.Builder builder1 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder6 = builder1.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar7 = builder6.build();
        java.util.Calendar.Builder builder9 = builder6.setLenient(true);
        java.util.Calendar.Builder builder12 = builder6.set(7, 28);
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat16 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone15);
        java.lang.String str17 = fastDateFormat16.getPattern();
        java.lang.String str19 = fastDateFormat16.format(1645513660686L);
        java.util.Locale locale20 = java.util.Locale.ITALIAN;
        boolean boolean21 = fastDateFormat16.equals((java.lang.Object) locale20);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone13, locale20);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone13);
        java.util.Calendar.Builder builder24 = builder6.setTimeZone(timeZone13);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar23", (calendar22.compareTo(calendar23) == 0) == calendar22.equals(calendar23));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test181");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.Calendar.Builder builder17 = builder8.setDate(3, 14, 0);
        java.util.Calendar.Builder builder22 = builder8.setTimeOfDay(11, (int) '#', 15, 49);
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        boolean boolean25 = timeZone23.hasSameRules(timeZone24);
        boolean boolean26 = timeZone23.observesDaylightTime();
        java.util.Locale locale27 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet28 = locale27.getUnicodeLocaleAttributes();
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone23, locale27);
        boolean boolean30 = timeZone23.observesDaylightTime();
        timeZone23.setRawOffset(43);
        timeZone23.setID("giapponese");
        java.util.TimeZone timeZone36 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone36);
        java.lang.String str38 = fastDateFormat37.getPattern();
        java.lang.String str40 = fastDateFormat37.format(1645513660686L);
        java.util.Locale locale41 = fastDateFormat37.getLocale();
        java.lang.String str42 = locale41.getDisplayCountry();
        java.util.Set<java.lang.String> strSet43 = locale41.getUnicodeLocaleKeys();
        java.lang.String str44 = locale41.getLanguage();
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(timeZone23, locale41);
        java.util.Calendar.Builder builder46 = builder8.setTimeZone(timeZone23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar29", (calendar11.compareTo(calendar29) == 0) == calendar11.equals(calendar29));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test182");
        java.util.Locale locale2 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale2);
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getTimezoneOffset();
        date6.setMinutes(5);
        boolean boolean10 = date4.after(date6);
        java.util.TimeZone timeZone12 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone12);
        java.lang.String str14 = fastDateFormat13.getPattern();
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        java.lang.String str17 = fastDateFormat13.format(date15);
        boolean boolean18 = date4.before(date15);
        java.lang.String str19 = fastDateFormat3.format(date4);
        java.util.TimeZone timeZone20 = fastDateFormat3.getTimeZone();
        java.util.Locale locale21 = java.util.Locale.ITALIAN;
        java.util.Locale locale24 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022", "GMT+00:00");
        java.lang.String str25 = locale21.getDisplayName(locale24);
        java.util.Set<java.lang.String> strSet26 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone20, locale21);
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        java.util.Date date30 = new java.util.Date();
        int int31 = date30.getTimezoneOffset();
        date30.setMinutes(5);
        boolean boolean34 = date28.after(date30);
        java.util.TimeZone timeZone36 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone36);
        java.lang.String str38 = fastDateFormat37.getPattern();
        java.util.Date date39 = new java.util.Date();
        int int40 = date39.getSeconds();
        java.lang.String str41 = fastDateFormat37.format(date39);
        boolean boolean42 = date28.before(date39);
        java.util.Date date43 = new java.util.Date();
        int int44 = date43.getTimezoneOffset();
        date43.setMinutes((int) (byte) -1);
        int int47 = date43.getMonth();
        boolean boolean48 = date39.after(date43);
        java.time.Instant instant49 = date39.toInstant();
        calendar27.setTime(date39);
        java.util.TimeZone timeZone51 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone52 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone53 = java.util.TimeZone.getDefault();
        boolean boolean54 = timeZone52.hasSameRules(timeZone53);
        boolean boolean55 = timeZone51.hasSameRules(timeZone52);
        timeZone51.setID("\u4e2d\u6587\u53f0\u7063)");
        int int59 = timeZone51.getOffset(1645513548538L);
        boolean boolean60 = timeZone51.observesDaylightTime();
        java.util.Locale locale63 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale63);
        java.util.Locale locale65 = java.util.Locale.CANADA;
        java.lang.String str66 = locale63.getDisplayName(locale65);
        java.util.Calendar calendar67 = java.util.Calendar.getInstance(timeZone51, locale65);
        int int69 = calendar67.getMaximum(16);
        java.util.Locale.LanguageRange[] languageRangeArray70 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList71 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList71, languageRangeArray70);
        java.util.Locale locale73 = java.util.Locale.GERMAN;
        java.util.Locale locale74 = java.util.Locale.FRANCE;
        boolean boolean75 = locale74.hasExtensions();
        java.util.Locale locale76 = java.util.Locale.FRANCE;
        java.util.Locale locale77 = java.util.Locale.CHINESE;
        java.lang.String str78 = locale77.getLanguage();
        java.util.Locale[] localeArray79 = new java.util.Locale[] { locale73, locale74, locale76, locale77 };
        java.util.ArrayList<java.util.Locale> localeList80 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList80, localeArray79);
        java.util.Locale.FilteringMode filteringMode82 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList83 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList71, (java.util.Collection<java.util.Locale>) localeList80, filteringMode82);
        java.util.Spliterator<java.util.Locale> localeSpliterator84 = localeList83.spliterator();
        java.util.Iterator<java.util.Locale> localeItor85 = localeList83.iterator();
        java.util.Spliterator<java.util.Locale> localeSpliterator86 = localeList83.spliterator();
        java.util.Date date87 = new java.util.Date();
        java.lang.String str88 = date87.toGMTString();
        int int89 = date87.getTimezoneOffset();
        boolean boolean90 = localeList83.remove((java.lang.Object) date87);
        calendar67.setTime(date87);
        int int92 = date87.getSeconds();
        java.lang.String str93 = date87.toGMTString();
        boolean boolean94 = date39.before(date87);
        int int95 = date39.getHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar27 and calendar67", (calendar27.compareTo(calendar67) == 0) == calendar27.equals(calendar67));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test183");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        java.util.TimeZone timeZone15 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat16 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone15);
        java.lang.String str17 = fastDateFormat16.getPattern();
        java.lang.String str19 = fastDateFormat16.format(1645513660686L);
        java.util.Locale locale20 = java.util.Locale.ITALIAN;
        boolean boolean21 = fastDateFormat16.equals((java.lang.Object) locale20);
        java.lang.String str22 = locale20.getDisplayVariant();
        java.util.Locale.LanguageRange[] languageRangeArray23 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList24 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList24, languageRangeArray23);
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.FRANCE;
        boolean boolean28 = locale27.hasExtensions();
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        java.util.Locale locale30 = java.util.Locale.CHINESE;
        java.lang.String str31 = locale30.getLanguage();
        java.util.Locale[] localeArray32 = new java.util.Locale[] { locale26, locale27, locale29, locale30 };
        java.util.ArrayList<java.util.Locale> localeList33 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList33, localeArray32);
        java.util.Locale.FilteringMode filteringMode35 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList36 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList24, (java.util.Collection<java.util.Locale>) localeList33, filteringMode35);
        java.util.Spliterator<java.util.Locale> localeSpliterator37 = localeList36.spliterator();
        java.util.Iterator<java.util.Locale> localeItor38 = localeList36.iterator();
        java.util.Locale locale39 = java.util.Locale.ROOT;
        boolean boolean40 = localeList36.remove((java.lang.Object) locale39);
        java.lang.String str41 = locale39.getDisplayCountry();
        java.lang.String str42 = locale20.getDisplayLanguage(locale39);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(timeZone11, locale20);
        java.lang.String str44 = timeZone11.getID();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar43", (calendar13.compareTo(calendar43) == 0) == calendar13.equals(calendar43));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test184");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Calendar.Builder builder86 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder88 = builder86.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder90 = builder88.setLenient(true);
        java.util.Calendar calendar91 = builder90.build();
        java.lang.String str92 = fastDateFormat2.format(calendar91);
        calendar91.set(9, (int) ' ', (-1892), 28, 1904);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test185");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.lang.Object obj4 = fastDateFormat2.clone();
        java.util.Date date10 = new java.util.Date(11, 9, 8, (int) 'x', 9);
        int int11 = date10.getMinutes();
        date10.setYear(41);
        java.lang.String str14 = fastDateFormat2.format((java.lang.Object) date10);
        boolean boolean15 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str21 = fastDateFormat19.format((long) (byte) -1);
        java.text.ParsePosition parsePosition24 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj25 = fastDateFormat19.parseObject("GMT+00:00", parsePosition24);
        java.text.ParsePosition parsePosition28 = new java.text.ParsePosition(16);
        parsePosition28.setIndex(10);
        java.lang.Object obj31 = fastDateFormat19.parseObject("java.text.ParsePosition[index=16,errorIndex=-1]", parsePosition28);
        java.lang.String str32 = parsePosition28.toString();
        java.lang.Object obj33 = fastDateFormat2.parseObject("22 Feb 2022 07:07:44 GMT", parsePosition28);
        java.util.Locale locale34 = java.util.Locale.CHINESE;
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(locale34);
        long long36 = calendar35.getTimeInMillis();
        java.lang.String str37 = calendar35.getCalendarType();
        int int39 = calendar35.getGreatestMinimum((int) (short) 1);
        java.lang.StringBuffer stringBuffer40 = null;
        java.lang.StringBuffer stringBuffer41 = fastDateFormat2.format(calendar35, stringBuffer40);
        java.text.AttributedCharacterIterator.Attribute attribute42 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.lang.String str43 = attribute42.toString();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        boolean boolean45 = attribute42.equals((java.lang.Object) timeZone44);
        java.text.FieldPosition fieldPosition47 = new java.text.FieldPosition(32770);
        int int48 = fieldPosition47.getBeginIndex();
        boolean boolean50 = fieldPosition47.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone52 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat53 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone52);
        java.lang.String str54 = fastDateFormat53.getPattern();
        java.lang.String str56 = fastDateFormat53.format(1645513660686L);
        java.util.Locale locale57 = java.util.Locale.ITALIAN;
        boolean boolean58 = fastDateFormat53.equals((java.lang.Object) locale57);
        int int59 = fastDateFormat53.getMaxLengthEstimate();
        boolean boolean60 = fieldPosition47.equals((java.lang.Object) fastDateFormat53);
        java.util.TimeZone timeZone61 = fastDateFormat53.getTimeZone();
        timeZone61.setRawOffset(0);
        boolean boolean64 = timeZone44.hasSameRules(timeZone61);
        boolean boolean65 = timeZone44.observesDaylightTime();
        java.util.Locale locale66 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet67 = locale66.getUnicodeLocaleAttributes();
        java.lang.String str68 = locale66.getISO3Country();
        java.util.Set<java.lang.Character> charSet69 = locale66.getExtensionKeys();
        java.lang.String str70 = locale66.getDisplayVariant();
        java.util.Calendar calendar71 = java.util.Calendar.getInstance(timeZone44, locale66);
        boolean boolean72 = fastDateFormat2.equals((java.lang.Object) locale66);
        java.lang.String str73 = locale66.getDisplayVariant();
        java.util.Locale.Category category74 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone75 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone77 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat78 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone77);
        java.lang.String str79 = fastDateFormat78.getPattern();
        java.lang.String str81 = fastDateFormat78.format(1645513660686L);
        java.util.Locale locale82 = java.util.Locale.ITALIAN;
        boolean boolean83 = fastDateFormat78.equals((java.lang.Object) locale82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone75, locale82);
        java.util.Locale locale85 = java.util.Locale.FRANCE;
        boolean boolean86 = locale85.hasExtensions();
        java.lang.String str87 = locale82.getDisplayVariant(locale85);
        java.lang.String str88 = locale82.getDisplayName();
        java.lang.String str89 = locale82.getISO3Language();
        java.util.Locale.setDefault(category74, locale82);
        java.util.Locale locale91 = java.util.Locale.getDefault(category74);
        java.lang.String str92 = locale66.getDisplayVariant(locale91);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar71 and calendar84", (calendar71.compareTo(calendar84) == 0) == calendar71.equals(calendar84));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test186");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        boolean boolean8 = timeZone6.hasSameRules(timeZone7);
        boolean boolean9 = timeZone6.observesDaylightTime();
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet11 = locale10.getUnicodeLocaleAttributes();
        java.util.Calendar calendar12 = java.util.Calendar.getInstance(timeZone6, locale10);
        boolean boolean13 = timeZone6.observesDaylightTime();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone6.hasSameRules(timeZone15);
        boolean boolean20 = fastDateFormat2.equals((java.lang.Object) timeZone6);
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.lang.String str26 = fastDateFormat23.format(1645513660686L);
        java.util.TimeZone timeZone27 = fastDateFormat23.getTimeZone();
        int int28 = timeZone27.getRawOffset();
        java.lang.String str29 = timeZone27.getID();
        boolean boolean30 = timeZone6.hasSameRules(timeZone27);
        java.util.TimeZone.setDefault(timeZone27);
        timeZone27.setRawOffset(63);
        java.util.Locale locale34 = java.util.Locale.TAIWAN;
        java.util.Locale locale35 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str36 = locale34.getDisplayLanguage(locale35);
        java.lang.String str37 = locale34.getLanguage();
        java.util.Locale locale39 = new java.util.Locale("Chinese");
        java.util.Locale locale40 = locale39.stripExtensions();
        java.lang.String str41 = locale34.getDisplayLanguage(locale39);
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone45 = java.util.TimeZone.getDefault();
        boolean boolean46 = timeZone44.hasSameRules(timeZone45);
        java.util.Locale locale47 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale48 = java.util.Locale.CHINESE;
        java.lang.String str49 = locale48.getLanguage();
        boolean boolean50 = locale48.hasExtensions();
        java.lang.String str51 = locale47.getDisplayVariant(locale48);
        java.util.Locale.setDefault(locale48);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat53 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone44, locale48);
        java.lang.String str54 = locale34.getDisplayLanguage(locale48);
        java.lang.String str55 = locale34.getCountry();
        java.lang.String str56 = locale34.getCountry();
        java.util.Calendar calendar57 = java.util.Calendar.getInstance(timeZone27, locale34);
        calendar57.setFirstDayOfWeek(38);
        java.util.TimeZone timeZone60 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone61 = java.util.TimeZone.getDefault();
        boolean boolean62 = timeZone60.hasSameRules(timeZone61);
        java.util.Calendar calendar63 = java.util.Calendar.getInstance(timeZone60);
        calendar57.setTimeZone(timeZone60);
        java.lang.String str65 = timeZone60.getID();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar12 and calendar57", (calendar12.compareTo(calendar57) == 0) == calendar12.equals(calendar57));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test187");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.lang.Object obj4 = fastDateFormat2.clone();
        java.util.Date date10 = new java.util.Date(11, 9, 8, (int) 'x', 9);
        int int11 = date10.getMinutes();
        date10.setYear(41);
        java.lang.String str14 = fastDateFormat2.format((java.lang.Object) date10);
        boolean boolean15 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.util.Date date19 = new java.util.Date(13, 6, 17);
        long long20 = date19.getTime();
        int int21 = date19.getSeconds();
        java.lang.StringBuffer stringBuffer22 = null;
        java.lang.StringBuffer stringBuffer23 = fastDateFormat2.format(date19, stringBuffer22);
        java.util.TimeZone timeZone26 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone26);
        java.lang.String str29 = fastDateFormat27.format((long) (byte) -1);
        java.text.ParsePosition parsePosition32 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj33 = fastDateFormat27.parseObject("GMT+00:00", parsePosition32);
        java.lang.String str34 = fastDateFormat27.getPattern();
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        int int38 = parsePosition37.getErrorIndex();
        parsePosition37.setErrorIndex(22);
        int int41 = parsePosition37.getErrorIndex();
        int int42 = parsePosition37.getIndex();
        parsePosition37.setIndex((int) 'x');
        java.lang.Object obj45 = fastDateFormat27.parseObject("22 Feb 2022 07:07:43 GMT", parsePosition37);
        java.lang.Object obj46 = fastDateFormat2.parseObject("1 Jan 1970 00:00:00 GMT", parsePosition37);
        java.util.Calendar calendar47 = java.util.Calendar.getInstance();
        int int48 = calendar47.getWeeksInWeekYear();
        long long49 = calendar47.getTimeInMillis();
        java.lang.String str50 = fastDateFormat2.format((java.lang.Object) long49);
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(locale51);
        calendar52.set(47, 46, 41, 0, 23);
        java.util.Locale locale62 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale63 = java.util.Locale.ROOT;
        java.lang.String str64 = locale62.getDisplayScript(locale63);
        java.util.Calendar calendar65 = java.util.Calendar.getInstance(locale62);
        boolean boolean66 = calendar52.before((java.lang.Object) calendar65);
        java.time.Instant instant67 = calendar65.toInstant();
        calendar65.setMinimalDaysInFirstWeek(1200000);
        java.lang.StringBuffer stringBuffer70 = null;
        java.lang.StringBuffer stringBuffer71 = fastDateFormat2.format(calendar65, stringBuffer70);
        java.util.TimeZone timeZone72 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone73 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone74 = java.util.TimeZone.getDefault();
        boolean boolean75 = timeZone73.hasSameRules(timeZone74);
        boolean boolean76 = timeZone72.hasSameRules(timeZone73);
        java.util.TimeZone.setDefault(timeZone73);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone73);
        java.util.TimeZone timeZone80 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int81 = timeZone80.getRawOffset();
        calendar78.setTimeZone(timeZone80);
        calendar78.setFirstDayOfWeek(6);
        boolean boolean85 = calendar78.isWeekDateSupported();
        java.util.TimeZone timeZone87 = java.util.TimeZone.getTimeZone("zh_CN");
        calendar78.setTimeZone(timeZone87);
        java.util.Calendar calendar89 = java.util.Calendar.getInstance(timeZone87);
        java.util.Date date90 = calendar89.getTime();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fastDateFormat2.formatToCharacterIterator((java.lang.Object) date90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar47 and calendar65", (calendar47.compareTo(calendar65) == 0) == calendar47.equals(calendar65));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test188");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = locale4.hasExtensions();
        java.util.Locale locale8 = java.util.Locale.FRENCH;
        java.lang.String str9 = locale8.getDisplayLanguage();
        java.lang.String str10 = locale4.getDisplayName(locale8);
        java.util.Locale.Builder builder11 = new java.util.Locale.Builder();
        java.util.Locale locale12 = builder11.build();
        java.util.Locale.Builder builder13 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder14 = builder13.clear();
        java.util.Locale locale15 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.lang.String str17 = locale16.getLanguage();
        boolean boolean18 = locale16.hasExtensions();
        java.lang.String str19 = locale15.getDisplayVariant(locale16);
        java.util.Locale.Builder builder20 = builder14.setLocale(locale15);
        java.util.Locale locale21 = java.util.Locale.PRC;
        java.util.Locale locale22 = java.util.Locale.ROOT;
        java.lang.String str23 = locale21.getDisplayLanguage(locale22);
        java.util.Locale.Builder builder24 = builder20.setLocale(locale22);
        java.util.Locale locale25 = builder20.build();
        java.lang.String str26 = locale25.getVariant();
        boolean boolean27 = locale25.hasExtensions();
        java.util.Locale.Builder builder28 = builder11.setLocale(locale25);
        java.lang.String str29 = locale25.getDisplayName();
        java.lang.String str30 = locale8.getDisplayName(locale25);
        java.util.Set<java.lang.Character> charSet31 = locale25.getExtensionKeys();
        java.util.Locale locale33 = new java.util.Locale("deu");
        java.lang.String str34 = locale33.getDisplayLanguage();
        java.lang.String str35 = locale33.getCountry();
        java.util.TimeZone timeZone38 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat39 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone38);
        java.lang.String str40 = fastDateFormat39.getPattern();
        java.lang.String str42 = fastDateFormat39.format(1645513660686L);
        java.lang.String str44 = fastDateFormat39.format((long) 40);
        java.util.TimeZone timeZone45 = fastDateFormat39.getTimeZone();
        java.util.TimeZone timeZone46 = fastDateFormat39.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat47 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone46);
        java.util.TimeZone timeZone50 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute51 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray52 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList53 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList53, languageRangeArray52);
        java.util.Locale locale55 = java.util.Locale.GERMAN;
        java.util.Locale locale56 = java.util.Locale.FRANCE;
        boolean boolean57 = locale56.hasExtensions();
        java.util.Locale locale58 = java.util.Locale.FRANCE;
        java.util.Locale locale59 = java.util.Locale.CHINESE;
        java.lang.String str60 = locale59.getLanguage();
        java.util.Locale[] localeArray61 = new java.util.Locale[] { locale55, locale56, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList62 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList62, localeArray61);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList53, (java.util.Collection<java.util.Locale>) localeList62, filteringMode64);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList67 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale68 = java.util.Locale.CHINESE;
        java.lang.String str69 = locale68.getLanguage();
        java.util.Set<java.lang.String> strSet70 = locale68.getUnicodeLocaleAttributes();
        java.lang.String str71 = java.util.Locale.lookupTag(languageRangeList67, (java.util.Collection<java.lang.String>) strSet70);
        boolean boolean72 = localeList65.containsAll((java.util.Collection<java.lang.String>) strSet70);
        boolean boolean74 = localeList65.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator75 = localeList65.spliterator();
        java.util.Locale locale79 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale80 = java.util.Locale.ROOT;
        java.lang.String str81 = locale79.getDisplayScript(locale80);
        java.lang.String str82 = locale79.getISO3Language();
        boolean boolean83 = localeList65.add(locale79);
        boolean boolean84 = attribute51.equals((java.lang.Object) locale79);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat85 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone50, locale79);
        java.util.Calendar calendar86 = java.util.Calendar.getInstance(timeZone46, locale79);
        java.lang.String str87 = locale33.getDisplayLanguage(locale79);
        java.lang.String str88 = locale25.getDisplayName(locale79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar86", (calendar6.compareTo(calendar86) == 0) == calendar6.equals(calendar86));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test189");
        java.util.Calendar.Builder builder1 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder6 = builder1.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder11 = builder1.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder13 = builder1.setLenient(false);
        java.util.Calendar.Builder builder17 = builder13.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        boolean boolean20 = timeZone18.hasSameRules(timeZone19);
        boolean boolean21 = timeZone18.observesDaylightTime();
        java.util.Locale locale22 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet23 = locale22.getUnicodeLocaleAttributes();
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone18, locale22);
        boolean boolean25 = timeZone18.observesDaylightTime();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        boolean boolean29 = timeZone27.hasSameRules(timeZone28);
        boolean boolean30 = timeZone26.hasSameRules(timeZone27);
        boolean boolean31 = timeZone18.hasSameRules(timeZone27);
        timeZone27.setID("");
        timeZone27.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder36 = builder13.setTimeZone(timeZone27);
        java.text.ParsePosition parsePosition38 = new java.text.ParsePosition(16);
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        boolean boolean41 = locale39.hasExtensions();
        boolean boolean42 = parsePosition38.equals((java.lang.Object) locale39);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale39);
        java.util.Calendar calendar44 = java.util.Calendar.getInstance(locale39);
        java.util.Locale locale45 = java.util.Locale.TAIWAN;
        java.util.Locale locale46 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str47 = locale45.getDisplayLanguage(locale46);
        java.lang.String str48 = locale45.getLanguage();
        java.util.Locale locale50 = new java.util.Locale("Chinese");
        java.util.Locale locale51 = locale50.stripExtensions();
        java.lang.String str52 = locale45.getDisplayLanguage(locale50);
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone56 = java.util.TimeZone.getDefault();
        boolean boolean57 = timeZone55.hasSameRules(timeZone56);
        java.util.Locale locale58 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale59 = java.util.Locale.CHINESE;
        java.lang.String str60 = locale59.getLanguage();
        boolean boolean61 = locale59.hasExtensions();
        java.lang.String str62 = locale58.getDisplayVariant(locale59);
        java.util.Locale.setDefault(locale59);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone55, locale59);
        java.lang.String str65 = locale45.getDisplayLanguage(locale59);
        java.util.Locale locale66 = locale59.stripExtensions();
        java.lang.String str67 = locale39.getDisplayLanguage(locale66);
        java.lang.String str68 = locale66.getScript();
        java.util.Calendar calendar69 = java.util.Calendar.getInstance(timeZone27, locale66);
        java.util.Locale locale70 = java.util.Locale.TAIWAN;
        java.lang.String str72 = locale70.getExtension('x');
        java.util.Set<java.lang.String> strSet73 = locale70.getUnicodeLocaleAttributes();
        java.lang.String str74 = locale70.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, timeZone27, locale70);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar24 and calendar69", (calendar24.compareTo(calendar69) == 0) == calendar24.equals(calendar69));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test190");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat1 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str2 = fastDateFormat1.toString();
        java.text.ParsePosition parsePosition5 = new java.text.ParsePosition(16);
        parsePosition5.setIndex(10);
        parsePosition5.setIndex(0);
        java.lang.Object obj10 = fastDateFormat1.parseObject("Taiwan", parsePosition5);
        java.util.TimeZone timeZone11 = fastDateFormat1.getTimeZone();
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        java.lang.String str13 = locale12.getLanguage();
        boolean boolean14 = locale12.hasExtensions();
        java.lang.String str15 = locale12.getDisplayCountry();
        java.lang.String str16 = locale12.getDisplayLanguage();
        java.lang.String str17 = locale12.getLanguage();
        java.util.Locale.Builder builder18 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder19 = builder18.clear();
        java.util.Locale locale20 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        boolean boolean23 = locale21.hasExtensions();
        java.lang.String str24 = locale20.getDisplayVariant(locale21);
        java.util.Locale.Builder builder25 = builder19.setLocale(locale20);
        java.util.Locale locale26 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder27 = builder25.setLocale(locale26);
        java.util.Locale locale28 = builder25.build();
        java.lang.String str29 = locale12.getDisplayScript(locale28);
        java.util.Calendar calendar30 = java.util.Calendar.getInstance(timeZone11, locale12);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone11);
        int int32 = timeZone11.getRawOffset();
        java.lang.String str33 = timeZone11.getID();
        timeZone11.setRawOffset(21);
        int int36 = timeZone11.getRawOffset();
        int int38 = timeZone11.getOffset(1645513778917L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar30 and calendar31", (calendar30.compareTo(calendar31) == 0) == calendar30.equals(calendar31));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test191");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.Date date61 = new java.util.Date();
        int int62 = date61.getSeconds();
        java.util.Date date63 = new java.util.Date();
        int int64 = date63.getTimezoneOffset();
        date63.setMinutes(5);
        boolean boolean67 = date61.after(date63);
        int int68 = date61.getHours();
        int int69 = localeList56.lastIndexOf((java.lang.Object) date61);
        java.util.ListIterator<java.util.Locale> localeItor70 = localeList56.listIterator();
        java.lang.Object obj71 = null;
        boolean boolean72 = localeList56.equals(obj71);
        localeList56.clear();
        java.util.Locale locale74 = java.util.Locale.getDefault();
        java.lang.String str75 = locale74.getLanguage();
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(locale74);
        boolean boolean77 = localeList56.equals((java.lang.Object) locale74);
        java.text.FieldPosition fieldPosition80 = new java.text.FieldPosition(32770);
        int int81 = fieldPosition80.getBeginIndex();
        boolean boolean83 = fieldPosition80.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone85 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat86 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone85);
        java.lang.String str87 = fastDateFormat86.getPattern();
        java.lang.String str89 = fastDateFormat86.format(1645513660686L);
        java.util.Locale locale90 = java.util.Locale.ITALIAN;
        boolean boolean91 = fastDateFormat86.equals((java.lang.Object) locale90);
        int int92 = fastDateFormat86.getMaxLengthEstimate();
        boolean boolean93 = fieldPosition80.equals((java.lang.Object) fastDateFormat86);
        java.util.TimeZone timeZone94 = fastDateFormat86.getTimeZone();
        java.util.Locale locale96 = new java.util.Locale("DEU");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat97 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone94, locale96);
        boolean boolean98 = localeList56.remove((java.lang.Object) 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar76", (calendar2.compareTo(calendar76) == 0) == calendar2.equals(calendar76));
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test192");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        int int10 = calendar6.getActualMaximum(12);
        calendar6.setFirstDayOfWeek((-1));
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getSeconds();
        java.lang.String str21 = fastDateFormat15.format(date19);
        java.lang.String str23 = fastDateFormat15.format((long) 32769);
        java.util.TimeZone timeZone24 = fastDateFormat15.getTimeZone();
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone24);
        timeZone24.setRawOffset(4);
        calendar6.setTimeZone(timeZone24);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.lang.String str32 = fastDateFormat31.toString();
        java.text.ParsePosition parsePosition35 = new java.text.ParsePosition(16);
        parsePosition35.setIndex(10);
        parsePosition35.setIndex(0);
        java.lang.Object obj40 = fastDateFormat31.parseObject("Taiwan", parsePosition35);
        java.util.TimeZone timeZone41 = fastDateFormat31.getTimeZone();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        boolean boolean44 = locale42.hasExtensions();
        java.lang.String str45 = locale42.getDisplayCountry();
        java.lang.String str46 = locale42.getDisplayLanguage();
        java.lang.String str47 = locale42.getLanguage();
        java.util.Locale.Builder builder48 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder48.clear();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale.Builder builder55 = builder49.setLocale(locale50);
        java.util.Locale locale56 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder57 = builder55.setLocale(locale56);
        java.util.Locale locale58 = builder55.build();
        java.lang.String str59 = locale42.getDisplayScript(locale58);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone41, locale42);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone41);
        calendar6.setTimeZone(timeZone41);
        java.util.Date date69 = new java.util.Date(1970, 40, 0, 25, 10, 0);
        int int70 = date69.getHours();
        int int71 = date69.getHours();
        boolean boolean72 = timeZone41.inDaylightTime(date69);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar26", (calendar6.compareTo(calendar26) == 0) == calendar6.equals(calendar26));
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test193");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.TimeZone timeZone6 = fastDateFormat2.getTimeZone();
        java.lang.String str7 = timeZone6.getID();
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone6, locale8);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale8);
        java.util.TimeZone timeZone15 = calendar14.getTimeZone();
        java.lang.String str18 = timeZone15.getDisplayName(false, (int) (byte) 1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar14", (calendar13.compareTo(calendar14) == 0) == calendar13.equals(calendar14));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test194");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        localeList56.clear();
        java.lang.Object[] objArray60 = localeList56.toArray();
        java.lang.Object obj61 = null;
        boolean boolean62 = localeList56.remove(obj61);
        int int63 = localeList56.size();
        java.util.Iterator<java.util.Locale> localeItor64 = localeList56.iterator();
        java.util.Date date65 = new java.util.Date();
        int int66 = date65.getTimezoneOffset();
        date65.setMonth(16);
        date65.setSeconds(23);
        long long71 = date65.getTime();
        int int72 = localeList56.lastIndexOf((java.lang.Object) long71);
        int int73 = localeList56.size();
        java.util.Locale.Category category74 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone75 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone77 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat78 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone77);
        java.lang.String str79 = fastDateFormat78.getPattern();
        java.lang.String str81 = fastDateFormat78.format(1645513660686L);
        java.util.Locale locale82 = java.util.Locale.ITALIAN;
        boolean boolean83 = fastDateFormat78.equals((java.lang.Object) locale82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone75, locale82);
        java.util.Locale locale85 = java.util.Locale.FRANCE;
        boolean boolean86 = locale85.hasExtensions();
        java.lang.String str87 = locale82.getDisplayVariant(locale85);
        java.lang.String str88 = locale82.getDisplayName();
        java.lang.String str89 = locale82.getISO3Language();
        java.util.Locale.setDefault(category74, locale82);
        java.util.Set<java.lang.String> strSet91 = locale82.getUnicodeLocaleKeys();
        java.util.stream.Stream<java.lang.String> strStream92 = strSet91.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream93 = strSet91.stream();
        java.util.stream.Stream<java.lang.String> strStream94 = strSet91.parallelStream();
        boolean boolean95 = localeList56.containsAll((java.util.Collection<java.lang.String>) strSet91);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar84", (calendar2.compareTo(calendar84) == 0) == calendar2.equals(calendar84));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test195");
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.lang.String str2 = locale1.getLanguage();
        boolean boolean3 = locale1.hasExtensions();
        java.lang.String str4 = locale1.getDisplayCountry();
        java.util.Set<java.lang.String> strSet5 = locale1.getUnicodeLocaleKeys();
        java.util.Locale locale6 = java.util.Locale.TAIWAN;
        java.util.Locale locale7 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str8 = locale6.getDisplayLanguage(locale7);
        java.lang.String str9 = locale1.getDisplayLanguage(locale6);
        java.lang.String str10 = locale6.getVariant();
        java.lang.String str11 = locale6.getDisplayVariant();
        java.lang.String str12 = locale6.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", locale6);
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str20 = fastDateFormat19.getPattern();
        java.lang.String str22 = fastDateFormat19.format(1645513660686L);
        java.util.Locale locale23 = java.util.Locale.ITALIAN;
        boolean boolean24 = fastDateFormat19.equals((java.lang.Object) locale23);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone16, locale23);
        java.util.Locale locale26 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone16, locale26);
        java.util.TimeZone timeZone29 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean30 = timeZone16.hasSameRules(timeZone29);
        java.util.Locale.LanguageRange[] languageRangeArray31 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList32 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList32, languageRangeArray31);
        java.util.Locale locale34 = java.util.Locale.GERMAN;
        java.util.Locale locale35 = java.util.Locale.FRANCE;
        boolean boolean36 = locale35.hasExtensions();
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        java.util.Locale[] localeArray40 = new java.util.Locale[] { locale34, locale35, locale37, locale38 };
        java.util.ArrayList<java.util.Locale> localeList41 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList41, localeArray40);
        java.util.Locale.FilteringMode filteringMode43 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList44 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList32, (java.util.Collection<java.util.Locale>) localeList41, filteringMode43);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList46 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale47 = java.util.Locale.CHINESE;
        java.lang.String str48 = locale47.getLanguage();
        java.util.Set<java.lang.String> strSet49 = locale47.getUnicodeLocaleAttributes();
        java.lang.String str50 = java.util.Locale.lookupTag(languageRangeList46, (java.util.Collection<java.lang.String>) strSet49);
        boolean boolean51 = localeList44.containsAll((java.util.Collection<java.lang.String>) strSet49);
        boolean boolean53 = localeList44.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator54 = localeList44.spliterator();
        java.util.Locale locale58 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale59 = java.util.Locale.ROOT;
        java.lang.String str60 = locale58.getDisplayScript(locale59);
        java.lang.String str61 = locale58.getISO3Language();
        boolean boolean62 = localeList44.add(locale58);
        java.util.ListIterator<java.util.Locale> localeItor63 = localeList44.listIterator();
        java.util.Locale.Builder builder64 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder65 = builder64.clear();
        java.util.Locale locale66 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale67 = java.util.Locale.CHINESE;
        java.lang.String str68 = locale67.getLanguage();
        boolean boolean69 = locale67.hasExtensions();
        java.lang.String str70 = locale66.getDisplayVariant(locale67);
        java.util.Locale.Builder builder71 = builder65.setLocale(locale66);
        java.util.Locale locale72 = builder71.build();
        java.util.Locale.Builder builder74 = builder71.addUnicodeLocaleAttribute("German");
        java.util.Locale locale75 = java.util.Locale.TAIWAN;
        java.util.Locale locale76 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str77 = locale75.getDisplayLanguage(locale76);
        java.util.Locale.Builder builder78 = builder71.setLocale(locale75);
        java.lang.String str79 = locale75.getISO3Country();
        boolean boolean80 = localeList44.add(locale75);
        java.lang.String str81 = locale75.toLanguageTag();
        java.util.Calendar calendar82 = java.util.Calendar.getInstance(timeZone16, locale75);
        int int83 = calendar82.getWeekYear();
        java.time.Instant instant84 = calendar82.toInstant();
        boolean boolean85 = fastDateFormat13.equals((java.lang.Object) calendar82);
        java.util.Date date92 = new java.util.Date((int) 'u', (int) (short) 10, 45, 21, 8, (-8));
        java.lang.StringBuffer stringBuffer93 = null;
        java.lang.StringBuffer stringBuffer94 = fastDateFormat13.format(date92, stringBuffer93);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar82", (calendar25.compareTo(calendar82) == 0) == calendar25.equals(calendar82));
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test196");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        java.util.Calendar calendar3 = java.util.Calendar.getInstance(timeZone0);
        int int5 = calendar3.getActualMinimum(6);
        int int6 = calendar3.getMinimalDaysInFirstWeek();
        java.time.Instant instant7 = calendar3.toInstant();
        boolean boolean9 = calendar3.after((java.lang.Object) 'x');
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone10.hasSameRules(timeZone11);
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar16 = java.util.Calendar.getInstance(timeZone11);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int19 = timeZone18.getRawOffset();
        calendar16.setTimeZone(timeZone18);
        int int22 = timeZone18.getOffset(1843383761000L);
        int int23 = timeZone18.getRawOffset();
        boolean boolean24 = calendar3.after((java.lang.Object) int23);
        java.text.ParsePosition parsePosition26 = new java.text.ParsePosition(16);
        parsePosition26.setIndex(10);
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.util.Calendar calendar30 = java.util.Calendar.getInstance(locale29);
        int int32 = calendar30.getActualMinimum((int) (byte) 0);
        boolean boolean33 = calendar30.isWeekDateSupported();
        java.util.Date date34 = calendar30.getTime();
        java.util.Locale.LanguageRange[] languageRangeArray35 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList36 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList36, languageRangeArray35);
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.FRANCE;
        boolean boolean40 = locale39.hasExtensions();
        java.util.Locale locale41 = java.util.Locale.FRANCE;
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.lang.String str43 = locale42.getLanguage();
        java.util.Locale[] localeArray44 = new java.util.Locale[] { locale38, locale39, locale41, locale42 };
        java.util.ArrayList<java.util.Locale> localeList45 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList45, localeArray44);
        java.util.Locale.FilteringMode filteringMode47 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList48 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList36, (java.util.Collection<java.util.Locale>) localeList45, filteringMode47);
        boolean boolean49 = localeList48.isEmpty();
        java.util.Calendar.Builder builder50 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder54 = builder50.setWeekDate(16, 3, 100);
        boolean boolean55 = localeList48.remove((java.lang.Object) builder50);
        java.util.Calendar.Builder builder57 = builder50.setLenient(true);
        java.util.Calendar.Builder builder61 = builder57.setTimeOfDay(0, 122, 28);
        boolean boolean62 = calendar30.after((java.lang.Object) builder61);
        java.util.Calendar.Builder builder66 = builder61.setDate(3, (int) (short) -1, 7);
        boolean boolean67 = parsePosition26.equals((java.lang.Object) builder66);
        java.util.Calendar.Builder builder71 = builder66.setDate(117, 2, 1969);
        java.util.Locale locale72 = java.util.Locale.PRC;
        boolean boolean73 = locale72.hasExtensions();
        java.util.Calendar.Builder builder74 = builder66.setLocale(locale72);
        boolean boolean75 = calendar3.equals((java.lang.Object) locale72);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar16 and calendar30", (calendar16.compareTo(calendar30) == 0) == calendar16.equals(calendar30));
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test197");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        boolean boolean8 = timeZone6.hasSameRules(timeZone7);
        boolean boolean9 = timeZone6.observesDaylightTime();
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet11 = locale10.getUnicodeLocaleAttributes();
        java.util.Calendar calendar12 = java.util.Calendar.getInstance(timeZone6, locale10);
        boolean boolean13 = timeZone6.observesDaylightTime();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone6.hasSameRules(timeZone15);
        boolean boolean20 = fastDateFormat2.equals((java.lang.Object) timeZone6);
        java.util.Locale locale21 = java.util.Locale.GERMANY;
        java.util.Locale locale23 = new java.util.Locale("Chinese");
        java.lang.String str24 = locale21.getDisplayLanguage(locale23);
        java.lang.String str25 = locale21.getDisplayCountry();
        java.lang.String str26 = locale21.getISO3Language();
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(locale21);
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone6, locale21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar12 and calendar27", (calendar12.compareTo(calendar27) == 0) == calendar12.equals(calendar27));
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test198");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.lang.String str81 = fastDateFormat2.toString();
        java.util.Date date82 = new java.util.Date();
        java.lang.String str83 = date82.toGMTString();
        int int84 = date82.getYear();
        int int85 = date82.getSeconds();
        int int86 = date82.getHours();
        java.lang.StringBuffer stringBuffer87 = null;
        java.lang.StringBuffer stringBuffer88 = fastDateFormat2.format(date82, stringBuffer87);
        java.time.Instant instant89 = date82.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test199");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int3 = calendar1.getActualMinimum((int) (byte) 0);
        int int4 = calendar1.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(timeZone5);
        int int9 = calendar8.getFirstDayOfWeek();
        boolean boolean10 = calendar1.before((java.lang.Object) calendar8);
        boolean boolean11 = calendar1.isWeekDateSupported();
        int int12 = calendar1.getWeeksInWeekYear();
        calendar1.roll(0, 11);
        calendar1.clear();
        java.util.TimeZone timeZone17 = calendar1.getTimeZone();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone18.hasSameRules(timeZone19);
        timeZone18.setID("\u4e2d\u6587\u53f0\u7063)");
        int int26 = timeZone18.getOffset(1645513548538L);
        boolean boolean27 = timeZone18.observesDaylightTime();
        java.util.Locale locale30 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale30);
        java.util.Locale locale32 = java.util.Locale.CANADA;
        java.lang.String str33 = locale30.getDisplayName(locale32);
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(timeZone18, locale32);
        int int36 = calendar34.getMaximum(16);
        java.util.Locale.LanguageRange[] languageRangeArray37 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList38 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList38, languageRangeArray37);
        java.util.Locale locale40 = java.util.Locale.GERMAN;
        java.util.Locale locale41 = java.util.Locale.FRANCE;
        boolean boolean42 = locale41.hasExtensions();
        java.util.Locale locale43 = java.util.Locale.FRANCE;
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.lang.String str45 = locale44.getLanguage();
        java.util.Locale[] localeArray46 = new java.util.Locale[] { locale40, locale41, locale43, locale44 };
        java.util.ArrayList<java.util.Locale> localeList47 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList47, localeArray46);
        java.util.Locale.FilteringMode filteringMode49 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList50 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList38, (java.util.Collection<java.util.Locale>) localeList47, filteringMode49);
        java.util.Spliterator<java.util.Locale> localeSpliterator51 = localeList50.spliterator();
        java.util.Iterator<java.util.Locale> localeItor52 = localeList50.iterator();
        java.util.Spliterator<java.util.Locale> localeSpliterator53 = localeList50.spliterator();
        java.util.Date date54 = new java.util.Date();
        java.lang.String str55 = date54.toGMTString();
        int int56 = date54.getTimezoneOffset();
        boolean boolean57 = localeList50.remove((java.lang.Object) date54);
        calendar34.setTime(date54);
        int int59 = date54.getSeconds();
        java.lang.String str60 = date54.toGMTString();
        int int61 = date54.getMinutes();
        boolean boolean62 = timeZone17.inDaylightTime(date54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar34", (calendar8.compareTo(calendar34) == 0) == calendar8.equals(calendar34));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test200");
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.lang.String str2 = locale1.getLanguage();
        boolean boolean3 = locale1.hasExtensions();
        java.lang.String str4 = locale1.getDisplayCountry();
        java.util.Set<java.lang.String> strSet5 = locale1.getUnicodeLocaleKeys();
        java.util.Locale locale6 = java.util.Locale.TAIWAN;
        java.util.Locale locale7 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str8 = locale6.getDisplayLanguage(locale7);
        java.lang.String str9 = locale1.getDisplayLanguage(locale6);
        java.lang.String str10 = locale6.getVariant();
        java.lang.String str11 = locale6.getDisplayVariant();
        java.lang.String str12 = locale6.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", locale6);
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str20 = fastDateFormat19.getPattern();
        java.lang.String str22 = fastDateFormat19.format(1645513660686L);
        java.util.Locale locale23 = java.util.Locale.ITALIAN;
        boolean boolean24 = fastDateFormat19.equals((java.lang.Object) locale23);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone16, locale23);
        java.util.Locale locale26 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone16, locale26);
        java.util.TimeZone timeZone29 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean30 = timeZone16.hasSameRules(timeZone29);
        java.util.Locale.LanguageRange[] languageRangeArray31 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList32 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList32, languageRangeArray31);
        java.util.Locale locale34 = java.util.Locale.GERMAN;
        java.util.Locale locale35 = java.util.Locale.FRANCE;
        boolean boolean36 = locale35.hasExtensions();
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        java.util.Locale[] localeArray40 = new java.util.Locale[] { locale34, locale35, locale37, locale38 };
        java.util.ArrayList<java.util.Locale> localeList41 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList41, localeArray40);
        java.util.Locale.FilteringMode filteringMode43 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList44 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList32, (java.util.Collection<java.util.Locale>) localeList41, filteringMode43);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList46 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale47 = java.util.Locale.CHINESE;
        java.lang.String str48 = locale47.getLanguage();
        java.util.Set<java.lang.String> strSet49 = locale47.getUnicodeLocaleAttributes();
        java.lang.String str50 = java.util.Locale.lookupTag(languageRangeList46, (java.util.Collection<java.lang.String>) strSet49);
        boolean boolean51 = localeList44.containsAll((java.util.Collection<java.lang.String>) strSet49);
        boolean boolean53 = localeList44.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator54 = localeList44.spliterator();
        java.util.Locale locale58 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale59 = java.util.Locale.ROOT;
        java.lang.String str60 = locale58.getDisplayScript(locale59);
        java.lang.String str61 = locale58.getISO3Language();
        boolean boolean62 = localeList44.add(locale58);
        java.util.ListIterator<java.util.Locale> localeItor63 = localeList44.listIterator();
        java.util.Locale.Builder builder64 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder65 = builder64.clear();
        java.util.Locale locale66 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale67 = java.util.Locale.CHINESE;
        java.lang.String str68 = locale67.getLanguage();
        boolean boolean69 = locale67.hasExtensions();
        java.lang.String str70 = locale66.getDisplayVariant(locale67);
        java.util.Locale.Builder builder71 = builder65.setLocale(locale66);
        java.util.Locale locale72 = builder71.build();
        java.util.Locale.Builder builder74 = builder71.addUnicodeLocaleAttribute("German");
        java.util.Locale locale75 = java.util.Locale.TAIWAN;
        java.util.Locale locale76 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str77 = locale75.getDisplayLanguage(locale76);
        java.util.Locale.Builder builder78 = builder71.setLocale(locale75);
        java.lang.String str79 = locale75.getISO3Country();
        boolean boolean80 = localeList44.add(locale75);
        java.lang.String str81 = locale75.toLanguageTag();
        java.util.Calendar calendar82 = java.util.Calendar.getInstance(timeZone16, locale75);
        int int83 = calendar82.getWeekYear();
        java.time.Instant instant84 = calendar82.toInstant();
        boolean boolean85 = fastDateFormat13.equals((java.lang.Object) calendar82);
        boolean boolean86 = fastDateFormat13.getTimeZoneOverridesCalendar();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar82", (calendar25.compareTo(calendar82) == 0) == calendar25.equals(calendar82));
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test201");
        java.util.Date date6 = new java.util.Date(10, (int) (short) 0, 1970, (int) (byte) 10, (int) (short) 1, 15);
        int int7 = date6.getMinutes();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        java.util.TimeZone.setDefault(timeZone9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone9);
        java.util.TimeZone timeZone16 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int17 = timeZone16.getRawOffset();
        calendar14.setTimeZone(timeZone16);
        calendar14.setFirstDayOfWeek(6);
        boolean boolean21 = calendar14.isWeekDateSupported();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getTimeZone("zh_CN");
        calendar14.setTimeZone(timeZone23);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone23);
        java.util.Date date26 = calendar25.getTime();
        boolean boolean27 = date6.after(date26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar14 and calendar25", (calendar14.compareTo(calendar25) == 0) == calendar14.equals(calendar25));
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test202");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        int int76 = localeList56.size();
        java.util.TimeZone timeZone78 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone79 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone80 = java.util.TimeZone.getDefault();
        boolean boolean81 = timeZone79.hasSameRules(timeZone80);
        boolean boolean82 = timeZone78.hasSameRules(timeZone79);
        timeZone78.setID("\u4e2d\u6587\u53f0\u7063)");
        int int86 = timeZone78.getOffset(1645513548538L);
        java.util.Locale locale87 = java.util.Locale.CHINESE;
        java.lang.String str88 = locale87.getLanguage();
        boolean boolean89 = locale87.hasExtensions();
        java.lang.String str90 = locale87.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat91 = org.apache.commons.lang3.time.FastDateFormat.getInstance("zh", timeZone78, locale87);
        java.lang.String str92 = locale87.getDisplayVariant();
        boolean boolean93 = localeList56.add(locale87);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test203");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder1 = builder0.clear();
        java.util.Locale locale2 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale3 = java.util.Locale.CHINESE;
        java.lang.String str4 = locale3.getLanguage();
        boolean boolean5 = locale3.hasExtensions();
        java.lang.String str6 = locale2.getDisplayVariant(locale3);
        java.util.Locale.Builder builder7 = builder1.setLocale(locale2);
        java.util.Locale locale8 = builder7.build();
        java.util.Locale.Builder builder10 = builder7.addUnicodeLocaleAttribute("German");
        java.util.Locale.Builder builder11 = builder10.clear();
        java.text.ParsePosition parsePosition13 = new java.text.ParsePosition(16);
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.lang.String str15 = locale14.getLanguage();
        boolean boolean16 = locale14.hasExtensions();
        boolean boolean17 = parsePosition13.equals((java.lang.Object) locale14);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale14);
        java.lang.String str19 = locale14.getISO3Language();
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.lang.String str26 = fastDateFormat23.format(1645513660686L);
        java.lang.String str28 = fastDateFormat23.format((long) 40);
        java.util.TimeZone timeZone29 = fastDateFormat23.getTimeZone();
        java.util.TimeZone timeZone30 = fastDateFormat23.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone30);
        java.util.TimeZone timeZone34 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute35 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray36 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList37 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList37, languageRangeArray36);
        java.util.Locale locale39 = java.util.Locale.GERMAN;
        java.util.Locale locale40 = java.util.Locale.FRANCE;
        boolean boolean41 = locale40.hasExtensions();
        java.util.Locale locale42 = java.util.Locale.FRANCE;
        java.util.Locale locale43 = java.util.Locale.CHINESE;
        java.lang.String str44 = locale43.getLanguage();
        java.util.Locale[] localeArray45 = new java.util.Locale[] { locale39, locale40, locale42, locale43 };
        java.util.ArrayList<java.util.Locale> localeList46 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList46, localeArray45);
        java.util.Locale.FilteringMode filteringMode48 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList49 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList37, (java.util.Collection<java.util.Locale>) localeList46, filteringMode48);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList51 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale52 = java.util.Locale.CHINESE;
        java.lang.String str53 = locale52.getLanguage();
        java.util.Set<java.lang.String> strSet54 = locale52.getUnicodeLocaleAttributes();
        java.lang.String str55 = java.util.Locale.lookupTag(languageRangeList51, (java.util.Collection<java.lang.String>) strSet54);
        boolean boolean56 = localeList49.containsAll((java.util.Collection<java.lang.String>) strSet54);
        boolean boolean58 = localeList49.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator59 = localeList49.spliterator();
        java.util.Locale locale63 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale64 = java.util.Locale.ROOT;
        java.lang.String str65 = locale63.getDisplayScript(locale64);
        java.lang.String str66 = locale63.getISO3Language();
        boolean boolean67 = localeList49.add(locale63);
        boolean boolean68 = attribute35.equals((java.lang.Object) locale63);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat69 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone34, locale63);
        java.util.Calendar calendar70 = java.util.Calendar.getInstance(timeZone30, locale63);
        java.lang.String str71 = locale14.getDisplayVariant(locale63);
        java.util.Locale locale72 = java.util.Locale.FRANCE;
        boolean boolean73 = locale72.hasExtensions();
        java.lang.String str74 = locale72.getCountry();
        java.lang.String str75 = locale72.getDisplayLanguage();
        java.lang.String str76 = locale63.getDisplayName(locale72);
        java.util.Locale.Builder builder77 = builder11.setLocale(locale72);
        boolean boolean78 = locale72.hasExtensions();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar70", (calendar18.compareTo(calendar70) == 0) == calendar18.equals(calendar70));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test204");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int2 = calendar1.getWeeksInWeekYear();
        int int3 = calendar1.getWeeksInWeekYear();
        calendar1.add(0, (int) 'a');
        int int7 = calendar1.getFirstDayOfWeek();
        java.util.Locale locale11 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale12 = java.util.Locale.ROOT;
        java.lang.String str13 = locale11.getDisplayScript(locale12);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale11);
        int int16 = calendar14.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone17 = calendar14.getTimeZone();
        boolean boolean18 = calendar1.before((java.lang.Object) timeZone17);
        timeZone17.setID("23 h 59 GMT+00:00");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar1 and calendar14", (calendar1.compareTo(calendar14) == 0) == calendar1.equals(calendar14));
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test205");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        calendar84.roll(0, false);
        java.util.TimeZone timeZone89 = calendar84.getTimeZone();
        java.util.Locale locale92 = new java.util.Locale("fr_FR", "it");
        java.util.Calendar calendar93 = java.util.Calendar.getInstance(timeZone89, locale92);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test206");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute3 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray4 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList5 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList5, languageRangeArray4);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        boolean boolean9 = locale8.hasExtensions();
        java.util.Locale locale10 = java.util.Locale.FRANCE;
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale7, locale8, locale10, locale11 };
        java.util.ArrayList<java.util.Locale> localeList14 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList14, localeArray13);
        java.util.Locale.FilteringMode filteringMode16 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList17 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList5, (java.util.Collection<java.util.Locale>) localeList14, filteringMode16);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList19 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        java.util.Set<java.lang.String> strSet22 = locale20.getUnicodeLocaleAttributes();
        java.lang.String str23 = java.util.Locale.lookupTag(languageRangeList19, (java.util.Collection<java.lang.String>) strSet22);
        boolean boolean24 = localeList17.containsAll((java.util.Collection<java.lang.String>) strSet22);
        boolean boolean26 = localeList17.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator27 = localeList17.spliterator();
        java.util.Locale locale31 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.lang.String str33 = locale31.getDisplayScript(locale32);
        java.lang.String str34 = locale31.getISO3Language();
        boolean boolean35 = localeList17.add(locale31);
        boolean boolean36 = attribute3.equals((java.lang.Object) locale31);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone2, locale31);
        java.text.ParsePosition parsePosition40 = new java.text.ParsePosition(16);
        int int41 = parsePosition40.getErrorIndex();
        java.lang.String str42 = parsePosition40.toString();
        java.lang.String str43 = parsePosition40.toString();
        int int44 = parsePosition40.getIndex();
        java.lang.Object obj45 = fastDateFormat37.parseObject("7:08:33 AM UTC", parsePosition40);
        java.util.Locale locale46 = java.util.Locale.GERMANY;
        java.util.Locale locale48 = new java.util.Locale("Chinese");
        java.lang.String str49 = locale46.getDisplayLanguage(locale48);
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.lang.String str51 = locale50.getLanguage();
        boolean boolean52 = locale50.hasExtensions();
        java.lang.String str53 = locale50.getDisplayCountry();
        java.lang.String str54 = locale50.getISO3Language();
        java.util.Locale locale56 = java.util.Locale.getDefault();
        java.lang.String str57 = locale56.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat58 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale56);
        java.lang.String str59 = locale50.getDisplayName(locale56);
        java.util.Locale.setDefault(locale50);
        java.util.TimeZone timeZone61 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone63 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone63);
        java.lang.String str65 = fastDateFormat64.getPattern();
        java.lang.String str67 = fastDateFormat64.format(1645513660686L);
        java.util.Locale locale68 = java.util.Locale.ITALIAN;
        boolean boolean69 = fastDateFormat64.equals((java.lang.Object) locale68);
        java.util.Calendar calendar70 = java.util.Calendar.getInstance(timeZone61, locale68);
        java.util.Locale locale71 = java.util.Locale.FRANCE;
        boolean boolean72 = locale71.hasExtensions();
        java.lang.String str73 = locale68.getDisplayVariant(locale71);
        java.lang.String str74 = locale68.getDisplayScript();
        java.lang.String str75 = locale50.getDisplayCountry(locale68);
        java.lang.String str76 = locale46.getDisplayCountry(locale50);
        java.util.Set<java.lang.String> strSet77 = locale50.getUnicodeLocaleAttributes();
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(locale50);
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fastDateFormat37.formatToCharacterIterator((java.lang.Object) calendar78);
        java.lang.String str81 = fastDateFormat37.format(1645513883146L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar70 and calendar78", (calendar70.compareTo(calendar78) == 0) == calendar70.equals(calendar78));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test207");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        timeZone0.setRawOffset(43);
        timeZone0.setID("giapponese");
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        boolean boolean14 = timeZone12.hasSameRules(timeZone13);
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(timeZone12);
        int int17 = calendar15.getActualMinimum(6);
        calendar15.set((int) (short) 1, 41, 16, 16, 32772);
        int int24 = calendar15.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone25 = calendar15.getTimeZone();
        boolean boolean26 = timeZone0.hasSameRules(timeZone25);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone0);
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        boolean boolean32 = timeZone30.hasSameRules(timeZone31);
        boolean boolean33 = timeZone29.hasSameRules(timeZone30);
        boolean boolean34 = timeZone29.observesDaylightTime();
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(timeZone29);
        boolean boolean36 = timeZone29.observesDaylightTime();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone29);
        boolean boolean38 = timeZone29.observesDaylightTime();
        calendar27.setTimeZone(timeZone29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar35", (calendar6.compareTo(calendar35) == 0) == calendar6.equals(calendar35));
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test208");
        java.util.Locale locale2 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale2);
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getTimezoneOffset();
        date6.setMinutes(5);
        boolean boolean10 = date4.after(date6);
        java.util.TimeZone timeZone12 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone12);
        java.lang.String str14 = fastDateFormat13.getPattern();
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        java.lang.String str17 = fastDateFormat13.format(date15);
        boolean boolean18 = date4.before(date15);
        java.lang.String str19 = fastDateFormat3.format(date4);
        java.util.TimeZone timeZone20 = fastDateFormat3.getTimeZone();
        java.util.Locale locale21 = java.util.Locale.ITALIAN;
        java.util.Locale locale24 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022", "GMT+00:00");
        java.lang.String str25 = locale21.getDisplayName(locale24);
        java.util.Set<java.lang.String> strSet26 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone20, locale21);
        java.util.Set<java.lang.String> strSet28 = locale21.getUnicodeLocaleKeys();
        java.util.Locale.LanguageRange[] languageRangeArray29 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList30 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList30, languageRangeArray29);
        java.util.Locale locale32 = java.util.Locale.GERMAN;
        java.util.Locale locale33 = java.util.Locale.FRANCE;
        boolean boolean34 = locale33.hasExtensions();
        java.util.Locale locale35 = java.util.Locale.FRANCE;
        java.util.Locale locale36 = java.util.Locale.CHINESE;
        java.lang.String str37 = locale36.getLanguage();
        java.util.Locale[] localeArray38 = new java.util.Locale[] { locale32, locale33, locale35, locale36 };
        java.util.ArrayList<java.util.Locale> localeList39 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList39, localeArray38);
        java.util.Locale.FilteringMode filteringMode41 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList42 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList30, (java.util.Collection<java.util.Locale>) localeList39, filteringMode41);
        java.util.Locale locale43 = java.util.Locale.CHINESE;
        java.util.Calendar calendar44 = java.util.Calendar.getInstance(locale43);
        boolean boolean45 = localeList39.contains((java.lang.Object) locale43);
        java.util.Set<java.lang.String> strSet46 = locale43.getUnicodeLocaleKeys();
        java.util.Locale locale47 = java.util.Locale.TAIWAN;
        java.util.Locale locale48 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str49 = locale47.getDisplayLanguage(locale48);
        java.lang.String str50 = locale47.getDisplayLanguage();
        java.lang.String str51 = locale43.getDisplayVariant(locale47);
        java.lang.String str52 = locale21.getDisplayCountry(locale43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar27 and calendar44", (calendar27.compareTo(calendar44) == 0) == calendar27.equals(calendar44));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test209");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.TimeZone.setDefault(timeZone0);
        boolean boolean11 = timeZone0.observesDaylightTime();
        java.text.FieldPosition fieldPosition13 = new java.text.FieldPosition(32770);
        java.lang.String str14 = fieldPosition13.toString();
        fieldPosition13.setEndIndex((int) (byte) 1);
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        boolean boolean20 = timeZone18.hasSameRules(timeZone19);
        boolean boolean21 = timeZone17.hasSameRules(timeZone18);
        java.util.TimeZone.setDefault(timeZone18);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone18);
        long long24 = calendar23.getTimeInMillis();
        java.util.Date date25 = calendar23.getTime();
        boolean boolean26 = fieldPosition13.equals((java.lang.Object) date25);
        int int27 = date25.getTimezoneOffset();
        int int28 = date25.getMonth();
        boolean boolean29 = timeZone0.inDaylightTime(date25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar23", (calendar9.compareTo(calendar23) == 0) == calendar9.equals(calendar23));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test210");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.Locale locale11 = fastDateFormat2.getLocale();
        java.lang.Object obj12 = fastDateFormat2.clone();
        java.util.TimeZone timeZone13 = fastDateFormat2.getTimeZone();
        java.util.Locale.Category category14 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale15 = java.util.Locale.getDefault(category14);
        java.util.Locale locale17 = java.util.Locale.getDefault();
        java.lang.String str18 = locale17.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale17);
        java.util.Locale.setDefault(category14, locale17);
        java.util.Locale locale21 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.lang.String str23 = locale21.getISO3Country();
        java.lang.String str24 = locale21.getDisplayCountry();
        java.lang.String str25 = locale21.getDisplayVariant();
        java.util.Locale.setDefault(category14, locale21);
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.lang.String str28 = locale27.getLanguage();
        boolean boolean29 = locale27.hasExtensions();
        java.lang.String str30 = locale27.getDisplayCountry();
        java.lang.String str31 = locale27.getDisplayLanguage();
        java.util.Locale locale33 = java.util.Locale.forLanguageTag("zh");
        java.lang.String str34 = locale27.getDisplayLanguage(locale33);
        java.util.Locale.Category category35 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale36 = java.util.Locale.getDefault(category35);
        java.util.Locale locale37 = java.util.Locale.getDefault(category35);
        java.util.Locale.Builder builder38 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder39 = builder38.clear();
        java.util.Locale locale40 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale41 = java.util.Locale.CHINESE;
        java.lang.String str42 = locale41.getLanguage();
        boolean boolean43 = locale41.hasExtensions();
        java.lang.String str44 = locale40.getDisplayVariant(locale41);
        java.util.Locale.Builder builder45 = builder39.setLocale(locale40);
        java.util.Locale.Builder builder47 = builder45.removeUnicodeLocaleAttribute("German");
        java.util.Locale locale48 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale49 = java.util.Locale.CHINESE;
        java.lang.String str50 = locale49.getLanguage();
        boolean boolean51 = locale49.hasExtensions();
        java.lang.String str52 = locale48.getDisplayVariant(locale49);
        java.util.Locale locale53 = locale48.stripExtensions();
        java.util.Locale.setDefault(locale48);
        java.util.Locale.Builder builder55 = builder47.setLocale(locale48);
        java.util.Locale.setDefault(category35, locale48);
        java.lang.String str57 = locale48.getDisplayLanguage();
        java.lang.String str58 = locale27.getDisplayVariant(locale48);
        java.util.Locale.setDefault(category14, locale48);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone13, locale48);
        java.util.Locale.Category category61 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone62 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone64 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat65 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone64);
        java.lang.String str66 = fastDateFormat65.getPattern();
        java.lang.String str68 = fastDateFormat65.format(1645513660686L);
        java.util.Locale locale69 = java.util.Locale.ITALIAN;
        boolean boolean70 = fastDateFormat65.equals((java.lang.Object) locale69);
        java.util.Calendar calendar71 = java.util.Calendar.getInstance(timeZone62, locale69);
        java.util.Locale locale72 = java.util.Locale.FRANCE;
        boolean boolean73 = locale72.hasExtensions();
        java.lang.String str74 = locale69.getDisplayVariant(locale72);
        java.lang.String str75 = locale69.getDisplayName();
        java.lang.String str76 = locale69.getISO3Language();
        java.util.Locale.setDefault(category61, locale69);
        java.util.Locale locale79 = java.util.Locale.forLanguageTag("12:00:32 AM UTC");
        java.lang.String str80 = locale79.getISO3Language();
        java.util.Locale.setDefault(category61, locale79);
        java.util.Calendar calendar82 = java.util.Calendar.getInstance(timeZone13, locale79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar60 and calendar71", (calendar60.compareTo(calendar71) == 0) == calendar60.equals(calendar71));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test211");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        calendar6.set(8, 4);
        calendar6.setMinimalDaysInFirstWeek(4);
        java.lang.String str12 = calendar6.getCalendarType();
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        boolean boolean15 = timeZone13.hasSameRules(timeZone14);
        boolean boolean16 = timeZone13.observesDaylightTime();
        calendar6.setTimeZone(timeZone13);
        java.util.Locale.Builder builder18 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder19 = builder18.clear();
        java.util.Locale locale20 = builder18.build();
        boolean boolean21 = locale20.hasExtensions();
        java.util.Set<java.lang.String> strSet22 = locale20.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale20);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone13, locale20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar23", (calendar6.compareTo(calendar23) == 0) == calendar6.equals(calendar23));
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test212");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.Calendar.Builder builder17 = builder8.setDate(3, 14, 0);
        java.util.Calendar.Builder builder22 = builder8.setTimeOfDay(11, (int) '#', 15, 49);
        java.util.TimeZone timeZone24 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone24);
        java.util.TimeZone timeZone26 = fastDateFormat25.getTimeZone();
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone26);
        java.util.Calendar.Builder builder28 = builder8.setTimeZone(timeZone26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar27", (calendar11.compareTo(calendar27) == 0) == calendar11.equals(calendar27));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test213");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.StringBuffer stringBuffer4 = null;
        java.lang.StringBuffer stringBuffer5 = fastDateFormat2.format((long) 124, stringBuffer4);
        boolean boolean6 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.lang.String str8 = fastDateFormat2.format(1645513692520L);
        java.util.TimeZone timeZone10 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone10);
        java.lang.String str12 = fastDateFormat11.toString();
        boolean boolean13 = fastDateFormat11.getTimeZoneOverridesCalendar();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.Calendar.Builder builder16 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder20 = builder16.setWeekDate(16, 3, 100);
        java.util.Locale locale21 = java.util.Locale.GERMANY;
        java.util.Locale locale23 = new java.util.Locale("Chinese");
        java.lang.String str24 = locale21.getDisplayLanguage(locale23);
        java.util.Calendar.Builder builder25 = builder16.setLocale(locale23);
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone26.observesDaylightTime();
        java.util.Locale locale30 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet31 = locale30.getUnicodeLocaleAttributes();
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(timeZone26, locale30);
        java.lang.String str33 = locale30.getDisplayVariant();
        java.lang.String str34 = locale30.getDisplayVariant();
        java.util.Calendar.Builder builder35 = builder25.setLocale(locale30);
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(timeZone15, locale30);
        boolean boolean38 = calendar36.before((java.lang.Object) "\u5e74\u6708\u65e5\u661f\u671f\u4e8c\u4e0a\u5348\u65f6\u5206\u79d2");
        java.lang.String str39 = fastDateFormat11.format(calendar36);
        java.util.Date date40 = new java.util.Date();
        int int41 = date40.getSeconds();
        java.util.Date date42 = new java.util.Date();
        int int43 = date42.getTimezoneOffset();
        date42.setMinutes(5);
        boolean boolean46 = date40.after(date42);
        date40.setSeconds(32770);
        date40.setDate(30);
        boolean boolean51 = calendar36.after((java.lang.Object) date40);
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fastDateFormat2.formatToCharacterIterator((java.lang.Object) date40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar32 and calendar36", (calendar32.compareTo(calendar36) == 0) == calendar32.equals(calendar36));
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test214");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder1 = builder0.clear();
        java.util.Locale.Builder builder2 = builder0.clear();
        java.util.Locale.Builder builder3 = builder2.clearExtensions();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone6);
        java.lang.String str8 = fastDateFormat7.getPattern();
        java.lang.String str10 = fastDateFormat7.format(1645513660686L);
        java.util.Locale locale11 = java.util.Locale.ITALIAN;
        boolean boolean12 = fastDateFormat7.equals((java.lang.Object) locale11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone4, locale11);
        java.util.Locale locale14 = java.util.Locale.FRANCE;
        boolean boolean15 = locale14.hasExtensions();
        java.lang.String str16 = locale11.getDisplayVariant(locale14);
        java.lang.String str17 = locale11.getDisplayName();
        java.lang.String str18 = locale11.getLanguage();
        java.util.Locale.Builder builder19 = builder3.setLocale(locale11);
        java.util.Locale.Builder builder20 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder21 = builder20.clear();
        java.util.Locale locale22 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale23 = java.util.Locale.CHINESE;
        java.lang.String str24 = locale23.getLanguage();
        boolean boolean25 = locale23.hasExtensions();
        java.lang.String str26 = locale22.getDisplayVariant(locale23);
        java.util.Locale.Builder builder27 = builder21.setLocale(locale22);
        java.util.Locale locale28 = java.util.Locale.PRC;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale28.getDisplayLanguage(locale29);
        java.util.Locale.Builder builder31 = builder27.setLocale(locale29);
        java.util.Locale.Builder builder32 = builder27.clearExtensions();
        java.util.Locale locale33 = builder32.build();
        java.util.Locale locale34 = locale33.stripExtensions();
        java.util.Locale locale35 = java.util.Locale.TAIWAN;
        java.util.Locale locale36 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str37 = locale35.getDisplayLanguage(locale36);
        java.lang.String str38 = locale35.getLanguage();
        java.util.Locale locale40 = new java.util.Locale("Chinese");
        java.util.Locale locale41 = locale40.stripExtensions();
        java.lang.String str42 = locale35.getDisplayLanguage(locale40);
        java.util.Locale locale44 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute45 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean47 = attribute45.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale48 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale49 = java.util.Locale.CHINESE;
        java.lang.String str50 = locale49.getLanguage();
        boolean boolean51 = locale49.hasExtensions();
        java.lang.String str52 = locale48.getDisplayVariant(locale49);
        java.util.Locale locale53 = locale48.stripExtensions();
        boolean boolean54 = attribute45.equals((java.lang.Object) locale53);
        java.lang.String str55 = locale44.getDisplayLanguage(locale53);
        java.lang.String str56 = locale35.getDisplayCountry(locale53);
        java.util.Calendar calendar57 = java.util.Calendar.getInstance(locale35);
        java.lang.String str58 = locale35.getCountry();
        java.lang.String str59 = locale34.getDisplayName(locale35);
        java.lang.String str60 = locale34.getLanguage();
        java.util.Locale.Builder builder61 = builder19.setLocale(locale34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar57", (calendar13.compareTo(calendar57) == 0) == calendar13.equals(calendar57));
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test215");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.Calendar.Builder builder2 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder6 = builder2.setWeekDate(16, 3, 100);
        java.util.Locale locale7 = java.util.Locale.GERMANY;
        java.util.Locale locale9 = new java.util.Locale("Chinese");
        java.lang.String str10 = locale7.getDisplayLanguage(locale9);
        java.util.Calendar.Builder builder11 = builder2.setLocale(locale9);
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        boolean boolean14 = timeZone12.hasSameRules(timeZone13);
        boolean boolean15 = timeZone12.observesDaylightTime();
        java.util.Locale locale16 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet17 = locale16.getUnicodeLocaleAttributes();
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone12, locale16);
        java.lang.String str19 = locale16.getDisplayVariant();
        java.lang.String str20 = locale16.getDisplayVariant();
        java.util.Calendar.Builder builder21 = builder11.setLocale(locale16);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone1, locale16);
        timeZone1.setID("7:11:28 AM UTC");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar22", (calendar18.compareTo(calendar22) == 0) == calendar18.equals(calendar22));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test216");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        calendar78.setFirstDayOfWeek(42);
        boolean boolean82 = calendar78.isWeekDateSupported();
        calendar78.setLenient(false);
        java.lang.String str85 = fastDateFormat2.format(calendar78);
        java.util.TimeZone timeZone86 = fastDateFormat2.getTimeZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test217");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone0);
        int int9 = timeZone0.getOffset(1645513684473L);
        timeZone0.setRawOffset(122);
        java.util.TimeZone.setDefault(timeZone0);
        java.lang.String str13 = timeZone0.getID();
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone0);
        int int15 = calendar14.getWeekYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar7", (calendar6.compareTo(calendar7) == 0) == calendar6.equals(calendar7));
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test218");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        boolean boolean16 = timeZone14.hasSameRules(timeZone15);
        boolean boolean17 = timeZone13.hasSameRules(timeZone14);
        boolean boolean18 = timeZone13.observesDaylightTime();
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone13);
        java.util.Calendar.Builder builder20 = builder12.setTimeZone(timeZone13);
        java.util.Calendar.Builder builder24 = builder20.setTimeOfDay(0, 54, 13);
        java.util.Calendar.Builder builder28 = builder24.setTimeOfDay(8, 122, 51);
        java.util.TimeZone timeZone30 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone30);
        java.lang.String str32 = fastDateFormat31.getPattern();
        java.lang.String str34 = fastDateFormat31.format(1645513660686L);
        java.util.Locale locale35 = fastDateFormat31.getLocale();
        java.lang.String str36 = locale35.getDisplayCountry();
        java.util.Calendar calendar37 = java.util.Calendar.getInstance(locale35);
        boolean boolean38 = locale35.hasExtensions();
        java.util.Calendar.Builder builder39 = builder24.setLocale(locale35);
        java.lang.String str40 = locale35.getScript();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar19 and calendar37", (calendar19.compareTo(calendar37) == 0) == calendar19.equals(calendar37));
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test219");
        java.util.Locale locale2 = new java.util.Locale("deu");
        java.lang.String str3 = locale2.getDisplayLanguage();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone6);
        java.lang.String str8 = fastDateFormat7.getPattern();
        java.lang.String str10 = fastDateFormat7.format(1645513660686L);
        java.util.Locale locale11 = java.util.Locale.ITALIAN;
        boolean boolean12 = fastDateFormat7.equals((java.lang.Object) locale11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone4, locale11);
        java.util.Locale locale14 = java.util.Locale.FRANCE;
        boolean boolean15 = locale14.hasExtensions();
        java.lang.String str16 = locale11.getDisplayVariant(locale14);
        java.lang.String str17 = locale11.getDisplayName();
        java.lang.String str18 = locale11.getISO3Language();
        java.lang.String str19 = locale2.getDisplayName(locale11);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u610f\u5927\u5229\u6587", locale2);
        java.lang.String str21 = fastDateFormat20.getPattern();
        java.util.Locale locale24 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale24);
        java.util.TimeZone timeZone28 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat29 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone28);
        java.lang.String str30 = fastDateFormat29.getPattern();
        java.text.ParsePosition parsePosition33 = new java.text.ParsePosition(16);
        parsePosition33.setIndex(10);
        java.lang.Object obj36 = fastDateFormat29.parseObject("22 Feb 2022 07:07:40 GMT", parsePosition33);
        int int37 = parsePosition33.getIndex();
        int int38 = parsePosition33.getIndex();
        int int39 = parsePosition33.getErrorIndex();
        int int40 = parsePosition33.getIndex();
        java.lang.Object obj41 = fastDateFormat25.parseObject("7:08:39 AM UTC", parsePosition33);
        java.lang.Object obj42 = fastDateFormat20.parseObject("22 feb 2022 07:07:40 gmt", parsePosition33);
        java.util.Locale locale43 = java.util.Locale.CHINESE;
        java.util.Calendar calendar44 = java.util.Calendar.getInstance(locale43);
        int int45 = calendar44.getWeeksInWeekYear();
        int int46 = calendar44.getWeeksInWeekYear();
        java.util.TimeZone timeZone47 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        boolean boolean49 = timeZone47.hasSameRules(timeZone48);
        java.util.Calendar calendar50 = java.util.Calendar.getInstance(timeZone47);
        int int52 = calendar50.getActualMinimum(6);
        int int53 = calendar50.getMinimalDaysInFirstWeek();
        boolean boolean54 = calendar44.after((java.lang.Object) calendar50);
        calendar50.setMinimalDaysInFirstWeek(1);
        calendar50.setFirstDayOfWeek(39);
        java.lang.String str59 = fastDateFormat20.format(calendar50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar44", (calendar13.compareTo(calendar44) == 0) == calendar13.equals(calendar44));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test220");
        java.util.Locale locale0 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet1 = locale0.getUnicodeLocaleAttributes();
        java.lang.String str2 = locale0.getISO3Country();
        java.lang.String str3 = locale0.getDisplayCountry();
        java.lang.String str4 = locale0.toLanguageTag();
        java.lang.String str5 = locale0.getScript();
        java.util.Locale locale7 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute8 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean10 = attribute8.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale11 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        java.lang.String str13 = locale12.getLanguage();
        boolean boolean14 = locale12.hasExtensions();
        java.lang.String str15 = locale11.getDisplayVariant(locale12);
        java.util.Locale locale16 = locale11.stripExtensions();
        boolean boolean17 = attribute8.equals((java.lang.Object) locale16);
        java.lang.String str18 = locale7.getDisplayLanguage(locale16);
        java.util.TimeZone timeZone20 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat21 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone20);
        java.lang.String str22 = fastDateFormat21.getPattern();
        java.lang.String str24 = fastDateFormat21.format(1645513660686L);
        java.util.TimeZone timeZone25 = fastDateFormat21.getTimeZone();
        java.lang.String str26 = timeZone25.getID();
        java.util.Locale locale27 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale28 = java.util.Locale.CHINESE;
        java.lang.String str29 = locale28.getLanguage();
        boolean boolean30 = locale28.hasExtensions();
        java.lang.String str31 = locale27.getDisplayVariant(locale28);
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(timeZone25, locale27);
        java.lang.String str34 = locale27.getExtension('a');
        java.util.Locale locale35 = locale27.stripExtensions();
        java.lang.String str36 = locale7.getDisplayScript(locale35);
        java.lang.String str37 = locale35.getDisplayName();
        java.lang.String str38 = locale0.getDisplayName(locale35);
        java.util.Locale locale40 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale40);
        int int42 = fastDateFormat41.getMaxLengthEstimate();
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone45 = java.util.TimeZone.getDefault();
        boolean boolean46 = timeZone44.hasSameRules(timeZone45);
        boolean boolean47 = timeZone43.hasSameRules(timeZone44);
        java.util.TimeZone.setDefault(timeZone44);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(timeZone44);
        long long50 = calendar49.getTimeInMillis();
        calendar49.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar49.setMinimalDaysInFirstWeek(17);
        calendar49.setMinimalDaysInFirstWeek(3);
        java.lang.String str57 = fastDateFormat41.format(calendar49);
        java.lang.String str59 = fastDateFormat41.format((java.lang.Object) 1645513661445L);
        java.util.Locale locale60 = fastDateFormat41.getLocale();
        java.util.Locale locale61 = locale60.stripExtensions();
        java.lang.String str62 = locale60.getDisplayLanguage();
        java.lang.String str63 = locale35.getDisplayScript(locale60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar32 and calendar49", (calendar32.compareTo(calendar49) == 0) == calendar32.equals(calendar49));
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test221");
        java.text.AttributedCharacterIterator.Attribute attribute0 = java.text.AttributedCharacterIterator.Attribute.LANGUAGE;
        java.text.FieldPosition fieldPosition2 = new java.text.FieldPosition(32770);
        int int3 = fieldPosition2.getBeginIndex();
        boolean boolean5 = fieldPosition2.equals((java.lang.Object) 0L);
        int int6 = fieldPosition2.getBeginIndex();
        java.lang.Class<?> wildcardClass7 = fieldPosition2.getClass();
        boolean boolean8 = attribute0.equals((java.lang.Object) wildcardClass7);
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone9.observesDaylightTime();
        java.util.Locale locale13 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet14 = locale13.getUnicodeLocaleAttributes();
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(timeZone9, locale13);
        boolean boolean16 = timeZone9.observesDaylightTime();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        boolean boolean20 = timeZone18.hasSameRules(timeZone19);
        boolean boolean21 = timeZone17.hasSameRules(timeZone18);
        boolean boolean22 = timeZone9.hasSameRules(timeZone18);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone9);
        int int24 = timeZone9.getRawOffset();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone9);
        boolean boolean26 = attribute0.equals((java.lang.Object) timeZone9);
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        boolean boolean30 = timeZone28.hasSameRules(timeZone29);
        boolean boolean31 = timeZone27.hasSameRules(timeZone28);
        java.util.TimeZone.setDefault(timeZone28);
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(timeZone28);
        calendar33.set(8, 4);
        int int37 = calendar33.getWeeksInWeekYear();
        calendar33.setWeekDate(2022, 10, (int) (byte) 1);
        int int42 = calendar33.getFirstDayOfWeek();
        boolean boolean43 = attribute0.equals((java.lang.Object) calendar33);
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(locale44);
        int int47 = calendar45.getActualMinimum((int) (byte) 0);
        boolean boolean48 = calendar45.isWeekDateSupported();
        calendar45.set(6, 11, 2022, (int) (byte) 0, 0, (int) (short) 1);
        boolean boolean56 = calendar45.isWeekDateSupported();
        java.lang.String str57 = calendar45.getCalendarType();
        int int58 = calendar45.getWeekYear();
        calendar45.roll(5, true);
        calendar45.set((int) (short) 100, 32772, (int) '#', 559, 292278994);
        boolean boolean68 = attribute0.equals((java.lang.Object) '#');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar15 and calendar23", (calendar15.compareTo(calendar23) == 0) == calendar15.equals(calendar23));
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test222");
        java.util.Locale.LanguageRange[] languageRangeArray0 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList1 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList1, languageRangeArray0);
        java.util.Locale locale3 = java.util.Locale.GERMAN;
        java.util.Locale locale4 = java.util.Locale.FRANCE;
        boolean boolean5 = locale4.hasExtensions();
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        java.util.Locale[] localeArray9 = new java.util.Locale[] { locale3, locale4, locale6, locale7 };
        java.util.ArrayList<java.util.Locale> localeList10 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList10, localeArray9);
        java.util.Locale.FilteringMode filteringMode12 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList13 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList1, (java.util.Collection<java.util.Locale>) localeList10, filteringMode12);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList15 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.lang.String str17 = locale16.getLanguage();
        java.util.Set<java.lang.String> strSet18 = locale16.getUnicodeLocaleAttributes();
        java.lang.String str19 = java.util.Locale.lookupTag(languageRangeList15, (java.util.Collection<java.lang.String>) strSet18);
        boolean boolean20 = localeList13.containsAll((java.util.Collection<java.lang.String>) strSet18);
        boolean boolean22 = localeList13.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator23 = localeList13.spliterator();
        localeList13.clear();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap26 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList27 = java.util.Locale.LanguageRange.parse("zho", strMap26);
        java.util.Locale locale31 = new java.util.Locale("", "hi!", "");
        java.util.Set<java.lang.String> strSet32 = locale31.getUnicodeLocaleKeys();
        java.util.List<java.lang.String> strList33 = java.util.Locale.filterTags(languageRangeList27, (java.util.Collection<java.lang.String>) strSet32);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap34 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList35 = java.util.Locale.LanguageRange.mapEquivalents(languageRangeList27, strMap34);
        int int36 = localeList13.lastIndexOf((java.lang.Object) strMap34);
        java.util.Locale locale37 = java.util.Locale.ITALIAN;
        java.lang.String str38 = locale37.getISO3Language();
        java.lang.String str39 = locale37.getDisplayLanguage();
        boolean boolean40 = localeList13.contains((java.lang.Object) locale37);
        java.text.Format.Field field41 = null;
        java.text.FieldPosition fieldPosition42 = new java.text.FieldPosition(field41);
        java.lang.String str43 = fieldPosition42.toString();
        java.lang.String str44 = fieldPosition42.toString();
        fieldPosition42.setBeginIndex(0);
        java.util.Locale locale49 = new java.util.Locale("deu");
        java.lang.String str50 = locale49.getDisplayLanguage();
        java.util.TimeZone timeZone51 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone53 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat54 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone53);
        java.lang.String str55 = fastDateFormat54.getPattern();
        java.lang.String str57 = fastDateFormat54.format(1645513660686L);
        java.util.Locale locale58 = java.util.Locale.ITALIAN;
        boolean boolean59 = fastDateFormat54.equals((java.lang.Object) locale58);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(timeZone51, locale58);
        java.util.Locale locale61 = java.util.Locale.FRANCE;
        boolean boolean62 = locale61.hasExtensions();
        java.lang.String str63 = locale58.getDisplayVariant(locale61);
        java.lang.String str64 = locale58.getDisplayName();
        java.lang.String str65 = locale58.getISO3Language();
        java.lang.String str66 = locale49.getDisplayName(locale58);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u610f\u5927\u5229\u6587", locale49);
        java.lang.String str68 = fastDateFormat67.toString();
        boolean boolean69 = fastDateFormat67.getTimeZoneOverridesCalendar();
        java.util.Locale locale70 = fastDateFormat67.getLocale();
        boolean boolean71 = fieldPosition42.equals((java.lang.Object) locale70);
        int int72 = localeList13.lastIndexOf((java.lang.Object) fieldPosition42);
        java.text.ParsePosition parsePosition74 = new java.text.ParsePosition(16);
        int int75 = parsePosition74.getErrorIndex();
        parsePosition74.setErrorIndex(22);
        parsePosition74.setErrorIndex(2);
        java.lang.String str80 = parsePosition74.toString();
        int int81 = parsePosition74.getErrorIndex();
        boolean boolean82 = localeList13.equals((java.lang.Object) int81);
        java.util.TimeZone timeZone83 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone84 = java.util.TimeZone.getDefault();
        boolean boolean85 = timeZone83.hasSameRules(timeZone84);
        java.util.Calendar calendar86 = java.util.Calendar.getInstance(timeZone83);
        int int88 = calendar86.getActualMinimum(6);
        int int89 = calendar86.getMinimalDaysInFirstWeek();
        java.time.Instant instant90 = calendar86.toInstant();
        boolean boolean92 = calendar86.after((java.lang.Object) 'x');
        int int93 = calendar86.getMinimalDaysInFirstWeek();
        boolean boolean94 = localeList13.contains((java.lang.Object) int93);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar60 and calendar86", (calendar60.compareTo(calendar86) == 0) == calendar60.equals(calendar86));
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test223");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Locale locale17 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale18 = java.util.Locale.ROOT;
        java.lang.String str19 = locale17.getDisplayScript(locale18);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(locale17);
        int int22 = calendar20.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone23 = calendar20.getTimeZone();
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale26 = new java.util.Locale("Chinese");
        java.lang.String str27 = locale24.getDisplayLanguage(locale26);
        java.lang.String str28 = locale24.getDisplayCountry();
        java.util.Set<java.lang.String> strSet29 = locale24.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat30 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone23, locale24);
        java.util.Calendar.Builder builder31 = builder0.setTimeZone(timeZone23);
        java.util.Locale locale32 = java.util.Locale.getDefault();
        java.util.Locale locale33 = null;
        java.lang.String str34 = locale32.getDisplayCountry(locale33);
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        boolean boolean37 = locale35.hasExtensions();
        java.lang.String str38 = locale35.getDisplayCountry();
        java.util.Set<java.lang.String> strSet39 = locale35.getUnicodeLocaleKeys();
        java.lang.String str40 = locale32.getDisplayLanguage(locale35);
        java.util.Locale locale41 = java.util.Locale.CHINESE;
        java.lang.String str42 = locale41.getLanguage();
        boolean boolean43 = locale41.hasExtensions();
        java.lang.String str44 = locale41.getDisplayCountry();
        java.lang.String str45 = locale41.getISO3Language();
        java.util.Locale locale47 = java.util.Locale.getDefault();
        java.lang.String str48 = locale47.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat49 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale47);
        java.lang.String str50 = locale41.getDisplayName(locale47);
        java.util.Locale.setDefault(locale41);
        java.util.TimeZone timeZone52 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone54 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat55 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone54);
        java.lang.String str56 = fastDateFormat55.getPattern();
        java.lang.String str58 = fastDateFormat55.format(1645513660686L);
        java.util.Locale locale59 = java.util.Locale.ITALIAN;
        boolean boolean60 = fastDateFormat55.equals((java.lang.Object) locale59);
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone52, locale59);
        java.util.Locale locale62 = java.util.Locale.FRANCE;
        boolean boolean63 = locale62.hasExtensions();
        java.lang.String str64 = locale59.getDisplayVariant(locale62);
        java.lang.String str65 = locale59.getDisplayScript();
        java.lang.String str66 = locale41.getDisplayCountry(locale59);
        java.lang.String str67 = locale59.getCountry();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(locale59);
        java.util.Locale.setDefault(locale59);
        java.lang.String str70 = locale32.getDisplayScript(locale59);
        java.util.Calendar.Builder builder71 = builder0.setLocale(locale32);
        java.util.Locale.setDefault(locale32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar20 and calendar61", (calendar20.compareTo(calendar61) == 0) == calendar20.equals(calendar61));
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test224");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder4 = builder0.setWeekDate(59, 38, (int) 'a');
        java.util.Calendar.Builder builder9 = builder4.setTimeOfDay(32772, (int) (byte) -1, 4666, 43);
        java.util.TimeZone timeZone11 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone11);
        java.lang.String str13 = fastDateFormat12.getPattern();
        java.lang.String str15 = fastDateFormat12.format(1645513660686L);
        java.util.TimeZone timeZone16 = fastDateFormat12.getTimeZone();
        java.lang.String str17 = timeZone16.getID();
        java.util.Locale locale18 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale19 = java.util.Locale.CHINESE;
        java.lang.String str20 = locale19.getLanguage();
        boolean boolean21 = locale19.hasExtensions();
        java.lang.String str22 = locale18.getDisplayVariant(locale19);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone16, locale18);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(locale18);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(locale18);
        java.util.Calendar.Builder builder26 = builder4.setLocale(locale18);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar24", (calendar23.compareTo(calendar24) == 0) == calendar23.equals(calendar24));
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test225");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone0.hasSameRules(timeZone9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone0);
        java.util.Locale locale15 = java.util.Locale.ITALY;
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(locale16);
        java.util.Locale locale18 = java.util.Locale.FRANCE;
        java.util.Locale locale19 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        boolean boolean22 = locale20.hasExtensions();
        java.lang.String str23 = locale19.getDisplayVariant(locale20);
        java.util.Locale locale24 = java.util.Locale.GERMAN;
        java.util.Locale locale25 = java.util.Locale.getDefault();
        java.util.Locale locale26 = java.util.Locale.FRANCE;
        boolean boolean27 = locale26.hasExtensions();
        java.util.Locale locale28 = java.util.Locale.CHINESE;
        java.lang.String str29 = locale28.getLanguage();
        boolean boolean30 = locale28.hasExtensions();
        java.lang.String str31 = locale28.getDisplayCountry();
        java.lang.String str32 = locale28.getDisplayLanguage();
        java.lang.String str33 = locale28.getLanguage();
        java.util.Locale locale37 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale38 = java.util.Locale.ROOT;
        java.lang.String str39 = locale37.getDisplayScript(locale38);
        java.util.Locale locale40 = java.util.Locale.FRANCE;
        boolean boolean41 = locale40.hasExtensions();
        java.util.Locale locale42 = java.util.Locale.CHINESE;
        java.util.Locale locale43 = java.util.Locale.ITALIAN;
        java.util.Locale locale44 = java.util.Locale.US;
        java.util.Locale locale45 = java.util.Locale.US;
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale49.getDisplayScript(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.US;
        java.util.Locale locale55 = java.util.Locale.ITALY;
        java.util.Locale locale56 = java.util.Locale.getDefault();
        java.util.Locale locale60 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale61 = java.util.Locale.CHINESE;
        java.util.Calendar calendar62 = java.util.Calendar.getInstance(locale61);
        java.util.Locale locale63 = java.util.Locale.US;
        java.util.Locale locale64 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale65 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale66 = java.util.Locale.CHINESE;
        java.lang.String str67 = locale66.getLanguage();
        boolean boolean68 = locale66.hasExtensions();
        java.lang.String str69 = locale65.getDisplayVariant(locale66);
        java.util.Locale[] localeArray70 = new java.util.Locale[] { locale15, locale16, locale18, locale20, locale24, locale25, locale26, locale28, locale38, locale40, locale42, locale43, locale44, locale45, locale50, locale52, locale53, locale54, locale55, locale56, locale60, locale61, locale63, locale64, locale65 };
        java.util.ArrayList<java.util.Locale> localeList71 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList71, localeArray70);
        boolean boolean73 = localeList71.isEmpty();
        java.util.Locale locale75 = localeList71.get((int) (short) 0);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone0, locale75);
        java.time.Instant instant77 = calendar76.toInstant();
        calendar76.set(5, 2, 1200000, 3, 32769, 117);
        java.util.Locale locale85 = java.util.Locale.TAIWAN;
        java.util.Locale locale86 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str87 = locale85.getDisplayLanguage(locale86);
        java.lang.String str88 = locale85.getDisplayLanguage();
        boolean boolean89 = locale85.hasExtensions();
        java.lang.String str90 = locale85.getLanguage();
        java.lang.String str91 = locale85.getDisplayCountry();
        boolean boolean92 = calendar76.before((java.lang.Object) str91);
        boolean boolean93 = calendar76.isLenient();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar14", (calendar6.compareTo(calendar14) == 0) == calendar6.equals(calendar14));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test226");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone0);
        java.lang.Object obj11 = timeZone0.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar10", (calendar9.compareTo(calendar10) == 0) == calendar9.equals(calendar10));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test227");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone19.observesDaylightTime();
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet24 = locale23.getUnicodeLocaleAttributes();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone19, locale23);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone19);
        java.lang.String str27 = fastDateFormat2.format((java.lang.Object) calendar26);
        java.util.Locale locale28 = fastDateFormat2.getLocale();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar25", (calendar10.compareTo(calendar25) == 0) == calendar10.equals(calendar25));
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test228");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Locale locale4 = java.util.Locale.TRADITIONAL_CHINESE;
        java.util.Locale.setDefault(locale4);
        boolean boolean6 = fastDateFormat2.equals((java.lang.Object) locale4);
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(locale7);
        long long9 = calendar8.getTimeInMillis();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList11 = java.util.Locale.LanguageRange.parse("zho");
        java.lang.String[] strArray52 = new java.lang.String[] { "22 Feb 2022 07:07:40 GMT", "7:07:41 AM UTC", "22 Feb 2022 07:07:46 GMT", "7:07:42 AM UTC", "java.text.ParsePosition[index=0,errorIndex=0]", "java.text.FieldPosition[field=32770,attribute=null,beginIndex=0,endIndex=0]", "11:59:59 PM UTC", "Chinese", "7:07:45 AM UTC", "22 Feb 2022 07:07:41 GMT", "java.text.FieldPosition[field=32770,attribute=null,beginIndex=0,endIndex=1]", "\u4e2d\u6587", "\u5354\u8abf\u4e16\u754c\u6642\u9593", "German", "\u5fb7\u56fd", "22 Feb 2022 07:07:43 GMT", "java.text.FieldPosition[field=-1,attribute=null,beginIndex=0,endIndex=0]", "22 Feb 2022 07:07:45 GMT", "zh", "\u5e74\u6708\u65e5']", "java.text.FieldPosition[field=32770,attribute=null,beginIndex=0,endIndex=0]", "und", "German", "FastDateFormat[]", "7:07:46 AM UTC", "UTC7", "java.text.FieldPosition[field=32770,attribute=null,beginIndex=0,endIndex=1]", "java.text.ParsePosition[index=52,errorIndex=0]", "und", "Coordinated Universal Time", "22 Feb 2022 07:07:44 GMT", "gregory", "22 Feb 2022 07:07:44 GMT", "\u4e2d\u6587\u53f0\u7063)", "Coordinated Universal Time", "deu", "h:mm:ss a z", "22 Feb 2022 07:07:40 GMT", "java.text.FieldPosition[field=32770,attribute=null,beginIndex=0,endIndex=0]", "7:07:46 AM UTC" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.List<java.lang.String> strList55 = java.util.Locale.filterTags(languageRangeList11, (java.util.Collection<java.lang.String>) strList53);
        boolean boolean56 = calendar8.before((java.lang.Object) strList55);
        java.lang.String str57 = fastDateFormat2.format(calendar8);
        java.util.Calendar calendar58 = java.util.Calendar.getInstance();
        long long59 = calendar58.getTimeInMillis();
        calendar58.setLenient(false);
        java.time.Instant instant62 = calendar58.toInstant();
        java.util.Date date63 = java.util.Date.from(instant62);
        java.util.Date date65 = new java.util.Date(1645513676073L);
        boolean boolean66 = date63.before(date65);
        date65.setTime((-5591165642000L));
        java.lang.StringBuffer stringBuffer69 = null;
        java.lang.StringBuffer stringBuffer70 = fastDateFormat2.format(date65, stringBuffer69);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar58", (calendar8.compareTo(calendar58) == 0) == calendar8.equals(calendar58));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test229");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int11 = timeZone1.getRawOffset();
        java.util.Locale locale15 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale15);
        int int20 = calendar18.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone21 = calendar18.getTimeZone();
        boolean boolean22 = timeZone1.hasSameRules(timeZone21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date29 = new java.util.Date(7, 35, (int) (byte) 0, 1911, (int) (byte) 10);
        boolean boolean30 = timeZone1.inDaylightTime(date29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar23", (calendar18.compareTo(calendar23) == 0) == calendar18.equals(calendar23));
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test230");
        java.util.Locale.Category category0 = java.util.Locale.Category.FORMAT;
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        java.util.Locale locale5 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet6 = locale5.getUnicodeLocaleAttributes();
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone1, locale5);
        java.util.Locale locale8 = java.util.Locale.PRC;
        java.lang.String str9 = locale5.getDisplayName(locale8);
        java.util.Locale.setDefault(category0, locale8);
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        boolean boolean14 = timeZone12.hasSameRules(timeZone13);
        boolean boolean15 = timeZone12.observesDaylightTime();
        int int16 = timeZone12.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone12);
        timeZone12.setRawOffset(9);
        timeZone12.setID("7:07:40 AM UTC");
        int int23 = timeZone12.getOffset(1645513660365L);
        int int25 = timeZone12.getOffset((long) 22);
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        boolean boolean29 = timeZone27.hasSameRules(timeZone28);
        boolean boolean30 = timeZone26.hasSameRules(timeZone27);
        java.lang.String str31 = timeZone27.getID();
        boolean boolean32 = timeZone12.hasSameRules(timeZone27);
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone35 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat36 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone35);
        java.lang.String str37 = fastDateFormat36.getPattern();
        java.lang.String str39 = fastDateFormat36.format(1645513660686L);
        java.util.Locale locale40 = java.util.Locale.ITALIAN;
        boolean boolean41 = fastDateFormat36.equals((java.lang.Object) locale40);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(timeZone33, locale40);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(timeZone27, locale40);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.util.Locale locale53 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute54 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean56 = attribute54.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale57.getDisplayVariant(locale58);
        java.util.Locale locale62 = locale57.stripExtensions();
        boolean boolean63 = attribute54.equals((java.lang.Object) locale62);
        java.lang.String str64 = locale53.getDisplayLanguage(locale62);
        java.lang.String str65 = locale44.getDisplayCountry(locale62);
        java.lang.String str66 = locale40.getDisplayScript(locale44);
        java.util.Locale locale67 = locale44.stripExtensions();
        java.util.Locale.Builder builder68 = new java.util.Locale.Builder();
        java.util.Locale locale69 = builder68.build();
        java.util.Locale.Builder builder70 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder71 = builder70.clear();
        java.util.Locale locale72 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale73 = java.util.Locale.CHINESE;
        java.lang.String str74 = locale73.getLanguage();
        boolean boolean75 = locale73.hasExtensions();
        java.lang.String str76 = locale72.getDisplayVariant(locale73);
        java.util.Locale.Builder builder77 = builder71.setLocale(locale72);
        java.util.Locale locale78 = java.util.Locale.PRC;
        java.util.Locale locale79 = java.util.Locale.ROOT;
        java.lang.String str80 = locale78.getDisplayLanguage(locale79);
        java.util.Locale.Builder builder81 = builder77.setLocale(locale79);
        java.util.Locale locale82 = builder77.build();
        java.lang.String str83 = locale82.getVariant();
        boolean boolean84 = locale82.hasExtensions();
        java.util.Locale.Builder builder85 = builder68.setLocale(locale82);
        java.util.Locale.Builder builder86 = builder68.clear();
        java.util.Locale locale88 = new java.util.Locale("Chinese");
        java.util.Locale.setDefault(locale88);
        java.util.Locale.Builder builder90 = builder68.setLocale(locale88);
        java.lang.String str91 = locale88.getISO3Country();
        java.lang.String str92 = locale67.getDisplayLanguage(locale88);
        java.util.Locale.setDefault(locale67);
        java.util.Locale.setDefault(category0, locale67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar42", (calendar7.compareTo(calendar42) == 0) == calendar7.equals(calendar42));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test231");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone14.observesDaylightTime();
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone14);
        java.lang.String str21 = timeZone14.getID();
        java.util.Calendar.Builder builder22 = builder13.setTimeZone(timeZone14);
        java.util.TimeZone timeZone24 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone24);
        java.lang.String str26 = fastDateFormat25.getPattern();
        java.lang.String str28 = fastDateFormat25.format(1645513660686L);
        java.lang.String str30 = fastDateFormat25.format((long) 40);
        java.util.TimeZone timeZone31 = fastDateFormat25.getTimeZone();
        java.util.Locale locale32 = fastDateFormat25.getLocale();
        int int33 = fastDateFormat25.getMaxLengthEstimate();
        java.util.Locale locale34 = fastDateFormat25.getLocale();
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(timeZone14, locale34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar20", (calendar11.compareTo(calendar20) == 0) == calendar11.equals(calendar20));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test232");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder0.build();
        java.util.Calendar.Builder builder10 = builder0.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder12 = builder0.setLenient(true);
        java.util.Calendar.Builder builder17 = builder12.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone18.hasSameRules(timeZone19);
        timeZone18.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone18.setID("und");
        java.util.Calendar.Builder builder27 = builder12.setTimeZone(timeZone18);
        timeZone18.setRawOffset((int) 'x');
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        java.util.Locale locale35 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale36 = java.util.Locale.CHINESE;
        java.lang.String str37 = locale36.getLanguage();
        boolean boolean38 = locale36.hasExtensions();
        java.lang.String str39 = locale35.getDisplayVariant(locale36);
        java.util.Locale.setDefault(locale36);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone32, locale36);
        boolean boolean42 = timeZone18.hasSameRules(timeZone32);
        java.util.Locale locale44 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022");
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(locale44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone18, locale44);
        timeZone18.setRawOffset(42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar45 and calendar46", (calendar45.compareTo(calendar46) == 0) == calendar45.equals(calendar46));
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test233");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone0);
        java.util.Date date16 = new java.util.Date(69, (int) (short) 0, 58, 29, 1969);
        boolean boolean17 = timeZone0.inDaylightTime(date16);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar10", (calendar9.compareTo(calendar10) == 0) == calendar9.equals(calendar10));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test234");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder4 = builder0.setWeekDate(59, 38, (int) 'a');
        java.util.Calendar.Builder builder9 = builder4.setTimeOfDay(32772, (int) (byte) -1, 4666, 43);
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        boolean boolean12 = timeZone10.hasSameRules(timeZone11);
        boolean boolean13 = timeZone10.observesDaylightTime();
        java.util.Locale locale14 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet15 = locale14.getUnicodeLocaleAttributes();
        java.util.Calendar calendar16 = java.util.Calendar.getInstance(timeZone10, locale14);
        boolean boolean17 = timeZone10.observesDaylightTime();
        timeZone10.setRawOffset(43);
        timeZone10.setID("giapponese");
        java.util.Calendar.Builder builder22 = builder4.setTimeZone(timeZone10);
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        boolean boolean26 = timeZone24.hasSameRules(timeZone25);
        boolean boolean27 = timeZone24.observesDaylightTime();
        int int28 = timeZone24.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat29 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone24);
        timeZone24.setRawOffset(9);
        timeZone24.setID("7:07:40 AM UTC");
        int int35 = timeZone24.getOffset(1645513660365L);
        int int37 = timeZone24.getOffset((long) 22);
        java.util.TimeZone timeZone38 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone39 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        boolean boolean41 = timeZone39.hasSameRules(timeZone40);
        boolean boolean42 = timeZone38.hasSameRules(timeZone39);
        java.lang.String str43 = timeZone39.getID();
        boolean boolean44 = timeZone24.hasSameRules(timeZone39);
        java.util.TimeZone timeZone45 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone47 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat48 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone47);
        java.lang.String str49 = fastDateFormat48.getPattern();
        java.lang.String str51 = fastDateFormat48.format(1645513660686L);
        java.util.Locale locale52 = java.util.Locale.ITALIAN;
        boolean boolean53 = fastDateFormat48.equals((java.lang.Object) locale52);
        java.util.Calendar calendar54 = java.util.Calendar.getInstance(timeZone45, locale52);
        java.util.Calendar calendar55 = java.util.Calendar.getInstance(timeZone39, locale52);
        java.util.Locale locale56 = java.util.Locale.TAIWAN;
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str58 = locale56.getDisplayLanguage(locale57);
        java.lang.String str59 = locale56.getLanguage();
        java.util.Locale locale61 = new java.util.Locale("Chinese");
        java.util.Locale locale62 = locale61.stripExtensions();
        java.lang.String str63 = locale56.getDisplayLanguage(locale61);
        java.util.Locale locale65 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute66 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean68 = attribute66.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale69 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale70 = java.util.Locale.CHINESE;
        java.lang.String str71 = locale70.getLanguage();
        boolean boolean72 = locale70.hasExtensions();
        java.lang.String str73 = locale69.getDisplayVariant(locale70);
        java.util.Locale locale74 = locale69.stripExtensions();
        boolean boolean75 = attribute66.equals((java.lang.Object) locale74);
        java.lang.String str76 = locale65.getDisplayLanguage(locale74);
        java.lang.String str77 = locale56.getDisplayCountry(locale74);
        java.lang.String str78 = locale52.getDisplayScript(locale56);
        java.util.Calendar.Builder builder79 = builder4.setLocale(locale52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar16 and calendar54", (calendar16.compareTo(calendar54) == 0) == calendar16.equals(calendar54));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test235");
        java.util.Locale.LanguageRange[] languageRangeArray0 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList1 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList1, languageRangeArray0);
        java.util.Locale locale3 = java.util.Locale.GERMAN;
        java.util.Locale locale4 = java.util.Locale.FRANCE;
        boolean boolean5 = locale4.hasExtensions();
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        java.util.Locale[] localeArray9 = new java.util.Locale[] { locale3, locale4, locale6, locale7 };
        java.util.ArrayList<java.util.Locale> localeList10 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList10, localeArray9);
        java.util.Locale.FilteringMode filteringMode12 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList13 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList1, (java.util.Collection<java.util.Locale>) localeList10, filteringMode12);
        java.util.Spliterator<java.util.Locale> localeSpliterator14 = localeList13.spliterator();
        java.util.Iterator<java.util.Locale> localeItor15 = localeList13.iterator();
        java.util.Locale locale16 = java.util.Locale.ROOT;
        boolean boolean17 = localeList13.remove((java.lang.Object) locale16);
        boolean boolean18 = localeList13.isEmpty();
        java.util.Locale locale19 = java.util.Locale.CHINA;
        java.util.Locale[] localeArray20 = new java.util.Locale[] { locale19 };
        java.util.Locale[] localeArray21 = localeList13.toArray(localeArray20);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        boolean boolean25 = timeZone23.hasSameRules(timeZone24);
        boolean boolean26 = timeZone22.hasSameRules(timeZone23);
        java.util.TimeZone.setDefault(timeZone23);
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone23);
        calendar28.set(8, 4);
        int int32 = calendar28.getWeeksInWeekYear();
        java.util.Locale locale36 = new java.util.Locale("", "hi!", "");
        boolean boolean37 = calendar28.before((java.lang.Object) locale36);
        java.lang.String str38 = locale36.getDisplayName();
        java.util.Locale locale39 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet40 = locale39.getUnicodeLocaleAttributes();
        java.util.Locale locale41 = locale39.stripExtensions();
        java.lang.String str42 = locale36.getDisplayScript(locale41);
        boolean boolean43 = localeList13.add(locale36);
        java.util.Locale locale45 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute46 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean48 = attribute46.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.lang.String str51 = locale50.getLanguage();
        boolean boolean52 = locale50.hasExtensions();
        java.lang.String str53 = locale49.getDisplayVariant(locale50);
        java.util.Locale locale54 = locale49.stripExtensions();
        boolean boolean55 = attribute46.equals((java.lang.Object) locale54);
        java.lang.String str56 = locale45.getDisplayLanguage(locale54);
        java.util.TimeZone timeZone58 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat59 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone58);
        java.lang.String str60 = fastDateFormat59.getPattern();
        java.lang.String str62 = fastDateFormat59.format(1645513660686L);
        java.util.TimeZone timeZone63 = fastDateFormat59.getTimeZone();
        java.lang.String str64 = timeZone63.getID();
        java.util.Locale locale65 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale66 = java.util.Locale.CHINESE;
        java.lang.String str67 = locale66.getLanguage();
        boolean boolean68 = locale66.hasExtensions();
        java.lang.String str69 = locale65.getDisplayVariant(locale66);
        java.util.Calendar calendar70 = java.util.Calendar.getInstance(timeZone63, locale65);
        java.lang.String str72 = locale65.getExtension('a');
        java.util.Locale locale73 = locale65.stripExtensions();
        java.lang.String str74 = locale45.getDisplayScript(locale73);
        boolean boolean75 = localeList13.add(locale45);
        java.lang.String str76 = locale45.getVariant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar28 and calendar70", (calendar28.compareTo(calendar70) == 0) == calendar28.equals(calendar70));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test236");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Locale locale17 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale18 = java.util.Locale.ROOT;
        java.lang.String str19 = locale17.getDisplayScript(locale18);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(locale17);
        int int22 = calendar20.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone23 = calendar20.getTimeZone();
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale26 = new java.util.Locale("Chinese");
        java.lang.String str27 = locale24.getDisplayLanguage(locale26);
        java.lang.String str28 = locale24.getDisplayCountry();
        java.util.Set<java.lang.String> strSet29 = locale24.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat30 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone23, locale24);
        java.util.Calendar.Builder builder31 = builder0.setTimeZone(timeZone23);
        java.util.Calendar.Builder builder36 = builder0.setTimeOfDay(27, 45, 4, (int) ' ');
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        java.util.Locale locale38 = locale37.stripExtensions();
        java.lang.String str39 = locale38.getISO3Language();
        java.util.Set<java.lang.Character> charSet40 = locale38.getExtensionKeys();
        java.util.Calendar.Builder builder41 = builder0.setLocale(locale38);
        java.text.ParsePosition parsePosition43 = new java.text.ParsePosition(16);
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.lang.String str45 = locale44.getLanguage();
        boolean boolean46 = locale44.hasExtensions();
        boolean boolean47 = parsePosition43.equals((java.lang.Object) locale44);
        java.util.Locale locale48 = locale44.stripExtensions();
        java.lang.String str49 = locale38.getDisplayCountry(locale48);
        java.util.TimeZone timeZone50 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone51 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone52 = java.util.TimeZone.getDefault();
        boolean boolean53 = timeZone51.hasSameRules(timeZone52);
        boolean boolean54 = timeZone50.hasSameRules(timeZone51);
        timeZone50.setID("\u4e2d\u6587\u53f0\u7063)");
        int int58 = timeZone50.getOffset(1645513548538L);
        boolean boolean59 = timeZone50.observesDaylightTime();
        java.util.Locale locale62 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale62);
        java.util.Locale locale64 = java.util.Locale.CANADA;
        java.lang.String str65 = locale62.getDisplayName(locale64);
        java.util.Calendar calendar66 = java.util.Calendar.getInstance(timeZone50, locale64);
        java.lang.String str67 = locale64.getISO3Country();
        java.lang.String str68 = locale64.getDisplayLanguage();
        java.lang.String str69 = locale48.getDisplayName(locale64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar20 and calendar66", (calendar20.compareTo(calendar66) == 0) == calendar20.equals(calendar66));
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test237");
        java.util.Locale.Category category0 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        java.util.Locale locale2 = java.util.Locale.getDefault(category0);
        java.util.Locale locale3 = java.util.Locale.getDefault(category0);
        java.util.Locale locale4 = java.util.Locale.getDefault(category0);
        java.util.Locale locale8 = new java.util.Locale("", "12:00:00 AM GMT+00:00", "10:12:12 AM UTC");
        java.util.Locale.setDefault(category0, locale8);
        java.util.Locale locale10 = java.util.Locale.ROOT;
        java.util.Calendar.Builder builder11 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder16 = builder11.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar17 = builder16.build();
        java.util.Calendar.Builder builder19 = builder16.setLenient(true);
        java.util.Locale locale20 = java.util.Locale.FRANCE;
        boolean boolean21 = locale20.hasExtensions();
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale20);
        java.util.Locale locale23 = locale20.stripExtensions();
        java.util.Calendar.Builder builder24 = builder19.setLocale(locale20);
        java.lang.String str25 = locale20.getISO3Country();
        java.lang.String str26 = locale10.getDisplayLanguage(locale20);
        java.util.Locale.setDefault(category0, locale20);
        java.text.FieldPosition fieldPosition29 = new java.text.FieldPosition(32770);
        int int30 = fieldPosition29.getBeginIndex();
        boolean boolean32 = fieldPosition29.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone34 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat35 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone34);
        java.lang.String str36 = fastDateFormat35.getPattern();
        java.lang.String str38 = fastDateFormat35.format(1645513660686L);
        java.util.Locale locale39 = java.util.Locale.ITALIAN;
        boolean boolean40 = fastDateFormat35.equals((java.lang.Object) locale39);
        int int41 = fastDateFormat35.getMaxLengthEstimate();
        boolean boolean42 = fieldPosition29.equals((java.lang.Object) fastDateFormat35);
        java.util.TimeZone timeZone43 = fastDateFormat35.getTimeZone();
        timeZone43.setRawOffset(0);
        int int46 = timeZone43.getRawOffset();
        boolean boolean47 = timeZone43.observesDaylightTime();
        java.util.Locale locale48 = java.util.Locale.TAIWAN;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str50 = locale48.getDisplayLanguage(locale49);
        java.lang.String str51 = locale48.getDisplayLanguage();
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone43, locale48);
        java.util.Locale.setDefault(category0, locale48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar52", (calendar22.compareTo(calendar52) == 0) == calendar22.equals(calendar52));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test238");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.text.ParsePosition parsePosition6 = new java.text.ParsePosition(16);
        parsePosition6.setIndex(10);
        int int9 = parsePosition6.getIndex();
        parsePosition6.setIndex(3);
        java.lang.Object obj12 = fastDateFormat2.parseObject("gmt+00:00", parsePosition6);
        java.text.ParsePosition parsePosition15 = new java.text.ParsePosition(124);
        int int16 = parsePosition15.getErrorIndex();
        java.lang.Object obj17 = fastDateFormat2.parseObject("4:42:43 PM GMT+00:00", parsePosition15);
        boolean boolean18 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.lang.String str20 = fastDateFormat2.format(1645513670572L);
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale21);
        int int23 = calendar22.getWeeksInWeekYear();
        int int24 = calendar22.getWeeksInWeekYear();
        calendar22.set(1970, 11, 22, 8, (int) '#');
        java.util.TimeZone timeZone32 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat33 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone32);
        java.lang.String str35 = fastDateFormat33.format((long) (byte) -1);
        boolean boolean36 = fastDateFormat33.getTimeZoneOverridesCalendar();
        java.util.Locale locale37 = fastDateFormat33.getLocale();
        java.util.TimeZone timeZone38 = fastDateFormat33.getTimeZone();
        calendar22.setTimeZone(timeZone38);
        boolean boolean41 = calendar22.before((java.lang.Object) "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"und\",offset=-1,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=191,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=12,SECOND=55,MILLISECOND=950,ZONE_OFFSET=-1,DST_OFFSET=0]");
        java.lang.String str42 = fastDateFormat2.format(calendar22);
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone45 = java.util.TimeZone.getDefault();
        boolean boolean46 = timeZone44.hasSameRules(timeZone45);
        boolean boolean47 = timeZone43.hasSameRules(timeZone44);
        java.util.TimeZone.setDefault(timeZone44);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(timeZone44);
        calendar49.set(8, 4);
        calendar49.setMinimalDaysInFirstWeek(4);
        java.lang.String str55 = calendar49.getCalendarType();
        java.time.Instant instant56 = calendar49.toInstant();
        java.util.Date date57 = new java.util.Date();
        int int58 = date57.getSeconds();
        java.util.Date date59 = new java.util.Date();
        int int60 = date59.getTimezoneOffset();
        date59.setMinutes(5);
        boolean boolean63 = date57.after(date59);
        java.util.TimeZone timeZone65 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat66 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone65);
        java.lang.String str67 = fastDateFormat66.getPattern();
        java.util.Date date68 = new java.util.Date();
        int int69 = date68.getSeconds();
        java.lang.String str70 = fastDateFormat66.format(date68);
        boolean boolean71 = date57.before(date68);
        date68.setHours(40);
        java.util.Date date74 = new java.util.Date();
        int int75 = date74.getSeconds();
        long long76 = date74.getTime();
        date74.setTime((long) (byte) 0);
        boolean boolean79 = date68.before(date74);
        int int80 = date68.getTimezoneOffset();
        calendar49.setTime(date68);
        calendar22.setTime(date68);
        int int83 = date68.getHours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar49", (calendar22.compareTo(calendar49) == 0) == calendar22.equals(calendar49));
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test239");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int11 = timeZone1.getRawOffset();
        java.util.Locale locale15 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale15);
        int int20 = calendar18.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone21 = calendar18.getTimeZone();
        boolean boolean22 = timeZone1.hasSameRules(timeZone21);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date24 = calendar23.getTime();
        java.lang.String str25 = date24.toGMTString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar23", (calendar18.compareTo(calendar23) == 0) == calendar18.equals(calendar23));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test240");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone2.observesDaylightTime();
        int int6 = timeZone2.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone2);
        java.util.Locale locale9 = new java.util.Locale("Chinese");
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(locale9);
        java.lang.String str11 = locale9.getCountry();
        java.lang.String str12 = locale9.getScript();
        java.util.Locale locale13 = locale9.stripExtensions();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(1, timeZone2, locale9);
        timeZone2.setID("22 Feb 2022 07:09:14 GMT");
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str20 = fastDateFormat19.getPattern();
        java.lang.String str22 = fastDateFormat19.format(1645513660686L);
        java.util.Date date23 = new java.util.Date();
        int int24 = date23.getSeconds();
        java.lang.String str25 = fastDateFormat19.format(date23);
        java.lang.String str27 = fastDateFormat19.format((long) 32769);
        java.util.TimeZone timeZone28 = fastDateFormat19.getTimeZone();
        boolean boolean29 = timeZone28.observesDaylightTime();
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone28, locale30);
        boolean boolean32 = timeZone2.hasSameRules(timeZone28);
        java.lang.Object obj33 = timeZone28.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar31", (calendar10.compareTo(calendar31) == 0) == calendar10.equals(calendar31));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test241");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat0 = org.apache.commons.lang3.time.FastDateFormat.getInstance();
        java.lang.String str1 = fastDateFormat0.toString();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone2.observesDaylightTime();
        java.util.Locale locale6 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet7 = locale6.getUnicodeLocaleAttributes();
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(timeZone2, locale6);
        boolean boolean9 = timeZone2.observesDaylightTime();
        timeZone2.setRawOffset(43);
        timeZone2.setID("giapponese");
        java.util.TimeZone timeZone15 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat16 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone15);
        java.lang.String str17 = fastDateFormat16.getPattern();
        java.lang.String str19 = fastDateFormat16.format(1645513660686L);
        java.util.Locale locale20 = fastDateFormat16.getLocale();
        java.lang.String str21 = locale20.getDisplayCountry();
        java.util.Set<java.lang.String> strSet22 = locale20.getUnicodeLocaleKeys();
        java.lang.String str23 = locale20.getLanguage();
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone2, locale20);
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat28 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone27);
        java.lang.String str29 = fastDateFormat28.getPattern();
        java.lang.String str31 = fastDateFormat28.format(1645513660686L);
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        boolean boolean33 = fastDateFormat28.equals((java.lang.Object) locale32);
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(timeZone25, locale32);
        calendar34.roll(5, (int) (short) 100);
        calendar34.setTimeInMillis(1645513663180L);
        java.util.TimeZone timeZone41 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat42 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone41);
        java.lang.String str43 = fastDateFormat42.getPattern();
        java.lang.String str45 = fastDateFormat42.format(1645513660686L);
        java.util.TimeZone timeZone46 = fastDateFormat42.getTimeZone();
        java.lang.String str47 = timeZone46.getID();
        int int48 = timeZone46.getRawOffset();
        java.util.Calendar.Builder builder49 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder54 = builder49.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar55 = builder49.build();
        java.util.Calendar.Builder builder59 = builder49.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder61 = builder49.setLenient(true);
        java.util.Calendar.Builder builder66 = builder61.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone67 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone68 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone69 = java.util.TimeZone.getDefault();
        boolean boolean70 = timeZone68.hasSameRules(timeZone69);
        boolean boolean71 = timeZone67.hasSameRules(timeZone68);
        timeZone67.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone67.setID("und");
        java.util.Calendar.Builder builder76 = builder61.setTimeZone(timeZone67);
        boolean boolean77 = timeZone46.hasSameRules(timeZone67);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone67);
        calendar34.setTimeZone(timeZone67);
        calendar24.setTimeZone(timeZone67);
        java.lang.String str81 = fastDateFormat0.format(calendar24);
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone83 = java.util.TimeZone.getDefault();
        boolean boolean84 = timeZone82.hasSameRules(timeZone83);
        java.util.Calendar calendar85 = java.util.Calendar.getInstance(timeZone82);
        int int87 = calendar85.getActualMinimum(6);
        int int88 = calendar85.getMinimalDaysInFirstWeek();
        java.time.Instant instant89 = calendar85.toInstant();
        java.util.Date date90 = java.util.Date.from(instant89);
        java.lang.String str91 = date90.toLocaleString();
        date90.setDate(124);
        java.lang.String str94 = date90.toLocaleString();
        java.lang.String str95 = fastDateFormat0.format(date90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar24", (calendar8.compareTo(calendar24) == 0) == calendar8.equals(calendar24));
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test242");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        java.util.Locale locale5 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale6 = java.util.Locale.CHINESE;
        java.lang.String str7 = locale6.getLanguage();
        boolean boolean8 = locale6.hasExtensions();
        java.lang.String str9 = locale5.getDisplayVariant(locale6);
        java.util.Locale.setDefault(locale6);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone2, locale6);
        java.lang.String str12 = timeZone2.getID();
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        boolean boolean15 = timeZone13.hasSameRules(timeZone14);
        boolean boolean16 = timeZone13.observesDaylightTime();
        java.util.Locale locale17 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet18 = locale17.getUnicodeLocaleAttributes();
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone13, locale17);
        boolean boolean20 = timeZone13.observesDaylightTime();
        timeZone13.setRawOffset(32772);
        boolean boolean23 = timeZone2.hasSameRules(timeZone13);
        java.util.Locale locale24 = java.util.Locale.getDefault();
        java.lang.String str25 = locale24.getLanguage();
        java.util.TimeZone timeZone27 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat28 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone27);
        java.lang.String str29 = fastDateFormat28.getPattern();
        java.lang.String str31 = fastDateFormat28.format(1645513660686L);
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        boolean boolean33 = fastDateFormat28.equals((java.lang.Object) locale32);
        java.lang.String str34 = locale24.getDisplayLanguage(locale32);
        java.lang.String str35 = locale32.getISO3Country();
        java.lang.String str36 = locale32.getISO3Language();
        java.util.Calendar calendar37 = java.util.Calendar.getInstance(timeZone2, locale32);
        java.lang.Object obj38 = timeZone2.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar19 and calendar37", (calendar19.compareTo(calendar37) == 0) == calendar19.equals(calendar37));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test243");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.text.ParsePosition parsePosition6 = new java.text.ParsePosition(16);
        parsePosition6.setIndex(10);
        java.lang.Object obj9 = fastDateFormat2.parseObject("22 Feb 2022 07:07:40 GMT", parsePosition6);
        int int10 = parsePosition6.getIndex();
        boolean boolean12 = parsePosition6.equals((java.lang.Object) 1645513677219L);
        java.util.Locale.LanguageRange[] languageRangeArray13 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList14 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList14, languageRangeArray13);
        java.util.Locale locale16 = java.util.Locale.GERMAN;
        java.util.Locale locale17 = java.util.Locale.FRANCE;
        boolean boolean18 = locale17.hasExtensions();
        java.util.Locale locale19 = java.util.Locale.FRANCE;
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        java.util.Locale[] localeArray22 = new java.util.Locale[] { locale16, locale17, locale19, locale20 };
        java.util.ArrayList<java.util.Locale> localeList23 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList23, localeArray22);
        java.util.Locale.FilteringMode filteringMode25 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList26 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList14, (java.util.Collection<java.util.Locale>) localeList23, filteringMode25);
        boolean boolean27 = localeList26.isEmpty();
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        long long30 = date28.getTime();
        date28.setTime((long) (byte) 0);
        java.util.Date date33 = new java.util.Date();
        int int34 = date33.getDay();
        int int35 = date33.getTimezoneOffset();
        boolean boolean36 = date28.after(date33);
        date28.setMinutes(18);
        long long39 = date28.getTime();
        boolean boolean40 = localeList26.remove((java.lang.Object) date28);
        date28.setTime(1645513677219L);
        long long43 = date28.getTime();
        boolean boolean44 = parsePosition6.equals((java.lang.Object) date28);
        java.util.TimeZone timeZone46 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat47 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone46);
        java.lang.String str48 = fastDateFormat47.getPattern();
        java.lang.String str50 = fastDateFormat47.format(1645513660686L);
        java.util.TimeZone timeZone51 = fastDateFormat47.getTimeZone();
        java.lang.String str52 = timeZone51.getID();
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.CHINESE;
        java.lang.String str55 = locale54.getLanguage();
        boolean boolean56 = locale54.hasExtensions();
        java.lang.String str57 = locale53.getDisplayVariant(locale54);
        java.util.Calendar calendar58 = java.util.Calendar.getInstance(timeZone51, locale53);
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale53);
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(locale53);
        boolean boolean61 = parsePosition6.equals((java.lang.Object) calendar60);
        calendar60.setMinimalDaysInFirstWeek(50400000);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar58 and calendar59", (calendar58.compareTo(calendar59) == 0) == calendar58.equals(calendar59));
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test244");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Calendar.Builder builder16 = builder12.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        timeZone26.setID("");
        timeZone26.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder35 = builder12.setTimeZone(timeZone26);
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        boolean boolean40 = locale38.hasExtensions();
        boolean boolean41 = parsePosition37.equals((java.lang.Object) locale38);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(locale38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale38);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale57.getDisplayVariant(locale58);
        java.util.Locale.setDefault(locale58);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone54, locale58);
        java.lang.String str64 = locale44.getDisplayLanguage(locale58);
        java.util.Locale locale65 = locale58.stripExtensions();
        java.lang.String str66 = locale38.getDisplayLanguage(locale65);
        java.lang.String str67 = locale65.getScript();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone26, locale65);
        int int70 = timeZone26.getOffset((-1661385600000L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar68", (calendar23.compareTo(calendar68) == 0) == calendar23.equals(calendar68));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test245");
        java.util.Locale locale1 = java.util.Locale.TAIWAN;
        java.lang.String str3 = locale1.getExtension('x');
        java.util.Set<java.lang.String> strSet4 = locale1.getUnicodeLocaleAttributes();
        java.lang.String str5 = locale1.getISO3Language();
        java.util.Locale locale7 = new java.util.Locale("Chinese");
        java.util.Calendar calendar8 = java.util.Calendar.getInstance(locale7);
        java.lang.String str9 = locale7.getCountry();
        java.util.Locale locale14 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale15 = java.util.Locale.ROOT;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.lang.String str17 = locale14.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale14);
        java.lang.String str19 = locale7.getDisplayLanguage(locale14);
        java.lang.String str20 = locale1.getDisplayScript(locale7);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat21 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (byte) 1, locale7);
        java.lang.String str22 = locale7.getDisplayLanguage();
        java.util.Locale locale24 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale24);
        int int26 = fastDateFormat25.getMaxLengthEstimate();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        boolean boolean30 = timeZone28.hasSameRules(timeZone29);
        boolean boolean31 = timeZone27.hasSameRules(timeZone28);
        java.util.TimeZone.setDefault(timeZone28);
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(timeZone28);
        long long34 = calendar33.getTimeInMillis();
        calendar33.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar33.setMinimalDaysInFirstWeek(17);
        calendar33.setMinimalDaysInFirstWeek(3);
        java.lang.String str41 = fastDateFormat25.format(calendar33);
        java.lang.String str43 = fastDateFormat25.format((java.lang.Object) 1645513661445L);
        java.util.Locale locale44 = fastDateFormat25.getLocale();
        java.lang.String str45 = locale44.getDisplayVariant();
        java.util.Set<java.lang.String> strSet46 = locale44.getUnicodeLocaleKeys();
        java.lang.String str47 = locale7.getDisplayLanguage(locale44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar8 and calendar33", (calendar8.compareTo(calendar33) == 0) == calendar8.equals(calendar33));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test246");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone0);
        java.util.Locale locale12 = java.util.Locale.forLanguageTag("7:11:16 AM UTC");
        java.lang.String str13 = timeZone0.getDisplayName(locale12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar10", (calendar9.compareTo(calendar10) == 0) == calendar9.equals(calendar10));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test247");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone19.observesDaylightTime();
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet24 = locale23.getUnicodeLocaleAttributes();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone19, locale23);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone19);
        java.lang.String str27 = fastDateFormat2.format((java.lang.Object) calendar26);
        int int29 = calendar26.getActualMaximum(8);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar25", (calendar10.compareTo(calendar25) == 0) == calendar10.equals(calendar25));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test248");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute3 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray4 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList5 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList5, languageRangeArray4);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        boolean boolean9 = locale8.hasExtensions();
        java.util.Locale locale10 = java.util.Locale.FRANCE;
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale7, locale8, locale10, locale11 };
        java.util.ArrayList<java.util.Locale> localeList14 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList14, localeArray13);
        java.util.Locale.FilteringMode filteringMode16 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList17 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList5, (java.util.Collection<java.util.Locale>) localeList14, filteringMode16);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList19 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        java.util.Set<java.lang.String> strSet22 = locale20.getUnicodeLocaleAttributes();
        java.lang.String str23 = java.util.Locale.lookupTag(languageRangeList19, (java.util.Collection<java.lang.String>) strSet22);
        boolean boolean24 = localeList17.containsAll((java.util.Collection<java.lang.String>) strSet22);
        boolean boolean26 = localeList17.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator27 = localeList17.spliterator();
        java.util.Locale locale31 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.lang.String str33 = locale31.getDisplayScript(locale32);
        java.lang.String str34 = locale31.getISO3Language();
        boolean boolean35 = localeList17.add(locale31);
        boolean boolean36 = attribute3.equals((java.lang.Object) locale31);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone2, locale31);
        java.text.ParsePosition parsePosition40 = new java.text.ParsePosition(16);
        int int41 = parsePosition40.getErrorIndex();
        java.lang.String str42 = parsePosition40.toString();
        java.lang.String str43 = parsePosition40.toString();
        int int44 = parsePosition40.getIndex();
        java.lang.Object obj45 = fastDateFormat37.parseObject("7:08:33 AM UTC", parsePosition40);
        java.util.Locale locale46 = java.util.Locale.GERMANY;
        java.util.Locale locale48 = new java.util.Locale("Chinese");
        java.lang.String str49 = locale46.getDisplayLanguage(locale48);
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.lang.String str51 = locale50.getLanguage();
        boolean boolean52 = locale50.hasExtensions();
        java.lang.String str53 = locale50.getDisplayCountry();
        java.lang.String str54 = locale50.getISO3Language();
        java.util.Locale locale56 = java.util.Locale.getDefault();
        java.lang.String str57 = locale56.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat58 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale56);
        java.lang.String str59 = locale50.getDisplayName(locale56);
        java.util.Locale.setDefault(locale50);
        java.util.TimeZone timeZone61 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone63 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone63);
        java.lang.String str65 = fastDateFormat64.getPattern();
        java.lang.String str67 = fastDateFormat64.format(1645513660686L);
        java.util.Locale locale68 = java.util.Locale.ITALIAN;
        boolean boolean69 = fastDateFormat64.equals((java.lang.Object) locale68);
        java.util.Calendar calendar70 = java.util.Calendar.getInstance(timeZone61, locale68);
        java.util.Locale locale71 = java.util.Locale.FRANCE;
        boolean boolean72 = locale71.hasExtensions();
        java.lang.String str73 = locale68.getDisplayVariant(locale71);
        java.lang.String str74 = locale68.getDisplayScript();
        java.lang.String str75 = locale50.getDisplayCountry(locale68);
        java.lang.String str76 = locale46.getDisplayCountry(locale50);
        java.util.Set<java.lang.String> strSet77 = locale50.getUnicodeLocaleAttributes();
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(locale50);
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fastDateFormat37.formatToCharacterIterator((java.lang.Object) calendar78);
        boolean boolean80 = fastDateFormat37.getTimeZoneOverridesCalendar();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar70 and calendar78", (calendar70.compareTo(calendar78) == 0) == calendar70.equals(calendar78));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test249");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.util.Date date3 = new java.util.Date();
        int int4 = date3.getSeconds();
        java.util.Date date5 = new java.util.Date();
        int int6 = date5.getTimezoneOffset();
        date5.setMinutes(5);
        boolean boolean9 = date3.after(date5);
        java.lang.String str10 = fastDateFormat2.format(date3);
        java.util.Date date12 = new java.util.Date((long) 32772);
        java.util.Date date16 = new java.util.Date(9, (int) (byte) 1, 12);
        boolean boolean17 = date12.after(date16);
        java.lang.String str18 = fastDateFormat2.format(date12);
        java.util.Locale locale19 = fastDateFormat2.getLocale();
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        boolean boolean23 = timeZone21.hasSameRules(timeZone22);
        boolean boolean24 = timeZone21.observesDaylightTime();
        int int25 = timeZone21.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat26 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone21);
        timeZone21.setRawOffset(9);
        timeZone21.setID("7:07:40 AM UTC");
        int int32 = timeZone21.getOffset(1645513660365L);
        int int34 = timeZone21.getOffset((long) 22);
        boolean boolean35 = timeZone21.observesDaylightTime();
        boolean boolean36 = timeZone21.observesDaylightTime();
        java.util.TimeZone timeZone37 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone39 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat40 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone39);
        java.lang.String str41 = fastDateFormat40.getPattern();
        java.lang.String str43 = fastDateFormat40.format(1645513660686L);
        java.util.Locale locale44 = java.util.Locale.ITALIAN;
        boolean boolean45 = fastDateFormat40.equals((java.lang.Object) locale44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone37, locale44);
        java.util.Locale locale47 = java.util.Locale.FRANCE;
        boolean boolean48 = locale47.hasExtensions();
        java.lang.String str49 = locale44.getDisplayVariant(locale47);
        java.lang.String str50 = locale44.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray51 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList52 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList52, languageRangeArray51);
        java.util.Locale locale54 = java.util.Locale.GERMAN;
        java.util.Locale locale55 = java.util.Locale.FRANCE;
        boolean boolean56 = locale55.hasExtensions();
        java.util.Locale locale57 = java.util.Locale.FRANCE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale54, locale55, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList52, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Spliterator<java.util.Locale> localeSpliterator65 = localeList64.spliterator();
        java.util.Iterator<java.util.Locale> localeItor66 = localeList64.iterator();
        java.util.Locale locale67 = java.util.Locale.ROOT;
        boolean boolean68 = localeList64.remove((java.lang.Object) locale67);
        java.lang.String str69 = locale67.getISO3Country();
        java.lang.String str70 = locale44.getDisplayVariant(locale67);
        java.lang.String str71 = locale67.getDisplayScript();
        java.util.Set<java.lang.String> strSet72 = locale67.getUnicodeLocaleKeys();
        java.util.Locale locale73 = java.util.Locale.KOREAN;
        java.lang.String str74 = locale73.toLanguageTag();
        java.lang.String str75 = locale67.getDisplayVariant(locale73);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone21, locale73);
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fastDateFormat2.formatToCharacterIterator((java.lang.Object) calendar76);
        java.util.Locale locale83 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale84 = java.util.Locale.ROOT;
        java.lang.String str85 = locale83.getDisplayScript(locale84);
        java.lang.String str86 = locale83.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat87 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale83);
        java.text.ParsePosition parsePosition90 = new java.text.ParsePosition(16);
        int int91 = parsePosition90.getErrorIndex();
        java.lang.String str92 = parsePosition90.toString();
        java.lang.Object obj93 = null;
        boolean boolean94 = parsePosition90.equals(obj93);
        java.lang.Object obj95 = fastDateFormat87.parseObject("java.util.GregorianCalendar[time=1645513663941,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"Etc/UTC\",offset=-1,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2022,MONTH=1,WEEK_OF_YEAR=9,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=53,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=7,HOUR_OF_DAY=7,MINUTE=7,SECOND=43,MILLISECOND=940,ZONE_OFFSET=-1,DST_OFFSET=0]", parsePosition90);
        parsePosition90.setErrorIndex(22);
        java.lang.Object obj98 = fastDateFormat2.parseObject("2:02:00 AM UTC", parsePosition90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar46 and calendar76", (calendar46.compareTo(calendar76) == 0) == calendar46.equals(calendar76));
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test250");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.Locale locale11 = fastDateFormat2.getLocale();
        java.util.TimeZone timeZone12 = fastDateFormat2.getTimeZone();
        java.lang.String str13 = timeZone12.getID();
        java.util.Calendar.Builder builder14 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder19 = builder14.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar20 = builder19.build();
        java.util.Calendar.Builder builder22 = builder19.setLenient(true);
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(locale23);
        java.util.Locale locale26 = locale23.stripExtensions();
        java.util.Calendar.Builder builder27 = builder22.setLocale(locale23);
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        boolean boolean31 = timeZone29.hasSameRules(timeZone30);
        boolean boolean32 = timeZone28.hasSameRules(timeZone29);
        boolean boolean33 = timeZone28.observesDaylightTime();
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(timeZone28);
        java.lang.String str35 = timeZone28.getID();
        java.util.Calendar.Builder builder36 = builder27.setTimeZone(timeZone28);
        boolean boolean37 = timeZone12.hasSameRules(timeZone28);
        java.util.Locale locale39 = java.util.Locale.forLanguageTag("Chinese (Taiwan)");
        java.util.Calendar calendar40 = java.util.Calendar.getInstance(timeZone12, locale39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar34", (calendar25.compareTo(calendar34) == 0) == calendar25.equals(calendar34));
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test251");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        java.util.Calendar calendar4 = java.util.Calendar.getInstance(timeZone1);
        int int6 = calendar4.getActualMinimum(6);
        java.util.Calendar.Builder builder7 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder12 = builder7.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar13 = builder12.build();
        boolean boolean15 = calendar13.after((java.lang.Object) 1L);
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        int int21 = timeZone17.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat22 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone17);
        timeZone17.setRawOffset(9);
        timeZone17.setID("7:07:40 AM UTC");
        int int27 = timeZone17.getRawOffset();
        calendar13.setTimeZone(timeZone17);
        java.util.TimeZone.setDefault(timeZone17);
        boolean boolean30 = calendar4.before((java.lang.Object) timeZone17);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone17);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat32 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e0a\u5348\u65f6\u5206\u79d2", timeZone17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar4 and calendar31", (calendar4.compareTo(calendar31) == 0) == calendar4.equals(calendar31));
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test252");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Spliterator<java.util.Locale> localeSpliterator59 = localeList56.spliterator();
        java.util.Locale locale61 = localeList56.get(11);
        java.util.Calendar calendar62 = java.util.Calendar.getInstance(locale61);
        calendar62.setFirstDayOfWeek(43);
        java.time.Instant instant65 = calendar62.toInstant();
        java.util.Date date66 = java.util.Date.from(instant65);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar62", (calendar2.compareTo(calendar62) == 0) == calendar2.equals(calendar62));
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test253");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone1.hasSameRules(timeZone2);
        boolean boolean6 = timeZone1.observesDaylightTime();
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone1);
        boolean boolean8 = timeZone1.observesDaylightTime();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat9 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone1);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone1);
        java.util.Locale locale14 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale15 = java.util.Locale.ROOT;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(locale14);
        int int18 = calendar17.getWeekYear();
        java.time.Instant instant19 = calendar17.toInstant();
        int int21 = calendar17.getActualMaximum(12);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        boolean boolean24 = timeZone22.hasSameRules(timeZone23);
        java.util.TimeZone.setDefault(timeZone22);
        timeZone22.setID("\u65e5\u6587");
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone22);
        int int29 = timeZone22.getRawOffset();
        calendar17.setTimeZone(timeZone22);
        calendar10.setTimeZone(timeZone22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar17", (calendar7.compareTo(calendar17) == 0) == calendar7.equals(calendar17));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test254");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Spliterator<java.util.Locale> localeSpliterator76 = localeList56.spliterator();
        java.util.Iterator<java.util.Locale> localeItor77 = localeList56.iterator();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test255");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList1 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray2 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList3 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList3, languageRangeArray2);
        java.util.Locale locale5 = java.util.Locale.GERMAN;
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        boolean boolean7 = locale6.hasExtensions();
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale5, locale6, locale8, locale9 };
        java.util.ArrayList<java.util.Locale> localeList12 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList12, localeArray11);
        java.util.Locale.FilteringMode filteringMode14 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList15 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList3, (java.util.Collection<java.util.Locale>) localeList12, filteringMode14);
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter(languageRangeList1, (java.util.Collection<java.util.Locale>) localeList15);
        localeList16.clear();
        boolean boolean19 = localeList16.contains((java.lang.Object) 11);
        boolean boolean21 = localeList16.remove((java.lang.Object) "22 Feb 2022 07:07:43 GMT");
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone23);
        java.lang.String str25 = fastDateFormat24.getPattern();
        java.lang.String str27 = fastDateFormat24.format(1645513660686L);
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        java.lang.String str30 = fastDateFormat24.format(date28);
        java.lang.String str32 = fastDateFormat24.format((long) 32769);
        java.util.TimeZone timeZone33 = fastDateFormat24.getTimeZone();
        int int34 = localeList16.indexOf((java.lang.Object) fastDateFormat24);
        java.util.Locale locale35 = java.util.Locale.GERMANY;
        java.util.Locale locale37 = new java.util.Locale("Chinese");
        java.lang.String str38 = locale35.getDisplayLanguage(locale37);
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        boolean boolean41 = locale39.hasExtensions();
        java.lang.String str42 = locale39.getDisplayCountry();
        java.lang.String str43 = locale39.getISO3Language();
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.lang.String str46 = locale45.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat47 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale45);
        java.lang.String str48 = locale39.getDisplayName(locale45);
        java.util.Locale.setDefault(locale39);
        java.util.TimeZone timeZone50 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone52 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat53 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone52);
        java.lang.String str54 = fastDateFormat53.getPattern();
        java.lang.String str56 = fastDateFormat53.format(1645513660686L);
        java.util.Locale locale57 = java.util.Locale.ITALIAN;
        boolean boolean58 = fastDateFormat53.equals((java.lang.Object) locale57);
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(timeZone50, locale57);
        java.util.Locale locale60 = java.util.Locale.FRANCE;
        boolean boolean61 = locale60.hasExtensions();
        java.lang.String str62 = locale57.getDisplayVariant(locale60);
        java.lang.String str63 = locale57.getDisplayScript();
        java.lang.String str64 = locale39.getDisplayCountry(locale57);
        java.lang.String str65 = locale35.getDisplayCountry(locale39);
        java.util.Calendar calendar66 = java.util.Calendar.getInstance(locale39);
        java.lang.String str67 = fastDateFormat24.format(calendar66);
        java.util.Date date71 = new java.util.Date(15, 42, 28);
        date71.setHours(41);
        java.lang.String str74 = fastDateFormat24.format(date71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar59 and calendar66", (calendar59.compareTo(calendar66) == 0) == calendar59.equals(calendar66));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test256");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        int int14 = fastDateFormat13.getMaxLengthEstimate();
        java.lang.Object obj15 = fastDateFormat13.clone();
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(locale16);
        int int19 = calendar17.getActualMinimum((int) (byte) 0);
        boolean boolean20 = calendar17.isWeekDateSupported();
        java.util.Date date21 = calendar17.getTime();
        int int22 = calendar17.getFirstDayOfWeek();
        java.util.Date date23 = calendar17.getTime();
        java.lang.String str24 = fastDateFormat13.format(date23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar17", (calendar11.compareTo(calendar17) == 0) == calendar11.equals(calendar17));
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test257");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.text.ParsePosition parsePosition6 = new java.text.ParsePosition(16);
        parsePosition6.setIndex(10);
        int int9 = parsePosition6.getIndex();
        parsePosition6.setIndex(3);
        java.lang.Object obj12 = fastDateFormat2.parseObject("gmt+00:00", parsePosition6);
        java.util.Locale locale13 = java.util.Locale.TRADITIONAL_CHINESE;
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(locale13);
        java.util.Locale.Category category15 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale16 = java.util.Locale.getDefault(category15);
        java.util.Locale locale17 = java.util.Locale.getDefault(category15);
        java.lang.String str18 = locale13.getDisplayScript(locale17);
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(locale13);
        java.lang.StringBuffer stringBuffer20 = null;
        java.lang.StringBuffer stringBuffer21 = fastDateFormat2.format(calendar19, stringBuffer20);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        boolean boolean25 = timeZone23.hasSameRules(timeZone24);
        boolean boolean26 = timeZone22.hasSameRules(timeZone23);
        boolean boolean27 = timeZone22.observesDaylightTime();
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone22);
        timeZone22.setID("5:44:17 AM GMT+00:00");
        calendar19.setTimeZone(timeZone22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar14 and calendar28", (calendar14.compareTo(calendar28) == 0) == calendar14.equals(calendar28));
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test258");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        timeZone0.setRawOffset(43);
        timeZone0.setID("giapponese");
        java.util.Locale.LanguageRange[] languageRangeArray12 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList13 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList13, languageRangeArray12);
        java.util.Locale locale15 = java.util.Locale.GERMAN;
        java.util.Locale locale16 = java.util.Locale.FRANCE;
        boolean boolean17 = locale16.hasExtensions();
        java.util.Locale locale18 = java.util.Locale.FRANCE;
        java.util.Locale locale19 = java.util.Locale.CHINESE;
        java.lang.String str20 = locale19.getLanguage();
        java.util.Locale[] localeArray21 = new java.util.Locale[] { locale15, locale16, locale18, locale19 };
        java.util.ArrayList<java.util.Locale> localeList22 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList22, localeArray21);
        java.util.Locale.FilteringMode filteringMode24 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList25 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList13, (java.util.Collection<java.util.Locale>) localeList22, filteringMode24);
        java.util.Locale locale26 = java.util.Locale.CHINESE;
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(locale26);
        boolean boolean28 = localeList22.contains((java.lang.Object) locale26);
        java.lang.String str29 = locale26.getVariant();
        java.lang.String str30 = timeZone0.getDisplayName(locale26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar27", (calendar6.compareTo(calendar27) == 0) == calendar6.equals(calendar27));
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test259");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.Locale locale8 = java.util.Locale.ITALIAN;
        boolean boolean9 = fastDateFormat4.equals((java.lang.Object) locale8);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone1, locale8);
        java.util.Locale locale13 = java.util.Locale.FRANCE;
        java.util.Map<java.lang.String, java.lang.Integer> strMap14 = calendar10.getDisplayNames((int) (byte) 1, (int) (short) 0, locale13);
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        boolean boolean18 = timeZone16.hasSameRules(timeZone17);
        boolean boolean19 = timeZone16.observesDaylightTime();
        int int20 = timeZone16.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat21 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone16);
        timeZone16.setRawOffset(9);
        timeZone16.setID("7:07:40 AM UTC");
        int int27 = timeZone16.getOffset(1645513660365L);
        int int29 = timeZone16.getOffset((long) 22);
        calendar10.setTimeZone(timeZone16);
        java.lang.String str31 = timeZone16.getID();
        int int32 = timeZone16.getRawOffset();
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(timeZone16);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat34 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e0a\u5348\u65f6\u5206\u79d2", timeZone16);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar33", (calendar10.compareTo(calendar33) == 0) == calendar10.equals(calendar33));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test260");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Calendar calendar4 = java.util.Calendar.getInstance(timeZone3);
        java.util.Locale locale5 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet6 = locale5.getUnicodeLocaleAttributes();
        java.util.Locale locale7 = locale5.stripExtensions();
        java.util.Locale locale8 = java.util.Locale.CHINESE;
        java.lang.String str9 = locale7.getDisplayCountry(locale8);
        java.lang.String str10 = locale7.getVariant();
        java.util.Set<java.lang.String> strSet11 = locale7.getUnicodeLocaleAttributes();
        java.util.Calendar calendar12 = java.util.Calendar.getInstance(timeZone3, locale7);
        java.lang.String str13 = timeZone3.getID();
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone3);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar4 and calendar12", (calendar4.compareTo(calendar12) == 0) == calendar4.equals(calendar12));
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test261");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Calendar.Builder builder86 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder88 = builder86.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder90 = builder88.setLenient(true);
        java.util.Calendar calendar91 = builder90.build();
        java.lang.String str92 = fastDateFormat2.format(calendar91);
        java.util.TimeZone timeZone93 = fastDateFormat2.getTimeZone();
        java.lang.Object obj94 = fastDateFormat2.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test262");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.lang.String str1 = locale0.getLanguage();
        boolean boolean2 = locale0.hasExtensions();
        java.lang.String str3 = locale0.getDisplayCountry();
        java.lang.String str4 = locale0.getISO3Language();
        java.util.Locale locale6 = java.util.Locale.getDefault();
        java.lang.String str7 = locale6.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale6);
        java.lang.String str9 = locale0.getDisplayName(locale6);
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Locale locale11 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str12 = locale10.getDisplayLanguage(locale11);
        java.util.Locale locale13 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.lang.String str15 = locale14.getLanguage();
        boolean boolean16 = locale14.hasExtensions();
        java.lang.String str17 = locale13.getDisplayVariant(locale14);
        java.lang.String str18 = locale10.getDisplayLanguage(locale14);
        java.lang.String str19 = locale6.getDisplayScript(locale14);
        java.util.Locale.Category category20 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale22 = new java.util.Locale("Chinese");
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale22);
        java.lang.String str24 = locale22.getCountry();
        java.util.Locale.setDefault(category20, locale22);
        java.util.TimeZone timeZone27 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat28 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone27);
        java.lang.String str29 = fastDateFormat28.getPattern();
        java.lang.String str31 = fastDateFormat28.format(1645513660686L);
        java.util.TimeZone timeZone32 = fastDateFormat28.getTimeZone();
        java.lang.String str33 = timeZone32.getID();
        java.util.Locale locale34 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        boolean boolean37 = locale35.hasExtensions();
        java.lang.String str38 = locale34.getDisplayVariant(locale35);
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(timeZone32, locale34);
        java.lang.String str41 = locale34.getExtension('a');
        java.util.Locale locale42 = locale34.stripExtensions();
        java.util.Locale.setDefault(category20, locale42);
        java.lang.String str44 = locale6.getDisplayScript(locale42);
        java.util.Locale locale45 = locale42.stripExtensions();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar39", (calendar23.compareTo(calendar39) == 0) == calendar23.equals(calendar39));
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test263");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        calendar78.setFirstDayOfWeek(42);
        boolean boolean82 = calendar78.isWeekDateSupported();
        calendar78.setLenient(false);
        java.lang.String str85 = fastDateFormat2.format(calendar78);
        java.util.TimeZone timeZone87 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat88 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone87);
        java.lang.String str89 = fastDateFormat88.getPattern();
        java.util.Date date90 = new java.util.Date();
        int int91 = date90.getSeconds();
        java.lang.String str92 = fastDateFormat88.format(date90);
        date90.setYear(6);
        date90.setSeconds(124);
        boolean boolean97 = calendar78.before((java.lang.Object) date90);
        date90.setHours(42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test264");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        java.lang.String str2 = locale1.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale1);
        java.lang.String str4 = fastDateFormat3.toString();
        java.util.Date date5 = new java.util.Date();
        int int6 = date5.getTimezoneOffset();
        date5.setMinutes(5);
        int int9 = date5.getSeconds();
        java.lang.String str10 = fastDateFormat3.format(date5);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        boolean boolean14 = timeZone11.observesDaylightTime();
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11, locale15);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone11);
        calendar18.setMinimalDaysInFirstWeek(12);
        java.lang.String str21 = fastDateFormat3.format(calendar18);
        java.text.FieldPosition fieldPosition23 = new java.text.FieldPosition(7);
        boolean boolean24 = fastDateFormat3.equals((java.lang.Object) 7);
        int int25 = fastDateFormat3.getMaxLengthEstimate();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar18", (calendar17.compareTo(calendar18) == 0) == calendar17.equals(calendar18));
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test265");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean16 = timeZone2.hasSameRules(timeZone15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        boolean boolean22 = locale21.hasExtensions();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        java.util.Locale locale24 = java.util.Locale.CHINESE;
        java.lang.String str25 = locale24.getLanguage();
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale20, locale21, locale23, locale24 };
        java.util.ArrayList<java.util.Locale> localeList27 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList27, localeArray26);
        java.util.Locale.FilteringMode filteringMode29 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList30 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList27, filteringMode29);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList32 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Set<java.lang.String> strSet35 = locale33.getUnicodeLocaleAttributes();
        java.lang.String str36 = java.util.Locale.lookupTag(languageRangeList32, (java.util.Collection<java.lang.String>) strSet35);
        boolean boolean37 = localeList30.containsAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean39 = localeList30.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator40 = localeList30.spliterator();
        java.util.Locale locale44 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale44.getISO3Language();
        boolean boolean48 = localeList30.add(locale44);
        java.util.ListIterator<java.util.Locale> localeItor49 = localeList30.listIterator();
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder50.clear();
        java.util.Locale locale52 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale52.getDisplayVariant(locale53);
        java.util.Locale.Builder builder57 = builder51.setLocale(locale52);
        java.util.Locale locale58 = builder57.build();
        java.util.Locale.Builder builder60 = builder57.addUnicodeLocaleAttribute("German");
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str63 = locale61.getDisplayLanguage(locale62);
        java.util.Locale.Builder builder64 = builder57.setLocale(locale61);
        java.lang.String str65 = locale61.getISO3Country();
        boolean boolean66 = localeList30.add(locale61);
        java.lang.String str67 = locale61.toLanguageTag();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone2, locale61);
        timeZone2.setID("10:12:41 AM GMT+00:00");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar68", (calendar11.compareTo(calendar68) == 0) == calendar11.equals(calendar68));
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test266");
        java.util.Locale locale0 = java.util.Locale.KOREAN;
        java.lang.String str1 = locale0.toLanguageTag();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList3 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray4 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList5 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList5, languageRangeArray4);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        boolean boolean9 = locale8.hasExtensions();
        java.util.Locale locale10 = java.util.Locale.FRANCE;
        java.util.Locale locale11 = java.util.Locale.CHINESE;
        java.lang.String str12 = locale11.getLanguage();
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale7, locale8, locale10, locale11 };
        java.util.ArrayList<java.util.Locale> localeList14 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList14, localeArray13);
        java.util.Locale.FilteringMode filteringMode16 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList17 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList5, (java.util.Collection<java.util.Locale>) localeList14, filteringMode16);
        java.util.List<java.util.Locale> localeList18 = java.util.Locale.filter(languageRangeList3, (java.util.Collection<java.util.Locale>) localeList17);
        localeList18.clear();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.lang.String str26 = fastDateFormat23.format(1645513660686L);
        java.util.Locale locale27 = java.util.Locale.ITALIAN;
        boolean boolean28 = fastDateFormat23.equals((java.lang.Object) locale27);
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone20, locale27);
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        boolean boolean31 = locale30.hasExtensions();
        java.lang.String str32 = locale27.getDisplayVariant(locale30);
        java.lang.String str33 = locale27.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray34 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList35 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList35, languageRangeArray34);
        java.util.Locale locale37 = java.util.Locale.GERMAN;
        java.util.Locale locale38 = java.util.Locale.FRANCE;
        boolean boolean39 = locale38.hasExtensions();
        java.util.Locale locale40 = java.util.Locale.FRANCE;
        java.util.Locale locale41 = java.util.Locale.CHINESE;
        java.lang.String str42 = locale41.getLanguage();
        java.util.Locale[] localeArray43 = new java.util.Locale[] { locale37, locale38, locale40, locale41 };
        java.util.ArrayList<java.util.Locale> localeList44 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList44, localeArray43);
        java.util.Locale.FilteringMode filteringMode46 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList47 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList35, (java.util.Collection<java.util.Locale>) localeList44, filteringMode46);
        java.util.Spliterator<java.util.Locale> localeSpliterator48 = localeList47.spliterator();
        java.util.Iterator<java.util.Locale> localeItor49 = localeList47.iterator();
        java.util.Locale locale50 = java.util.Locale.ROOT;
        boolean boolean51 = localeList47.remove((java.lang.Object) locale50);
        java.lang.String str52 = locale50.getISO3Country();
        java.lang.String str53 = locale27.getDisplayVariant(locale50);
        java.lang.String str54 = locale50.getScript();
        boolean boolean55 = localeList18.add(locale50);
        java.lang.String str56 = locale0.getDisplayScript(locale50);
        java.util.Locale locale57 = java.util.Locale.PRC;
        java.lang.String str58 = locale57.getDisplayScript();
        java.util.Calendar calendar59 = java.util.Calendar.getInstance(locale57);
        java.lang.String str60 = locale57.getISO3Language();
        java.util.TimeZone timeZone62 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone63 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone64 = java.util.TimeZone.getDefault();
        boolean boolean65 = timeZone63.hasSameRules(timeZone64);
        boolean boolean66 = timeZone62.hasSameRules(timeZone63);
        timeZone62.setID("\u4e2d\u6587\u53f0\u7063)");
        int int70 = timeZone62.getOffset(1645513548538L);
        java.util.Locale locale71 = java.util.Locale.CHINESE;
        java.lang.String str72 = locale71.getLanguage();
        boolean boolean73 = locale71.hasExtensions();
        java.lang.String str74 = locale71.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getInstance("zh", timeZone62, locale71);
        java.lang.String str76 = locale71.getDisplayVariant();
        java.util.Locale locale77 = java.util.Locale.US;
        java.util.Locale locale78 = java.util.Locale.GERMANY;
        java.util.Locale locale80 = new java.util.Locale("Chinese");
        java.lang.String str81 = locale78.getDisplayLanguage(locale80);
        java.lang.String str82 = locale78.getDisplayCountry();
        java.lang.String str83 = locale78.getISO3Language();
        java.lang.String str84 = locale77.getDisplayCountry(locale78);
        java.lang.String str85 = locale71.getDisplayCountry(locale78);
        java.lang.String str86 = locale57.getDisplayName(locale71);
        java.lang.String str87 = locale50.getDisplayLanguage(locale57);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar29 and calendar59", (calendar29.compareTo(calendar59) == 0) == calendar29.equals(calendar59));
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test267");
        java.util.Locale locale4 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale5 = java.util.Locale.ROOT;
        java.lang.String str6 = locale4.getDisplayScript(locale5);
        java.lang.String str7 = locale4.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale4);
        java.lang.String str9 = locale4.getLanguage();
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet11 = locale10.getUnicodeLocaleAttributes();
        java.lang.String str12 = locale4.getDisplayScript(locale10);
        java.util.Calendar.Builder builder13 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder17 = builder13.setWeekDate(16, 3, 100);
        java.util.Locale locale18 = java.util.Locale.GERMANY;
        java.util.Locale locale20 = new java.util.Locale("Chinese");
        java.lang.String str21 = locale18.getDisplayLanguage(locale20);
        java.util.Calendar.Builder builder22 = builder13.setLocale(locale20);
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        boolean boolean25 = timeZone23.hasSameRules(timeZone24);
        boolean boolean26 = timeZone23.observesDaylightTime();
        java.util.Locale locale27 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet28 = locale27.getUnicodeLocaleAttributes();
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone23, locale27);
        java.lang.String str30 = locale27.getDisplayVariant();
        java.lang.String str31 = locale27.getDisplayVariant();
        java.util.Calendar.Builder builder32 = builder22.setLocale(locale27);
        java.util.Set<java.lang.Character> charSet33 = locale27.getExtensionKeys();
        java.lang.String str34 = locale10.getDisplayLanguage(locale27);
        java.util.Set<java.lang.String> strSet35 = locale10.getUnicodeLocaleAttributes();
        java.util.Locale.Category category36 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone37 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone39 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat40 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone39);
        java.lang.String str41 = fastDateFormat40.getPattern();
        java.lang.String str43 = fastDateFormat40.format(1645513660686L);
        java.util.Locale locale44 = java.util.Locale.ITALIAN;
        boolean boolean45 = fastDateFormat40.equals((java.lang.Object) locale44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone37, locale44);
        java.util.Locale locale47 = java.util.Locale.FRANCE;
        boolean boolean48 = locale47.hasExtensions();
        java.lang.String str49 = locale44.getDisplayVariant(locale47);
        java.lang.String str50 = locale44.getDisplayName();
        java.lang.String str51 = locale44.getISO3Language();
        java.util.Locale.setDefault(category36, locale44);
        java.util.Locale locale53 = java.util.Locale.getDefault(category36);
        java.lang.String str54 = locale53.getISO3Language();
        java.lang.String str55 = locale10.getDisplayCountry(locale53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar29 and calendar46", (calendar29.compareTo(calendar46) == 0) == calendar29.equals(calendar46));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test268");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Locale locale6 = fastDateFormat2.getLocale();
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        boolean boolean9 = timeZone7.hasSameRules(timeZone8);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone7);
        int int12 = calendar10.getActualMinimum(6);
        calendar10.set((int) (short) 1, 41, 16, 16, 32772);
        int int19 = calendar10.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone20 = calendar10.getTimeZone();
        java.util.Date date21 = calendar10.getTime();
        java.lang.String str22 = fastDateFormat2.format((java.lang.Object) date21);
        int int23 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        boolean boolean27 = timeZone25.hasSameRules(timeZone26);
        boolean boolean28 = timeZone24.hasSameRules(timeZone25);
        java.util.TimeZone.setDefault(timeZone25);
        java.util.Calendar calendar30 = java.util.Calendar.getInstance(timeZone25);
        calendar30.set(8, 4);
        int int34 = calendar30.getWeeksInWeekYear();
        boolean boolean36 = calendar30.before((java.lang.Object) 48);
        calendar30.setTimeInMillis((long) 59);
        java.lang.String str39 = fastDateFormat2.format(calendar30);
        java.util.TimeZone timeZone40 = fastDateFormat2.getTimeZone();
        timeZone40.setRawOffset(48);
        java.text.ParsePosition parsePosition44 = new java.text.ParsePosition(16);
        int int45 = parsePosition44.getErrorIndex();
        parsePosition44.setErrorIndex(22);
        int int48 = parsePosition44.getErrorIndex();
        int int49 = parsePosition44.getIndex();
        int int50 = parsePosition44.getIndex();
        parsePosition44.setErrorIndex(31);
        java.util.TimeZone timeZone54 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat55 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone54);
        java.lang.String str56 = fastDateFormat55.getPattern();
        java.lang.String str58 = fastDateFormat55.format(1645513660686L);
        java.util.Date date59 = new java.util.Date();
        int int60 = date59.getSeconds();
        java.lang.String str61 = fastDateFormat55.format(date59);
        java.lang.String str63 = fastDateFormat55.format((long) 32769);
        java.util.TimeZone timeZone64 = fastDateFormat55.getTimeZone();
        boolean boolean65 = parsePosition44.equals((java.lang.Object) timeZone64);
        java.util.Locale.Builder builder66 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder67 = builder66.clear();
        java.util.Locale locale68 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale69 = java.util.Locale.CHINESE;
        java.lang.String str70 = locale69.getLanguage();
        boolean boolean71 = locale69.hasExtensions();
        java.lang.String str72 = locale68.getDisplayVariant(locale69);
        java.util.Locale.Builder builder73 = builder67.setLocale(locale68);
        java.util.Locale locale74 = builder73.build();
        java.util.Locale.Builder builder76 = builder73.addUnicodeLocaleAttribute("German");
        java.util.Locale locale77 = java.util.Locale.TAIWAN;
        java.util.Locale locale78 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str79 = locale77.getDisplayLanguage(locale78);
        java.util.Locale.Builder builder80 = builder73.setLocale(locale77);
        java.util.Locale.Builder builder82 = builder80.removeUnicodeLocaleAttribute("CAN");
        java.util.Locale locale83 = builder80.build();
        java.lang.String str84 = locale83.getDisplayVariant();
        java.util.Calendar calendar85 = java.util.Calendar.getInstance(locale83);
        java.util.Locale locale86 = locale83.stripExtensions();
        java.util.Calendar calendar87 = java.util.Calendar.getInstance(timeZone64, locale86);
        boolean boolean88 = timeZone40.hasSameRules(timeZone64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar85 and calendar87", (calendar85.compareTo(calendar87) == 0) == calendar85.equals(calendar87));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test269");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat4 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone3);
        java.lang.String str5 = fastDateFormat4.getPattern();
        java.lang.String str7 = fastDateFormat4.format(1645513660686L);
        java.util.Locale locale8 = java.util.Locale.ITALIAN;
        boolean boolean9 = fastDateFormat4.equals((java.lang.Object) locale8);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone1, locale8);
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.lang.String str13 = locale8.getDisplayVariant(locale11);
        java.lang.String str14 = locale8.getDisplayName();
        java.lang.String str15 = locale8.getISO3Language();
        java.util.Locale.setDefault(category0, locale8);
        java.util.Locale locale19 = new java.util.Locale("java.util.gregoriancalendar[time=?,arefieldsset=false,areallfieldsset=true,lenient=true,zone=sun.util.calendar.zoneinfo[id=\"etc/utc\",offset=4,dstsavings=0,usedaylight=false,transitions=0,lastrule=null],firstdayofweek=1,minimaldaysinfirstweek=1,era=1,year=15,month=6,week_of_year=28,week_of_month=2,day_of_month=9,day_of_year=191,day_of_week=4,day_of_week_in_month=2,am_pm=0,hour=10,hour_of_day=10,minute=12,second=50,millisecond=574,zone_offset=4,dst_offset=0] (22 FEB 2022 07:07:51 GMT,Tuesday, February 22, 2022)", "22 Feb 2022 07:11:22 GMT");
        java.util.Locale.setDefault(category0, locale19);
        java.util.Locale locale21 = java.util.Locale.getDefault(category0);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.FRANCE;
        boolean boolean27 = locale26.hasExtensions();
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.lang.String str30 = locale29.getLanguage();
        java.util.Locale[] localeArray31 = new java.util.Locale[] { locale25, locale26, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList32 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList32, localeArray31);
        java.util.Locale.FilteringMode filteringMode34 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList35 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList32, filteringMode34);
        java.util.Set<java.lang.String> strSet36 = java.util.Calendar.getAvailableCalendarTypes();
        java.util.stream.Stream<java.lang.String> strStream37 = strSet36.parallelStream();
        java.util.List<java.lang.String> strList38 = java.util.Locale.filterTags((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strSet36);
        java.util.Set<java.lang.String> strSet39 = java.util.Calendar.getAvailableCalendarTypes();
        java.util.stream.Stream<java.lang.String> strStream40 = strSet39.stream();
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strSet39);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList43 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray44 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList45 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList45, languageRangeArray44);
        java.util.Locale locale47 = java.util.Locale.GERMAN;
        java.util.Locale locale48 = java.util.Locale.FRANCE;
        boolean boolean49 = locale48.hasExtensions();
        java.util.Locale locale50 = java.util.Locale.FRANCE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        java.util.Locale[] localeArray53 = new java.util.Locale[] { locale47, locale48, locale50, locale51 };
        java.util.ArrayList<java.util.Locale> localeList54 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList54, localeArray53);
        java.util.Locale.FilteringMode filteringMode56 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList57 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList45, (java.util.Collection<java.util.Locale>) localeList54, filteringMode56);
        java.util.List<java.util.Locale> localeList58 = java.util.Locale.filter(languageRangeList43, (java.util.Collection<java.util.Locale>) localeList57);
        localeList57.clear();
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList57, filteringMode60);
        localeList61.clear();
        java.lang.Object[] objArray63 = localeList61.toArray();
        java.util.Date date64 = new java.util.Date();
        int int65 = date64.getSeconds();
        java.util.Date date66 = new java.util.Date();
        int int67 = date66.getTimezoneOffset();
        date66.setMinutes(5);
        boolean boolean70 = date64.after(date66);
        int int71 = date66.getMinutes();
        date66.setHours(0);
        boolean boolean74 = localeList61.remove((java.lang.Object) 0);
        java.util.TimeZone timeZone75 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone76 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone77 = java.util.TimeZone.getDefault();
        boolean boolean78 = timeZone76.hasSameRules(timeZone77);
        boolean boolean79 = timeZone75.hasSameRules(timeZone76);
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar81 = java.util.Calendar.getInstance(timeZone76);
        calendar81.set(8, 4);
        calendar81.setMinimalDaysInFirstWeek(4);
        int int87 = localeList61.lastIndexOf((java.lang.Object) 4);
        java.util.Locale locale88 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale89 = java.util.Locale.CHINESE;
        java.lang.String str90 = locale89.getLanguage();
        boolean boolean91 = locale89.hasExtensions();
        java.lang.String str92 = locale88.getDisplayVariant(locale89);
        java.util.Locale locale93 = locale88.stripExtensions();
        boolean boolean94 = localeList61.add(locale93);
        java.lang.String str95 = locale93.getScript();
        java.util.Set<java.lang.String> strSet96 = locale93.getUnicodeLocaleAttributes();
        java.util.Locale.setDefault(category0, locale93);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar81", (calendar10.compareTo(calendar81) == 0) == calendar10.equals(calendar81));
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test270");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone2.observesDaylightTime();
        int int6 = timeZone2.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone2);
        java.util.Locale locale9 = new java.util.Locale("Chinese");
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(locale9);
        java.lang.String str11 = locale9.getCountry();
        java.lang.String str12 = locale9.getScript();
        java.util.Locale locale13 = locale9.stripExtensions();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(1, timeZone2, locale9);
        timeZone2.setID("22 Feb 2022 07:09:14 GMT");
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str20 = fastDateFormat19.getPattern();
        java.lang.String str22 = fastDateFormat19.format(1645513660686L);
        java.util.Date date23 = new java.util.Date();
        int int24 = date23.getSeconds();
        java.lang.String str25 = fastDateFormat19.format(date23);
        java.lang.String str27 = fastDateFormat19.format((long) 32769);
        java.util.TimeZone timeZone28 = fastDateFormat19.getTimeZone();
        boolean boolean29 = timeZone28.observesDaylightTime();
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone28, locale30);
        boolean boolean32 = timeZone2.hasSameRules(timeZone28);
        int int34 = timeZone2.getOffset(1645513993122L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar31", (calendar10.compareTo(calendar31) == 0) == calendar10.equals(calendar31));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test271");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder1 = builder0.clear();
        java.util.Locale locale2 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale3 = java.util.Locale.CHINESE;
        java.lang.String str4 = locale3.getLanguage();
        boolean boolean5 = locale3.hasExtensions();
        java.lang.String str6 = locale2.getDisplayVariant(locale3);
        java.util.Locale.Builder builder7 = builder1.setLocale(locale2);
        java.util.Locale locale8 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder9 = builder7.setLocale(locale8);
        java.util.Locale locale10 = builder7.build();
        java.util.Locale.Builder builder11 = builder7.clearExtensions();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        boolean boolean15 = timeZone13.hasSameRules(timeZone14);
        boolean boolean16 = timeZone12.hasSameRules(timeZone13);
        java.util.TimeZone.setDefault(timeZone13);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(timeZone13);
        java.util.Date date19 = new java.util.Date();
        int int20 = date19.getTimezoneOffset();
        date19.setMinutes(5);
        calendar18.setTime(date19);
        java.util.TimeZone timeZone24 = calendar18.getTimeZone();
        java.lang.String str25 = timeZone24.getID();
        java.util.Locale locale26 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet27 = locale26.getUnicodeLocaleAttributes();
        java.util.Locale locale28 = locale26.stripExtensions();
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.lang.String str30 = locale28.getDisplayCountry(locale29);
        java.lang.String str31 = locale29.getLanguage();
        java.lang.String str33 = locale29.getExtension('u');
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(timeZone24, locale29);
        java.util.Locale.Builder builder35 = builder11.setLocale(locale29);
        java.util.Locale.Builder builder36 = builder35.clear();
        java.util.Locale locale37 = java.util.Locale.CHINESE;
        java.lang.String str38 = locale37.getLanguage();
        boolean boolean39 = locale37.hasExtensions();
        java.lang.String str40 = locale37.getDisplayCountry();
        java.lang.String str41 = locale37.getISO3Language();
        java.util.Locale locale43 = java.util.Locale.getDefault();
        java.lang.String str44 = locale43.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat45 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale43);
        java.lang.String str46 = locale37.getDisplayName(locale43);
        java.util.Locale.setDefault(locale37);
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone50 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat51 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone50);
        java.lang.String str52 = fastDateFormat51.getPattern();
        java.lang.String str54 = fastDateFormat51.format(1645513660686L);
        java.util.Locale locale55 = java.util.Locale.ITALIAN;
        boolean boolean56 = fastDateFormat51.equals((java.lang.Object) locale55);
        java.util.Calendar calendar57 = java.util.Calendar.getInstance(timeZone48, locale55);
        java.util.Locale locale58 = java.util.Locale.FRANCE;
        boolean boolean59 = locale58.hasExtensions();
        java.lang.String str60 = locale55.getDisplayVariant(locale58);
        java.lang.String str61 = locale55.getDisplayScript();
        java.lang.String str62 = locale37.getDisplayCountry(locale55);
        java.lang.String str63 = locale55.getCountry();
        java.util.Set<java.lang.String> strSet64 = locale55.getUnicodeLocaleAttributes();
        java.util.Locale locale65 = locale55.stripExtensions();
        java.util.Locale.Builder builder66 = builder35.setLocale(locale55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar34 and calendar57", (calendar34.compareTo(calendar57) == 0) == calendar34.equals(calendar57));
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test272");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        java.lang.String str2 = locale1.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale1);
        java.lang.String str4 = fastDateFormat3.toString();
        java.util.TimeZone timeZone5 = fastDateFormat3.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1);
        java.lang.String str10 = fastDateFormat8.format(1645513674536L);
        java.text.ParsePosition parsePosition13 = new java.text.ParsePosition(16);
        int int14 = parsePosition13.getErrorIndex();
        parsePosition13.setErrorIndex(22);
        int int17 = parsePosition13.getErrorIndex();
        int int18 = parsePosition13.getIndex();
        int int19 = parsePosition13.getIndex();
        int int20 = parsePosition13.getErrorIndex();
        java.lang.Object obj21 = fastDateFormat8.parseObject("10:12:12 AM UTC", parsePosition13);
        int int22 = parsePosition13.getIndex();
        java.text.ParsePosition parsePosition24 = new java.text.ParsePosition(16);
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        boolean boolean28 = parsePosition24.equals((java.lang.Object) locale25);
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(locale25);
        java.lang.String str30 = locale25.getISO3Language();
        java.util.TimeZone timeZone33 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat34 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone33);
        java.lang.String str35 = fastDateFormat34.getPattern();
        java.lang.String str37 = fastDateFormat34.format(1645513660686L);
        java.lang.String str39 = fastDateFormat34.format((long) 40);
        java.util.TimeZone timeZone40 = fastDateFormat34.getTimeZone();
        java.util.TimeZone timeZone41 = fastDateFormat34.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat42 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone41);
        java.util.TimeZone timeZone45 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute46 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.FRANCE;
        boolean boolean52 = locale51.hasExtensions();
        java.util.Locale locale53 = java.util.Locale.FRANCE;
        java.util.Locale locale54 = java.util.Locale.CHINESE;
        java.lang.String str55 = locale54.getLanguage();
        java.util.Locale[] localeArray56 = new java.util.Locale[] { locale50, locale51, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList57 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList57, localeArray56);
        java.util.Locale.FilteringMode filteringMode59 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList60 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList57, filteringMode59);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList62 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale63 = java.util.Locale.CHINESE;
        java.lang.String str64 = locale63.getLanguage();
        java.util.Set<java.lang.String> strSet65 = locale63.getUnicodeLocaleAttributes();
        java.lang.String str66 = java.util.Locale.lookupTag(languageRangeList62, (java.util.Collection<java.lang.String>) strSet65);
        boolean boolean67 = localeList60.containsAll((java.util.Collection<java.lang.String>) strSet65);
        boolean boolean69 = localeList60.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator70 = localeList60.spliterator();
        java.util.Locale locale74 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale75 = java.util.Locale.ROOT;
        java.lang.String str76 = locale74.getDisplayScript(locale75);
        java.lang.String str77 = locale74.getISO3Language();
        boolean boolean78 = localeList60.add(locale74);
        boolean boolean79 = attribute46.equals((java.lang.Object) locale74);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat80 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone45, locale74);
        java.util.Calendar calendar81 = java.util.Calendar.getInstance(timeZone41, locale74);
        java.lang.String str82 = locale25.getDisplayVariant(locale74);
        java.util.Locale locale83 = java.util.Locale.FRANCE;
        boolean boolean84 = locale83.hasExtensions();
        java.lang.String str85 = locale83.getCountry();
        java.lang.String str86 = locale83.getDisplayLanguage();
        java.lang.String str87 = locale74.getDisplayName(locale83);
        boolean boolean88 = parsePosition13.equals((java.lang.Object) str87);
        java.lang.Object obj89 = fastDateFormat3.parseObject("7:13:57 AM UTC", parsePosition13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar29 and calendar81", (calendar29.compareTo(calendar81) == 0) == calendar29.equals(calendar81));
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test273");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        long long7 = calendar6.getTimeInMillis();
        java.util.Date date8 = calendar6.getTime();
        java.util.Locale.LanguageRange[] languageRangeArray9 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList10 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList10, languageRangeArray9);
        java.util.Locale locale12 = java.util.Locale.GERMAN;
        java.util.Locale locale13 = java.util.Locale.FRANCE;
        boolean boolean14 = locale13.hasExtensions();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.lang.String str17 = locale16.getLanguage();
        java.util.Locale[] localeArray18 = new java.util.Locale[] { locale12, locale13, locale15, locale16 };
        java.util.ArrayList<java.util.Locale> localeList19 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList19, localeArray18);
        java.util.Locale.FilteringMode filteringMode21 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList22 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList10, (java.util.Collection<java.util.Locale>) localeList19, filteringMode21);
        boolean boolean23 = localeList22.isEmpty();
        java.util.Date date24 = new java.util.Date();
        int int25 = date24.getSeconds();
        long long26 = date24.getTime();
        date24.setTime((long) (byte) 0);
        java.util.Date date29 = new java.util.Date();
        int int30 = date29.getDay();
        int int31 = date29.getTimezoneOffset();
        boolean boolean32 = date24.after(date29);
        date24.setMinutes(18);
        long long35 = date24.getTime();
        boolean boolean36 = localeList22.remove((java.lang.Object) date24);
        int int38 = localeList22.indexOf((java.lang.Object) 1645513668045L);
        java.util.ListIterator<java.util.Locale> localeItor39 = localeList22.listIterator();
        boolean boolean40 = calendar6.before((java.lang.Object) localeList22);
        java.text.FieldPosition fieldPosition42 = new java.text.FieldPosition(32770);
        int int43 = fieldPosition42.getBeginIndex();
        boolean boolean45 = fieldPosition42.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone47 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat48 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone47);
        java.lang.String str49 = fastDateFormat48.getPattern();
        java.lang.String str51 = fastDateFormat48.format(1645513660686L);
        java.util.Locale locale52 = java.util.Locale.ITALIAN;
        boolean boolean53 = fastDateFormat48.equals((java.lang.Object) locale52);
        int int54 = fastDateFormat48.getMaxLengthEstimate();
        boolean boolean55 = fieldPosition42.equals((java.lang.Object) fastDateFormat48);
        java.util.Locale locale56 = java.util.Locale.TAIWAN;
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str58 = locale56.getDisplayLanguage(locale57);
        boolean boolean59 = fieldPosition42.equals((java.lang.Object) str58);
        fieldPosition42.setEndIndex(14);
        java.lang.String str62 = fieldPosition42.toString();
        fieldPosition42.setEndIndex(48);
        boolean boolean65 = localeList22.remove((java.lang.Object) fieldPosition42);
        java.util.TimeZone timeZone66 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone67 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone68 = java.util.TimeZone.getDefault();
        boolean boolean69 = timeZone67.hasSameRules(timeZone68);
        boolean boolean70 = timeZone66.hasSameRules(timeZone67);
        java.util.TimeZone.setDefault(timeZone67);
        java.util.Calendar calendar72 = java.util.Calendar.getInstance(timeZone67);
        long long73 = calendar72.getTimeInMillis();
        calendar72.setMinimalDaysInFirstWeek((int) (short) -1);
        long long76 = calendar72.getTimeInMillis();
        boolean boolean77 = localeList22.contains((java.lang.Object) long76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar72", (calendar6.compareTo(calendar72) == 0) == calendar6.equals(calendar72));
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test274");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str4 = fastDateFormat2.format((long) (byte) -1);
        java.text.ParsePosition parsePosition7 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj8 = fastDateFormat2.parseObject("GMT+00:00", parsePosition7);
        java.util.TimeZone timeZone9 = fastDateFormat2.getTimeZone();
        java.util.TimeZone timeZone10 = fastDateFormat2.getTimeZone();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList12 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray13 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList14 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList14, languageRangeArray13);
        java.util.Locale locale16 = java.util.Locale.GERMAN;
        java.util.Locale locale17 = java.util.Locale.FRANCE;
        boolean boolean18 = locale17.hasExtensions();
        java.util.Locale locale19 = java.util.Locale.FRANCE;
        java.util.Locale locale20 = java.util.Locale.CHINESE;
        java.lang.String str21 = locale20.getLanguage();
        java.util.Locale[] localeArray22 = new java.util.Locale[] { locale16, locale17, locale19, locale20 };
        java.util.ArrayList<java.util.Locale> localeList23 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList23, localeArray22);
        java.util.Locale.FilteringMode filteringMode25 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList26 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList14, (java.util.Collection<java.util.Locale>) localeList23, filteringMode25);
        java.util.List<java.util.Locale> localeList27 = java.util.Locale.filter(languageRangeList12, (java.util.Collection<java.util.Locale>) localeList26);
        localeList27.clear();
        int int29 = localeList27.size();
        java.util.Locale locale31 = java.util.Locale.TAIWAN;
        java.util.Locale locale32 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str33 = locale31.getDisplayLanguage(locale32);
        java.util.Locale locale34 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale35 = java.util.Locale.CHINESE;
        java.lang.String str36 = locale35.getLanguage();
        boolean boolean37 = locale35.hasExtensions();
        java.lang.String str38 = locale34.getDisplayVariant(locale35);
        java.lang.String str39 = locale31.getDisplayLanguage(locale35);
        java.lang.String str40 = locale31.getDisplayVariant();
        localeList27.add(0, locale31);
        java.util.Locale locale43 = new java.util.Locale("Chinese");
        java.util.Calendar calendar44 = java.util.Calendar.getInstance(locale43);
        java.lang.String str45 = locale43.getCountry();
        java.lang.String str46 = locale43.getScript();
        java.util.Locale locale47 = locale43.stripExtensions();
        java.lang.String str48 = locale31.getDisplayVariant(locale47);
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(locale31);
        java.lang.String str50 = locale31.getScript();
        java.util.Set<java.lang.Character> charSet51 = locale31.getExtensionKeys();
        java.util.Calendar calendar52 = java.util.Calendar.getInstance(timeZone10, locale31);
        java.util.Locale locale54 = java.util.Locale.CHINESE;
        java.lang.String str55 = locale54.getLanguage();
        boolean boolean56 = locale54.hasExtensions();
        java.lang.String str57 = locale54.getDisplayCountry();
        java.lang.String str58 = locale54.getISO3Language();
        java.util.Locale locale60 = java.util.Locale.getDefault();
        java.lang.String str61 = locale60.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat62 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale60);
        java.lang.String str63 = locale54.getDisplayName(locale60);
        java.util.Locale locale64 = java.util.Locale.TAIWAN;
        java.util.Locale locale65 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str66 = locale64.getDisplayLanguage(locale65);
        java.util.Locale locale67 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale68 = java.util.Locale.CHINESE;
        java.lang.String str69 = locale68.getLanguage();
        boolean boolean70 = locale68.hasExtensions();
        java.lang.String str71 = locale67.getDisplayVariant(locale68);
        java.lang.String str72 = locale64.getDisplayLanguage(locale68);
        java.lang.String str73 = locale60.getDisplayScript(locale68);
        java.lang.String str74 = locale68.getDisplayCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale68);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone10, locale68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar44 and calendar52", (calendar44.compareTo(calendar52) == 0) == calendar44.equals(calendar52));
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test275");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int3 = calendar1.getActualMinimum((int) (byte) 0);
        java.util.TimeZone timeZone4 = calendar1.getTimeZone();
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        boolean boolean9 = locale7.hasExtensions();
        java.lang.String str10 = locale7.getDisplayCountry();
        java.lang.String str11 = locale7.getISO3Language();
        java.util.Locale locale13 = java.util.Locale.getDefault();
        java.lang.String str14 = locale13.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale13);
        java.lang.String str16 = locale7.getDisplayName(locale13);
        java.util.Locale.setDefault(locale7);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat21 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone20);
        java.lang.String str22 = fastDateFormat21.getPattern();
        java.lang.String str24 = fastDateFormat21.format(1645513660686L);
        java.util.Locale locale25 = java.util.Locale.ITALIAN;
        boolean boolean26 = fastDateFormat21.equals((java.lang.Object) locale25);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone18, locale25);
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        boolean boolean29 = locale28.hasExtensions();
        java.lang.String str30 = locale25.getDisplayVariant(locale28);
        java.lang.String str31 = locale25.getDisplayScript();
        java.lang.String str32 = locale7.getDisplayCountry(locale25);
        java.lang.String str33 = locale25.getCountry();
        java.lang.String str34 = calendar1.getDisplayName((int) (short) 0, 1, locale25);
        int int36 = calendar1.getActualMaximum(2);
        java.util.TimeZone timeZone38 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat39 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone38);
        java.lang.String str40 = fastDateFormat39.getPattern();
        java.text.ParsePosition parsePosition43 = new java.text.ParsePosition(16);
        parsePosition43.setIndex(10);
        java.lang.Object obj46 = fastDateFormat39.parseObject("FastDateFormat[]", parsePosition43);
        boolean boolean47 = fastDateFormat39.getTimeZoneOverridesCalendar();
        java.text.ParsePosition parsePosition50 = new java.text.ParsePosition(16);
        int int51 = parsePosition50.getErrorIndex();
        java.lang.Object obj52 = fastDateFormat39.parseObject("Coordinated Universal Time", parsePosition50);
        parsePosition50.setErrorIndex(47);
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone56 = java.util.TimeZone.getDefault();
        boolean boolean57 = timeZone55.hasSameRules(timeZone56);
        java.util.Calendar calendar58 = java.util.Calendar.getInstance(timeZone55);
        boolean boolean59 = parsePosition50.equals((java.lang.Object) calendar58);
        calendar58.set(18, 4666, 117, 13, 25);
        java.util.TimeZone timeZone66 = calendar58.getTimeZone();
        boolean boolean67 = calendar1.before((java.lang.Object) timeZone66);
        java.lang.Object obj68 = timeZone66.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar1 and calendar27", (calendar1.compareTo(calendar27) == 0) == calendar1.equals(calendar27));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test276");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        calendar74.setFirstDayOfWeek(42);
        boolean boolean78 = calendar74.isWeekDateSupported();
        calendar74.setLenient(false);
        calendar74.set(24, 1200000, 0);
        java.util.TimeZone timeZone85 = calendar74.getTimeZone();
        java.util.Locale locale88 = new java.util.Locale("2022-2-22 7:08:16", "6:59:49 AM GMT+00:00");
        java.util.Calendar calendar89 = java.util.Calendar.getInstance(timeZone85, locale88);
        boolean boolean90 = timeZone85.useDaylightTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar89", (calendar2.compareTo(calendar89) == 0) == calendar2.equals(calendar89));
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test277");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        int int5 = timeZone0.getOffset((long) 10);
        java.util.TimeZone.setDefault(timeZone0);
        java.util.Locale.LanguageRange[] languageRangeArray7 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList8 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList8, languageRangeArray7);
        java.util.Locale locale10 = java.util.Locale.GERMAN;
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.FRANCE;
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.lang.String str15 = locale14.getLanguage();
        java.util.Locale[] localeArray16 = new java.util.Locale[] { locale10, locale11, locale13, locale14 };
        java.util.ArrayList<java.util.Locale> localeList17 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList17, localeArray16);
        java.util.Locale.FilteringMode filteringMode19 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList20 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList8, (java.util.Collection<java.util.Locale>) localeList17, filteringMode19);
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale21);
        boolean boolean23 = localeList17.contains((java.lang.Object) locale21);
        java.lang.String str24 = locale21.getVariant();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone0, locale21);
        calendar25.setLenient(false);
        int int28 = calendar25.getWeekYear();
        java.util.Date date29 = calendar25.getTime();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        boolean boolean32 = timeZone30.hasSameRules(timeZone31);
        boolean boolean33 = timeZone30.observesDaylightTime();
        int int34 = timeZone30.getRawOffset();
        java.util.TimeZone timeZone36 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone36);
        java.lang.String str38 = fastDateFormat37.getPattern();
        java.lang.String str40 = fastDateFormat37.format(1645513660686L);
        java.util.Date date41 = new java.util.Date();
        int int42 = date41.getSeconds();
        java.lang.String str43 = fastDateFormat37.format(date41);
        java.lang.String str45 = fastDateFormat37.format((long) 32769);
        java.util.TimeZone timeZone46 = fastDateFormat37.getTimeZone();
        boolean boolean47 = timeZone30.hasSameRules(timeZone46);
        boolean boolean48 = date29.equals((java.lang.Object) boolean47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar25", (calendar22.compareTo(calendar25) == 0) == calendar22.equals(calendar25));
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test278");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int2 = calendar1.getWeeksInWeekYear();
        int int3 = calendar1.getWeeksInWeekYear();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        boolean boolean6 = timeZone4.hasSameRules(timeZone5);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone4);
        int int9 = calendar7.getActualMinimum(6);
        int int10 = calendar7.getMinimalDaysInFirstWeek();
        boolean boolean11 = calendar1.after((java.lang.Object) calendar7);
        java.util.TimeZone timeZone12 = calendar1.getTimeZone();
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.TimeZone timeZone19 = fastDateFormat15.getTimeZone();
        java.lang.String str20 = timeZone19.getID();
        int int21 = timeZone19.getRawOffset();
        java.util.Calendar.Builder builder22 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder27 = builder22.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar28 = builder22.build();
        java.util.Calendar.Builder builder32 = builder22.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder34 = builder22.setLenient(true);
        java.util.Calendar.Builder builder39 = builder34.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone41 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        boolean boolean43 = timeZone41.hasSameRules(timeZone42);
        boolean boolean44 = timeZone40.hasSameRules(timeZone41);
        timeZone40.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone40.setID("und");
        java.util.Calendar.Builder builder49 = builder34.setTimeZone(timeZone40);
        boolean boolean50 = timeZone19.hasSameRules(timeZone40);
        int int51 = timeZone19.getRawOffset();
        calendar1.setTimeZone(timeZone19);
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone56 = java.util.TimeZone.getDefault();
        boolean boolean57 = timeZone55.hasSameRules(timeZone56);
        boolean boolean58 = timeZone54.hasSameRules(timeZone55);
        timeZone54.setID("\u4e2d\u6587\u53f0\u7063)");
        java.util.TimeZone timeZone62 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone63 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone64 = java.util.TimeZone.getDefault();
        boolean boolean65 = timeZone63.hasSameRules(timeZone64);
        boolean boolean66 = timeZone62.hasSameRules(timeZone63);
        timeZone62.setID("\u4e2d\u6587\u53f0\u7063)");
        int int70 = timeZone62.getOffset(1645513548538L);
        java.util.Locale locale71 = java.util.Locale.CHINESE;
        java.lang.String str72 = locale71.getLanguage();
        boolean boolean73 = locale71.hasExtensions();
        java.lang.String str74 = locale71.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getInstance("zh", timeZone62, locale71);
        java.lang.String str76 = locale71.getDisplayVariant();
        java.util.Locale locale77 = java.util.Locale.FRANCE;
        java.util.Locale locale78 = locale77.stripExtensions();
        java.lang.String str79 = locale77.toLanguageTag();
        java.lang.String str80 = locale71.getDisplayScript(locale77);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat81 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone54, locale77);
        java.util.Locale locale82 = java.util.Locale.FRENCH;
        java.util.TimeZone timeZone84 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat85 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone84);
        java.lang.String str86 = fastDateFormat85.getPattern();
        java.lang.String str88 = fastDateFormat85.format(1645513660686L);
        java.lang.String str90 = fastDateFormat85.format((long) 40);
        java.util.TimeZone timeZone91 = fastDateFormat85.getTimeZone();
        java.util.Locale locale92 = fastDateFormat85.getLocale();
        java.lang.String str93 = locale82.getDisplayScript(locale92);
        java.util.Calendar calendar94 = java.util.Calendar.getInstance(timeZone54, locale92);
        calendar1.setTimeZone(timeZone54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar94", (calendar7.compareTo(calendar94) == 0) == calendar7.equals(calendar94));
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test279");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        calendar6.set(8, 4);
        calendar6.setMinimalDaysInFirstWeek(4);
        java.lang.String str12 = calendar6.getCalendarType();
        java.time.Instant instant13 = calendar6.toInstant();
        java.util.Date date14 = java.util.Date.from(instant13);
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        java.util.Date date17 = new java.util.Date();
        int int18 = date17.getTimezoneOffset();
        date17.setMinutes(5);
        boolean boolean21 = date15.after(date17);
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone23);
        java.lang.String str25 = fastDateFormat24.getPattern();
        java.util.Date date26 = new java.util.Date();
        int int27 = date26.getSeconds();
        java.lang.String str28 = fastDateFormat24.format(date26);
        boolean boolean29 = date15.before(date26);
        int int30 = date26.getSeconds();
        int int31 = date26.getMinutes();
        boolean boolean32 = date14.before(date26);
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone34 = java.util.TimeZone.getDefault();
        boolean boolean35 = timeZone33.hasSameRules(timeZone34);
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(timeZone33);
        int int38 = calendar36.getActualMinimum(6);
        int int39 = calendar36.getWeekYear();
        java.util.Date date40 = new java.util.Date();
        java.lang.String str41 = date40.toGMTString();
        int int42 = date40.getYear();
        int int43 = date40.getSeconds();
        calendar36.setTime(date40);
        int int45 = date40.getDate();
        java.util.Date date49 = new java.util.Date((int) 'x', 52, 117);
        java.util.Date date51 = new java.util.Date((long) 41);
        boolean boolean52 = date49.after(date51);
        int int53 = date51.getMinutes();
        boolean boolean54 = date40.after(date51);
        boolean boolean55 = date26.before(date51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar36", (calendar6.compareTo(calendar36) == 0) == calendar6.equals(calendar36));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test280");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        timeZone0.setID("\u4e2d\u6587\u53f0\u7063)");
        int int8 = timeZone0.getOffset(1645513548538L);
        boolean boolean9 = timeZone0.observesDaylightTime();
        java.util.Locale locale12 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale12);
        java.util.Locale locale14 = java.util.Locale.CANADA;
        java.lang.String str15 = locale12.getDisplayName(locale14);
        java.util.Calendar calendar16 = java.util.Calendar.getInstance(timeZone0, locale14);
        java.lang.String str17 = locale14.getISO3Country();
        java.lang.String str18 = locale14.toLanguageTag();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        boolean boolean23 = timeZone21.hasSameRules(timeZone22);
        boolean boolean24 = timeZone20.hasSameRules(timeZone21);
        java.util.TimeZone.setDefault(timeZone21);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone21);
        long long27 = calendar26.getTimeInMillis();
        calendar26.set((-1), (int) 'x', 45, 3, 59, 6);
        java.util.TimeZone timeZone35 = calendar26.getTimeZone();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone37 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone38 = java.util.TimeZone.getDefault();
        boolean boolean39 = timeZone37.hasSameRules(timeZone38);
        boolean boolean40 = timeZone36.hasSameRules(timeZone37);
        boolean boolean41 = timeZone36.observesDaylightTime();
        calendar26.setTimeZone(timeZone36);
        java.util.TimeZone timeZone44 = java.util.TimeZone.getTimeZone("22 Feb 2022 07:07:40 GMT");
        boolean boolean45 = timeZone36.hasSameRules(timeZone44);
        java.util.TimeZone timeZone46 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone47 = java.util.TimeZone.getDefault();
        boolean boolean48 = timeZone46.hasSameRules(timeZone47);
        boolean boolean49 = timeZone46.observesDaylightTime();
        int int50 = timeZone46.getRawOffset();
        java.util.Locale.LanguageRange[] languageRangeArray51 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList52 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList52, languageRangeArray51);
        java.util.Locale locale54 = java.util.Locale.GERMAN;
        java.util.Locale locale55 = java.util.Locale.FRANCE;
        boolean boolean56 = locale55.hasExtensions();
        java.util.Locale locale57 = java.util.Locale.FRANCE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale54, locale55, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList52, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList66 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale67 = java.util.Locale.CHINESE;
        java.lang.String str68 = locale67.getLanguage();
        java.util.Set<java.lang.String> strSet69 = locale67.getUnicodeLocaleAttributes();
        java.lang.String str70 = java.util.Locale.lookupTag(languageRangeList66, (java.util.Collection<java.lang.String>) strSet69);
        boolean boolean71 = localeList64.containsAll((java.util.Collection<java.lang.String>) strSet69);
        boolean boolean73 = localeList64.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator74 = localeList64.spliterator();
        java.util.Locale locale78 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale79 = java.util.Locale.ROOT;
        java.lang.String str80 = locale78.getDisplayScript(locale79);
        java.lang.String str81 = locale78.getISO3Language();
        boolean boolean82 = localeList64.add(locale78);
        java.util.Locale locale83 = java.util.Locale.TAIWAN;
        java.util.Locale locale84 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str85 = locale83.getDisplayLanguage(locale84);
        java.util.Locale locale86 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale87 = java.util.Locale.CHINESE;
        java.lang.String str88 = locale87.getLanguage();
        boolean boolean89 = locale87.hasExtensions();
        java.lang.String str90 = locale86.getDisplayVariant(locale87);
        java.lang.String str91 = locale83.getDisplayLanguage(locale87);
        java.lang.String str92 = locale78.getDisplayVariant(locale83);
        java.util.Locale locale93 = java.util.Locale.ENGLISH;
        java.lang.String str94 = locale93.getLanguage();
        java.lang.String str95 = locale83.getDisplayCountry(locale93);
        java.util.Calendar calendar96 = java.util.Calendar.getInstance(timeZone46, locale83);
        boolean boolean97 = locale83.hasExtensions();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat98 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone36, locale83);
        java.lang.String str99 = locale14.getDisplayName(locale83);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar16 and calendar96", (calendar16.compareTo(calendar96) == 0) == calendar16.equals(calendar96));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test281");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone14.observesDaylightTime();
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone14);
        java.lang.String str21 = timeZone14.getID();
        java.util.Calendar.Builder builder22 = builder13.setTimeZone(timeZone14);
        int int24 = timeZone14.getOffset(1645513557175L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar20", (calendar11.compareTo(calendar20) == 0) == calendar11.equals(calendar20));
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test282");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder1 = builder0.clear();
        java.util.Locale locale2 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale3 = java.util.Locale.CHINESE;
        java.lang.String str4 = locale3.getLanguage();
        boolean boolean5 = locale3.hasExtensions();
        java.lang.String str6 = locale2.getDisplayVariant(locale3);
        java.util.Locale.Builder builder7 = builder1.setLocale(locale2);
        java.util.Locale locale8 = builder7.build();
        java.util.Locale.Builder builder10 = builder7.addUnicodeLocaleAttribute("German");
        java.util.Locale.Builder builder11 = builder10.clear();
        java.text.ParsePosition parsePosition13 = new java.text.ParsePosition(16);
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.lang.String str15 = locale14.getLanguage();
        boolean boolean16 = locale14.hasExtensions();
        boolean boolean17 = parsePosition13.equals((java.lang.Object) locale14);
        java.util.Calendar calendar18 = java.util.Calendar.getInstance(locale14);
        java.lang.String str19 = locale14.getISO3Language();
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.lang.String str26 = fastDateFormat23.format(1645513660686L);
        java.lang.String str28 = fastDateFormat23.format((long) 40);
        java.util.TimeZone timeZone29 = fastDateFormat23.getTimeZone();
        java.util.TimeZone timeZone30 = fastDateFormat23.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone30);
        java.util.TimeZone timeZone34 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute35 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray36 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList37 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList37, languageRangeArray36);
        java.util.Locale locale39 = java.util.Locale.GERMAN;
        java.util.Locale locale40 = java.util.Locale.FRANCE;
        boolean boolean41 = locale40.hasExtensions();
        java.util.Locale locale42 = java.util.Locale.FRANCE;
        java.util.Locale locale43 = java.util.Locale.CHINESE;
        java.lang.String str44 = locale43.getLanguage();
        java.util.Locale[] localeArray45 = new java.util.Locale[] { locale39, locale40, locale42, locale43 };
        java.util.ArrayList<java.util.Locale> localeList46 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList46, localeArray45);
        java.util.Locale.FilteringMode filteringMode48 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList49 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList37, (java.util.Collection<java.util.Locale>) localeList46, filteringMode48);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList51 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale52 = java.util.Locale.CHINESE;
        java.lang.String str53 = locale52.getLanguage();
        java.util.Set<java.lang.String> strSet54 = locale52.getUnicodeLocaleAttributes();
        java.lang.String str55 = java.util.Locale.lookupTag(languageRangeList51, (java.util.Collection<java.lang.String>) strSet54);
        boolean boolean56 = localeList49.containsAll((java.util.Collection<java.lang.String>) strSet54);
        boolean boolean58 = localeList49.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator59 = localeList49.spliterator();
        java.util.Locale locale63 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale64 = java.util.Locale.ROOT;
        java.lang.String str65 = locale63.getDisplayScript(locale64);
        java.lang.String str66 = locale63.getISO3Language();
        boolean boolean67 = localeList49.add(locale63);
        boolean boolean68 = attribute35.equals((java.lang.Object) locale63);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat69 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone34, locale63);
        java.util.Calendar calendar70 = java.util.Calendar.getInstance(timeZone30, locale63);
        java.lang.String str71 = locale14.getDisplayVariant(locale63);
        java.util.Locale locale72 = java.util.Locale.FRANCE;
        boolean boolean73 = locale72.hasExtensions();
        java.lang.String str74 = locale72.getCountry();
        java.lang.String str75 = locale72.getDisplayLanguage();
        java.lang.String str76 = locale63.getDisplayName(locale72);
        java.util.Locale.Builder builder77 = builder11.setLocale(locale72);
        java.util.Locale.Builder builder78 = builder77.clear();
        java.util.Locale.Builder builder79 = builder78.clear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar18 and calendar70", (calendar18.compareTo(calendar70) == 0) == calendar18.equals(calendar70));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test283");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        localeList56.clear();
        java.lang.Object[] objArray60 = localeList56.toArray();
        boolean boolean62 = localeList56.equals((java.lang.Object) 1645513671325L);
        boolean boolean63 = localeList56.isEmpty();
        boolean boolean65 = localeList56.contains((java.lang.Object) "German");
        java.util.Locale locale66 = java.util.Locale.ITALIAN;
        java.lang.String str67 = locale66.getISO3Language();
        java.lang.String str68 = locale66.toLanguageTag();
        boolean boolean69 = localeList56.add(locale66);
        java.util.TimeZone timeZone70 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone71 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone72 = java.util.TimeZone.getDefault();
        boolean boolean73 = timeZone71.hasSameRules(timeZone72);
        boolean boolean74 = timeZone70.hasSameRules(timeZone71);
        java.util.TimeZone.setDefault(timeZone71);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone71);
        long long77 = calendar76.getTimeInMillis();
        java.util.Date date78 = new java.util.Date();
        int int79 = date78.getSeconds();
        java.util.Date date80 = new java.util.Date();
        int int81 = date80.getTimezoneOffset();
        date80.setMinutes(5);
        boolean boolean84 = date78.after(date80);
        int int85 = date78.getHours();
        int int86 = date78.getDate();
        calendar76.setTime(date78);
        int int88 = calendar76.getMinimalDaysInFirstWeek();
        boolean boolean89 = localeList56.remove((java.lang.Object) int88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar76", (calendar2.compareTo(calendar76) == 0) == calendar2.equals(calendar76));
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test284");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Spliterator<java.util.Locale> localeSpliterator59 = localeList56.spliterator();
        java.util.Locale locale61 = localeList56.get(11);
        java.util.TimeZone timeZone63 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone63);
        java.lang.String str65 = fastDateFormat64.getPattern();
        java.lang.String str67 = fastDateFormat64.format(1645513660686L);
        java.util.Date date68 = new java.util.Date();
        int int69 = date68.getSeconds();
        java.lang.String str70 = fastDateFormat64.format(date68);
        java.lang.String str72 = fastDateFormat64.format((long) 32769);
        java.util.TimeZone timeZone73 = fastDateFormat64.getTimeZone();
        java.util.TimeZone.setDefault(timeZone73);
        java.util.Locale locale75 = java.util.Locale.CHINESE;
        java.lang.String str76 = locale75.getLanguage();
        boolean boolean77 = locale75.hasExtensions();
        java.lang.String str78 = locale75.getDisplayCountry();
        java.lang.String str79 = locale75.getDisplayLanguage();
        java.lang.String str80 = locale75.getVariant();
        java.lang.String str82 = locale75.getExtension('x');
        java.util.Calendar calendar83 = java.util.Calendar.getInstance(timeZone73, locale75);
        int int84 = localeList56.indexOf((java.lang.Object) calendar83);
        java.util.Calendar.Builder builder85 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder87 = builder85.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder89 = builder87.setLenient(true);
        java.util.Calendar calendar90 = builder89.build();
        java.util.Locale locale91 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str92 = locale91.getISO3Language();
        java.util.Locale.setDefault(locale91);
        java.lang.String str94 = locale91.getDisplayVariant();
        java.util.Calendar.Builder builder95 = builder89.setLocale(locale91);
        java.util.Set<java.lang.String> strSet96 = locale91.getUnicodeLocaleAttributes();
        boolean boolean97 = localeList56.retainAll((java.util.Collection<java.lang.String>) strSet96);
        java.util.Spliterator<java.util.Locale> localeSpliterator98 = localeList56.spliterator();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar83", (calendar2.compareTo(calendar83) == 0) == calendar2.equals(calendar83));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test285");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        calendar9.roll(5, (int) (short) 100);
        calendar9.setTimeInMillis(1645513663180L);
        java.util.TimeZone timeZone16 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone16);
        java.lang.String str18 = fastDateFormat17.getPattern();
        java.lang.String str20 = fastDateFormat17.format(1645513660686L);
        java.util.TimeZone timeZone21 = fastDateFormat17.getTimeZone();
        java.lang.String str22 = timeZone21.getID();
        int int23 = timeZone21.getRawOffset();
        java.util.Calendar.Builder builder24 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder29 = builder24.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar30 = builder24.build();
        java.util.Calendar.Builder builder34 = builder24.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder36 = builder24.setLenient(true);
        java.util.Calendar.Builder builder41 = builder36.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        boolean boolean45 = timeZone43.hasSameRules(timeZone44);
        boolean boolean46 = timeZone42.hasSameRules(timeZone43);
        timeZone42.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone42.setID("und");
        java.util.Calendar.Builder builder51 = builder36.setTimeZone(timeZone42);
        boolean boolean52 = timeZone21.hasSameRules(timeZone42);
        java.util.Calendar calendar53 = java.util.Calendar.getInstance(timeZone42);
        calendar9.setTimeZone(timeZone42);
        java.util.Calendar.Builder builder55 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder60 = builder55.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar61 = builder60.build();
        java.util.TimeZone timeZone62 = calendar61.getTimeZone();
        boolean boolean63 = timeZone42.hasSameRules(timeZone62);
        java.util.Calendar.Builder builder64 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder69 = builder64.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar70 = builder69.build();
        java.time.Instant instant71 = calendar70.toInstant();
        java.util.Date date72 = java.util.Date.from(instant71);
        java.util.TimeZone timeZone73 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone74 = java.util.TimeZone.getDefault();
        boolean boolean75 = timeZone73.hasSameRules(timeZone74);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone73);
        int int78 = calendar76.getActualMinimum(6);
        int int79 = calendar76.getMinimalDaysInFirstWeek();
        java.time.Instant instant80 = calendar76.toInstant();
        java.util.Date date81 = java.util.Date.from(instant80);
        java.lang.String str82 = date81.toGMTString();
        boolean boolean83 = date72.before(date81);
        java.util.Date date89 = new java.util.Date(122, (int) '#', 13, 0, (int) (short) 0);
        date89.setHours(122);
        int int92 = date89.getTimezoneOffset();
        boolean boolean93 = date72.after(date89);
        int int94 = date72.getDate();
        boolean boolean95 = timeZone62.inDaylightTime(date72);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar53 and calendar76", (calendar53.compareTo(calendar76) == 0) == calendar53.equals(calendar76));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test286");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone23);
        java.util.Locale locale25 = fastDateFormat24.getLocale();
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.util.Locale locale27 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str28 = locale26.getDisplayLanguage(locale27);
        java.lang.String str29 = locale26.getLanguage();
        java.util.Locale locale31 = new java.util.Locale("Chinese");
        java.util.Locale locale32 = locale31.stripExtensions();
        java.lang.String str33 = locale26.getDisplayLanguage(locale31);
        java.util.Locale locale35 = java.util.Locale.forLanguageTag("zh");
        java.text.AttributedCharacterIterator.Attribute attribute36 = java.text.AttributedCharacterIterator.Attribute.READING;
        boolean boolean38 = attribute36.equals((java.lang.Object) "FastDateFormat[]");
        java.util.Locale locale39 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale40 = java.util.Locale.CHINESE;
        java.lang.String str41 = locale40.getLanguage();
        boolean boolean42 = locale40.hasExtensions();
        java.lang.String str43 = locale39.getDisplayVariant(locale40);
        java.util.Locale locale44 = locale39.stripExtensions();
        boolean boolean45 = attribute36.equals((java.lang.Object) locale44);
        java.lang.String str46 = locale35.getDisplayLanguage(locale44);
        java.lang.String str47 = locale26.getDisplayCountry(locale44);
        java.lang.String str48 = locale25.getDisplayCountry(locale44);
        java.util.Set<java.lang.String> strSet49 = locale25.getUnicodeLocaleAttributes();
        java.lang.String str50 = timeZone11.getDisplayName(locale25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test287");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        long long7 = calendar6.getTimeInMillis();
        calendar6.set((-1), (int) 'x', 45, 3, 59, 6);
        java.time.Instant instant15 = calendar6.toInstant();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        boolean boolean18 = timeZone16.hasSameRules(timeZone17);
        boolean boolean19 = timeZone16.observesDaylightTime();
        int int20 = timeZone16.getRawOffset();
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.lang.String str26 = fastDateFormat23.format(1645513660686L);
        java.util.Date date27 = new java.util.Date();
        int int28 = date27.getSeconds();
        java.lang.String str29 = fastDateFormat23.format(date27);
        java.lang.String str31 = fastDateFormat23.format((long) 32769);
        java.util.TimeZone timeZone32 = fastDateFormat23.getTimeZone();
        boolean boolean33 = timeZone16.hasSameRules(timeZone32);
        calendar6.setTimeZone(timeZone16);
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        boolean boolean37 = timeZone35.hasSameRules(timeZone36);
        boolean boolean38 = timeZone35.observesDaylightTime();
        java.util.Locale locale39 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet40 = locale39.getUnicodeLocaleAttributes();
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(timeZone35, locale39);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(timeZone35);
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        boolean boolean45 = timeZone43.hasSameRules(timeZone44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone43);
        int int48 = calendar46.getActualMinimum(6);
        int int49 = calendar46.getMinimalDaysInFirstWeek();
        java.time.Instant instant50 = calendar46.toInstant();
        calendar46.roll((int) (short) 10, 100);
        java.util.TimeZone timeZone55 = java.util.TimeZone.getTimeZone("7:07:41 AM UTC");
        timeZone55.setID("\u4e0a\u5348 07:08:13");
        calendar46.setTimeZone(timeZone55);
        boolean boolean59 = timeZone35.hasSameRules(timeZone55);
        timeZone35.setID("\u4e0a\u53487:10");
        calendar6.setTimeZone(timeZone35);
        timeZone35.setID("Wed Mar 30 16:05:01 GMT+00:00 2022");
        java.util.Locale locale68 = new java.util.Locale("\u4e0a\u5348\u65f6\u5206\u79d2 UTC", "\u5e74\u6708\u65e5\u661f\u671f\u4e8c\u4e0a\u5348\u65f6\u5206\u79d2", "7:11:49 AM GMT+00:00");
        java.lang.String str69 = timeZone35.getDisplayName(locale68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar41 and calendar42", (calendar41.compareTo(calendar42) == 0) == calendar41.equals(calendar42));
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test288");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList1 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray2 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList3 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList3, languageRangeArray2);
        java.util.Locale locale5 = java.util.Locale.GERMAN;
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        boolean boolean7 = locale6.hasExtensions();
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale5, locale6, locale8, locale9 };
        java.util.ArrayList<java.util.Locale> localeList12 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList12, localeArray11);
        java.util.Locale.FilteringMode filteringMode14 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList15 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList3, (java.util.Collection<java.util.Locale>) localeList12, filteringMode14);
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter(languageRangeList1, (java.util.Collection<java.util.Locale>) localeList15);
        localeList16.clear();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat21 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone20);
        java.lang.String str22 = fastDateFormat21.getPattern();
        java.lang.String str24 = fastDateFormat21.format(1645513660686L);
        java.util.Locale locale25 = java.util.Locale.ITALIAN;
        boolean boolean26 = fastDateFormat21.equals((java.lang.Object) locale25);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone18, locale25);
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        boolean boolean29 = locale28.hasExtensions();
        java.lang.String str30 = locale25.getDisplayVariant(locale28);
        java.lang.String str31 = locale25.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray32 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList33 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList33, languageRangeArray32);
        java.util.Locale locale35 = java.util.Locale.GERMAN;
        java.util.Locale locale36 = java.util.Locale.FRANCE;
        boolean boolean37 = locale36.hasExtensions();
        java.util.Locale locale38 = java.util.Locale.FRANCE;
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale35, locale36, locale38, locale39 };
        java.util.ArrayList<java.util.Locale> localeList42 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList42, localeArray41);
        java.util.Locale.FilteringMode filteringMode44 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList45 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList33, (java.util.Collection<java.util.Locale>) localeList42, filteringMode44);
        java.util.Spliterator<java.util.Locale> localeSpliterator46 = localeList45.spliterator();
        java.util.Iterator<java.util.Locale> localeItor47 = localeList45.iterator();
        java.util.Locale locale48 = java.util.Locale.ROOT;
        boolean boolean49 = localeList45.remove((java.lang.Object) locale48);
        java.lang.String str50 = locale48.getISO3Country();
        java.lang.String str51 = locale25.getDisplayVariant(locale48);
        java.lang.String str52 = locale48.getScript();
        boolean boolean53 = localeList16.add(locale48);
        java.util.ListIterator<java.util.Locale> localeItor54 = localeList16.listIterator();
        java.util.ListIterator<java.util.Locale> localeItor55 = localeList16.listIterator();
        java.util.Iterator<java.util.Locale> localeItor56 = localeList16.iterator();
        java.util.Locale.LanguageRange[] languageRangeArray57 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList58 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList58, languageRangeArray57);
        java.util.Locale locale60 = java.util.Locale.GERMAN;
        java.util.Locale locale61 = java.util.Locale.FRANCE;
        boolean boolean62 = locale61.hasExtensions();
        java.util.Locale locale63 = java.util.Locale.FRANCE;
        java.util.Locale locale64 = java.util.Locale.CHINESE;
        java.lang.String str65 = locale64.getLanguage();
        java.util.Locale[] localeArray66 = new java.util.Locale[] { locale60, locale61, locale63, locale64 };
        java.util.ArrayList<java.util.Locale> localeList67 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList67, localeArray66);
        java.util.Locale.FilteringMode filteringMode69 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList70 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList58, (java.util.Collection<java.util.Locale>) localeList67, filteringMode69);
        java.util.Locale locale71 = java.util.Locale.CHINESE;
        java.util.Calendar calendar72 = java.util.Calendar.getInstance(locale71);
        boolean boolean73 = localeList67.contains((java.lang.Object) locale71);
        java.lang.String str74 = locale71.getVariant();
        int int75 = localeList16.indexOf((java.lang.Object) str74);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat77 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u6cd5\u6587\u6cd5\u56fd)");
        java.lang.String str79 = fastDateFormat77.format(1645513796996L);
        java.util.TimeZone timeZone80 = fastDateFormat77.getTimeZone();
        int int81 = localeList16.indexOf((java.lang.Object) timeZone80);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar27 and calendar72", (calendar27.compareTo(calendar72) == 0) == calendar27.equals(calendar72));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test289");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone14.observesDaylightTime();
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone14);
        java.lang.String str21 = timeZone14.getID();
        java.util.Calendar.Builder builder22 = builder13.setTimeZone(timeZone14);
        java.util.Calendar.Builder builder26 = builder13.setTimeOfDay(60, 30, 1969);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar20", (calendar11.compareTo(calendar20) == 0) == calendar11.equals(calendar20));
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test290");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        java.util.Calendar calendar3 = java.util.Calendar.getInstance(timeZone0);
        int int5 = calendar3.getActualMinimum(6);
        int int6 = calendar3.getMinimalDaysInFirstWeek();
        java.time.Instant instant7 = calendar3.toInstant();
        calendar3.roll((int) (short) 10, 100);
        calendar3.setMinimalDaysInFirstWeek(17);
        java.lang.String str13 = calendar3.getCalendarType();
        int int14 = calendar3.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.TimeZone timeZone18 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone18);
        java.lang.String str20 = fastDateFormat19.getPattern();
        java.lang.String str22 = fastDateFormat19.format(1645513660686L);
        java.util.TimeZone timeZone23 = fastDateFormat19.getTimeZone();
        java.lang.String str24 = timeZone23.getID();
        java.util.Locale locale25 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale26 = java.util.Locale.CHINESE;
        java.lang.String str27 = locale26.getLanguage();
        boolean boolean28 = locale26.hasExtensions();
        java.lang.String str29 = locale25.getDisplayVariant(locale26);
        java.util.Calendar calendar30 = java.util.Calendar.getInstance(timeZone23, locale25);
        java.lang.String str32 = locale25.getExtension('a');
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(timeZone16, locale25);
        int int34 = calendar33.getMinimalDaysInFirstWeek();
        boolean boolean35 = calendar3.equals((java.lang.Object) int34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar30 and calendar33", (calendar30.compareTo(calendar33) == 0) == calendar30.equals(calendar33));
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test291");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        calendar9.roll(5, (int) (short) 100);
        calendar9.setTimeInMillis(1645513663180L);
        java.util.TimeZone timeZone16 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone16);
        java.lang.String str18 = fastDateFormat17.getPattern();
        java.lang.String str20 = fastDateFormat17.format(1645513660686L);
        java.util.TimeZone timeZone21 = fastDateFormat17.getTimeZone();
        java.lang.String str22 = timeZone21.getID();
        int int23 = timeZone21.getRawOffset();
        java.util.Calendar.Builder builder24 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder29 = builder24.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar30 = builder24.build();
        java.util.Calendar.Builder builder34 = builder24.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder36 = builder24.setLenient(true);
        java.util.Calendar.Builder builder41 = builder36.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        boolean boolean45 = timeZone43.hasSameRules(timeZone44);
        boolean boolean46 = timeZone42.hasSameRules(timeZone43);
        timeZone42.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone42.setID("und");
        java.util.Calendar.Builder builder51 = builder36.setTimeZone(timeZone42);
        boolean boolean52 = timeZone21.hasSameRules(timeZone42);
        java.util.Calendar calendar53 = java.util.Calendar.getInstance(timeZone42);
        calendar9.setTimeZone(timeZone42);
        java.util.Calendar.Builder builder55 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder60 = builder55.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar61 = builder60.build();
        java.util.TimeZone timeZone62 = calendar61.getTimeZone();
        boolean boolean63 = timeZone42.hasSameRules(timeZone62);
        timeZone62.setID("7:08:48 AM UTC");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar30 and calendar61", (calendar30.compareTo(calendar61) == 0) == calendar30.equals(calendar61));
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test292");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder12 = builder0.setLenient(false);
        java.util.Calendar.Builder builder16 = builder12.setDate(31, (int) (short) 10, (int) 'u');
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        boolean boolean24 = timeZone17.observesDaylightTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        boolean boolean30 = timeZone17.hasSameRules(timeZone26);
        timeZone26.setID("");
        timeZone26.setID("\u4e2d\u6587\u4e2d\u56fd)");
        java.util.Calendar.Builder builder35 = builder12.setTimeZone(timeZone26);
        java.text.ParsePosition parsePosition37 = new java.text.ParsePosition(16);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        boolean boolean40 = locale38.hasExtensions();
        boolean boolean41 = parsePosition37.equals((java.lang.Object) locale38);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(locale38);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale38);
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.util.Locale locale45 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str46 = locale44.getDisplayLanguage(locale45);
        java.lang.String str47 = locale44.getLanguage();
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.util.Locale locale50 = locale49.stripExtensions();
        java.lang.String str51 = locale44.getDisplayLanguage(locale49);
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        java.util.Locale locale57 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale57.getDisplayVariant(locale58);
        java.util.Locale.setDefault(locale58);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone54, locale58);
        java.lang.String str64 = locale44.getDisplayLanguage(locale58);
        java.util.Locale locale65 = locale58.stripExtensions();
        java.lang.String str66 = locale38.getDisplayLanguage(locale65);
        java.lang.String str67 = locale65.getScript();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone26, locale65);
        java.util.TimeZone timeZone69 = calendar68.getTimeZone();
        java.util.TimeZone timeZone71 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int72 = timeZone71.getRawOffset();
        java.time.ZoneId zoneId73 = timeZone71.toZoneId();
        java.util.TimeZone timeZone74 = java.util.TimeZone.getTimeZone(zoneId73);
        java.util.TimeZone timeZone75 = java.util.TimeZone.getTimeZone(zoneId73);
        java.util.TimeZone timeZone76 = java.util.TimeZone.getTimeZone(zoneId73);
        java.util.TimeZone.setDefault(timeZone76);
        int int79 = timeZone76.getOffset(0L);
        boolean boolean80 = timeZone69.hasSameRules(timeZone76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar68", (calendar23.compareTo(calendar68) == 0) == calendar23.equals(calendar68));
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test293");
        java.text.ParsePosition parsePosition1 = new java.text.ParsePosition(16);
        java.util.Locale locale2 = java.util.Locale.CHINESE;
        java.lang.String str3 = locale2.getLanguage();
        boolean boolean4 = locale2.hasExtensions();
        boolean boolean5 = parsePosition1.equals((java.lang.Object) locale2);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale2);
        java.lang.String str7 = locale2.getISO3Language();
        java.util.TimeZone timeZone10 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone10);
        java.lang.String str12 = fastDateFormat11.getPattern();
        java.lang.String str14 = fastDateFormat11.format(1645513660686L);
        java.lang.String str16 = fastDateFormat11.format((long) 40);
        java.util.TimeZone timeZone17 = fastDateFormat11.getTimeZone();
        java.util.TimeZone timeZone18 = fastDateFormat11.getTimeZone();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat19 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, timeZone18);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute23 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray24 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList25 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList25, languageRangeArray24);
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        boolean boolean29 = locale28.hasExtensions();
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.lang.String str32 = locale31.getLanguage();
        java.util.Locale[] localeArray33 = new java.util.Locale[] { locale27, locale28, locale30, locale31 };
        java.util.ArrayList<java.util.Locale> localeList34 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList34, localeArray33);
        java.util.Locale.FilteringMode filteringMode36 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList37 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList25, (java.util.Collection<java.util.Locale>) localeList34, filteringMode36);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList39 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale40 = java.util.Locale.CHINESE;
        java.lang.String str41 = locale40.getLanguage();
        java.util.Set<java.lang.String> strSet42 = locale40.getUnicodeLocaleAttributes();
        java.lang.String str43 = java.util.Locale.lookupTag(languageRangeList39, (java.util.Collection<java.lang.String>) strSet42);
        boolean boolean44 = localeList37.containsAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean46 = localeList37.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator47 = localeList37.spliterator();
        java.util.Locale locale51 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale52 = java.util.Locale.ROOT;
        java.lang.String str53 = locale51.getDisplayScript(locale52);
        java.lang.String str54 = locale51.getISO3Language();
        boolean boolean55 = localeList37.add(locale51);
        boolean boolean56 = attribute23.equals((java.lang.Object) locale51);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat57 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone22, locale51);
        java.util.Calendar calendar58 = java.util.Calendar.getInstance(timeZone18, locale51);
        java.lang.String str59 = locale2.getDisplayVariant(locale51);
        java.lang.String str60 = locale2.getDisplayCountry();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar58", (calendar6.compareTo(calendar58) == 0) == calendar6.equals(calendar58));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test294");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder12 = builder5.setTimeOfDay((int) ' ', 52, 16);
        java.util.Calendar.Builder builder14 = builder5.setLenient(true);
        java.util.Calendar calendar15 = builder5.build();
        java.util.Calendar.Builder builder19 = builder5.setTimeOfDay(56, 1, 61);
        java.util.TimeZone timeZone21 = java.util.TimeZone.getTimeZone("22 Feb 2022 07:08:26 GMT");
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone23);
        java.lang.String str25 = fastDateFormat24.getPattern();
        java.lang.String str27 = fastDateFormat24.format(1645513660686L);
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        java.lang.String str30 = fastDateFormat24.format(date28);
        java.lang.String str32 = fastDateFormat24.format((long) 32769);
        java.util.TimeZone timeZone33 = fastDateFormat24.getTimeZone();
        java.util.TimeZone.setDefault(timeZone33);
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(timeZone33);
        timeZone33.setRawOffset(4);
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone33);
        boolean boolean39 = timeZone21.hasSameRules(timeZone33);
        java.time.ZoneId zoneId40 = timeZone21.toZoneId();
        java.util.TimeZone timeZone41 = java.util.TimeZone.getTimeZone(zoneId40);
        java.util.TimeZone timeZone42 = java.util.TimeZone.getTimeZone(zoneId40);
        java.util.TimeZone timeZone43 = java.util.TimeZone.getTimeZone(zoneId40);
        java.util.TimeZone timeZone44 = java.util.TimeZone.getTimeZone(zoneId40);
        java.util.Calendar.Builder builder45 = builder5.setTimeZone(timeZone44);
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(timeZone44);
        java.lang.Object obj47 = timeZone44.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar35 and calendar46", (calendar35.compareTo(calendar46) == 0) == calendar35.equals(calendar46));
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test295");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder1 = builder0.clear();
        java.util.Locale locale2 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale3 = java.util.Locale.CHINESE;
        java.lang.String str4 = locale3.getLanguage();
        boolean boolean5 = locale3.hasExtensions();
        java.lang.String str6 = locale2.getDisplayVariant(locale3);
        java.util.Locale.Builder builder7 = builder1.setLocale(locale2);
        java.util.Locale locale8 = builder7.build();
        java.util.Locale.Builder builder10 = builder7.addUnicodeLocaleAttribute("German");
        java.util.Locale.Builder builder13 = builder10.setExtension('a', "ita");
        java.util.Locale locale14 = builder13.build();
        java.util.Locale locale15 = java.util.Locale.CHINA;
        java.util.Locale.Builder builder16 = builder13.setLocale(locale15);
        java.util.Locale.Builder builder17 = builder16.clearExtensions();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        boolean boolean23 = timeZone21.hasSameRules(timeZone22);
        boolean boolean24 = timeZone20.hasSameRules(timeZone21);
        timeZone20.setID("\u4e2d\u6587\u53f0\u7063)");
        int int28 = timeZone20.getOffset(1645513548538L);
        boolean boolean29 = timeZone20.observesDaylightTime();
        java.util.Locale locale32 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat33 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale32);
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.lang.String str35 = locale32.getDisplayName(locale34);
        java.util.Calendar calendar36 = java.util.Calendar.getInstance(timeZone20, locale34);
        java.util.TimeZone timeZone39 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute40 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray41 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList42 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList42, languageRangeArray41);
        java.util.Locale locale44 = java.util.Locale.GERMAN;
        java.util.Locale locale45 = java.util.Locale.FRANCE;
        boolean boolean46 = locale45.hasExtensions();
        java.util.Locale locale47 = java.util.Locale.FRANCE;
        java.util.Locale locale48 = java.util.Locale.CHINESE;
        java.lang.String str49 = locale48.getLanguage();
        java.util.Locale[] localeArray50 = new java.util.Locale[] { locale44, locale45, locale47, locale48 };
        java.util.ArrayList<java.util.Locale> localeList51 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList51, localeArray50);
        java.util.Locale.FilteringMode filteringMode53 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList54 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList42, (java.util.Collection<java.util.Locale>) localeList51, filteringMode53);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList56 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale57 = java.util.Locale.CHINESE;
        java.lang.String str58 = locale57.getLanguage();
        java.util.Set<java.lang.String> strSet59 = locale57.getUnicodeLocaleAttributes();
        java.lang.String str60 = java.util.Locale.lookupTag(languageRangeList56, (java.util.Collection<java.lang.String>) strSet59);
        boolean boolean61 = localeList54.containsAll((java.util.Collection<java.lang.String>) strSet59);
        boolean boolean63 = localeList54.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator64 = localeList54.spliterator();
        java.util.Locale locale68 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale69 = java.util.Locale.ROOT;
        java.lang.String str70 = locale68.getDisplayScript(locale69);
        java.lang.String str71 = locale68.getISO3Language();
        boolean boolean72 = localeList54.add(locale68);
        boolean boolean73 = attribute40.equals((java.lang.Object) locale68);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat74 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone39, locale68);
        boolean boolean75 = timeZone20.hasSameRules(timeZone39);
        java.text.ParsePosition parsePosition77 = new java.text.ParsePosition(16);
        java.util.Locale locale78 = java.util.Locale.CHINESE;
        java.lang.String str79 = locale78.getLanguage();
        boolean boolean80 = locale78.hasExtensions();
        boolean boolean81 = parsePosition77.equals((java.lang.Object) locale78);
        java.util.Locale locale82 = locale78.stripExtensions();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat83 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (short) 0, timeZone39, locale78);
        java.util.Locale locale84 = fastDateFormat83.getLocale();
        java.util.Locale.Builder builder85 = builder17.setLocale(locale84);
        java.util.TimeZone timeZone86 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone87 = java.util.TimeZone.getDefault();
        boolean boolean88 = timeZone86.hasSameRules(timeZone87);
        boolean boolean89 = timeZone86.observesDaylightTime();
        java.util.Locale locale90 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet91 = locale90.getUnicodeLocaleAttributes();
        java.util.Calendar calendar92 = java.util.Calendar.getInstance(timeZone86, locale90);
        boolean boolean93 = locale90.hasExtensions();
        java.util.Set<java.lang.String> strSet94 = locale90.getUnicodeLocaleKeys();
        java.lang.String str95 = locale90.getDisplayCountry();
        java.lang.String str96 = locale90.getISO3Country();
        java.util.Locale.Builder builder97 = builder85.setLocale(locale90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar36 and calendar92", (calendar36.compareTo(calendar92) == 0) == calendar36.equals(calendar92));
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test296");
        java.util.Locale locale0 = java.util.Locale.GERMANY;
        java.util.Locale locale2 = new java.util.Locale("Chinese");
        java.lang.String str3 = locale0.getDisplayLanguage(locale2);
        java.util.Locale locale4 = java.util.Locale.CHINESE;
        java.lang.String str5 = locale4.getLanguage();
        boolean boolean6 = locale4.hasExtensions();
        java.lang.String str7 = locale4.getDisplayCountry();
        java.lang.String str8 = locale4.getISO3Language();
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.lang.String str11 = locale10.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale10);
        java.lang.String str13 = locale4.getDisplayName(locale10);
        java.util.Locale.setDefault(locale4);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.Locale locale22 = java.util.Locale.ITALIAN;
        boolean boolean23 = fastDateFormat18.equals((java.lang.Object) locale22);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone15, locale22);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.lang.String str27 = locale22.getDisplayVariant(locale25);
        java.lang.String str28 = locale22.getDisplayScript();
        java.lang.String str29 = locale4.getDisplayCountry(locale22);
        java.lang.String str30 = locale0.getDisplayCountry(locale4);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(locale4);
        java.lang.Object obj32 = locale4.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar24 and calendar31", (calendar24.compareTo(calendar31) == 0) == calendar24.equals(calendar31));
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test297");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str4 = fastDateFormat2.format((long) (byte) -1);
        java.text.ParsePosition parsePosition7 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj8 = fastDateFormat2.parseObject("GMT+00:00", parsePosition7);
        java.util.TimeZone timeZone10 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone10);
        java.lang.String str12 = fastDateFormat11.getPattern();
        java.lang.String str14 = fastDateFormat11.format(1645513660686L);
        java.util.TimeZone timeZone15 = fastDateFormat11.getTimeZone();
        java.lang.String str16 = timeZone15.getID();
        java.util.Locale locale17 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale18 = java.util.Locale.CHINESE;
        java.lang.String str19 = locale18.getLanguage();
        boolean boolean20 = locale18.hasExtensions();
        java.lang.String str21 = locale17.getDisplayVariant(locale18);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone15, locale17);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale17);
        boolean boolean24 = calendar23.isWeekDateSupported();
        java.lang.String str25 = fastDateFormat2.format(calendar23);
        java.lang.String str27 = fastDateFormat2.format(1645514003677L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar23", (calendar22.compareTo(calendar23) == 0) == calendar22.equals(calendar23));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test298");
        java.util.Locale locale2 = new java.util.Locale("22 Feb 2022 07:07:43 GMT", "\u7fa9\u5927\u5229\u6587");
        java.util.Set<java.lang.Character> charSet3 = locale2.getExtensionKeys();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.Locale locale65 = locale64.stripExtensions();
        java.lang.String str66 = locale2.getDisplayVariant(locale65);
        java.util.Calendar calendar67 = java.util.Calendar.getInstance(locale65);
        java.util.Set<java.lang.String> strSet68 = locale65.getUnicodeLocaleAttributes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar67", (calendar6.compareTo(calendar67) == 0) == calendar6.equals(calendar67));
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test299");
        java.text.AttributedCharacterIterator.Attribute attribute0 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale locale1 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet2 = locale1.getUnicodeLocaleAttributes();
        java.util.Locale locale3 = locale1.stripExtensions();
        java.util.Locale locale4 = java.util.Locale.CHINESE;
        java.lang.String str5 = locale3.getDisplayCountry(locale4);
        java.lang.String str6 = locale4.toLanguageTag();
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(locale4);
        boolean boolean8 = attribute0.equals((java.lang.Object) calendar7);
        java.util.Locale locale12 = new java.util.Locale("FR", "\u5e74\u6708\u65e5']", "und");
        boolean boolean13 = attribute0.equals((java.lang.Object) "\u5e74\u6708\u65e5']");
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        java.util.TimeZone.setDefault(timeZone15);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone15);
        calendar20.set(8, 4);
        int int24 = calendar20.getWeeksInWeekYear();
        java.util.Locale locale28 = new java.util.Locale("", "hi!", "");
        boolean boolean29 = calendar20.before((java.lang.Object) locale28);
        java.lang.String str30 = locale28.getDisplayName();
        java.util.Locale locale31 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet32 = locale31.getUnicodeLocaleAttributes();
        java.util.Locale locale33 = locale31.stripExtensions();
        java.lang.String str34 = locale28.getDisplayScript(locale33);
        boolean boolean35 = locale28.hasExtensions();
        boolean boolean36 = attribute0.equals((java.lang.Object) locale28);
        java.lang.String str37 = attribute0.toString();
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone41 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        boolean boolean43 = timeZone41.hasSameRules(timeZone42);
        boolean boolean44 = timeZone40.hasSameRules(timeZone41);
        java.util.TimeZone.setDefault(timeZone41);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat46 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (byte) 0, timeZone41);
        java.util.Locale locale47 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet48 = locale47.getUnicodeLocaleAttributes();
        java.lang.String str49 = locale47.getDisplayName();
        java.lang.String str50 = locale47.getScript();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat51 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone41, locale47);
        java.util.TimeZone.setDefault(timeZone41);
        java.util.TimeZone timeZone54 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat55 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone54);
        java.lang.String str56 = fastDateFormat55.getPattern();
        java.lang.String str58 = fastDateFormat55.format(1645513660686L);
        java.util.Date date59 = new java.util.Date();
        int int60 = date59.getSeconds();
        java.lang.String str61 = fastDateFormat55.format(date59);
        java.lang.String str63 = fastDateFormat55.format((long) 32769);
        java.util.TimeZone timeZone64 = fastDateFormat55.getTimeZone();
        java.util.TimeZone.setDefault(timeZone64);
        java.util.Calendar calendar66 = java.util.Calendar.getInstance(timeZone64);
        timeZone64.setRawOffset(4);
        java.util.Calendar calendar69 = java.util.Calendar.getInstance(timeZone64);
        boolean boolean70 = timeZone41.hasSameRules(timeZone64);
        boolean boolean71 = attribute0.equals((java.lang.Object) timeZone41);
        java.util.TimeZone.setDefault(timeZone41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar66", (calendar7.compareTo(calendar66) == 0) == calendar7.equals(calendar66));
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test300");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        long long2 = calendar1.getTimeInMillis();
        java.lang.String str3 = calendar1.getCalendarType();
        int int5 = calendar1.getGreatestMinimum((int) (short) 1);
        calendar1.setLenient(false);
        calendar1.setLenient(false);
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        boolean boolean12 = timeZone10.hasSameRules(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone10);
        int int15 = calendar13.getActualMinimum(6);
        calendar13.set((int) (short) 1, 41, 16, 16, 32772);
        int int22 = calendar13.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone23 = calendar13.getTimeZone();
        java.util.Date date24 = calendar13.getTime();
        int int25 = date24.getSeconds();
        int int26 = date24.getSeconds();
        java.time.Instant instant27 = date24.toInstant();
        java.util.Date date28 = java.util.Date.from(instant27);
        calendar1.setTime(date28);
        java.time.Instant instant30 = date28.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar1 and calendar13", (calendar1.compareTo(calendar13) == 0) == calendar1.equals(calendar13));
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test301");
        java.util.Locale.LanguageRange[] languageRangeArray0 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList1 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList1, languageRangeArray0);
        java.util.Locale locale3 = java.util.Locale.GERMAN;
        java.util.Locale locale4 = java.util.Locale.FRANCE;
        boolean boolean5 = locale4.hasExtensions();
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        java.util.Locale[] localeArray9 = new java.util.Locale[] { locale3, locale4, locale6, locale7 };
        java.util.ArrayList<java.util.Locale> localeList10 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList10, localeArray9);
        java.util.Locale.FilteringMode filteringMode12 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList13 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList1, (java.util.Collection<java.util.Locale>) localeList10, filteringMode12);
        boolean boolean14 = localeList13.isEmpty();
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        long long17 = date15.getTime();
        date15.setTime((long) (byte) 0);
        java.util.Date date20 = new java.util.Date();
        int int21 = date20.getDay();
        int int22 = date20.getTimezoneOffset();
        boolean boolean23 = date15.after(date20);
        date15.setMinutes(18);
        long long26 = date15.getTime();
        boolean boolean27 = localeList13.remove((java.lang.Object) date15);
        int int29 = localeList13.indexOf((java.lang.Object) 1645513668045L);
        java.util.Spliterator<java.util.Locale> localeSpliterator30 = localeList13.spliterator();
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        boolean boolean33 = timeZone31.hasSameRules(timeZone32);
        boolean boolean34 = timeZone31.observesDaylightTime();
        java.util.Locale locale35 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet36 = locale35.getUnicodeLocaleAttributes();
        java.util.Calendar calendar37 = java.util.Calendar.getInstance(timeZone31, locale35);
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone31);
        calendar38.setMinimalDaysInFirstWeek(12);
        java.util.Date date41 = new java.util.Date();
        int int42 = date41.getDay();
        int int43 = date41.getTimezoneOffset();
        int int44 = date41.getYear();
        java.util.Date date45 = new java.util.Date();
        int int46 = date45.getSeconds();
        java.util.Date date47 = new java.util.Date();
        int int48 = date47.getTimezoneOffset();
        date47.setMinutes(5);
        boolean boolean51 = date45.after(date47);
        java.util.TimeZone timeZone53 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat54 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone53);
        java.lang.String str55 = fastDateFormat54.getPattern();
        java.util.Date date56 = new java.util.Date();
        int int57 = date56.getSeconds();
        java.lang.String str58 = fastDateFormat54.format(date56);
        boolean boolean59 = date45.before(date56);
        java.util.Date date60 = new java.util.Date();
        int int61 = date60.getTimezoneOffset();
        date60.setMinutes((int) (byte) -1);
        int int64 = date60.getMonth();
        boolean boolean65 = date56.after(date60);
        boolean boolean66 = date41.after(date56);
        int int67 = date41.getDay();
        java.util.TimeZone timeZone68 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone69 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone70 = java.util.TimeZone.getDefault();
        boolean boolean71 = timeZone69.hasSameRules(timeZone70);
        boolean boolean72 = timeZone68.hasSameRules(timeZone69);
        java.util.TimeZone.setDefault(timeZone69);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone69);
        long long75 = calendar74.getTimeInMillis();
        calendar74.setTimeInMillis(1645513661984L);
        int int79 = calendar74.getMinimum(6);
        java.util.Date date80 = calendar74.getTime();
        boolean boolean81 = date41.before(date80);
        calendar38.setTime(date41);
        java.util.Date date83 = calendar38.getTime();
        boolean boolean84 = localeList13.contains((java.lang.Object) calendar38);
        localeList13.clear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar37 and calendar38", (calendar37.compareTo(calendar38) == 0) == calendar37.equals(calendar38));
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test302");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.Date date61 = new java.util.Date();
        int int62 = date61.getSeconds();
        java.util.Date date63 = new java.util.Date();
        int int64 = date63.getTimezoneOffset();
        date63.setMinutes(5);
        boolean boolean67 = date61.after(date63);
        int int68 = date61.getHours();
        int int69 = localeList56.lastIndexOf((java.lang.Object) date61);
        java.util.ListIterator<java.util.Locale> localeItor70 = localeList56.listIterator();
        java.util.ListIterator<java.util.Locale> localeItor71 = localeList56.listIterator();
        java.util.Iterator<java.util.Locale> localeItor72 = localeList56.iterator();
        java.lang.Object[] objArray73 = localeList56.toArray();
        java.util.Locale.Category category74 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone75 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone77 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat78 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone77);
        java.lang.String str79 = fastDateFormat78.getPattern();
        java.lang.String str81 = fastDateFormat78.format(1645513660686L);
        java.util.Locale locale82 = java.util.Locale.ITALIAN;
        boolean boolean83 = fastDateFormat78.equals((java.lang.Object) locale82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone75, locale82);
        java.util.Locale locale85 = java.util.Locale.FRANCE;
        boolean boolean86 = locale85.hasExtensions();
        java.lang.String str87 = locale82.getDisplayVariant(locale85);
        java.lang.String str88 = locale82.getDisplayName();
        java.lang.String str89 = locale82.getISO3Language();
        java.util.Locale.setDefault(category74, locale82);
        java.util.Set<java.lang.String> strSet91 = locale82.getUnicodeLocaleKeys();
        java.util.stream.Stream<java.lang.String> strStream92 = strSet91.parallelStream();
        boolean boolean93 = localeList56.containsAll((java.util.Collection<java.lang.String>) strSet91);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar84", (calendar2.compareTo(calendar84) == 0) == calendar2.equals(calendar84));
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test303");
        java.util.Locale.LanguageRange languageRange1 = new java.util.Locale.LanguageRange("CHN");
        double double2 = languageRange1.getWeight();
        java.lang.String str3 = languageRange1.getRange();
        java.lang.String str4 = languageRange1.getRange();
        double double5 = languageRange1.getWeight();
        double double6 = languageRange1.getWeight();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        boolean boolean10 = timeZone8.hasSameRules(timeZone9);
        boolean boolean11 = timeZone8.observesDaylightTime();
        int int12 = timeZone8.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone8);
        timeZone8.setRawOffset(9);
        timeZone8.setID("7:07:40 AM UTC");
        int int19 = timeZone8.getOffset(1645513660365L);
        int int21 = timeZone8.getOffset((long) 22);
        boolean boolean22 = timeZone8.observesDaylightTime();
        boolean boolean23 = timeZone8.observesDaylightTime();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone26);
        java.lang.String str28 = fastDateFormat27.getPattern();
        java.lang.String str30 = fastDateFormat27.format(1645513660686L);
        java.util.Locale locale31 = java.util.Locale.ITALIAN;
        boolean boolean32 = fastDateFormat27.equals((java.lang.Object) locale31);
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(timeZone24, locale31);
        java.util.Locale locale34 = java.util.Locale.FRANCE;
        boolean boolean35 = locale34.hasExtensions();
        java.lang.String str36 = locale31.getDisplayVariant(locale34);
        java.lang.String str37 = locale31.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray38 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList39 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList39, languageRangeArray38);
        java.util.Locale locale41 = java.util.Locale.GERMAN;
        java.util.Locale locale42 = java.util.Locale.FRANCE;
        boolean boolean43 = locale42.hasExtensions();
        java.util.Locale locale44 = java.util.Locale.FRANCE;
        java.util.Locale locale45 = java.util.Locale.CHINESE;
        java.lang.String str46 = locale45.getLanguage();
        java.util.Locale[] localeArray47 = new java.util.Locale[] { locale41, locale42, locale44, locale45 };
        java.util.ArrayList<java.util.Locale> localeList48 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList48, localeArray47);
        java.util.Locale.FilteringMode filteringMode50 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList51 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList39, (java.util.Collection<java.util.Locale>) localeList48, filteringMode50);
        java.util.Spliterator<java.util.Locale> localeSpliterator52 = localeList51.spliterator();
        java.util.Iterator<java.util.Locale> localeItor53 = localeList51.iterator();
        java.util.Locale locale54 = java.util.Locale.ROOT;
        boolean boolean55 = localeList51.remove((java.lang.Object) locale54);
        java.lang.String str56 = locale54.getISO3Country();
        java.lang.String str57 = locale31.getDisplayVariant(locale54);
        java.lang.String str58 = locale54.getDisplayScript();
        java.util.Set<java.lang.String> strSet59 = locale54.getUnicodeLocaleKeys();
        java.util.Locale locale60 = java.util.Locale.KOREAN;
        java.lang.String str61 = locale60.toLanguageTag();
        java.lang.String str62 = locale54.getDisplayVariant(locale60);
        java.util.Calendar calendar63 = java.util.Calendar.getInstance(timeZone8, locale60);
        boolean boolean64 = languageRange1.equals((java.lang.Object) timeZone8);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar33 and calendar63", (calendar33.compareTo(calendar63) == 0) == calendar33.equals(calendar63));
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test304");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.Locale locale11 = fastDateFormat2.getLocale();
        java.util.TimeZone timeZone12 = fastDateFormat2.getTimeZone();
        java.lang.String str13 = timeZone12.getID();
        java.util.Calendar.Builder builder14 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder19 = builder14.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar20 = builder19.build();
        java.util.Calendar.Builder builder22 = builder19.setLenient(true);
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(locale23);
        java.util.Locale locale26 = locale23.stripExtensions();
        java.util.Calendar.Builder builder27 = builder22.setLocale(locale23);
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        boolean boolean31 = timeZone29.hasSameRules(timeZone30);
        boolean boolean32 = timeZone28.hasSameRules(timeZone29);
        boolean boolean33 = timeZone28.observesDaylightTime();
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(timeZone28);
        java.lang.String str35 = timeZone28.getID();
        java.util.Calendar.Builder builder36 = builder27.setTimeZone(timeZone28);
        boolean boolean37 = timeZone12.hasSameRules(timeZone28);
        boolean boolean38 = timeZone28.observesDaylightTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar34", (calendar25.compareTo(calendar34) == 0) == calendar25.equals(calendar34));
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test305");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.text.ParsePosition parsePosition6 = new java.text.ParsePosition(16);
        parsePosition6.setIndex(10);
        java.lang.Object obj9 = fastDateFormat2.parseObject("22 Feb 2022 07:07:40 GMT", parsePosition6);
        java.util.Locale.Builder builder10 = new java.util.Locale.Builder();
        java.util.Locale locale11 = builder10.build();
        boolean boolean12 = fastDateFormat2.equals((java.lang.Object) builder10);
        java.util.TimeZone timeZone13 = fastDateFormat2.getTimeZone();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        boolean boolean16 = timeZone14.hasSameRules(timeZone15);
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone14);
        int int19 = calendar17.getActualMinimum(6);
        calendar17.setMinimalDaysInFirstWeek((int) (byte) 0);
        calendar17.set(41, 35, (int) (short) 0, (int) 'x', 6);
        java.lang.String str28 = calendar17.getCalendarType();
        boolean boolean29 = fastDateFormat2.equals((java.lang.Object) str28);
        boolean boolean30 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(locale31);
        int int34 = calendar32.getActualMinimum((int) (byte) 0);
        int int35 = calendar32.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone37 = java.util.TimeZone.getDefault();
        boolean boolean38 = timeZone36.hasSameRules(timeZone37);
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(timeZone36);
        int int40 = calendar39.getFirstDayOfWeek();
        boolean boolean41 = calendar32.before((java.lang.Object) calendar39);
        calendar32.setMinimalDaysInFirstWeek(5);
        calendar32.setMinimalDaysInFirstWeek(24);
        java.lang.String str46 = fastDateFormat2.format(calendar32);
        boolean boolean47 = fastDateFormat2.getTimeZoneOverridesCalendar();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar32 and calendar39", (calendar32.compareTo(calendar39) == 0) == calendar32.equals(calendar39));
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test306");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        java.util.Locale.LanguageRange[] languageRangeArray76 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList77 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList77, languageRangeArray76);
        java.util.Locale locale79 = java.util.Locale.GERMAN;
        java.util.Locale locale80 = java.util.Locale.FRANCE;
        boolean boolean81 = locale80.hasExtensions();
        java.util.Locale locale82 = java.util.Locale.FRANCE;
        java.util.Locale locale83 = java.util.Locale.CHINESE;
        java.lang.String str84 = locale83.getLanguage();
        java.util.Locale[] localeArray85 = new java.util.Locale[] { locale79, locale80, locale82, locale83 };
        java.util.ArrayList<java.util.Locale> localeList86 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList86, localeArray85);
        java.util.Locale.FilteringMode filteringMode88 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList89 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList77, (java.util.Collection<java.util.Locale>) localeList86, filteringMode88);
        boolean boolean90 = localeList56.remove((java.lang.Object) filteringMode88);
        boolean boolean92 = localeList56.remove((java.lang.Object) 100.0f);
        int int93 = localeList56.size();
        boolean boolean94 = localeList56.isEmpty();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar47 and calendar74", (calendar47.compareTo(calendar74) == 0) == calendar47.equals(calendar74));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test307");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder12 = builder5.setTimeOfDay((int) ' ', 52, 16);
        java.util.Calendar.Builder builder17 = builder5.setTimeOfDay(16, 1970, 2, 49);
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone18.hasSameRules(timeZone19);
        int int24 = timeZone18.getOffset(1645513673028L);
        java.util.Calendar.Builder builder25 = builder5.setTimeZone(timeZone18);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone18);
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        boolean boolean32 = timeZone30.hasSameRules(timeZone31);
        boolean boolean33 = timeZone29.hasSameRules(timeZone30);
        timeZone29.setID("\u4e2d\u6587\u53f0\u7063)");
        int int37 = timeZone29.getOffset(1645513548538L);
        boolean boolean38 = timeZone29.observesDaylightTime();
        java.util.Locale locale41 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat42 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale41);
        java.util.Locale locale43 = java.util.Locale.CANADA;
        java.lang.String str44 = locale41.getDisplayName(locale43);
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(timeZone29, locale43);
        java.util.TimeZone timeZone48 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute49 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray50 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList51 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList51, languageRangeArray50);
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.FRANCE;
        boolean boolean55 = locale54.hasExtensions();
        java.util.Locale locale56 = java.util.Locale.FRANCE;
        java.util.Locale locale57 = java.util.Locale.CHINESE;
        java.lang.String str58 = locale57.getLanguage();
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale53, locale54, locale56, locale57 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList51, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList65 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale66 = java.util.Locale.CHINESE;
        java.lang.String str67 = locale66.getLanguage();
        java.util.Set<java.lang.String> strSet68 = locale66.getUnicodeLocaleAttributes();
        java.lang.String str69 = java.util.Locale.lookupTag(languageRangeList65, (java.util.Collection<java.lang.String>) strSet68);
        boolean boolean70 = localeList63.containsAll((java.util.Collection<java.lang.String>) strSet68);
        boolean boolean72 = localeList63.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator73 = localeList63.spliterator();
        java.util.Locale locale77 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale78 = java.util.Locale.ROOT;
        java.lang.String str79 = locale77.getDisplayScript(locale78);
        java.lang.String str80 = locale77.getISO3Language();
        boolean boolean81 = localeList63.add(locale77);
        boolean boolean82 = attribute49.equals((java.lang.Object) locale77);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat83 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone48, locale77);
        boolean boolean84 = timeZone29.hasSameRules(timeZone48);
        java.text.ParsePosition parsePosition86 = new java.text.ParsePosition(16);
        java.util.Locale locale87 = java.util.Locale.CHINESE;
        java.lang.String str88 = locale87.getLanguage();
        boolean boolean89 = locale87.hasExtensions();
        boolean boolean90 = parsePosition86.equals((java.lang.Object) locale87);
        java.util.Locale locale91 = locale87.stripExtensions();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat92 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (short) 0, timeZone48, locale87);
        java.lang.String str93 = locale87.getISO3Language();
        java.util.Calendar calendar94 = java.util.Calendar.getInstance(timeZone18, locale87);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar45", (calendar26.compareTo(calendar45) == 0) == calendar26.equals(calendar45));
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test308");
        java.text.Format.Field field0 = null;
        java.text.FieldPosition fieldPosition2 = new java.text.FieldPosition(field0, 36);
        int int3 = fieldPosition2.getField();
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getTimezoneOffset();
        date6.setMinutes(5);
        boolean boolean10 = date4.after(date6);
        java.util.TimeZone timeZone12 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone12);
        java.lang.String str14 = fastDateFormat13.getPattern();
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        java.lang.String str17 = fastDateFormat13.format(date15);
        boolean boolean18 = date4.before(date15);
        date15.setHours(40);
        int int21 = date15.getSeconds();
        java.util.Locale locale22 = java.util.Locale.CHINESE;
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale22);
        int int25 = calendar23.getActualMinimum((int) (byte) 0);
        boolean boolean26 = calendar23.isWeekDateSupported();
        java.util.Date date27 = calendar23.getTime();
        date27.setMonth(23);
        int int30 = date27.getMinutes();
        boolean boolean31 = date15.after(date27);
        boolean boolean32 = fieldPosition2.equals((java.lang.Object) date15);
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone35 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat36 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone35);
        java.lang.String str37 = fastDateFormat36.getPattern();
        java.lang.String str39 = fastDateFormat36.format(1645513660686L);
        java.util.Locale locale40 = java.util.Locale.ITALIAN;
        boolean boolean41 = fastDateFormat36.equals((java.lang.Object) locale40);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(timeZone33, locale40);
        java.lang.String str43 = locale40.getCountry();
        java.lang.String str44 = locale40.getDisplayVariant();
        java.lang.String str45 = locale40.getISO3Language();
        java.util.Locale locale46 = locale40.stripExtensions();
        java.lang.String str47 = locale46.getCountry();
        boolean boolean48 = fieldPosition2.equals((java.lang.Object) locale46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar42", (calendar23.compareTo(calendar42) == 0) == calendar23.equals(calendar42));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test309");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone0);
        int int8 = timeZone0.getRawOffset();
        java.util.TimeZone timeZone10 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone10);
        java.lang.String str12 = fastDateFormat11.getPattern();
        java.lang.String str14 = fastDateFormat11.format(1645513660686L);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone15.observesDaylightTime();
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet20 = locale19.getUnicodeLocaleAttributes();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone15, locale19);
        boolean boolean22 = timeZone15.observesDaylightTime();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        boolean boolean26 = timeZone24.hasSameRules(timeZone25);
        boolean boolean27 = timeZone23.hasSameRules(timeZone24);
        boolean boolean28 = timeZone15.hasSameRules(timeZone24);
        boolean boolean29 = fastDateFormat11.equals((java.lang.Object) timeZone15);
        java.util.TimeZone timeZone31 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat32 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone31);
        java.lang.String str33 = fastDateFormat32.getPattern();
        java.lang.String str35 = fastDateFormat32.format(1645513660686L);
        java.util.TimeZone timeZone36 = fastDateFormat32.getTimeZone();
        int int37 = timeZone36.getRawOffset();
        java.lang.String str38 = timeZone36.getID();
        boolean boolean39 = timeZone15.hasSameRules(timeZone36);
        java.util.TimeZone.setDefault(timeZone36);
        timeZone36.setRawOffset(63);
        java.util.Locale locale43 = java.util.Locale.TAIWAN;
        java.util.Locale locale44 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str45 = locale43.getDisplayLanguage(locale44);
        java.lang.String str46 = locale43.getLanguage();
        java.util.Locale locale48 = new java.util.Locale("Chinese");
        java.util.Locale locale49 = locale48.stripExtensions();
        java.lang.String str50 = locale43.getDisplayLanguage(locale48);
        java.util.TimeZone timeZone53 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        boolean boolean55 = timeZone53.hasSameRules(timeZone54);
        java.util.Locale locale56 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale57 = java.util.Locale.CHINESE;
        java.lang.String str58 = locale57.getLanguage();
        boolean boolean59 = locale57.hasExtensions();
        java.lang.String str60 = locale56.getDisplayVariant(locale57);
        java.util.Locale.setDefault(locale57);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat62 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone53, locale57);
        java.lang.String str63 = locale43.getDisplayLanguage(locale57);
        java.lang.String str64 = locale43.getCountry();
        java.lang.String str65 = locale43.getCountry();
        java.util.Calendar calendar66 = java.util.Calendar.getInstance(timeZone36, locale43);
        java.lang.String str67 = timeZone0.getDisplayName(locale43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar66", (calendar6.compareTo(calendar66) == 0) == calendar6.equals(calendar66));
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test310");
        java.util.Locale locale1 = new java.util.Locale("Chinese");
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.lang.String str4 = locale1.getExtension('a');
        java.util.Locale locale6 = new java.util.Locale("7:08:04 AM UTC");
        java.util.Locale.Category category7 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale8 = java.util.Locale.getDefault(category7);
        java.util.Locale locale9 = java.util.Locale.getDefault(category7);
        java.util.Locale.Builder builder10 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder11 = builder10.clear();
        java.util.Locale locale12 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale12.getDisplayVariant(locale13);
        java.util.Locale.Builder builder17 = builder11.setLocale(locale12);
        java.util.Locale locale18 = java.util.Locale.PRC;
        java.util.Locale locale19 = java.util.Locale.ROOT;
        java.lang.String str20 = locale18.getDisplayLanguage(locale19);
        java.util.Locale.Builder builder21 = builder17.setLocale(locale19);
        java.util.Locale.setDefault(category7, locale19);
        java.lang.String str23 = locale6.getDisplayName(locale19);
        java.lang.String str24 = locale1.getDisplayLanguage(locale6);
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        java.util.TimeZone.setDefault(timeZone26);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone26);
        timeZone26.setRawOffset((int) (short) -1);
        timeZone26.setID("7:08:02 AM UTC");
        java.util.Locale locale37 = java.util.Locale.getDefault();
        java.lang.String str38 = locale37.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat39 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale37);
        java.lang.String str40 = fastDateFormat39.toString();
        java.util.Date date41 = new java.util.Date();
        int int42 = date41.getTimezoneOffset();
        date41.setMinutes(5);
        int int45 = date41.getSeconds();
        java.lang.String str46 = fastDateFormat39.format(date41);
        java.util.Locale locale47 = fastDateFormat39.getLocale();
        java.util.Calendar calendar48 = java.util.Calendar.getInstance(timeZone26, locale47);
        java.lang.String str49 = locale6.getDisplayName(locale47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar31", (calendar2.compareTo(calendar31) == 0) == calendar2.equals(calendar31));
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test311");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        java.time.Instant instant9 = calendar6.toInstant();
        java.util.TimeZone timeZone11 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone11);
        java.lang.String str14 = fastDateFormat12.format((long) (byte) -1);
        java.text.ParsePosition parsePosition17 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj18 = fastDateFormat12.parseObject("GMT+00:00", parsePosition17);
        java.util.TimeZone timeZone19 = fastDateFormat12.getTimeZone();
        boolean boolean20 = calendar6.before((java.lang.Object) fastDateFormat12);
        boolean boolean21 = calendar6.isWeekDateSupported();
        int int22 = calendar6.getFirstDayOfWeek();
        long long23 = calendar6.getTimeInMillis();
        java.text.AttributedCharacterIterator.Attribute attribute24 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.lang.String str25 = attribute24.toString();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        boolean boolean27 = attribute24.equals((java.lang.Object) timeZone26);
        java.text.FieldPosition fieldPosition29 = new java.text.FieldPosition(32770);
        int int30 = fieldPosition29.getBeginIndex();
        boolean boolean32 = fieldPosition29.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone34 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat35 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone34);
        java.lang.String str36 = fastDateFormat35.getPattern();
        java.lang.String str38 = fastDateFormat35.format(1645513660686L);
        java.util.Locale locale39 = java.util.Locale.ITALIAN;
        boolean boolean40 = fastDateFormat35.equals((java.lang.Object) locale39);
        int int41 = fastDateFormat35.getMaxLengthEstimate();
        boolean boolean42 = fieldPosition29.equals((java.lang.Object) fastDateFormat35);
        java.util.TimeZone timeZone43 = fastDateFormat35.getTimeZone();
        timeZone43.setRawOffset(0);
        boolean boolean46 = timeZone26.hasSameRules(timeZone43);
        int int47 = timeZone43.getRawOffset();
        timeZone43.setID("7:10:14 AM GMT+00:00");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        int int52 = calendar51.getWeeksInWeekYear();
        int int53 = calendar51.getWeeksInWeekYear();
        calendar51.add(0, (int) 'a');
        int int57 = calendar51.getFirstDayOfWeek();
        java.util.Locale locale61 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale62 = java.util.Locale.ROOT;
        java.lang.String str63 = locale61.getDisplayScript(locale62);
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(locale61);
        int int66 = calendar64.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone67 = calendar64.getTimeZone();
        boolean boolean68 = calendar51.before((java.lang.Object) timeZone67);
        boolean boolean69 = timeZone43.hasSameRules(timeZone67);
        java.util.Calendar calendar70 = java.util.Calendar.getInstance(timeZone43);
        calendar6.setTimeZone(timeZone43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar51 and calendar70", (calendar51.compareTo(calendar70) == 0) == calendar51.equals(calendar70));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test312");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.lang.String str12 = timeZone11.getID();
        timeZone11.setID("germany");
        java.util.Locale locale15 = java.util.Locale.CHINESE;
        java.util.Calendar calendar16 = java.util.Calendar.getInstance(locale15);
        int int18 = calendar16.getActualMinimum((int) (byte) 0);
        java.util.TimeZone timeZone19 = calendar16.getTimeZone();
        boolean boolean20 = timeZone11.hasSameRules(timeZone19);
        java.util.Locale locale22 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale22);
        int int24 = fastDateFormat23.getMaxLengthEstimate();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        boolean boolean28 = timeZone26.hasSameRules(timeZone27);
        boolean boolean29 = timeZone25.hasSameRules(timeZone26);
        java.util.TimeZone.setDefault(timeZone26);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone26);
        long long32 = calendar31.getTimeInMillis();
        calendar31.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar31.setMinimalDaysInFirstWeek(17);
        calendar31.setMinimalDaysInFirstWeek(3);
        java.lang.String str39 = fastDateFormat23.format(calendar31);
        calendar31.setFirstDayOfWeek(49);
        java.util.Date date42 = new java.util.Date();
        java.lang.String str43 = date42.toGMTString();
        calendar31.setTime(date42);
        boolean boolean45 = timeZone19.inDaylightTime(date42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar16 and calendar31", (calendar16.compareTo(calendar31) == 0) == calendar16.equals(calendar31));
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test313");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean16 = timeZone2.hasSameRules(timeZone15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        boolean boolean22 = locale21.hasExtensions();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        java.util.Locale locale24 = java.util.Locale.CHINESE;
        java.lang.String str25 = locale24.getLanguage();
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale20, locale21, locale23, locale24 };
        java.util.ArrayList<java.util.Locale> localeList27 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList27, localeArray26);
        java.util.Locale.FilteringMode filteringMode29 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList30 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList27, filteringMode29);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList32 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Set<java.lang.String> strSet35 = locale33.getUnicodeLocaleAttributes();
        java.lang.String str36 = java.util.Locale.lookupTag(languageRangeList32, (java.util.Collection<java.lang.String>) strSet35);
        boolean boolean37 = localeList30.containsAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean39 = localeList30.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator40 = localeList30.spliterator();
        java.util.Locale locale44 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale44.getISO3Language();
        boolean boolean48 = localeList30.add(locale44);
        java.util.ListIterator<java.util.Locale> localeItor49 = localeList30.listIterator();
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder50.clear();
        java.util.Locale locale52 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale52.getDisplayVariant(locale53);
        java.util.Locale.Builder builder57 = builder51.setLocale(locale52);
        java.util.Locale locale58 = builder57.build();
        java.util.Locale.Builder builder60 = builder57.addUnicodeLocaleAttribute("German");
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str63 = locale61.getDisplayLanguage(locale62);
        java.util.Locale.Builder builder64 = builder57.setLocale(locale61);
        java.lang.String str65 = locale61.getISO3Country();
        boolean boolean66 = localeList30.add(locale61);
        java.lang.String str67 = locale61.toLanguageTag();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone2, locale61);
        timeZone2.setRawOffset((-46800000));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar68", (calendar11.compareTo(calendar68) == 0) == calendar11.equals(calendar68));
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test314");
        java.util.Date date6 = new java.util.Date((int) (byte) 10, 40, (int) '#', (int) (short) 100, 11, 8);
        java.util.Locale locale11 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale12 = java.util.Locale.ROOT;
        java.lang.String str13 = locale11.getDisplayScript(locale12);
        java.lang.String str14 = locale11.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale11);
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(locale16);
        int int19 = calendar17.getActualMinimum((int) (byte) 0);
        boolean boolean20 = calendar17.isWeekDateSupported();
        java.util.Date date21 = calendar17.getTime();
        date21.setMonth(23);
        java.lang.String str24 = fastDateFormat15.format(date21);
        java.util.Date date25 = new java.util.Date();
        java.lang.String str26 = date25.toGMTString();
        int int27 = date25.getYear();
        java.lang.String str28 = fastDateFormat15.format(date25);
        int int29 = date25.getMonth();
        boolean boolean30 = date6.before(date25);
        long long31 = date25.getTime();
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone34 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat35 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone34);
        java.lang.String str36 = fastDateFormat35.getPattern();
        java.lang.String str38 = fastDateFormat35.format(1645513660686L);
        java.util.Locale locale39 = java.util.Locale.ITALIAN;
        boolean boolean40 = fastDateFormat35.equals((java.lang.Object) locale39);
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(timeZone32, locale39);
        java.util.Locale locale44 = java.util.Locale.FRANCE;
        java.util.Map<java.lang.String, java.lang.Integer> strMap45 = calendar41.getDisplayNames((int) (byte) 1, (int) (short) 0, locale44);
        java.util.TimeZone timeZone47 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        boolean boolean49 = timeZone47.hasSameRules(timeZone48);
        boolean boolean50 = timeZone47.observesDaylightTime();
        int int51 = timeZone47.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat52 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone47);
        timeZone47.setRawOffset(9);
        timeZone47.setID("7:07:40 AM UTC");
        int int58 = timeZone47.getOffset(1645513660365L);
        int int60 = timeZone47.getOffset((long) 22);
        calendar41.setTimeZone(timeZone47);
        boolean boolean62 = date25.equals((java.lang.Object) timeZone47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar41", (calendar17.compareTo(calendar41) == 0) == calendar17.equals(calendar41));
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test315");
        java.util.Locale locale2 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale2);
        java.util.Date date4 = new java.util.Date();
        int int5 = date4.getSeconds();
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getTimezoneOffset();
        date6.setMinutes(5);
        boolean boolean10 = date4.after(date6);
        java.util.TimeZone timeZone12 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone12);
        java.lang.String str14 = fastDateFormat13.getPattern();
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        java.lang.String str17 = fastDateFormat13.format(date15);
        boolean boolean18 = date4.before(date15);
        java.lang.String str19 = fastDateFormat3.format(date4);
        java.util.TimeZone timeZone20 = fastDateFormat3.getTimeZone();
        java.util.Locale locale21 = java.util.Locale.ITALIAN;
        java.util.Locale locale24 = new java.util.Locale("Tue Feb 22 00:05:44 UTC 2022", "GMT+00:00");
        java.lang.String str25 = locale21.getDisplayName(locale24);
        java.util.Set<java.lang.String> strSet26 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone20, locale21);
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        boolean boolean32 = timeZone30.hasSameRules(timeZone31);
        boolean boolean33 = timeZone29.hasSameRules(timeZone30);
        timeZone29.setID("\u4e2d\u6587\u53f0\u7063)");
        int int37 = timeZone29.getOffset(1645513548538L);
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        boolean boolean40 = locale38.hasExtensions();
        java.lang.String str41 = locale38.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat42 = org.apache.commons.lang3.time.FastDateFormat.getInstance("zh", timeZone29, locale38);
        java.lang.String str43 = locale38.getDisplayVariant();
        java.util.Calendar calendar44 = java.util.Calendar.getInstance(locale38);
        java.lang.String str45 = locale38.getCountry();
        java.lang.String str46 = locale38.toLanguageTag();
        java.lang.String str47 = timeZone20.getDisplayName(locale38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar27 and calendar44", (calendar27.compareTo(calendar44) == 0) == calendar27.equals(calendar44));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test316");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Calendar.Builder builder11 = builder5.set(7, 28);
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat15 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone14);
        java.lang.String str16 = fastDateFormat15.getPattern();
        java.lang.String str18 = fastDateFormat15.format(1645513660686L);
        java.util.Locale locale19 = java.util.Locale.ITALIAN;
        boolean boolean20 = fastDateFormat15.equals((java.lang.Object) locale19);
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone12, locale19);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone12);
        java.util.Calendar.Builder builder23 = builder5.setTimeZone(timeZone12);
        java.util.Calendar.Builder builder27 = builder23.setTimeOfDay(1200000, (int) (short) 0, 60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar21 and calendar22", (calendar21.compareTo(calendar22) == 0) == calendar21.equals(calendar22));
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test317");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder1 = builder0.clear();
        java.util.Locale.Builder builder2 = builder0.clearExtensions();
        java.text.ParsePosition parsePosition4 = new java.text.ParsePosition(16);
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        boolean boolean8 = parsePosition4.equals((java.lang.Object) locale5);
        java.lang.String str9 = locale5.getDisplayCountry();
        java.util.Locale.Builder builder10 = builder2.setLocale(locale5);
        java.util.Locale.Builder builder11 = builder10.clear();
        java.util.Locale locale13 = new java.util.Locale("deu");
        java.lang.String str14 = locale13.getDisplayLanguage();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.Locale locale22 = java.util.Locale.ITALIAN;
        boolean boolean23 = fastDateFormat18.equals((java.lang.Object) locale22);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone15, locale22);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.lang.String str27 = locale22.getDisplayVariant(locale25);
        java.lang.String str28 = locale22.getDisplayName();
        java.lang.String str29 = locale22.getISO3Language();
        java.lang.String str30 = locale13.getDisplayName(locale22);
        java.util.Locale locale31 = java.util.Locale.TAIWAN;
        java.util.Locale locale32 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str33 = locale31.getDisplayLanguage(locale32);
        java.lang.String str34 = locale31.getLanguage();
        java.util.Locale locale36 = new java.util.Locale("Chinese");
        java.util.Locale locale37 = locale36.stripExtensions();
        java.lang.String str38 = locale31.getDisplayLanguage(locale36);
        java.lang.String str39 = locale22.getDisplayName(locale36);
        java.lang.String str40 = locale22.getISO3Language();
        java.util.Locale.Builder builder41 = builder10.setLocale(locale22);
        java.util.Calendar.Builder builder42 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder47 = builder42.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder52 = builder42.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder54 = builder42.setLenient(false);
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone56 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone57 = java.util.TimeZone.getDefault();
        boolean boolean58 = timeZone56.hasSameRules(timeZone57);
        boolean boolean59 = timeZone55.hasSameRules(timeZone56);
        boolean boolean60 = timeZone55.observesDaylightTime();
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone55);
        java.util.Calendar.Builder builder62 = builder54.setTimeZone(timeZone55);
        java.util.Calendar.Builder builder66 = builder62.setTimeOfDay(0, 54, 13);
        java.text.ParsePosition parsePosition68 = new java.text.ParsePosition(16);
        java.util.Locale locale69 = java.util.Locale.CHINESE;
        java.lang.String str70 = locale69.getLanguage();
        boolean boolean71 = locale69.hasExtensions();
        boolean boolean72 = parsePosition68.equals((java.lang.Object) locale69);
        java.lang.String str73 = locale69.getDisplayCountry();
        java.lang.String str74 = locale69.getISO3Country();
        java.lang.String str75 = locale69.getDisplayCountry();
        java.util.Calendar.Builder builder76 = builder62.setLocale(locale69);
        java.util.Locale locale77 = locale69.stripExtensions();
        java.lang.String str78 = locale22.getDisplayName(locale77);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar24 and calendar61", (calendar24.compareTo(calendar61) == 0) == calendar24.equals(calendar61));
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test318");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean16 = timeZone2.hasSameRules(timeZone15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        boolean boolean22 = locale21.hasExtensions();
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        java.util.Locale locale24 = java.util.Locale.CHINESE;
        java.lang.String str25 = locale24.getLanguage();
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale20, locale21, locale23, locale24 };
        java.util.ArrayList<java.util.Locale> localeList27 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList27, localeArray26);
        java.util.Locale.FilteringMode filteringMode29 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList30 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList27, filteringMode29);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList32 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale33 = java.util.Locale.CHINESE;
        java.lang.String str34 = locale33.getLanguage();
        java.util.Set<java.lang.String> strSet35 = locale33.getUnicodeLocaleAttributes();
        java.lang.String str36 = java.util.Locale.lookupTag(languageRangeList32, (java.util.Collection<java.lang.String>) strSet35);
        boolean boolean37 = localeList30.containsAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean39 = localeList30.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator40 = localeList30.spliterator();
        java.util.Locale locale44 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale44.getISO3Language();
        boolean boolean48 = localeList30.add(locale44);
        java.util.ListIterator<java.util.Locale> localeItor49 = localeList30.listIterator();
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder50.clear();
        java.util.Locale locale52 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        boolean boolean55 = locale53.hasExtensions();
        java.lang.String str56 = locale52.getDisplayVariant(locale53);
        java.util.Locale.Builder builder57 = builder51.setLocale(locale52);
        java.util.Locale locale58 = builder57.build();
        java.util.Locale.Builder builder60 = builder57.addUnicodeLocaleAttribute("German");
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str63 = locale61.getDisplayLanguage(locale62);
        java.util.Locale.Builder builder64 = builder57.setLocale(locale61);
        java.lang.String str65 = locale61.getISO3Country();
        boolean boolean66 = localeList30.add(locale61);
        java.lang.String str67 = locale61.toLanguageTag();
        java.util.Calendar calendar68 = java.util.Calendar.getInstance(timeZone2, locale61);
        java.util.Locale locale69 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale70 = java.util.Locale.CHINESE;
        java.lang.String str71 = locale70.getLanguage();
        boolean boolean72 = locale70.hasExtensions();
        java.lang.String str73 = locale69.getDisplayVariant(locale70);
        java.util.Locale.setDefault(locale70);
        java.lang.String str75 = locale70.getDisplayLanguage();
        java.lang.String str76 = locale61.getDisplayCountry(locale70);
        java.util.Set<java.lang.String> strSet77 = locale61.getUnicodeLocaleKeys();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar68", (calendar11.compareTo(calendar68) == 0) == calendar11.equals(calendar68));
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test319");
        java.util.Locale locale0 = java.util.Locale.ITALY;
        java.util.Locale locale1 = java.util.Locale.CHINESE;
        java.util.Calendar calendar2 = java.util.Calendar.getInstance(locale1);
        java.util.Locale locale3 = java.util.Locale.FRANCE;
        java.util.Locale locale4 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.lang.String str6 = locale5.getLanguage();
        boolean boolean7 = locale5.hasExtensions();
        java.lang.String str8 = locale4.getDisplayVariant(locale5);
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.util.Locale locale10 = java.util.Locale.getDefault();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        boolean boolean12 = locale11.hasExtensions();
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getLanguage();
        java.util.Locale locale22 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.util.Locale locale28 = java.util.Locale.ITALIAN;
        java.util.Locale locale29 = java.util.Locale.US;
        java.util.Locale locale30 = java.util.Locale.US;
        java.util.Locale locale34 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale34.getDisplayScript(locale35);
        java.util.Locale locale37 = java.util.Locale.US;
        java.util.Locale locale38 = java.util.Locale.GERMAN;
        java.util.Locale locale39 = java.util.Locale.US;
        java.util.Locale locale40 = java.util.Locale.ITALY;
        java.util.Locale locale41 = java.util.Locale.getDefault();
        java.util.Locale locale45 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale46 = java.util.Locale.CHINESE;
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(locale46);
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale49 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale0, locale1, locale3, locale5, locale9, locale10, locale11, locale13, locale23, locale25, locale27, locale28, locale29, locale30, locale35, locale37, locale38, locale39, locale40, locale41, locale45, locale46, locale48, locale49, locale50 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        boolean boolean58 = localeList56.isEmpty();
        java.util.Locale locale60 = localeList56.get((int) (short) 0);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int75 = localeList56.indexOf((java.lang.Object) calendar74);
        calendar74.setFirstDayOfWeek(42);
        boolean boolean78 = calendar74.isWeekDateSupported();
        calendar74.setLenient(false);
        java.util.TimeZone timeZone81 = calendar74.getTimeZone();
        java.util.Date date85 = new java.util.Date(13, (int) '#', 600037);
        boolean boolean86 = timeZone81.inDaylightTime(date85);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar2 and calendar74", (calendar2.compareTo(calendar74) == 0) == calendar2.equals(calendar74));
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test320");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        boolean boolean5 = timeZone3.hasSameRules(timeZone4);
        boolean boolean6 = timeZone2.hasSameRules(timeZone3);
        java.util.TimeZone.setDefault(timeZone3);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (byte) 0, timeZone3);
        java.util.Locale locale9 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet10 = locale9.getUnicodeLocaleAttributes();
        java.lang.String str11 = locale9.getDisplayName();
        java.lang.String str12 = locale9.getScript();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone3, locale9);
        java.util.TimeZone.setDefault(timeZone3);
        java.util.TimeZone timeZone16 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone16);
        java.lang.String str18 = fastDateFormat17.getPattern();
        java.lang.String str20 = fastDateFormat17.format(1645513660686L);
        java.util.Date date21 = new java.util.Date();
        int int22 = date21.getSeconds();
        java.lang.String str23 = fastDateFormat17.format(date21);
        java.lang.String str25 = fastDateFormat17.format((long) 32769);
        java.util.TimeZone timeZone26 = fastDateFormat17.getTimeZone();
        java.util.TimeZone.setDefault(timeZone26);
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone26);
        timeZone26.setRawOffset(4);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone26);
        boolean boolean32 = timeZone3.hasSameRules(timeZone26);
        java.util.Locale locale34 = java.util.Locale.forLanguageTag("12:00:32 AM UTC");
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(locale34);
        java.lang.String str36 = locale34.getScript();
        java.util.Locale locale37 = locale34.stripExtensions();
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone3, locale37);
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        boolean boolean41 = locale39.hasExtensions();
        java.lang.String str42 = locale39.getDisplayCountry();
        java.lang.String str43 = locale39.getDisplayLanguage();
        java.util.Locale locale45 = java.util.Locale.forLanguageTag("zh");
        java.lang.String str46 = locale39.getDisplayLanguage(locale45);
        java.lang.String str47 = locale45.getLanguage();
        java.util.Locale locale48 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = new java.util.Locale("Chinese");
        java.lang.String str51 = locale48.getDisplayLanguage(locale50);
        java.util.Locale.setDefault(locale50);
        java.lang.String str53 = locale50.getDisplayName();
        java.util.Set<java.lang.Character> charSet54 = locale50.getExtensionKeys();
        java.lang.String str55 = locale45.getDisplayCountry(locale50);
        java.util.Calendar calendar56 = java.util.Calendar.getInstance(timeZone3, locale45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar28 and calendar38", (calendar28.compareTo(calendar38) == 0) == calendar28.equals(calendar38));
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test321");
        java.util.Locale.Builder builder1 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder1.clear();
        java.util.Locale.Builder builder3 = builder1.clearExtensions();
        java.text.ParsePosition parsePosition5 = new java.text.ParsePosition(16);
        java.util.Locale locale6 = java.util.Locale.CHINESE;
        java.lang.String str7 = locale6.getLanguage();
        boolean boolean8 = locale6.hasExtensions();
        boolean boolean9 = parsePosition5.equals((java.lang.Object) locale6);
        java.lang.String str10 = locale6.getDisplayCountry();
        java.util.Locale.Builder builder11 = builder3.setLocale(locale6);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, locale6);
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        boolean boolean15 = timeZone13.hasSameRules(timeZone14);
        boolean boolean16 = timeZone13.observesDaylightTime();
        java.util.Locale locale17 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet18 = locale17.getUnicodeLocaleAttributes();
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone13, locale17);
        calendar19.setMinimalDaysInFirstWeek(32769);
        java.lang.String str22 = fastDateFormat12.format(calendar19);
        java.util.TimeZone timeZone25 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.text.AttributedCharacterIterator.Attribute attribute26 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray27 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList28 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList28, languageRangeArray27);
        java.util.Locale locale30 = java.util.Locale.GERMAN;
        java.util.Locale locale31 = java.util.Locale.FRANCE;
        boolean boolean32 = locale31.hasExtensions();
        java.util.Locale locale33 = java.util.Locale.FRANCE;
        java.util.Locale locale34 = java.util.Locale.CHINESE;
        java.lang.String str35 = locale34.getLanguage();
        java.util.Locale[] localeArray36 = new java.util.Locale[] { locale30, locale31, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList37 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList37, localeArray36);
        java.util.Locale.FilteringMode filteringMode39 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList40 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList28, (java.util.Collection<java.util.Locale>) localeList37, filteringMode39);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList42 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale43 = java.util.Locale.CHINESE;
        java.lang.String str44 = locale43.getLanguage();
        java.util.Set<java.lang.String> strSet45 = locale43.getUnicodeLocaleAttributes();
        java.lang.String str46 = java.util.Locale.lookupTag(languageRangeList42, (java.util.Collection<java.lang.String>) strSet45);
        boolean boolean47 = localeList40.containsAll((java.util.Collection<java.lang.String>) strSet45);
        boolean boolean49 = localeList40.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator50 = localeList40.spliterator();
        java.util.Locale locale54 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale54.getDisplayScript(locale55);
        java.lang.String str57 = locale54.getISO3Language();
        boolean boolean58 = localeList40.add(locale54);
        boolean boolean59 = attribute26.equals((java.lang.Object) locale54);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat60 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u65e5\u6587", timeZone25, locale54);
        java.time.ZoneId zoneId61 = timeZone25.toZoneId();
        boolean boolean62 = fastDateFormat12.equals((java.lang.Object) timeZone25);
        java.util.Calendar calendar63 = java.util.Calendar.getInstance(timeZone25);
        java.lang.Object obj64 = timeZone25.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar19 and calendar63", (calendar19.compareTo(calendar63) == 0) == calendar19.equals(calendar63));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test322");
        java.util.Locale locale1 = new java.util.Locale("7:08:04 AM UTC");
        java.util.Locale locale2 = locale1.stripExtensions();
        java.lang.String str3 = locale1.getLanguage();
        java.lang.String str4 = locale1.getDisplayLanguage();
        java.util.Locale.LanguageRange[] languageRangeArray5 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList6 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList6, languageRangeArray5);
        java.util.Locale locale8 = java.util.Locale.GERMAN;
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Locale locale11 = java.util.Locale.FRANCE;
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        java.lang.String str13 = locale12.getLanguage();
        java.util.Locale[] localeArray14 = new java.util.Locale[] { locale8, locale9, locale11, locale12 };
        java.util.ArrayList<java.util.Locale> localeList15 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList15, localeArray14);
        java.util.Locale.FilteringMode filteringMode17 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList18 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList6, (java.util.Collection<java.util.Locale>) localeList15, filteringMode17);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList20 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale21 = java.util.Locale.CHINESE;
        java.lang.String str22 = locale21.getLanguage();
        java.util.Set<java.lang.String> strSet23 = locale21.getUnicodeLocaleAttributes();
        java.lang.String str24 = java.util.Locale.lookupTag(languageRangeList20, (java.util.Collection<java.lang.String>) strSet23);
        boolean boolean25 = localeList18.containsAll((java.util.Collection<java.lang.String>) strSet23);
        boolean boolean27 = localeList18.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator28 = localeList18.spliterator();
        localeList18.clear();
        java.util.Locale locale30 = java.util.Locale.CHINESE;
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(locale30);
        int int33 = calendar31.getActualMinimum((int) (byte) 0);
        boolean boolean34 = calendar31.isWeekDateSupported();
        calendar31.set(6, 11, 2022, (int) (byte) 0, 0, (int) (short) 1);
        boolean boolean42 = calendar31.isWeekDateSupported();
        java.lang.String str43 = calendar31.getCalendarType();
        int int44 = localeList18.indexOf((java.lang.Object) calendar31);
        java.util.Locale locale45 = java.util.Locale.CHINESE;
        java.util.Calendar calendar46 = java.util.Calendar.getInstance(locale45);
        java.util.Set<java.lang.String> strSet47 = locale45.getUnicodeLocaleAttributes();
        boolean boolean48 = localeList18.removeAll((java.util.Collection<java.lang.String>) strSet47);
        java.lang.Object obj49 = null;
        boolean boolean50 = localeList18.equals(obj49);
        java.util.Locale locale51 = java.util.Locale.US;
        java.util.Locale locale52 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = new java.util.Locale("Chinese");
        java.lang.String str55 = locale52.getDisplayLanguage(locale54);
        java.lang.String str56 = locale52.getDisplayCountry();
        java.lang.String str57 = locale52.getISO3Language();
        java.lang.String str58 = locale51.getDisplayCountry(locale52);
        boolean boolean59 = localeList18.equals((java.lang.Object) locale51);
        java.lang.String str60 = locale1.getDisplayCountry(locale51);
        java.util.TimeZone timeZone62 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat63 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone62);
        java.lang.String str64 = fastDateFormat63.getPattern();
        java.lang.String str66 = fastDateFormat63.format(1645513660686L);
        java.util.Date date67 = new java.util.Date();
        int int68 = date67.getSeconds();
        java.lang.String str69 = fastDateFormat63.format(date67);
        java.lang.String str71 = fastDateFormat63.format((long) 32769);
        java.util.TimeZone timeZone72 = fastDateFormat63.getTimeZone();
        java.util.TimeZone.setDefault(timeZone72);
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone72);
        int int76 = calendar74.getActualMinimum(2);
        int int78 = calendar74.getActualMinimum(9);
        java.util.TimeZone timeZone80 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat81 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone80);
        java.lang.String str82 = fastDateFormat81.getPattern();
        java.lang.String str84 = fastDateFormat81.format(1645513660686L);
        java.util.TimeZone timeZone85 = fastDateFormat81.getTimeZone();
        java.lang.String str86 = timeZone85.getID();
        java.util.Locale locale87 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale88 = java.util.Locale.CHINESE;
        java.lang.String str89 = locale88.getLanguage();
        boolean boolean90 = locale88.hasExtensions();
        java.lang.String str91 = locale87.getDisplayVariant(locale88);
        java.util.Calendar calendar92 = java.util.Calendar.getInstance(timeZone85, locale87);
        boolean boolean93 = calendar74.before((java.lang.Object) locale87);
        boolean boolean94 = locale87.hasExtensions();
        java.lang.String str95 = locale1.getDisplayScript(locale87);
        boolean boolean97 = locale87.equals((java.lang.Object) 227148028630080000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar46 and calendar74", (calendar46.compareTo(calendar74) == 0) == calendar46.equals(calendar74));
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test323");
        java.util.Locale locale0 = java.util.Locale.ROOT;
        java.lang.String str1 = locale0.getCountry();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.lang.String str12 = locale9.getCountry();
        java.util.Locale.setDefault(locale9);
        java.lang.String str14 = locale9.getVariant();
        java.lang.String str15 = locale0.getDisplayLanguage(locale9);
        java.lang.String str16 = locale0.toLanguageTag();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(locale0);
        java.lang.String str18 = locale0.getDisplayVariant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar17", (calendar11.compareTo(calendar17) == 0) == calendar11.equals(calendar17));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test324");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone4 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone4);
        java.lang.String str6 = fastDateFormat5.getPattern();
        java.lang.String str8 = fastDateFormat5.format(1645513660686L);
        java.util.Locale locale9 = java.util.Locale.ITALIAN;
        boolean boolean10 = fastDateFormat5.equals((java.lang.Object) locale9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone2, locale9);
        java.util.Locale locale12 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone2, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean16 = timeZone2.hasSameRules(timeZone15);
        java.text.ParsePosition parsePosition18 = new java.text.ParsePosition(16);
        java.util.Locale locale19 = java.util.Locale.CHINESE;
        java.lang.String str20 = locale19.getLanguage();
        boolean boolean21 = locale19.hasExtensions();
        boolean boolean22 = parsePosition18.equals((java.lang.Object) locale19);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale19);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(locale19);
        java.util.Locale locale25 = java.util.Locale.TAIWAN;
        java.util.Locale locale26 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str27 = locale25.getDisplayLanguage(locale26);
        java.lang.String str28 = locale25.getLanguage();
        java.util.Locale locale30 = new java.util.Locale("Chinese");
        java.util.Locale locale31 = locale30.stripExtensions();
        java.lang.String str32 = locale25.getDisplayLanguage(locale30);
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        boolean boolean37 = timeZone35.hasSameRules(timeZone36);
        java.util.Locale locale38 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        boolean boolean41 = locale39.hasExtensions();
        java.lang.String str42 = locale38.getDisplayVariant(locale39);
        java.util.Locale.setDefault(locale39);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone35, locale39);
        java.lang.String str45 = locale25.getDisplayLanguage(locale39);
        java.util.Locale locale46 = locale39.stripExtensions();
        java.lang.String str47 = locale19.getDisplayLanguage(locale46);
        java.util.Locale.Builder builder48 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder48.clear();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Locale.Builder builder55 = builder49.setLocale(locale50);
        java.util.Locale locale56 = java.util.Locale.CHINESE;
        java.lang.String str57 = locale56.getLanguage();
        boolean boolean58 = locale56.hasExtensions();
        java.lang.String str59 = locale56.getDisplayCountry();
        java.lang.String str60 = locale56.getISO3Language();
        java.util.Locale locale62 = java.util.Locale.getDefault();
        java.lang.String str63 = locale62.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat64 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale62);
        java.lang.String str65 = locale56.getDisplayName(locale62);
        java.lang.String str66 = locale56.getISO3Country();
        java.lang.String str67 = locale50.getDisplayName(locale56);
        java.lang.String str68 = locale46.getDisplayLanguage(locale50);
        java.util.Calendar calendar69 = java.util.Calendar.getInstance(timeZone2, locale50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar23", (calendar11.compareTo(calendar23) == 0) == calendar11.equals(calendar23));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test325");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.util.TimeZone timeZone81 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone82 = java.util.TimeZone.getDefault();
        boolean boolean83 = timeZone81.hasSameRules(timeZone82);
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone81);
        java.lang.String str85 = fastDateFormat2.format(calendar84);
        java.util.Calendar.Builder builder86 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder88 = builder86.setInstant((long) (byte) 100);
        java.util.Calendar.Builder builder90 = builder88.setLenient(true);
        java.util.Calendar calendar91 = builder90.build();
        java.lang.String str92 = fastDateFormat2.format(calendar91);
        java.util.TimeZone timeZone93 = fastDateFormat2.getTimeZone();
        int int94 = timeZone93.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test326");
        java.text.Format.Field field0 = null;
        java.text.FieldPosition fieldPosition2 = new java.text.FieldPosition(field0, (int) '4');
        java.util.Calendar.Builder builder3 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder8 = builder3.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar9 = builder8.build();
        java.util.Calendar.Builder builder11 = builder8.setLenient(true);
        java.util.Calendar.Builder builder14 = builder8.set(7, 28);
        boolean boolean15 = fieldPosition2.equals((java.lang.Object) builder14);
        java.util.Calendar calendar16 = builder14.build();
        java.util.Calendar calendar17 = builder14.build();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getTimeZone("7:09:30 AM UTC");
        java.lang.String str20 = timeZone19.getID();
        java.time.ZoneId zoneId21 = timeZone19.toZoneId();
        java.util.Locale.Category category22 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale24 = new java.util.Locale("Chinese");
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(locale24);
        java.lang.String str26 = locale24.getCountry();
        java.util.Locale.setDefault(category22, locale24);
        java.util.Locale locale28 = java.util.Locale.getDefault(category22);
        java.util.Locale locale29 = java.util.Locale.getDefault(category22);
        java.util.Locale locale30 = java.util.Locale.CHINESE;
        java.lang.String str31 = locale30.getLanguage();
        boolean boolean32 = locale30.hasExtensions();
        java.lang.String str33 = locale30.getDisplayCountry();
        java.lang.String str34 = locale30.getDisplayLanguage();
        java.util.Locale locale36 = java.util.Locale.forLanguageTag("zh");
        java.lang.String str37 = locale30.getDisplayLanguage(locale36);
        java.util.Locale.Category category38 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale39 = java.util.Locale.getDefault(category38);
        java.util.Locale locale40 = java.util.Locale.getDefault(category38);
        java.util.Locale.Builder builder41 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.lang.String str45 = locale44.getLanguage();
        boolean boolean46 = locale44.hasExtensions();
        java.lang.String str47 = locale43.getDisplayVariant(locale44);
        java.util.Locale.Builder builder48 = builder42.setLocale(locale43);
        java.util.Locale.Builder builder50 = builder48.removeUnicodeLocaleAttribute("German");
        java.util.Locale locale51 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale52 = java.util.Locale.CHINESE;
        java.lang.String str53 = locale52.getLanguage();
        boolean boolean54 = locale52.hasExtensions();
        java.lang.String str55 = locale51.getDisplayVariant(locale52);
        java.util.Locale locale56 = locale51.stripExtensions();
        java.util.Locale.setDefault(locale51);
        java.util.Locale.Builder builder58 = builder50.setLocale(locale51);
        java.util.Locale.setDefault(category38, locale51);
        java.lang.String str60 = locale51.getDisplayLanguage();
        java.lang.String str61 = locale30.getDisplayVariant(locale51);
        java.lang.String str62 = locale51.getDisplayCountry();
        java.util.Locale.setDefault(category22, locale51);
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(timeZone19, locale51);
        int int66 = timeZone19.getOffset(1645513862320L);
        calendar17.setTimeZone(timeZone19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar64", (calendar25.compareTo(calendar64) == 0) == calendar25.equals(calendar64));
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test327");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Locale locale13 = java.util.Locale.CHINESE;
        java.lang.String str14 = locale13.getLanguage();
        boolean boolean15 = locale13.hasExtensions();
        java.lang.String str16 = locale13.getDisplayCountry();
        java.lang.String str17 = locale13.getDisplayLanguage();
        java.lang.String str18 = locale13.getVariant();
        java.lang.String str20 = locale13.getExtension('x');
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale13);
        calendar21.set((-1892), (int) '4', 53, 4, 59);
        java.util.TimeZone timeZone28 = calendar21.getTimeZone();
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone28);
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone34 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat35 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone34);
        java.lang.String str36 = fastDateFormat35.getPattern();
        java.lang.String str38 = fastDateFormat35.format(1645513660686L);
        java.util.Locale locale39 = java.util.Locale.ITALIAN;
        boolean boolean40 = fastDateFormat35.equals((java.lang.Object) locale39);
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(timeZone32, locale39);
        java.util.Locale locale42 = java.util.Locale.FRANCE;
        boolean boolean43 = locale42.hasExtensions();
        java.lang.String str44 = locale39.getDisplayVariant(locale42);
        java.lang.String str45 = locale39.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.GERMAN;
        java.util.Locale locale50 = java.util.Locale.FRANCE;
        boolean boolean51 = locale50.hasExtensions();
        java.util.Locale locale52 = java.util.Locale.FRANCE;
        java.util.Locale locale53 = java.util.Locale.CHINESE;
        java.lang.String str54 = locale53.getLanguage();
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale49, locale50, locale52, locale53 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Spliterator<java.util.Locale> localeSpliterator60 = localeList59.spliterator();
        java.util.Iterator<java.util.Locale> localeItor61 = localeList59.iterator();
        java.util.Locale locale62 = java.util.Locale.ROOT;
        boolean boolean63 = localeList59.remove((java.lang.Object) locale62);
        java.lang.String str64 = locale62.getISO3Country();
        java.lang.String str65 = locale39.getDisplayVariant(locale62);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u4e2d\u56fd");
        java.util.Locale locale68 = fastDateFormat67.getLocale();
        java.lang.String str69 = locale39.getDisplayName(locale68);
        java.lang.String str70 = timeZone28.getDisplayName(true, (int) (short) 1, locale39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar29 and calendar41", (calendar29.compareTo(calendar41) == 0) == calendar29.equals(calendar41));
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test328");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder10 = builder0.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Locale locale11 = java.util.Locale.GERMANY;
        java.util.Locale locale13 = new java.util.Locale("Chinese");
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String str15 = locale11.getDisplayCountry();
        java.lang.String str16 = locale11.getISO3Language();
        java.util.Calendar.Builder builder17 = builder0.setLocale(locale11);
        java.util.Calendar.Builder builder20 = builder0.set(16, (int) (short) 0);
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        boolean boolean24 = timeZone22.hasSameRules(timeZone23);
        boolean boolean25 = timeZone21.hasSameRules(timeZone22);
        java.util.TimeZone.setDefault(timeZone22);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone22);
        timeZone22.setRawOffset((int) (short) -1);
        java.util.Calendar.Builder builder30 = builder20.setTimeZone(timeZone22);
        java.util.TimeZone.setDefault(timeZone22);
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(timeZone32);
        int int37 = calendar35.getActualMinimum(6);
        calendar35.set((int) (short) 1, 41, 16, 16, 32772);
        int int44 = calendar35.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone45 = calendar35.getTimeZone();
        int int47 = timeZone45.getOffset((long) 'x');
        boolean boolean48 = timeZone22.hasSameRules(timeZone45);
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone50 = java.util.TimeZone.getDefault();
        boolean boolean51 = timeZone49.hasSameRules(timeZone50);
        boolean boolean52 = timeZone49.observesDaylightTime();
        java.util.Locale locale53 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet54 = locale53.getUnicodeLocaleAttributes();
        java.util.Calendar calendar55 = java.util.Calendar.getInstance(timeZone49, locale53);
        java.util.Calendar calendar56 = java.util.Calendar.getInstance(timeZone49);
        int int58 = timeZone49.getOffset(1645513684473L);
        timeZone49.setRawOffset(122);
        boolean boolean61 = timeZone45.hasSameRules(timeZone49);
        java.util.Date date67 = new java.util.Date(1200000, 800251, 12, 25, 39);
        long long68 = date67.getTime();
        boolean boolean69 = timeZone49.inDaylightTime(date67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar27 and calendar55", (calendar27.compareTo(calendar55) == 0) == calendar27.equals(calendar55));
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test329");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder1 = builder0.clear();
        java.util.Locale locale2 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale3 = java.util.Locale.CHINESE;
        java.lang.String str4 = locale3.getLanguage();
        boolean boolean5 = locale3.hasExtensions();
        java.lang.String str6 = locale2.getDisplayVariant(locale3);
        java.util.Locale.Builder builder7 = builder1.setLocale(locale2);
        java.util.Locale locale8 = builder7.build();
        java.util.Locale.Builder builder10 = builder7.addUnicodeLocaleAttribute("German");
        java.util.Locale locale11 = java.util.Locale.TAIWAN;
        java.util.Locale locale12 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str13 = locale11.getDisplayLanguage(locale12);
        java.util.Locale.Builder builder14 = builder7.setLocale(locale11);
        java.util.Locale locale15 = builder14.build();
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder17 = builder16.clear();
        java.util.Locale locale18 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale19 = java.util.Locale.CHINESE;
        java.lang.String str20 = locale19.getLanguage();
        boolean boolean21 = locale19.hasExtensions();
        java.lang.String str22 = locale18.getDisplayVariant(locale19);
        java.util.Locale.Builder builder23 = builder17.setLocale(locale18);
        java.util.Locale.Builder builder25 = builder23.removeUnicodeLocaleAttribute("German");
        java.util.Locale.Builder builder27 = builder25.setLanguage("Germany");
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        java.lang.String str29 = locale28.getLanguage();
        java.util.Set<java.lang.Character> charSet30 = locale28.getExtensionKeys();
        java.util.Locale locale31 = locale28.stripExtensions();
        java.util.Locale.Builder builder32 = builder27.setLocale(locale28);
        java.util.Locale locale33 = locale28.stripExtensions();
        java.lang.String str34 = locale15.getDisplayLanguage(locale28);
        java.util.Locale locale35 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale.setDefault(locale35);
        java.util.Set<java.lang.Character> charSet37 = locale35.getExtensionKeys();
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(locale35);
        java.lang.String str39 = locale15.getDisplayCountry(locale35);
        boolean boolean40 = locale15.hasExtensions();
        java.lang.String str41 = locale15.getDisplayVariant();
        boolean boolean42 = locale15.hasExtensions();
        java.lang.String str43 = locale15.toLanguageTag();
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.util.Calendar calendar45 = java.util.Calendar.getInstance(locale44);
        int int46 = calendar45.getWeeksInWeekYear();
        int int47 = calendar45.getWeeksInWeekYear();
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        boolean boolean50 = timeZone48.hasSameRules(timeZone49);
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(timeZone48);
        int int53 = calendar51.getActualMinimum(6);
        int int54 = calendar51.getMinimalDaysInFirstWeek();
        boolean boolean55 = calendar45.after((java.lang.Object) calendar51);
        calendar51.setMinimalDaysInFirstWeek(1);
        calendar51.setFirstDayOfWeek(39);
        calendar51.setLenient(true);
        boolean boolean62 = locale15.equals((java.lang.Object) true);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar38 and calendar51", (calendar38.compareTo(calendar51) == 0) == calendar38.equals(calendar51));
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test330");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.TimeZone timeZone6 = fastDateFormat2.getTimeZone();
        java.util.TimeZone timeZone7 = fastDateFormat2.getTimeZone();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone8.observesDaylightTime();
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone8);
        java.lang.String str15 = timeZone8.getID();
        int int17 = timeZone8.getOffset(1645513683246L);
        timeZone8.setID("10:12:53 AM UTC");
        timeZone8.setRawOffset(45);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        boolean boolean24 = timeZone22.hasSameRules(timeZone23);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone22);
        int int27 = calendar25.getActualMinimum(6);
        int int28 = calendar25.getMinimalDaysInFirstWeek();
        java.time.Instant instant29 = calendar25.toInstant();
        calendar25.roll((int) (short) 10, 100);
        java.util.TimeZone timeZone34 = java.util.TimeZone.getTimeZone("7:07:41 AM UTC");
        timeZone34.setID("\u4e0a\u5348 07:08:13");
        calendar25.setTimeZone(timeZone34);
        java.util.TimeZone timeZone39 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        boolean boolean41 = timeZone39.hasSameRules(timeZone40);
        boolean boolean42 = timeZone39.observesDaylightTime();
        int int43 = timeZone39.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone39);
        timeZone39.setRawOffset(9);
        timeZone39.setID("7:07:40 AM UTC");
        int int50 = timeZone39.getOffset(1645513660365L);
        int int52 = timeZone39.getOffset((long) 22);
        java.util.TimeZone timeZone53 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        boolean boolean57 = timeZone53.hasSameRules(timeZone54);
        java.lang.String str58 = timeZone54.getID();
        boolean boolean59 = timeZone39.hasSameRules(timeZone54);
        boolean boolean60 = timeZone34.hasSameRules(timeZone54);
        boolean boolean61 = timeZone8.hasSameRules(timeZone54);
        boolean boolean62 = timeZone7.hasSameRules(timeZone54);
        java.util.Calendar calendar63 = java.util.Calendar.getInstance(timeZone54);
        java.util.TimeZone timeZone64 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone65 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone66 = java.util.TimeZone.getDefault();
        boolean boolean67 = timeZone65.hasSameRules(timeZone66);
        boolean boolean68 = timeZone64.hasSameRules(timeZone65);
        java.util.TimeZone.setDefault(timeZone65);
        java.util.Calendar calendar70 = java.util.Calendar.getInstance(timeZone65);
        timeZone65.setRawOffset((int) (short) -1);
        int int73 = timeZone65.getRawOffset();
        calendar63.setTimeZone(timeZone65);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar14 and calendar70", (calendar14.compareTo(calendar70) == 0) == calendar14.equals(calendar70));
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test331");
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.TimeZone timeZone7 = fastDateFormat3.getTimeZone();
        java.lang.String str8 = timeZone7.getID();
        timeZone7.setID("22 Feb 2022 07:07:49 GMT");
        timeZone7.setID("\u4e0b\u5348\u65f6\u5206\u79d2");
        java.util.Locale locale13 = java.util.Locale.ITALY;
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(locale14);
        java.util.Locale locale16 = java.util.Locale.FRANCE;
        java.util.Locale locale17 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale18 = java.util.Locale.CHINESE;
        java.lang.String str19 = locale18.getLanguage();
        boolean boolean20 = locale18.hasExtensions();
        java.lang.String str21 = locale17.getDisplayVariant(locale18);
        java.util.Locale locale22 = java.util.Locale.GERMAN;
        java.util.Locale locale23 = java.util.Locale.getDefault();
        java.util.Locale locale24 = java.util.Locale.FRANCE;
        boolean boolean25 = locale24.hasExtensions();
        java.util.Locale locale26 = java.util.Locale.CHINESE;
        java.lang.String str27 = locale26.getLanguage();
        boolean boolean28 = locale26.hasExtensions();
        java.lang.String str29 = locale26.getDisplayCountry();
        java.lang.String str30 = locale26.getDisplayLanguage();
        java.lang.String str31 = locale26.getLanguage();
        java.util.Locale locale35 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale36 = java.util.Locale.ROOT;
        java.lang.String str37 = locale35.getDisplayScript(locale36);
        java.util.Locale locale38 = java.util.Locale.FRANCE;
        boolean boolean39 = locale38.hasExtensions();
        java.util.Locale locale40 = java.util.Locale.CHINESE;
        java.util.Locale locale41 = java.util.Locale.ITALIAN;
        java.util.Locale locale42 = java.util.Locale.US;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale47 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale48 = java.util.Locale.ROOT;
        java.lang.String str49 = locale47.getDisplayScript(locale48);
        java.util.Locale locale50 = java.util.Locale.US;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.ITALY;
        java.util.Locale locale54 = java.util.Locale.getDefault();
        java.util.Locale locale58 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale59 = java.util.Locale.CHINESE;
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(locale59);
        java.util.Locale locale61 = java.util.Locale.US;
        java.util.Locale locale62 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale63 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale64 = java.util.Locale.CHINESE;
        java.lang.String str65 = locale64.getLanguage();
        boolean boolean66 = locale64.hasExtensions();
        java.lang.String str67 = locale63.getDisplayVariant(locale64);
        java.util.Locale[] localeArray68 = new java.util.Locale[] { locale13, locale14, locale16, locale18, locale22, locale23, locale24, locale26, locale36, locale38, locale40, locale41, locale42, locale43, locale48, locale50, locale51, locale52, locale53, locale54, locale58, locale59, locale61, locale62, locale63 };
        java.util.ArrayList<java.util.Locale> localeList69 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList69, localeArray68);
        boolean boolean71 = localeList69.isEmpty();
        java.util.Spliterator<java.util.Locale> localeSpliterator72 = localeList69.spliterator();
        java.util.Locale locale74 = localeList69.get(11);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat75 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone7, locale74);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone7);
        java.util.TimeZone timeZone78 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone79 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone80 = java.util.TimeZone.getDefault();
        boolean boolean81 = timeZone79.hasSameRules(timeZone80);
        boolean boolean82 = timeZone78.hasSameRules(timeZone79);
        timeZone78.setID("\u4e2d\u6587\u53f0\u7063)");
        int int86 = timeZone78.getOffset(1645513548538L);
        java.util.Locale locale87 = java.util.Locale.CHINESE;
        java.lang.String str88 = locale87.getLanguage();
        boolean boolean89 = locale87.hasExtensions();
        java.lang.String str90 = locale87.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat91 = org.apache.commons.lang3.time.FastDateFormat.getInstance("zh", timeZone78, locale87);
        java.lang.String str92 = locale87.getDisplayVariant();
        java.util.Calendar calendar93 = java.util.Calendar.getInstance(timeZone7, locale87);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar15 and calendar76", (calendar15.compareTo(calendar76) == 0) == calendar15.equals(calendar76));
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test332");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        boolean boolean8 = timeZone6.hasSameRules(timeZone7);
        boolean boolean9 = timeZone6.observesDaylightTime();
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet11 = locale10.getUnicodeLocaleAttributes();
        java.util.Calendar calendar12 = java.util.Calendar.getInstance(timeZone6, locale10);
        boolean boolean13 = timeZone6.observesDaylightTime();
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone6.hasSameRules(timeZone15);
        boolean boolean20 = fastDateFormat2.equals((java.lang.Object) timeZone6);
        java.util.TimeZone timeZone22 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone22);
        java.lang.String str24 = fastDateFormat23.getPattern();
        java.lang.String str26 = fastDateFormat23.format(1645513660686L);
        java.util.TimeZone timeZone27 = fastDateFormat23.getTimeZone();
        int int28 = timeZone27.getRawOffset();
        java.lang.String str29 = timeZone27.getID();
        boolean boolean30 = timeZone6.hasSameRules(timeZone27);
        java.util.TimeZone.setDefault(timeZone27);
        timeZone27.setRawOffset(63);
        int int35 = timeZone27.getOffset((long) 56);
        java.util.Locale locale40 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale41 = java.util.Locale.ROOT;
        java.lang.String str42 = locale40.getDisplayScript(locale41);
        java.lang.String str43 = locale40.getISO3Language();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(1, locale40);
        java.lang.String str45 = fastDateFormat44.toString();
        java.util.TimeZone timeZone48 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat49 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone48);
        java.lang.String str50 = fastDateFormat49.getPattern();
        java.lang.String str52 = fastDateFormat49.format(1645513660686L);
        java.util.TimeZone timeZone53 = fastDateFormat49.getTimeZone();
        java.lang.String str54 = fastDateFormat49.toString();
        java.lang.Object obj55 = fastDateFormat49.clone();
        java.text.ParsePosition parsePosition58 = new java.text.ParsePosition(16);
        int int59 = parsePosition58.getErrorIndex();
        java.lang.String str60 = parsePosition58.toString();
        java.lang.Object obj61 = null;
        boolean boolean62 = parsePosition58.equals(obj61);
        int int63 = parsePosition58.getIndex();
        java.lang.Object obj64 = fastDateFormat49.parseObject("java.util.GregorianCalendar[time=1645513554737,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"Etc/UTC\",offset=4,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2022,MONTH=1,WEEK_OF_YEAR=9,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=53,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=7,HOUR_OF_DAY=7,MINUTE=5,SECOND=54,MILLISECOND=741,ZONE_OFFSET=4,DST_OFFSET=0]", parsePosition58);
        java.lang.Object obj65 = fastDateFormat44.parseObject("22 Feb 2022 07:07:59 GMT", parsePosition58);
        java.text.ParsePosition parsePosition68 = new java.text.ParsePosition(16);
        parsePosition68.setIndex(10);
        int int71 = parsePosition68.getIndex();
        java.lang.Object obj72 = fastDateFormat44.parseObject("zh", parsePosition68);
        java.util.TimeZone timeZone73 = fastDateFormat44.getTimeZone();
        java.util.TimeZone timeZone74 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone75 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone76 = java.util.TimeZone.getDefault();
        boolean boolean77 = timeZone75.hasSameRules(timeZone76);
        boolean boolean78 = timeZone74.hasSameRules(timeZone75);
        boolean boolean79 = timeZone74.observesDaylightTime();
        java.util.Calendar calendar80 = java.util.Calendar.getInstance(timeZone74);
        int int82 = timeZone74.getOffset(1645513669828L);
        boolean boolean83 = timeZone73.hasSameRules(timeZone74);
        boolean boolean84 = timeZone27.hasSameRules(timeZone73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar12 and calendar80", (calendar12.compareTo(calendar80) == 0) == calendar12.equals(calendar80));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test333");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.lang.String str1 = locale0.getLanguage();
        boolean boolean2 = locale0.hasExtensions();
        java.lang.String str3 = locale0.getDisplayCountry();
        java.lang.String str4 = locale0.getISO3Language();
        java.util.Locale locale6 = java.util.Locale.getDefault();
        java.lang.String str7 = locale6.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale6);
        java.lang.String str9 = locale0.getDisplayName(locale6);
        java.util.Locale.setDefault(locale0);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone13 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone13);
        java.lang.String str15 = fastDateFormat14.getPattern();
        java.lang.String str17 = fastDateFormat14.format(1645513660686L);
        java.util.Locale locale18 = java.util.Locale.ITALIAN;
        boolean boolean19 = fastDateFormat14.equals((java.lang.Object) locale18);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone11, locale18);
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        boolean boolean22 = locale21.hasExtensions();
        java.lang.String str23 = locale18.getDisplayVariant(locale21);
        java.lang.String str24 = locale18.getDisplayScript();
        java.lang.String str25 = locale0.getDisplayCountry(locale18);
        java.lang.String str26 = locale18.getLanguage();
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(locale18);
        java.util.TimeZone timeZone29 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat30 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone29);
        java.lang.String str31 = fastDateFormat30.getPattern();
        java.lang.String str33 = fastDateFormat30.format(1645513660686L);
        java.util.TimeZone timeZone34 = fastDateFormat30.getTimeZone();
        java.lang.String str35 = timeZone34.getID();
        java.util.Locale locale36 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale37 = java.util.Locale.CHINESE;
        java.lang.String str38 = locale37.getLanguage();
        boolean boolean39 = locale37.hasExtensions();
        java.lang.String str40 = locale36.getDisplayVariant(locale37);
        java.util.Calendar calendar41 = java.util.Calendar.getInstance(timeZone34, locale36);
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(locale36);
        boolean boolean43 = locale18.equals((java.lang.Object) calendar42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar20 and calendar41", (calendar20.compareTo(calendar41) == 0) == calendar20.equals(calendar41));
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test334");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        boolean boolean4 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.Calendar.Builder builder7 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder11 = builder7.setWeekDate(16, 3, 100);
        java.util.Locale locale12 = java.util.Locale.GERMANY;
        java.util.Locale locale14 = new java.util.Locale("Chinese");
        java.lang.String str15 = locale12.getDisplayLanguage(locale14);
        java.util.Calendar.Builder builder16 = builder7.setLocale(locale14);
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        java.lang.String str24 = locale21.getDisplayVariant();
        java.lang.String str25 = locale21.getDisplayVariant();
        java.util.Calendar.Builder builder26 = builder16.setLocale(locale21);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone6, locale21);
        boolean boolean29 = calendar27.before((java.lang.Object) "\u5e74\u6708\u65e5\u661f\u671f\u4e8c\u4e0a\u5348\u65f6\u5206\u79d2");
        java.lang.String str30 = fastDateFormat2.format(calendar27);
        boolean boolean31 = fastDateFormat2.getTimeZoneOverridesCalendar();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar27", (calendar23.compareTo(calendar27) == 0) == calendar23.equals(calendar27));
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test335");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Locale locale12 = java.util.Locale.FRANCE;
        java.util.Map<java.lang.String, java.lang.Integer> strMap13 = calendar9.getDisplayNames((int) (byte) 1, (int) (short) 0, locale12);
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone15.observesDaylightTime();
        int int19 = timeZone15.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone15);
        timeZone15.setRawOffset(9);
        timeZone15.setID("7:07:40 AM UTC");
        int int26 = timeZone15.getOffset(1645513660365L);
        int int28 = timeZone15.getOffset((long) 22);
        calendar9.setTimeZone(timeZone15);
        java.lang.String str30 = timeZone15.getID();
        int int31 = timeZone15.getRawOffset();
        java.util.Calendar calendar32 = java.util.Calendar.getInstance(timeZone15);
        int int33 = timeZone15.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar32", (calendar9.compareTo(calendar32) == 0) == calendar9.equals(calendar32));
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test336");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.TimeZone timeZone6 = fastDateFormat2.getTimeZone();
        java.util.TimeZone timeZone7 = fastDateFormat2.getTimeZone();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone8.observesDaylightTime();
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone8);
        java.lang.String str15 = timeZone8.getID();
        int int17 = timeZone8.getOffset(1645513683246L);
        timeZone8.setID("10:12:53 AM UTC");
        timeZone8.setRawOffset(45);
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        boolean boolean24 = timeZone22.hasSameRules(timeZone23);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone22);
        int int27 = calendar25.getActualMinimum(6);
        int int28 = calendar25.getMinimalDaysInFirstWeek();
        java.time.Instant instant29 = calendar25.toInstant();
        calendar25.roll((int) (short) 10, 100);
        java.util.TimeZone timeZone34 = java.util.TimeZone.getTimeZone("7:07:41 AM UTC");
        timeZone34.setID("\u4e0a\u5348 07:08:13");
        calendar25.setTimeZone(timeZone34);
        java.util.TimeZone timeZone39 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone40 = java.util.TimeZone.getDefault();
        boolean boolean41 = timeZone39.hasSameRules(timeZone40);
        boolean boolean42 = timeZone39.observesDaylightTime();
        int int43 = timeZone39.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone39);
        timeZone39.setRawOffset(9);
        timeZone39.setID("7:07:40 AM UTC");
        int int50 = timeZone39.getOffset(1645513660365L);
        int int52 = timeZone39.getOffset((long) 22);
        java.util.TimeZone timeZone53 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone54 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone55 = java.util.TimeZone.getDefault();
        boolean boolean56 = timeZone54.hasSameRules(timeZone55);
        boolean boolean57 = timeZone53.hasSameRules(timeZone54);
        java.lang.String str58 = timeZone54.getID();
        boolean boolean59 = timeZone39.hasSameRules(timeZone54);
        boolean boolean60 = timeZone34.hasSameRules(timeZone54);
        boolean boolean61 = timeZone8.hasSameRules(timeZone54);
        boolean boolean62 = timeZone7.hasSameRules(timeZone54);
        java.util.Locale locale63 = java.util.Locale.CHINESE;
        java.lang.String str64 = locale63.getLanguage();
        boolean boolean65 = locale63.hasExtensions();
        java.lang.String str66 = locale63.getDisplayCountry();
        java.lang.String str67 = locale63.getISO3Language();
        java.util.Locale locale69 = java.util.Locale.getDefault();
        java.lang.String str70 = locale69.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat71 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale69);
        java.lang.String str72 = locale63.getDisplayName(locale69);
        java.util.Locale.setDefault(locale63);
        java.util.TimeZone timeZone74 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone76 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat77 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone76);
        java.lang.String str78 = fastDateFormat77.getPattern();
        java.lang.String str80 = fastDateFormat77.format(1645513660686L);
        java.util.Locale locale81 = java.util.Locale.ITALIAN;
        boolean boolean82 = fastDateFormat77.equals((java.lang.Object) locale81);
        java.util.Calendar calendar83 = java.util.Calendar.getInstance(timeZone74, locale81);
        java.util.Locale locale84 = java.util.Locale.FRANCE;
        boolean boolean85 = locale84.hasExtensions();
        java.lang.String str86 = locale81.getDisplayVariant(locale84);
        java.lang.String str87 = locale81.getDisplayScript();
        java.lang.String str88 = locale63.getDisplayCountry(locale81);
        java.lang.String str89 = timeZone54.getDisplayName(locale63);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar14 and calendar83", (calendar14.compareTo(calendar83) == 0) == calendar14.equals(calendar83));
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test337");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        java.util.Date date7 = new java.util.Date();
        int int8 = date7.getTimezoneOffset();
        date7.setMinutes(5);
        calendar6.setTime(date7);
        java.util.TimeZone timeZone12 = calendar6.getTimeZone();
        java.lang.String str13 = timeZone12.getID();
        java.util.Locale locale14 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet15 = locale14.getUnicodeLocaleAttributes();
        java.util.Locale locale16 = locale14.stripExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale16.getDisplayCountry(locale17);
        java.lang.String str19 = locale17.getLanguage();
        java.lang.String str21 = locale17.getExtension('u');
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone12, locale17);
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        boolean boolean26 = timeZone24.hasSameRules(timeZone25);
        boolean boolean27 = timeZone23.hasSameRules(timeZone24);
        java.util.TimeZone.setDefault(timeZone24);
        java.util.Calendar calendar29 = java.util.Calendar.getInstance(timeZone24);
        java.util.TimeZone timeZone31 = java.util.TimeZone.getTimeZone("7:07:43 AM UTC");
        int int32 = timeZone31.getRawOffset();
        calendar29.setTimeZone(timeZone31);
        timeZone31.setRawOffset(17);
        calendar22.setTimeZone(timeZone31);
        java.text.ParsePosition parsePosition38 = new java.text.ParsePosition(16);
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        boolean boolean41 = locale39.hasExtensions();
        boolean boolean42 = parsePosition38.equals((java.lang.Object) locale39);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(locale39);
        java.lang.String str44 = locale39.getISO3Language();
        java.util.Locale locale45 = locale39.stripExtensions();
        java.util.Set<java.lang.String> strSet46 = locale39.getUnicodeLocaleAttributes();
        java.util.Set<java.lang.String> strSet47 = locale39.getUnicodeLocaleKeys();
        boolean boolean48 = calendar22.equals((java.lang.Object) strSet47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar29 and calendar43", (calendar29.compareTo(calendar43) == 0) == calendar29.equals(calendar43));
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test338");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int12 = timeZone1.getOffset(1645513660365L);
        int int14 = timeZone1.getOffset((long) 22);
        boolean boolean15 = timeZone1.observesDaylightTime();
        boolean boolean16 = timeZone1.observesDaylightTime();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone19);
        java.lang.String str21 = fastDateFormat20.getPattern();
        java.lang.String str23 = fastDateFormat20.format(1645513660686L);
        java.util.Locale locale24 = java.util.Locale.ITALIAN;
        boolean boolean25 = fastDateFormat20.equals((java.lang.Object) locale24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone17, locale24);
        java.util.Locale locale27 = java.util.Locale.FRANCE;
        boolean boolean28 = locale27.hasExtensions();
        java.lang.String str29 = locale24.getDisplayVariant(locale27);
        java.lang.String str30 = locale24.getDisplayName();
        java.util.Locale.LanguageRange[] languageRangeArray31 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList32 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList32, languageRangeArray31);
        java.util.Locale locale34 = java.util.Locale.GERMAN;
        java.util.Locale locale35 = java.util.Locale.FRANCE;
        boolean boolean36 = locale35.hasExtensions();
        java.util.Locale locale37 = java.util.Locale.FRANCE;
        java.util.Locale locale38 = java.util.Locale.CHINESE;
        java.lang.String str39 = locale38.getLanguage();
        java.util.Locale[] localeArray40 = new java.util.Locale[] { locale34, locale35, locale37, locale38 };
        java.util.ArrayList<java.util.Locale> localeList41 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList41, localeArray40);
        java.util.Locale.FilteringMode filteringMode43 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList44 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList32, (java.util.Collection<java.util.Locale>) localeList41, filteringMode43);
        java.util.Spliterator<java.util.Locale> localeSpliterator45 = localeList44.spliterator();
        java.util.Iterator<java.util.Locale> localeItor46 = localeList44.iterator();
        java.util.Locale locale47 = java.util.Locale.ROOT;
        boolean boolean48 = localeList44.remove((java.lang.Object) locale47);
        java.lang.String str49 = locale47.getISO3Country();
        java.lang.String str50 = locale24.getDisplayVariant(locale47);
        java.lang.String str51 = locale47.getDisplayScript();
        java.util.Set<java.lang.String> strSet52 = locale47.getUnicodeLocaleKeys();
        java.util.Locale locale53 = java.util.Locale.KOREAN;
        java.lang.String str54 = locale53.toLanguageTag();
        java.lang.String str55 = locale47.getDisplayVariant(locale53);
        java.util.Calendar calendar56 = java.util.Calendar.getInstance(timeZone1, locale53);
        java.lang.String str57 = locale53.getDisplayName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar26 and calendar56", (calendar26.compareTo(calendar56) == 0) == calendar26.equals(calendar56));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test339");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.Calendar calendar14 = builder8.build();
        int int15 = calendar14.getWeekYear();
        java.util.Locale locale19 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(locale19);
        int int23 = calendar22.getWeekYear();
        java.time.Instant instant24 = calendar22.toInstant();
        boolean boolean25 = calendar14.equals((java.lang.Object) instant24);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar22", (calendar11.compareTo(calendar22) == 0) == calendar11.equals(calendar22));
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test340");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        java.util.Locale locale2 = java.util.Locale.FRANCE;
        java.util.Locale.setDefault(locale2);
        java.util.Locale.setDefault(category0, locale2);
        java.util.Locale locale5 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale6 = locale5.stripExtensions();
        java.text.AttributedCharacterIterator.Attribute attribute7 = java.text.AttributedCharacterIterator.Attribute.READING;
        java.lang.String str8 = attribute7.toString();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        java.util.Calendar calendar12 = java.util.Calendar.getInstance(timeZone9);
        calendar12.setFirstDayOfWeek(10);
        boolean boolean15 = attribute7.equals((java.lang.Object) calendar12);
        java.util.Locale locale16 = java.util.Locale.CHINESE;
        java.lang.String str17 = locale16.getLanguage();
        boolean boolean18 = locale16.hasExtensions();
        java.lang.String str19 = locale16.getDisplayCountry();
        java.util.Locale locale20 = locale16.stripExtensions();
        boolean boolean21 = attribute7.equals((java.lang.Object) locale16);
        java.lang.String str22 = locale6.getDisplayLanguage(locale16);
        java.util.Locale.setDefault(category0, locale16);
        java.util.Locale.LanguageRange[] languageRangeArray24 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList25 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList25, languageRangeArray24);
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.FRANCE;
        boolean boolean29 = locale28.hasExtensions();
        java.util.Locale locale30 = java.util.Locale.FRANCE;
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.lang.String str32 = locale31.getLanguage();
        java.util.Locale[] localeArray33 = new java.util.Locale[] { locale27, locale28, locale30, locale31 };
        java.util.ArrayList<java.util.Locale> localeList34 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList34, localeArray33);
        java.util.Locale.FilteringMode filteringMode36 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList37 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList25, (java.util.Collection<java.util.Locale>) localeList34, filteringMode36);
        java.util.Spliterator<java.util.Locale> localeSpliterator38 = localeList37.spliterator();
        java.util.Iterator<java.util.Locale> localeItor39 = localeList37.iterator();
        java.util.Locale locale40 = java.util.Locale.ROOT;
        boolean boolean41 = localeList37.remove((java.lang.Object) locale40);
        boolean boolean42 = localeList37.isEmpty();
        localeList37.clear();
        java.util.ListIterator<java.util.Locale> localeItor44 = localeList37.listIterator();
        java.util.TimeZone timeZone45 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone47 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat48 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone47);
        java.lang.String str49 = fastDateFormat48.getPattern();
        java.lang.String str51 = fastDateFormat48.format(1645513660686L);
        java.util.Locale locale52 = java.util.Locale.ITALIAN;
        boolean boolean53 = fastDateFormat48.equals((java.lang.Object) locale52);
        java.util.Calendar calendar54 = java.util.Calendar.getInstance(timeZone45, locale52);
        java.util.Locale locale55 = java.util.Locale.FRANCE;
        boolean boolean56 = locale55.hasExtensions();
        java.lang.String str57 = locale52.getDisplayVariant(locale55);
        java.lang.String str58 = locale52.getDisplayName();
        java.lang.String str59 = locale52.getISO3Language();
        boolean boolean60 = localeList37.add(locale52);
        java.util.Set<java.lang.String> strSet61 = locale52.getUnicodeLocaleKeys();
        java.util.Locale.setDefault(category0, locale52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar12 and calendar54", (calendar12.compareTo(calendar54) == 0) == calendar12.equals(calendar54));
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test341");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        boolean boolean7 = timeZone0.observesDaylightTime();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        boolean boolean13 = timeZone0.hasSameRules(timeZone9);
        int int14 = timeZone9.getRawOffset();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getTimeZone("java.text.ParsePosition[index=52,errorIndex=0]");
        boolean boolean17 = timeZone9.hasSameRules(timeZone16);
        java.util.Locale.Category category18 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale19 = java.util.Locale.getDefault(category18);
        java.util.Locale locale21 = java.util.Locale.getDefault();
        java.lang.String str22 = locale21.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat23 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale21);
        java.util.Locale.setDefault(category18, locale21);
        java.util.Locale.Builder builder25 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder26 = builder25.clear();
        java.util.Locale locale27 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale28 = java.util.Locale.CHINESE;
        java.lang.String str29 = locale28.getLanguage();
        boolean boolean30 = locale28.hasExtensions();
        java.lang.String str31 = locale27.getDisplayVariant(locale28);
        java.util.Locale.Builder builder32 = builder26.setLocale(locale27);
        java.util.Locale locale33 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder34 = builder32.setLocale(locale33);
        java.util.Locale locale35 = java.util.Locale.TAIWAN;
        java.util.Locale locale36 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str37 = locale35.getDisplayLanguage(locale36);
        java.util.Locale locale38 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale39 = java.util.Locale.CHINESE;
        java.lang.String str40 = locale39.getLanguage();
        boolean boolean41 = locale39.hasExtensions();
        java.lang.String str42 = locale38.getDisplayVariant(locale39);
        java.lang.String str43 = locale35.getDisplayLanguage(locale39);
        java.lang.String str44 = locale33.getDisplayScript(locale35);
        java.util.Set<java.lang.String> strSet45 = locale33.getUnicodeLocaleKeys();
        java.util.Locale.setDefault(category18, locale33);
        java.lang.String str47 = locale33.getDisplayCountry();
        java.text.AttributedCharacterIterator.Attribute attribute48 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale.LanguageRange[] languageRangeArray49 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList50 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList50, languageRangeArray49);
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.FRANCE;
        boolean boolean54 = locale53.hasExtensions();
        java.util.Locale locale55 = java.util.Locale.FRANCE;
        java.util.Locale locale56 = java.util.Locale.CHINESE;
        java.lang.String str57 = locale56.getLanguage();
        java.util.Locale[] localeArray58 = new java.util.Locale[] { locale52, locale53, locale55, locale56 };
        java.util.ArrayList<java.util.Locale> localeList59 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList59, localeArray58);
        java.util.Locale.FilteringMode filteringMode61 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList62 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList50, (java.util.Collection<java.util.Locale>) localeList59, filteringMode61);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList64 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale locale65 = java.util.Locale.CHINESE;
        java.lang.String str66 = locale65.getLanguage();
        java.util.Set<java.lang.String> strSet67 = locale65.getUnicodeLocaleAttributes();
        java.lang.String str68 = java.util.Locale.lookupTag(languageRangeList64, (java.util.Collection<java.lang.String>) strSet67);
        boolean boolean69 = localeList62.containsAll((java.util.Collection<java.lang.String>) strSet67);
        boolean boolean71 = localeList62.remove((java.lang.Object) "\u5fb7\u56fd");
        java.util.Spliterator<java.util.Locale> localeSpliterator72 = localeList62.spliterator();
        java.util.Locale locale76 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale77 = java.util.Locale.ROOT;
        java.lang.String str78 = locale76.getDisplayScript(locale77);
        java.lang.String str79 = locale76.getISO3Language();
        boolean boolean80 = localeList62.add(locale76);
        boolean boolean81 = attribute48.equals((java.lang.Object) locale76);
        java.lang.String str82 = locale76.getScript();
        java.lang.String str83 = locale33.getDisplayScript(locale76);
        java.util.Locale locale84 = locale33.stripExtensions();
        java.util.Calendar calendar85 = java.util.Calendar.getInstance(timeZone16, locale84);
        java.util.Date date86 = calendar85.getTime();
        date86.setMinutes(26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar85", (calendar6.compareTo(calendar85) == 0) == calendar6.equals(calendar85));
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test342");
        java.text.FieldPosition fieldPosition1 = new java.text.FieldPosition(32770);
        int int2 = fieldPosition1.getBeginIndex();
        boolean boolean4 = fieldPosition1.equals((java.lang.Object) 0L);
        java.util.TimeZone timeZone6 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone6);
        java.lang.String str8 = fastDateFormat7.getPattern();
        java.lang.String str10 = fastDateFormat7.format(1645513660686L);
        java.util.Locale locale11 = java.util.Locale.ITALIAN;
        boolean boolean12 = fastDateFormat7.equals((java.lang.Object) locale11);
        int int13 = fastDateFormat7.getMaxLengthEstimate();
        boolean boolean14 = fieldPosition1.equals((java.lang.Object) fastDateFormat7);
        java.util.TimeZone timeZone15 = fastDateFormat7.getTimeZone();
        java.lang.String str16 = fastDateFormat7.toString();
        java.util.Locale locale17 = fastDateFormat7.getLocale();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getTimeZone("7:09:30 AM UTC");
        java.lang.String str20 = timeZone19.getID();
        java.time.ZoneId zoneId21 = timeZone19.toZoneId();
        java.util.Locale.Category category22 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale24 = new java.util.Locale("Chinese");
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(locale24);
        java.lang.String str26 = locale24.getCountry();
        java.util.Locale.setDefault(category22, locale24);
        java.util.Locale locale28 = java.util.Locale.getDefault(category22);
        java.util.Locale locale29 = java.util.Locale.getDefault(category22);
        java.util.Locale locale30 = java.util.Locale.CHINESE;
        java.lang.String str31 = locale30.getLanguage();
        boolean boolean32 = locale30.hasExtensions();
        java.lang.String str33 = locale30.getDisplayCountry();
        java.lang.String str34 = locale30.getDisplayLanguage();
        java.util.Locale locale36 = java.util.Locale.forLanguageTag("zh");
        java.lang.String str37 = locale30.getDisplayLanguage(locale36);
        java.util.Locale.Category category38 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale39 = java.util.Locale.getDefault(category38);
        java.util.Locale locale40 = java.util.Locale.getDefault(category38);
        java.util.Locale.Builder builder41 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        java.lang.String str45 = locale44.getLanguage();
        boolean boolean46 = locale44.hasExtensions();
        java.lang.String str47 = locale43.getDisplayVariant(locale44);
        java.util.Locale.Builder builder48 = builder42.setLocale(locale43);
        java.util.Locale.Builder builder50 = builder48.removeUnicodeLocaleAttribute("German");
        java.util.Locale locale51 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale52 = java.util.Locale.CHINESE;
        java.lang.String str53 = locale52.getLanguage();
        boolean boolean54 = locale52.hasExtensions();
        java.lang.String str55 = locale51.getDisplayVariant(locale52);
        java.util.Locale locale56 = locale51.stripExtensions();
        java.util.Locale.setDefault(locale51);
        java.util.Locale.Builder builder58 = builder50.setLocale(locale51);
        java.util.Locale.setDefault(category38, locale51);
        java.lang.String str60 = locale51.getDisplayLanguage();
        java.lang.String str61 = locale30.getDisplayVariant(locale51);
        java.lang.String str62 = locale51.getDisplayCountry();
        java.util.Locale.setDefault(category22, locale51);
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(timeZone19, locale51);
        java.lang.String str65 = locale17.getDisplayName(locale51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar64", (calendar25.compareTo(calendar64) == 0) == calendar25.equals(calendar64));
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test343");
        java.util.Locale locale0 = java.util.Locale.TAIWAN;
        java.util.Locale locale1 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str2 = locale0.getDisplayLanguage(locale1);
        java.util.Set<java.lang.String> strSet3 = locale1.getUnicodeLocaleKeys();
        java.util.Calendar calendar4 = java.util.Calendar.getInstance(locale1);
        java.util.TimeZone timeZone7 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone7);
        java.lang.String str9 = fastDateFormat8.getPattern();
        java.lang.String str11 = fastDateFormat8.format(1645513660686L);
        java.util.TimeZone timeZone12 = fastDateFormat8.getTimeZone();
        java.lang.String str13 = timeZone12.getID();
        timeZone12.setID("22 Feb 2022 07:07:49 GMT");
        timeZone12.setID("\u4e0b\u5348\u65f6\u5206\u79d2");
        java.util.Locale locale18 = java.util.Locale.ITALY;
        java.util.Locale locale19 = java.util.Locale.CHINESE;
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(locale19);
        java.util.Locale locale21 = java.util.Locale.FRANCE;
        java.util.Locale locale22 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale23 = java.util.Locale.CHINESE;
        java.lang.String str24 = locale23.getLanguage();
        boolean boolean25 = locale23.hasExtensions();
        java.lang.String str26 = locale22.getDisplayVariant(locale23);
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.getDefault();
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.lang.String str32 = locale31.getLanguage();
        boolean boolean33 = locale31.hasExtensions();
        java.lang.String str34 = locale31.getDisplayCountry();
        java.lang.String str35 = locale31.getDisplayLanguage();
        java.lang.String str36 = locale31.getLanguage();
        java.util.Locale locale40 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale41 = java.util.Locale.ROOT;
        java.lang.String str42 = locale40.getDisplayScript(locale41);
        java.util.Locale locale43 = java.util.Locale.FRANCE;
        boolean boolean44 = locale43.hasExtensions();
        java.util.Locale locale45 = java.util.Locale.CHINESE;
        java.util.Locale locale46 = java.util.Locale.ITALIAN;
        java.util.Locale locale47 = java.util.Locale.US;
        java.util.Locale locale48 = java.util.Locale.US;
        java.util.Locale locale52 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.lang.String str54 = locale52.getDisplayScript(locale53);
        java.util.Locale locale55 = java.util.Locale.US;
        java.util.Locale locale56 = java.util.Locale.GERMAN;
        java.util.Locale locale57 = java.util.Locale.US;
        java.util.Locale locale58 = java.util.Locale.ITALY;
        java.util.Locale locale59 = java.util.Locale.getDefault();
        java.util.Locale locale63 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale64 = java.util.Locale.CHINESE;
        java.util.Calendar calendar65 = java.util.Calendar.getInstance(locale64);
        java.util.Locale locale66 = java.util.Locale.US;
        java.util.Locale locale67 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale68 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale69 = java.util.Locale.CHINESE;
        java.lang.String str70 = locale69.getLanguage();
        boolean boolean71 = locale69.hasExtensions();
        java.lang.String str72 = locale68.getDisplayVariant(locale69);
        java.util.Locale[] localeArray73 = new java.util.Locale[] { locale18, locale19, locale21, locale23, locale27, locale28, locale29, locale31, locale41, locale43, locale45, locale46, locale47, locale48, locale53, locale55, locale56, locale57, locale58, locale59, locale63, locale64, locale66, locale67, locale68 };
        java.util.ArrayList<java.util.Locale> localeList74 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList74, localeArray73);
        boolean boolean76 = localeList74.isEmpty();
        java.util.Spliterator<java.util.Locale> localeSpliterator77 = localeList74.spliterator();
        java.util.Locale locale79 = localeList74.get(11);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat80 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone12, locale79);
        java.lang.String str81 = locale79.toLanguageTag();
        java.lang.String str82 = locale1.getDisplayScript(locale79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar4 and calendar20", (calendar4.compareTo(calendar20) == 0) == calendar4.equals(calendar20));
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test344");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.Locale locale7 = java.util.Locale.ITALIAN;
        boolean boolean8 = fastDateFormat3.equals((java.lang.Object) locale7);
        java.util.Calendar calendar9 = java.util.Calendar.getInstance(timeZone0, locale7);
        java.util.Locale locale10 = java.util.Locale.FRANCE;
        boolean boolean11 = locale10.hasExtensions();
        java.lang.String str12 = locale7.getDisplayVariant(locale10);
        java.lang.String str13 = locale7.getDisplayName();
        java.util.Locale locale14 = java.util.Locale.CHINESE;
        java.util.Calendar calendar15 = java.util.Calendar.getInstance(locale14);
        int int17 = calendar15.getActualMinimum((int) (byte) 0);
        boolean boolean18 = calendar15.isWeekDateSupported();
        java.util.Date date19 = calendar15.getTime();
        java.util.Locale.LanguageRange[] languageRangeArray20 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList21 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList21, languageRangeArray20);
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.FRANCE;
        boolean boolean25 = locale24.hasExtensions();
        java.util.Locale locale26 = java.util.Locale.FRANCE;
        java.util.Locale locale27 = java.util.Locale.CHINESE;
        java.lang.String str28 = locale27.getLanguage();
        java.util.Locale[] localeArray29 = new java.util.Locale[] { locale23, locale24, locale26, locale27 };
        java.util.ArrayList<java.util.Locale> localeList30 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList30, localeArray29);
        java.util.Locale.FilteringMode filteringMode32 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList33 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList21, (java.util.Collection<java.util.Locale>) localeList30, filteringMode32);
        boolean boolean34 = localeList33.isEmpty();
        java.util.Calendar.Builder builder35 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder39 = builder35.setWeekDate(16, 3, 100);
        boolean boolean40 = localeList33.remove((java.lang.Object) builder35);
        java.util.Calendar.Builder builder42 = builder35.setLenient(true);
        java.util.Calendar.Builder builder46 = builder42.setTimeOfDay(0, 122, 28);
        boolean boolean47 = calendar15.after((java.lang.Object) builder46);
        java.util.Calendar.Builder builder51 = builder46.setDate(3, (int) (short) -1, 7);
        java.util.Locale locale52 = java.util.Locale.PRC;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.lang.String str54 = locale52.getDisplayLanguage(locale53);
        java.util.Calendar calendar55 = java.util.Calendar.getInstance(locale52);
        java.util.Calendar.Builder builder56 = builder51.setLocale(locale52);
        java.lang.String str57 = locale7.getDisplayLanguage(locale52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar9 and calendar15", (calendar9.compareTo(calendar15) == 0) == calendar9.equals(calendar15));
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test345");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        boolean boolean19 = timeZone14.observesDaylightTime();
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone14);
        java.lang.String str21 = timeZone14.getID();
        java.util.Calendar.Builder builder22 = builder13.setTimeZone(timeZone14);
        java.util.Calendar.Builder builder26 = builder13.setTimeOfDay((int) (short) 1, (int) (short) 100, 58);
        java.util.TimeZone timeZone28 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat29 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone28);
        java.lang.StringBuffer stringBuffer31 = null;
        java.lang.StringBuffer stringBuffer32 = fastDateFormat29.format((long) 124, stringBuffer31);
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone34 = java.util.TimeZone.getDefault();
        boolean boolean35 = timeZone33.hasSameRules(timeZone34);
        boolean boolean36 = timeZone33.observesDaylightTime();
        java.util.Locale locale37 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet38 = locale37.getUnicodeLocaleAttributes();
        java.util.Calendar calendar39 = java.util.Calendar.getInstance(timeZone33, locale37);
        calendar39.set((int) (short) -1, 8, (-1));
        java.lang.StringBuffer stringBuffer44 = null;
        java.lang.StringBuffer stringBuffer45 = fastDateFormat29.format(calendar39, stringBuffer44);
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        boolean boolean50 = timeZone48.hasSameRules(timeZone49);
        java.util.Locale locale51 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale52 = java.util.Locale.CHINESE;
        java.lang.String str53 = locale52.getLanguage();
        boolean boolean54 = locale52.hasExtensions();
        java.lang.String str55 = locale51.getDisplayVariant(locale52);
        java.util.Locale.setDefault(locale52);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat57 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, (int) (byte) 1, timeZone48, locale52);
        timeZone48.setID("22 Feb 2022 07:07:41 GMT");
        calendar39.setTimeZone(timeZone48);
        java.util.Calendar.Builder builder61 = builder26.setTimeZone(timeZone48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar20", (calendar11.compareTo(calendar20) == 0) == calendar11.equals(calendar20));
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test346");
        java.text.AttributedCharacterIterator.Attribute attribute0 = java.text.AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
        java.util.Locale locale1 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet2 = locale1.getUnicodeLocaleAttributes();
        java.util.Locale locale3 = locale1.stripExtensions();
        java.util.Locale locale4 = java.util.Locale.CHINESE;
        java.lang.String str5 = locale3.getDisplayCountry(locale4);
        java.lang.String str6 = locale4.toLanguageTag();
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(locale4);
        boolean boolean8 = attribute0.equals((java.lang.Object) calendar7);
        java.util.Locale locale12 = new java.util.Locale("FR", "\u5e74\u6708\u65e5']", "und");
        boolean boolean13 = attribute0.equals((java.lang.Object) "\u5e74\u6708\u65e5']");
        java.util.TimeZone timeZone14 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        boolean boolean17 = timeZone15.hasSameRules(timeZone16);
        boolean boolean18 = timeZone14.hasSameRules(timeZone15);
        java.util.TimeZone.setDefault(timeZone15);
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(timeZone15);
        calendar20.set(8, 4);
        int int24 = calendar20.getWeeksInWeekYear();
        java.util.Locale locale28 = new java.util.Locale("", "hi!", "");
        boolean boolean29 = calendar20.before((java.lang.Object) locale28);
        java.lang.String str30 = locale28.getDisplayName();
        java.util.Locale locale31 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet32 = locale31.getUnicodeLocaleAttributes();
        java.util.Locale locale33 = locale31.stripExtensions();
        java.lang.String str34 = locale28.getDisplayScript(locale33);
        boolean boolean35 = locale28.hasExtensions();
        boolean boolean36 = attribute0.equals((java.lang.Object) locale28);
        java.lang.String str37 = attribute0.toString();
        java.util.Locale locale38 = java.util.Locale.getDefault();
        java.lang.String str39 = locale38.getLanguage();
        java.util.TimeZone timeZone41 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat42 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone41);
        java.lang.String str43 = fastDateFormat42.getPattern();
        java.lang.String str45 = fastDateFormat42.format(1645513660686L);
        java.util.Locale locale46 = java.util.Locale.ITALIAN;
        boolean boolean47 = fastDateFormat42.equals((java.lang.Object) locale46);
        java.lang.String str48 = locale38.getDisplayLanguage(locale46);
        java.util.Locale.setDefault(locale46);
        java.util.Set<java.lang.String> strSet50 = locale46.getUnicodeLocaleKeys();
        java.util.Locale locale51 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet52 = locale51.getUnicodeLocaleAttributes();
        java.util.Locale locale53 = locale51.stripExtensions();
        java.util.Locale locale54 = java.util.Locale.CHINESE;
        java.lang.String str55 = locale53.getDisplayCountry(locale54);
        java.lang.String str56 = locale54.toLanguageTag();
        java.util.Calendar calendar57 = java.util.Calendar.getInstance(locale54);
        java.util.Locale locale58 = locale54.stripExtensions();
        java.util.Set<java.lang.Character> charSet59 = locale54.getExtensionKeys();
        java.lang.String str60 = locale46.getDisplayVariant(locale54);
        java.lang.String str61 = locale54.getScript();
        boolean boolean62 = attribute0.equals((java.lang.Object) locale54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar20", (calendar7.compareTo(calendar20) == 0) == calendar7.equals(calendar20));
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test347");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone3 = java.util.TimeZone.getDefault();
        boolean boolean4 = timeZone2.hasSameRules(timeZone3);
        boolean boolean5 = timeZone1.hasSameRules(timeZone2);
        timeZone1.setID("\u4e2d\u6587\u53f0\u7063)");
        int int9 = timeZone1.getOffset(1645513548538L);
        java.util.Locale locale10 = java.util.Locale.CHINESE;
        java.lang.String str11 = locale10.getLanguage();
        boolean boolean12 = locale10.hasExtensions();
        java.lang.String str13 = locale10.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getInstance("zh", timeZone1, locale10);
        java.lang.String str15 = locale10.getDisplayVariant();
        java.util.Calendar calendar16 = java.util.Calendar.getInstance(locale10);
        int int17 = calendar16.getFirstDayOfWeek();
        boolean boolean18 = calendar16.isWeekDateSupported();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        boolean boolean22 = timeZone20.hasSameRules(timeZone21);
        boolean boolean23 = timeZone19.hasSameRules(timeZone20);
        java.util.TimeZone.setDefault(timeZone20);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone20);
        calendar25.set(8, 4);
        calendar25.setMinimalDaysInFirstWeek(4);
        java.lang.String str31 = calendar25.getCalendarType();
        java.time.Instant instant32 = calendar25.toInstant();
        java.util.Date date33 = new java.util.Date();
        int int34 = date33.getSeconds();
        java.util.Date date35 = new java.util.Date();
        int int36 = date35.getTimezoneOffset();
        date35.setMinutes(5);
        boolean boolean39 = date33.after(date35);
        java.util.TimeZone timeZone41 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat42 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone41);
        java.lang.String str43 = fastDateFormat42.getPattern();
        java.util.Date date44 = new java.util.Date();
        int int45 = date44.getSeconds();
        java.lang.String str46 = fastDateFormat42.format(date44);
        boolean boolean47 = date33.before(date44);
        date44.setHours(40);
        java.util.Date date50 = new java.util.Date();
        int int51 = date50.getSeconds();
        long long52 = date50.getTime();
        date50.setTime((long) (byte) 0);
        boolean boolean55 = date44.before(date50);
        int int56 = date44.getTimezoneOffset();
        calendar25.setTime(date44);
        calendar16.setTime(date44);
        int int59 = calendar16.getFirstDayOfWeek();
        java.util.TimeZone timeZone61 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat62 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone61);
        java.util.TimeZone timeZone63 = fastDateFormat62.getTimeZone();
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(timeZone63);
        java.util.Locale locale65 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet66 = locale65.getUnicodeLocaleAttributes();
        java.util.Locale locale67 = locale65.stripExtensions();
        java.util.Locale locale68 = java.util.Locale.CHINESE;
        java.lang.String str69 = locale67.getDisplayCountry(locale68);
        java.lang.String str70 = locale67.getVariant();
        java.util.Set<java.lang.String> strSet71 = locale67.getUnicodeLocaleAttributes();
        java.util.Calendar calendar72 = java.util.Calendar.getInstance(timeZone63, locale67);
        calendar16.setTimeZone(timeZone63);
        int int74 = timeZone63.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar16 and calendar25", (calendar16.compareTo(calendar25) == 0) == calendar16.equals(calendar25));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test348");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        boolean boolean2 = timeZone0.hasSameRules(timeZone1);
        boolean boolean3 = timeZone0.observesDaylightTime();
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet5 = locale4.getUnicodeLocaleAttributes();
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone0, locale4);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone0);
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        boolean boolean10 = timeZone8.hasSameRules(timeZone9);
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(timeZone8);
        int int13 = calendar11.getActualMinimum(6);
        int int14 = calendar11.getMinimalDaysInFirstWeek();
        java.time.Instant instant15 = calendar11.toInstant();
        calendar11.roll((int) (short) 10, 100);
        java.util.TimeZone timeZone20 = java.util.TimeZone.getTimeZone("7:07:41 AM UTC");
        timeZone20.setID("\u4e0a\u5348 07:08:13");
        calendar11.setTimeZone(timeZone20);
        boolean boolean24 = timeZone0.hasSameRules(timeZone20);
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone20);
        calendar25.setFirstDayOfWeek(1911);
        java.util.Calendar.Builder builder28 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder33 = builder28.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder38 = builder28.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder40 = builder28.setLenient(false);
        java.util.TimeZone timeZone41 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone42 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        boolean boolean44 = timeZone42.hasSameRules(timeZone43);
        boolean boolean45 = timeZone41.hasSameRules(timeZone42);
        boolean boolean46 = timeZone41.observesDaylightTime();
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(timeZone41);
        java.util.Calendar.Builder builder48 = builder40.setTimeZone(timeZone41);
        timeZone41.setRawOffset(22);
        calendar25.setTimeZone(timeZone41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar47", (calendar6.compareTo(calendar47) == 0) == calendar6.equals(calendar47));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test349");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.TimeZone timeZone11 = fastDateFormat2.getTimeZone();
        java.util.TimeZone.setDefault(timeZone11);
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone11);
        timeZone11.setRawOffset(1);
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale18 = new java.util.Locale("Chinese");
        java.lang.String str19 = locale16.getDisplayLanguage(locale18);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone11, locale16);
        int int23 = timeZone11.getOffset((-60366876509007L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar21", (calendar13.compareTo(calendar21) == 0) == calendar13.equals(calendar21));
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test350");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder4 = builder0.setDate(15, (int) (byte) 10, 42);
        java.util.Calendar.Builder builder7 = builder4.set((int) (short) 10, 292269054);
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        java.util.TimeZone.setDefault(timeZone9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone9);
        calendar14.setTimeInMillis((long) 49);
        int int18 = calendar14.getActualMaximum(12);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        boolean boolean22 = timeZone20.hasSameRules(timeZone21);
        boolean boolean23 = timeZone19.hasSameRules(timeZone20);
        boolean boolean24 = timeZone19.observesDaylightTime();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone19);
        calendar14.setTimeZone(timeZone19);
        int int28 = timeZone19.getOffset(1645513693945L);
        java.util.Calendar.Builder builder29 = builder7.setTimeZone(timeZone19);
        java.util.Locale.Category category30 = java.util.Locale.Category.DISPLAY;
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat34 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone33);
        java.lang.String str35 = fastDateFormat34.getPattern();
        java.lang.String str37 = fastDateFormat34.format(1645513660686L);
        java.util.Locale locale38 = java.util.Locale.ITALIAN;
        boolean boolean39 = fastDateFormat34.equals((java.lang.Object) locale38);
        java.util.Calendar calendar40 = java.util.Calendar.getInstance(timeZone31, locale38);
        java.util.Locale locale41 = java.util.Locale.FRANCE;
        boolean boolean42 = locale41.hasExtensions();
        java.lang.String str43 = locale38.getDisplayVariant(locale41);
        java.lang.String str44 = locale38.getDisplayName();
        java.lang.String str45 = locale38.getISO3Language();
        java.util.Locale.setDefault(category30, locale38);
        java.util.Locale locale47 = java.util.Locale.getDefault(category30);
        java.util.Locale locale48 = java.util.Locale.getDefault(category30);
        java.util.Locale locale52 = new java.util.Locale("", "hi!", "");
        java.lang.String str53 = locale52.getDisplayName();
        java.lang.String str54 = locale52.getCountry();
        java.lang.String str55 = locale48.getDisplayLanguage(locale52);
        java.util.Calendar.Builder builder56 = builder29.setLocale(locale52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar40", (calendar25.compareTo(calendar40) == 0) == calendar25.equals(calendar40));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test351");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder0.build();
        java.util.Calendar.Builder builder10 = builder0.setWeekDate(22, (int) (short) 100, 44);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        boolean boolean13 = timeZone11.hasSameRules(timeZone12);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone11);
        int int16 = calendar14.getActualMinimum(6);
        java.util.Calendar.Builder builder17 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder22 = builder17.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar23 = builder22.build();
        boolean boolean25 = calendar23.after((java.lang.Object) 1L);
        java.util.TimeZone timeZone27 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        boolean boolean29 = timeZone27.hasSameRules(timeZone28);
        boolean boolean30 = timeZone27.observesDaylightTime();
        int int31 = timeZone27.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat32 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone27);
        timeZone27.setRawOffset(9);
        timeZone27.setID("7:07:40 AM UTC");
        int int37 = timeZone27.getRawOffset();
        calendar23.setTimeZone(timeZone27);
        java.util.TimeZone.setDefault(timeZone27);
        boolean boolean40 = calendar14.before((java.lang.Object) timeZone27);
        java.util.TimeZone.setDefault(timeZone27);
        java.lang.String str42 = timeZone27.getID();
        boolean boolean43 = timeZone27.observesDaylightTime();
        java.util.Calendar.Builder builder44 = builder0.setTimeZone(timeZone27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar23", (calendar6.compareTo(calendar23) == 0) == calendar6.equals(calendar23));
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test352");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar calendar1 = builder0.build();
        java.util.Calendar.Builder builder5 = builder0.setWeekDate(19, 28, 53);
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        boolean boolean9 = timeZone7.hasSameRules(timeZone8);
        boolean boolean10 = timeZone7.observesDaylightTime();
        int int11 = timeZone7.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone7);
        timeZone7.setRawOffset(9);
        timeZone7.setID("7:07:40 AM UTC");
        int int18 = timeZone7.getOffset(1645513660365L);
        int int20 = timeZone7.getOffset((long) 22);
        java.util.TimeZone timeZone21 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone22 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone23 = java.util.TimeZone.getDefault();
        boolean boolean24 = timeZone22.hasSameRules(timeZone23);
        boolean boolean25 = timeZone21.hasSameRules(timeZone22);
        java.lang.String str26 = timeZone22.getID();
        boolean boolean27 = timeZone7.hasSameRules(timeZone22);
        timeZone22.setRawOffset((int) (short) -1);
        java.util.Calendar.Builder builder30 = builder5.setTimeZone(timeZone22);
        java.util.TimeZone timeZone31 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone32 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone33 = java.util.TimeZone.getDefault();
        boolean boolean34 = timeZone32.hasSameRules(timeZone33);
        boolean boolean35 = timeZone31.hasSameRules(timeZone32);
        timeZone31.setID("\u4e2d\u6587\u53f0\u7063)");
        int int39 = timeZone31.getOffset(1645513548538L);
        boolean boolean40 = timeZone31.observesDaylightTime();
        java.util.Locale locale43 = java.util.Locale.forLanguageTag("zh");
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale43);
        java.util.Locale locale45 = java.util.Locale.CANADA;
        java.lang.String str46 = locale43.getDisplayName(locale45);
        java.util.Calendar calendar47 = java.util.Calendar.getInstance(timeZone31, locale45);
        java.util.Calendar.Builder builder48 = builder30.setLocale(locale45);
        java.util.TimeZone timeZone50 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat51 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone50);
        java.util.TimeZone timeZone52 = fastDateFormat51.getTimeZone();
        java.util.Calendar calendar53 = java.util.Calendar.getInstance(timeZone52);
        java.util.Locale locale54 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet55 = locale54.getUnicodeLocaleAttributes();
        java.util.Locale locale56 = locale54.stripExtensions();
        java.util.Locale locale57 = java.util.Locale.CHINESE;
        java.lang.String str58 = locale56.getDisplayCountry(locale57);
        java.lang.String str59 = locale56.getVariant();
        java.util.Set<java.lang.String> strSet60 = locale56.getUnicodeLocaleAttributes();
        java.util.Calendar calendar61 = java.util.Calendar.getInstance(timeZone52, locale56);
        java.util.TimeZone timeZone62 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone63 = java.util.TimeZone.getDefault();
        boolean boolean64 = timeZone62.hasSameRules(timeZone63);
        int int65 = timeZone62.getRawOffset();
        java.util.TimeZone timeZone66 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone67 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone68 = java.util.TimeZone.getDefault();
        boolean boolean69 = timeZone67.hasSameRules(timeZone68);
        boolean boolean70 = timeZone66.hasSameRules(timeZone67);
        timeZone66.setID("\u4e2d\u6587\u53f0\u7063)");
        int int74 = timeZone66.getOffset(1645513548538L);
        boolean boolean75 = timeZone62.hasSameRules(timeZone66);
        java.lang.String str76 = timeZone62.getID();
        boolean boolean77 = timeZone52.hasSameRules(timeZone62);
        java.util.Calendar.Builder builder78 = builder48.setTimeZone(timeZone62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar47 and calendar53", (calendar47.compareTo(calendar53) == 0) == calendar47.equals(calendar53));
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test353");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone1.observesDaylightTime();
        int int5 = timeZone1.getRawOffset();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat6 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        timeZone1.setRawOffset(9);
        timeZone1.setID("7:07:40 AM UTC");
        int int12 = timeZone1.getOffset(1645513660365L);
        java.util.Calendar.Builder builder13 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder18 = builder13.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder23 = builder13.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale26 = new java.util.Locale("Chinese");
        java.lang.String str27 = locale24.getDisplayLanguage(locale26);
        java.lang.String str28 = locale24.getDisplayCountry();
        java.lang.String str29 = locale24.getISO3Language();
        java.util.Calendar.Builder builder30 = builder13.setLocale(locale24);
        java.util.Calendar.Builder builder33 = builder13.set(16, (int) (short) 0);
        java.util.TimeZone timeZone34 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        boolean boolean37 = timeZone35.hasSameRules(timeZone36);
        boolean boolean38 = timeZone34.hasSameRules(timeZone35);
        java.util.TimeZone.setDefault(timeZone35);
        java.util.Calendar calendar40 = java.util.Calendar.getInstance(timeZone35);
        timeZone35.setRawOffset((int) (short) -1);
        java.util.Calendar.Builder builder43 = builder33.setTimeZone(timeZone35);
        java.util.Calendar calendar44 = java.util.Calendar.getInstance(timeZone35);
        boolean boolean45 = timeZone1.hasSameRules(timeZone35);
        java.util.Locale locale47 = java.util.Locale.GERMANY;
        java.util.Locale locale49 = new java.util.Locale("Chinese");
        java.lang.String str50 = locale47.getDisplayLanguage(locale49);
        java.util.Locale.setDefault(locale49);
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat52 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale49);
        java.util.Locale.Builder builder53 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder54 = builder53.clear();
        java.util.Locale.Builder builder55 = builder53.clear();
        java.util.Locale locale56 = builder53.build();
        java.util.Locale locale57 = java.util.Locale.FRANCE;
        boolean boolean58 = locale57.hasExtensions();
        java.lang.String str59 = locale57.getCountry();
        java.lang.String str60 = locale57.getDisplayName();
        java.util.Locale.Builder builder61 = builder53.setLocale(locale57);
        java.lang.String str62 = locale57.getLanguage();
        java.lang.String str63 = locale49.getDisplayScript(locale57);
        java.util.Calendar calendar64 = java.util.Calendar.getInstance(locale57);
        java.lang.String str65 = timeZone35.getDisplayName(locale57);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar40 and calendar64", (calendar40.compareTo(calendar64) == 0) == calendar40.equals(calendar64));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test354");
        java.util.TimeZone timeZone1 = java.util.TimeZone.getTimeZone("zh_CN");
        boolean boolean2 = timeZone1.observesDaylightTime();
        timeZone1.setID("7:09:46 AM UTC");
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone7 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat8 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone7);
        java.lang.String str9 = fastDateFormat8.getPattern();
        java.lang.String str11 = fastDateFormat8.format(1645513660686L);
        java.util.Locale locale12 = java.util.Locale.ITALIAN;
        boolean boolean13 = fastDateFormat8.equals((java.lang.Object) locale12);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone5, locale12);
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.lang.String str17 = locale12.getDisplayVariant(locale15);
        java.lang.String str18 = locale12.getDisplayName();
        java.lang.String str19 = locale12.getISO3Language();
        java.lang.String str20 = locale12.toLanguageTag();
        java.util.Calendar calendar21 = java.util.Calendar.getInstance(timeZone1, locale12);
        java.util.Locale.Builder builder22 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder23 = builder22.clear();
        java.util.Locale locale24 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale25 = java.util.Locale.CHINESE;
        java.lang.String str26 = locale25.getLanguage();
        boolean boolean27 = locale25.hasExtensions();
        java.lang.String str28 = locale24.getDisplayVariant(locale25);
        java.util.Locale.Builder builder29 = builder23.setLocale(locale24);
        java.util.Locale locale30 = java.util.Locale.ITALIAN;
        java.util.Locale.Builder builder31 = builder29.setLocale(locale30);
        java.util.Locale locale32 = builder29.build();
        java.util.Locale.Builder builder33 = builder29.clear();
        java.util.Locale locale34 = builder29.build();
        java.util.Locale locale35 = locale34.stripExtensions();
        java.lang.String str36 = timeZone1.getDisplayName(locale34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar14 and calendar21", (calendar14.compareTo(calendar21) == 0) == calendar14.equals(calendar21));
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test355");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        calendar6.setTimeInMillis((long) 49);
        int int10 = calendar6.getActualMaximum(12);
        java.util.TimeZone timeZone11 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        boolean boolean14 = timeZone12.hasSameRules(timeZone13);
        boolean boolean15 = timeZone11.hasSameRules(timeZone12);
        boolean boolean16 = timeZone11.observesDaylightTime();
        java.util.Calendar calendar17 = java.util.Calendar.getInstance(timeZone11);
        calendar6.setTimeZone(timeZone11);
        java.util.Calendar.Builder builder19 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder24 = builder19.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar25 = builder24.build();
        java.util.Calendar.Builder builder27 = builder24.setLenient(true);
        java.util.Calendar.Builder builder31 = builder27.setDate(0, 0, (int) (byte) 0);
        java.util.Calendar.Builder builder36 = builder31.setTimeOfDay((int) (byte) -1, 58, 42, 41);
        java.util.Calendar.Builder builder38 = builder36.setLenient(true);
        java.util.TimeZone timeZone40 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone40);
        java.lang.String str42 = fastDateFormat41.getPattern();
        java.lang.String str44 = fastDateFormat41.format(1645513660686L);
        java.util.TimeZone timeZone45 = fastDateFormat41.getTimeZone();
        java.lang.String str46 = timeZone45.getID();
        int int47 = timeZone45.getRawOffset();
        java.util.Calendar.Builder builder48 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder53 = builder48.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar54 = builder48.build();
        java.util.Calendar.Builder builder58 = builder48.setWeekDate(22, (int) (short) 100, 44);
        java.util.Calendar.Builder builder60 = builder48.setLenient(true);
        java.util.Calendar.Builder builder65 = builder60.setTimeOfDay((-1), 32772, 42, (int) (byte) -1);
        java.util.TimeZone timeZone66 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone67 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone68 = java.util.TimeZone.getDefault();
        boolean boolean69 = timeZone67.hasSameRules(timeZone68);
        boolean boolean70 = timeZone66.hasSameRules(timeZone67);
        timeZone66.setID("\u4e2d\u6587\u53f0\u7063)");
        timeZone66.setID("und");
        java.util.Calendar.Builder builder75 = builder60.setTimeZone(timeZone66);
        boolean boolean76 = timeZone45.hasSameRules(timeZone66);
        java.util.TimeZone.setDefault(timeZone66);
        java.util.Calendar.Builder builder78 = builder38.setTimeZone(timeZone66);
        boolean boolean79 = calendar6.after((java.lang.Object) builder78);
        java.util.TimeZone timeZone80 = java.util.TimeZone.getDefault();
        java.lang.String str81 = timeZone80.getID();
        java.util.Locale locale83 = java.util.Locale.forLanguageTag("German");
        java.util.Calendar calendar84 = java.util.Calendar.getInstance(timeZone80, locale83);
        java.util.Calendar.Builder builder85 = builder78.setTimeZone(timeZone80);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar17 and calendar84", (calendar17.compareTo(calendar84) == 0) == calendar17.equals(calendar84));
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test356");
        java.util.TimeZone timeZone2 = java.util.TimeZone.getTimeZone("FastDateFormat[h:mm:ss a z]");
        boolean boolean3 = timeZone2.observesDaylightTime();
        java.util.Calendar calendar4 = java.util.Calendar.getInstance(timeZone2);
        java.time.ZoneId zoneId5 = timeZone2.toZoneId();
        boolean boolean6 = timeZone2.observesDaylightTime();
        java.util.Locale locale8 = new java.util.Locale("deu");
        java.lang.String str9 = locale8.getDisplayLanguage();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone12 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat13 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone12);
        java.lang.String str14 = fastDateFormat13.getPattern();
        java.lang.String str16 = fastDateFormat13.format(1645513660686L);
        java.util.Locale locale17 = java.util.Locale.ITALIAN;
        boolean boolean18 = fastDateFormat13.equals((java.lang.Object) locale17);
        java.util.Calendar calendar19 = java.util.Calendar.getInstance(timeZone10, locale17);
        java.util.Locale locale20 = java.util.Locale.FRANCE;
        boolean boolean21 = locale20.hasExtensions();
        java.lang.String str22 = locale17.getDisplayVariant(locale20);
        java.lang.String str23 = locale17.getDisplayName();
        java.lang.String str24 = locale17.getISO3Language();
        java.lang.String str25 = locale8.getDisplayName(locale17);
        java.lang.String str26 = locale17.getDisplayName();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat27 = org.apache.commons.lang3.time.FastDateFormat.getInstance("\u5e74\u6708\u65e5\u661f\u671f\u4e94 7:16:38", timeZone2, locale17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar4 and calendar19", (calendar4.compareTo(calendar19) == 0) == calendar4.equals(calendar19));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test357");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.Calendar.Builder builder17 = builder8.setDate(3, 14, 0);
        java.util.Calendar.Builder builder19 = builder8.setLenient(true);
        java.util.Calendar.Builder builder23 = builder8.setDate(7200000, 38, 600037);
        java.util.Calendar.Builder builder27 = builder23.setDate((int) (byte) 0, (int) '#', 16);
        java.util.Locale locale32 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.lang.String str34 = locale32.getDisplayScript(locale33);
        java.util.Calendar calendar35 = java.util.Calendar.getInstance(locale32);
        int int37 = calendar35.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone38 = calendar35.getTimeZone();
        java.util.Locale locale39 = java.util.Locale.GERMANY;
        java.util.Locale locale41 = new java.util.Locale("Chinese");
        java.lang.String str42 = locale39.getDisplayLanguage(locale41);
        java.lang.String str43 = locale39.getDisplayCountry();
        java.util.Set<java.lang.String> strSet44 = locale39.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat45 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone38, locale39);
        java.util.Locale locale46 = fastDateFormat45.getLocale();
        java.lang.String str47 = locale46.getISO3Language();
        java.lang.String str48 = locale46.getDisplayScript();
        java.util.Calendar.Builder builder49 = builder23.setLocale(locale46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar11 and calendar35", (calendar11.compareTo(calendar35) == 0) == calendar11.equals(calendar35));
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test358");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str4 = fastDateFormat2.format((long) (byte) -1);
        java.text.ParsePosition parsePosition7 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj8 = fastDateFormat2.parseObject("GMT+00:00", parsePosition7);
        java.util.TimeZone timeZone10 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone10);
        java.lang.String str12 = fastDateFormat11.getPattern();
        java.lang.String str14 = fastDateFormat11.format(1645513660686L);
        java.util.TimeZone timeZone15 = fastDateFormat11.getTimeZone();
        java.lang.String str16 = timeZone15.getID();
        java.util.Locale locale17 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale18 = java.util.Locale.CHINESE;
        java.lang.String str19 = locale18.getLanguage();
        boolean boolean20 = locale18.hasExtensions();
        java.lang.String str21 = locale17.getDisplayVariant(locale18);
        java.util.Calendar calendar22 = java.util.Calendar.getInstance(timeZone15, locale17);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(locale17);
        boolean boolean24 = calendar23.isWeekDateSupported();
        java.lang.String str25 = fastDateFormat2.format(calendar23);
        java.lang.Object obj26 = fastDateFormat2.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar22 and calendar23", (calendar22.compareTo(calendar23) == 0) == calendar22.equals(calendar23));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test359");
        java.util.Calendar calendar0 = java.util.Calendar.getInstance();
        long long1 = calendar0.getTimeInMillis();
        java.util.Locale locale2 = java.util.Locale.GERMANY;
        java.util.Locale locale4 = new java.util.Locale("Chinese");
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.util.Locale locale6 = java.util.Locale.CHINESE;
        java.lang.String str7 = locale6.getLanguage();
        boolean boolean8 = locale6.hasExtensions();
        java.lang.String str9 = locale6.getDisplayCountry();
        java.lang.String str10 = locale6.getISO3Language();
        java.util.Locale locale12 = java.util.Locale.getDefault();
        java.lang.String str13 = locale12.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat14 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale12);
        java.lang.String str15 = locale6.getDisplayName(locale12);
        java.util.Locale.setDefault(locale6);
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat20 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone19);
        java.lang.String str21 = fastDateFormat20.getPattern();
        java.lang.String str23 = fastDateFormat20.format(1645513660686L);
        java.util.Locale locale24 = java.util.Locale.ITALIAN;
        boolean boolean25 = fastDateFormat20.equals((java.lang.Object) locale24);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone17, locale24);
        java.util.Locale locale27 = java.util.Locale.FRANCE;
        boolean boolean28 = locale27.hasExtensions();
        java.lang.String str29 = locale24.getDisplayVariant(locale27);
        java.lang.String str30 = locale24.getDisplayScript();
        java.lang.String str31 = locale6.getDisplayCountry(locale24);
        java.lang.String str32 = locale2.getDisplayCountry(locale6);
        java.util.Set<java.lang.String> strSet33 = locale6.getUnicodeLocaleAttributes();
        boolean boolean34 = calendar0.before((java.lang.Object) locale6);
        java.time.Instant instant35 = calendar0.toInstant();
        java.util.Date date36 = java.util.Date.from(instant35);
        java.util.Date date37 = java.util.Date.from(instant35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar0 and calendar26", (calendar0.compareTo(calendar26) == 0) == calendar0.equals(calendar26));
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test360");
        java.util.TimeZone timeZone2 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat3 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone2);
        java.lang.String str4 = fastDateFormat3.getPattern();
        java.lang.String str6 = fastDateFormat3.format(1645513660686L);
        java.util.TimeZone timeZone7 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        boolean boolean9 = timeZone7.hasSameRules(timeZone8);
        boolean boolean10 = timeZone7.observesDaylightTime();
        java.util.Locale locale11 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet12 = locale11.getUnicodeLocaleAttributes();
        java.util.Calendar calendar13 = java.util.Calendar.getInstance(timeZone7, locale11);
        boolean boolean14 = timeZone7.observesDaylightTime();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone16 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        boolean boolean18 = timeZone16.hasSameRules(timeZone17);
        boolean boolean19 = timeZone15.hasSameRules(timeZone16);
        boolean boolean20 = timeZone7.hasSameRules(timeZone16);
        boolean boolean21 = fastDateFormat3.equals((java.lang.Object) timeZone7);
        java.lang.String str22 = timeZone7.getID();
        timeZone7.setRawOffset((int) 'u');
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat25 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (byte) 0, timeZone7);
        timeZone7.setRawOffset(35);
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        boolean boolean30 = timeZone28.hasSameRules(timeZone29);
        java.util.Calendar calendar31 = java.util.Calendar.getInstance(timeZone28);
        int int33 = calendar31.getActualMinimum(6);
        int int34 = calendar31.getWeekYear();
        java.util.Date date35 = new java.util.Date();
        java.lang.String str36 = date35.toGMTString();
        int int37 = date35.getYear();
        int int38 = date35.getSeconds();
        calendar31.setTime(date35);
        int int40 = date35.getDate();
        boolean boolean41 = timeZone7.inDaylightTime(date35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar13 and calendar31", (calendar13.compareTo(calendar31) == 0) == calendar13.equals(calendar31));
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test361");
        java.util.Locale locale0 = java.util.Locale.CHINESE;
        java.util.Calendar calendar1 = java.util.Calendar.getInstance(locale0);
        int int2 = calendar1.getWeeksInWeekYear();
        int int3 = calendar1.getWeeksInWeekYear();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        boolean boolean6 = timeZone4.hasSameRules(timeZone5);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(timeZone4);
        int int9 = calendar7.getActualMinimum(6);
        int int10 = calendar7.getMinimalDaysInFirstWeek();
        boolean boolean11 = calendar1.after((java.lang.Object) calendar7);
        calendar7.setMinimalDaysInFirstWeek(1);
        calendar7.setFirstDayOfWeek(39);
        java.util.Date date16 = new java.util.Date();
        int int17 = date16.getTimezoneOffset();
        date16.setMinutes((int) (byte) -1);
        long long20 = date16.getTime();
        date16.setTime((long) 16);
        int int23 = date16.getDate();
        long long24 = date16.getTime();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone26 = java.util.TimeZone.getDefault();
        boolean boolean27 = timeZone25.hasSameRules(timeZone26);
        java.util.Calendar calendar28 = java.util.Calendar.getInstance(timeZone25);
        int int30 = calendar28.getActualMinimum(6);
        calendar28.set((int) (short) 1, 41, 16, 16, 32772);
        int int37 = calendar28.getMinimalDaysInFirstWeek();
        java.util.TimeZone timeZone38 = calendar28.getTimeZone();
        java.util.Date date39 = calendar28.getTime();
        int int40 = date39.getSeconds();
        int int41 = date39.getSeconds();
        int int42 = date39.getHours();
        boolean boolean43 = date16.before(date39);
        calendar7.setTime(date39);
        java.lang.Object obj45 = date39.clone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar28", (calendar7.compareTo(calendar28) == 0) == calendar7.equals(calendar28));
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test362");
        java.util.Locale.LanguageRange[] languageRangeArray0 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList1 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList1, languageRangeArray0);
        java.util.Locale locale3 = java.util.Locale.GERMAN;
        java.util.Locale locale4 = java.util.Locale.FRANCE;
        boolean boolean5 = locale4.hasExtensions();
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        java.util.Locale locale7 = java.util.Locale.CHINESE;
        java.lang.String str8 = locale7.getLanguage();
        java.util.Locale[] localeArray9 = new java.util.Locale[] { locale3, locale4, locale6, locale7 };
        java.util.ArrayList<java.util.Locale> localeList10 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList10, localeArray9);
        java.util.Locale.FilteringMode filteringMode12 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList13 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList1, (java.util.Collection<java.util.Locale>) localeList10, filteringMode12);
        java.util.Spliterator<java.util.Locale> localeSpliterator14 = localeList13.spliterator();
        java.util.Iterator<java.util.Locale> localeItor15 = localeList13.iterator();
        java.util.Locale locale16 = java.util.Locale.ROOT;
        boolean boolean17 = localeList13.remove((java.lang.Object) locale16);
        boolean boolean18 = localeList13.isEmpty();
        java.util.Spliterator<java.util.Locale> localeSpliterator19 = localeList13.spliterator();
        java.util.TimeZone timeZone21 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat22 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone21);
        java.lang.String str23 = fastDateFormat22.getPattern();
        java.lang.String str25 = fastDateFormat22.format(1645513660686L);
        java.util.TimeZone timeZone26 = fastDateFormat22.getTimeZone();
        java.lang.String str27 = timeZone26.getID();
        java.util.Locale locale28 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.lang.String str30 = locale29.getLanguage();
        boolean boolean31 = locale29.hasExtensions();
        java.lang.String str32 = locale28.getDisplayVariant(locale29);
        java.util.Calendar calendar33 = java.util.Calendar.getInstance(timeZone26, locale28);
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(locale28);
        java.util.TimeZone timeZone35 = calendar34.getTimeZone();
        boolean boolean36 = localeList13.equals((java.lang.Object) timeZone35);
        int int37 = timeZone35.getRawOffset();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar33 and calendar34", (calendar33.compareTo(calendar34) == 0) == calendar33.equals(calendar34));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test363");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        java.util.Locale locale4 = java.util.Locale.ITALY;
        java.util.Locale locale5 = java.util.Locale.CHINESE;
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale5);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.util.Locale locale8 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        boolean boolean11 = locale9.hasExtensions();
        java.lang.String str12 = locale8.getDisplayVariant(locale9);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.getDefault();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        boolean boolean16 = locale15.hasExtensions();
        java.util.Locale locale17 = java.util.Locale.CHINESE;
        java.lang.String str18 = locale17.getLanguage();
        boolean boolean19 = locale17.hasExtensions();
        java.lang.String str20 = locale17.getDisplayCountry();
        java.lang.String str21 = locale17.getDisplayLanguage();
        java.lang.String str22 = locale17.getLanguage();
        java.util.Locale locale26 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayScript(locale27);
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        boolean boolean30 = locale29.hasExtensions();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.util.Locale locale32 = java.util.Locale.ITALIAN;
        java.util.Locale locale33 = java.util.Locale.US;
        java.util.Locale locale34 = java.util.Locale.US;
        java.util.Locale locale38 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.US;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.ITALY;
        java.util.Locale locale45 = java.util.Locale.getDefault();
        java.util.Locale locale49 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale50 = java.util.Locale.CHINESE;
        java.util.Calendar calendar51 = java.util.Calendar.getInstance(locale50);
        java.util.Locale locale52 = java.util.Locale.US;
        java.util.Locale locale53 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale54 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale55 = java.util.Locale.CHINESE;
        java.lang.String str56 = locale55.getLanguage();
        boolean boolean57 = locale55.hasExtensions();
        java.lang.String str58 = locale54.getDisplayVariant(locale55);
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale4, locale5, locale7, locale9, locale13, locale14, locale15, locale17, locale27, locale29, locale31, locale32, locale33, locale34, locale39, locale41, locale42, locale43, locale44, locale45, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        boolean boolean62 = localeList60.isEmpty();
        java.util.Locale locale64 = localeList60.get((int) (short) 0);
        java.util.TimeZone timeZone66 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat67 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone66);
        java.lang.String str68 = fastDateFormat67.getPattern();
        java.lang.String str70 = fastDateFormat67.format(1645513660686L);
        java.util.Date date71 = new java.util.Date();
        int int72 = date71.getSeconds();
        java.lang.String str73 = fastDateFormat67.format(date71);
        java.lang.String str75 = fastDateFormat67.format((long) 32769);
        java.util.TimeZone timeZone76 = fastDateFormat67.getTimeZone();
        java.util.TimeZone.setDefault(timeZone76);
        java.util.Calendar calendar78 = java.util.Calendar.getInstance(timeZone76);
        int int79 = localeList60.indexOf((java.lang.Object) calendar78);
        java.lang.String str80 = fastDateFormat2.format((java.lang.Object) calendar78);
        java.time.Instant instant81 = calendar78.toInstant();
        int int83 = calendar78.getGreatestMinimum(3);
        java.util.TimeZone timeZone84 = calendar78.getTimeZone();
        java.util.TimeZone.setDefault(timeZone84);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar78", (calendar6.compareTo(calendar78) == 0) == calendar6.equals(calendar78));
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test364");
        java.util.Locale locale4 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale5 = java.util.Locale.ROOT;
        java.lang.String str6 = locale4.getDisplayScript(locale5);
        java.util.Calendar calendar7 = java.util.Calendar.getInstance(locale4);
        int int9 = calendar7.getActualMinimum((int) (short) 1);
        java.util.TimeZone timeZone10 = calendar7.getTimeZone();
        java.util.Locale locale11 = java.util.Locale.GERMANY;
        java.util.Locale locale13 = new java.util.Locale("Chinese");
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String str15 = locale11.getDisplayCountry();
        java.util.Set<java.lang.String> strSet16 = locale11.getUnicodeLocaleKeys();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat17 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance(0, timeZone10, locale11);
        java.lang.String str18 = locale11.getISO3Country();
        boolean boolean19 = locale11.hasExtensions();
        java.util.Calendar calendar20 = java.util.Calendar.getInstance(locale11);
        java.util.Locale.setDefault(locale11);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar7 and calendar20", (calendar7.compareTo(calendar20) == 0) == calendar7.equals(calendar20));
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test365");
        java.util.TimeZone timeZone0 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone1 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone2 = java.util.TimeZone.getDefault();
        boolean boolean3 = timeZone1.hasSameRules(timeZone2);
        boolean boolean4 = timeZone0.hasSameRules(timeZone1);
        java.util.TimeZone.setDefault(timeZone1);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(timeZone1);
        calendar6.set(8, 4);
        java.time.Instant instant10 = calendar6.toInstant();
        java.util.TimeZone timeZone11 = calendar6.getTimeZone();
        java.util.Locale locale13 = new java.util.Locale("deu");
        java.lang.String str14 = locale13.getDisplayLanguage();
        java.util.TimeZone timeZone15 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone17 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat18 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone17);
        java.lang.String str19 = fastDateFormat18.getPattern();
        java.lang.String str21 = fastDateFormat18.format(1645513660686L);
        java.util.Locale locale22 = java.util.Locale.ITALIAN;
        boolean boolean23 = fastDateFormat18.equals((java.lang.Object) locale22);
        java.util.Calendar calendar24 = java.util.Calendar.getInstance(timeZone15, locale22);
        java.util.Locale locale25 = java.util.Locale.FRANCE;
        boolean boolean26 = locale25.hasExtensions();
        java.lang.String str27 = locale22.getDisplayVariant(locale25);
        java.lang.String str28 = locale22.getDisplayName();
        java.lang.String str29 = locale22.getISO3Language();
        java.lang.String str30 = locale13.getDisplayName(locale22);
        java.util.Locale locale31 = java.util.Locale.TAIWAN;
        java.util.Locale locale32 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str33 = locale31.getDisplayLanguage(locale32);
        java.lang.String str34 = locale31.getLanguage();
        java.util.Locale locale36 = new java.util.Locale("Chinese");
        java.util.Locale locale37 = locale36.stripExtensions();
        java.lang.String str38 = locale31.getDisplayLanguage(locale36);
        java.lang.String str39 = locale22.getDisplayName(locale36);
        java.lang.String str40 = timeZone11.getDisplayName(locale22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar24", (calendar6.compareTo(calendar24) == 0) == calendar6.equals(calendar24));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test366");
        java.util.Locale locale0 = java.util.Locale.FRANCE;
        java.lang.String str1 = locale0.getScript();
        java.util.Locale.Builder builder3 = new java.util.Locale.Builder();
        java.util.Locale locale4 = builder3.build();
        java.lang.String str5 = locale4.getVariant();
        java.lang.String str6 = locale4.getDisplayLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat7 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(2, locale4);
        java.util.TimeZone timeZone8 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone10 = java.util.TimeZone.getDefault();
        boolean boolean11 = timeZone9.hasSameRules(timeZone10);
        boolean boolean12 = timeZone8.hasSameRules(timeZone9);
        java.util.TimeZone.setDefault(timeZone9);
        java.util.Calendar calendar14 = java.util.Calendar.getInstance(timeZone9);
        long long15 = calendar14.getTimeInMillis();
        calendar14.set((-1), (int) 'x', 45, 3, 59, 6);
        java.time.Instant instant23 = calendar14.toInstant();
        java.util.TimeZone timeZone24 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone25 = java.util.TimeZone.getDefault();
        boolean boolean26 = timeZone24.hasSameRules(timeZone25);
        boolean boolean27 = timeZone24.observesDaylightTime();
        int int28 = timeZone24.getRawOffset();
        java.util.TimeZone timeZone30 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat31 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone30);
        java.lang.String str32 = fastDateFormat31.getPattern();
        java.lang.String str34 = fastDateFormat31.format(1645513660686L);
        java.util.Date date35 = new java.util.Date();
        int int36 = date35.getSeconds();
        java.lang.String str37 = fastDateFormat31.format(date35);
        java.lang.String str39 = fastDateFormat31.format((long) 32769);
        java.util.TimeZone timeZone40 = fastDateFormat31.getTimeZone();
        boolean boolean41 = timeZone24.hasSameRules(timeZone40);
        calendar14.setTimeZone(timeZone24);
        java.util.TimeZone timeZone43 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        boolean boolean45 = timeZone43.hasSameRules(timeZone44);
        boolean boolean46 = timeZone43.observesDaylightTime();
        java.util.Locale locale47 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet48 = locale47.getUnicodeLocaleAttributes();
        java.util.Calendar calendar49 = java.util.Calendar.getInstance(timeZone43, locale47);
        java.util.Calendar calendar50 = java.util.Calendar.getInstance(timeZone43);
        java.util.TimeZone timeZone51 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone52 = java.util.TimeZone.getDefault();
        boolean boolean53 = timeZone51.hasSameRules(timeZone52);
        java.util.Calendar calendar54 = java.util.Calendar.getInstance(timeZone51);
        int int56 = calendar54.getActualMinimum(6);
        int int57 = calendar54.getMinimalDaysInFirstWeek();
        java.time.Instant instant58 = calendar54.toInstant();
        calendar54.roll((int) (short) 10, 100);
        java.util.TimeZone timeZone63 = java.util.TimeZone.getTimeZone("7:07:41 AM UTC");
        timeZone63.setID("\u4e0a\u5348 07:08:13");
        calendar54.setTimeZone(timeZone63);
        boolean boolean67 = timeZone43.hasSameRules(timeZone63);
        timeZone43.setID("\u4e0a\u53487:10");
        calendar14.setTimeZone(timeZone43);
        java.lang.String str71 = fastDateFormat7.format(calendar14);
        java.util.Locale locale72 = fastDateFormat7.getLocale();
        java.lang.String str73 = locale0.getDisplayName(locale72);
        java.lang.String str74 = locale72.getLanguage();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar49 and calendar50", (calendar49.compareTo(calendar50) == 0) == calendar49.equals(calendar50));
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test367");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.util.TimeZone timeZone3 = fastDateFormat2.getTimeZone();
        java.util.Locale locale4 = java.util.Locale.TRADITIONAL_CHINESE;
        java.util.Locale.setDefault(locale4);
        boolean boolean6 = fastDateFormat2.equals((java.lang.Object) locale4);
        java.util.TimeZone timeZone7 = fastDateFormat2.getTimeZone();
        int int8 = timeZone7.getRawOffset();
        java.util.TimeZone timeZone10 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat11 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone10);
        java.lang.String str12 = fastDateFormat11.getPattern();
        java.lang.String str14 = fastDateFormat11.format(1645513660686L);
        java.util.Date date15 = new java.util.Date();
        int int16 = date15.getSeconds();
        java.lang.String str17 = fastDateFormat11.format(date15);
        java.lang.Object obj18 = fastDateFormat11.clone();
        java.text.FieldPosition fieldPosition20 = new java.text.FieldPosition(32770);
        int int21 = fieldPosition20.getBeginIndex();
        java.text.Format.Field field22 = fieldPosition20.getFieldAttribute();
        java.util.Locale.Builder builder23 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder24 = builder23.clear();
        java.util.Locale locale25 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale26 = java.util.Locale.CHINESE;
        java.lang.String str27 = locale26.getLanguage();
        boolean boolean28 = locale26.hasExtensions();
        java.lang.String str29 = locale25.getDisplayVariant(locale26);
        java.util.Locale.Builder builder30 = builder24.setLocale(locale25);
        java.util.Locale locale31 = builder30.build();
        java.util.Locale.Builder builder33 = builder30.addUnicodeLocaleAttribute("German");
        java.util.Locale.Builder builder36 = builder33.setExtension('a', "ita");
        java.util.Locale locale37 = builder36.build();
        boolean boolean38 = fieldPosition20.equals((java.lang.Object) locale37);
        java.lang.String str39 = locale37.getVariant();
        boolean boolean40 = fastDateFormat11.equals((java.lang.Object) locale37);
        java.lang.String str41 = locale37.getScript();
        java.util.Calendar calendar42 = java.util.Calendar.getInstance(timeZone7, locale37);
        java.lang.String str43 = locale37.toLanguageTag();
        java.util.TimeZone timeZone44 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone46 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat47 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone46);
        java.lang.String str48 = fastDateFormat47.getPattern();
        java.lang.String str50 = fastDateFormat47.format(1645513660686L);
        java.util.Locale locale51 = java.util.Locale.ITALIAN;
        boolean boolean52 = fastDateFormat47.equals((java.lang.Object) locale51);
        java.util.Calendar calendar53 = java.util.Calendar.getInstance(timeZone44, locale51);
        java.lang.String str54 = locale51.getCountry();
        java.lang.String str55 = locale37.getDisplayName(locale51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar42 and calendar53", (calendar42.compareTo(calendar53) == 0) == calendar42.equals(calendar53));
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test368");
        java.util.Locale locale1 = java.util.Locale.getDefault();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(0, locale1);
        int int3 = fastDateFormat2.getMaxLengthEstimate();
        java.util.TimeZone timeZone4 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone5 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getDefault();
        boolean boolean7 = timeZone5.hasSameRules(timeZone6);
        boolean boolean8 = timeZone4.hasSameRules(timeZone5);
        java.util.TimeZone.setDefault(timeZone5);
        java.util.Calendar calendar10 = java.util.Calendar.getInstance(timeZone5);
        long long11 = calendar10.getTimeInMillis();
        calendar10.setMinimalDaysInFirstWeek((int) (short) -1);
        calendar10.setMinimalDaysInFirstWeek(17);
        calendar10.setMinimalDaysInFirstWeek(3);
        java.lang.String str18 = fastDateFormat2.format(calendar10);
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone20 = java.util.TimeZone.getDefault();
        boolean boolean21 = timeZone19.hasSameRules(timeZone20);
        boolean boolean22 = timeZone19.observesDaylightTime();
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet24 = locale23.getUnicodeLocaleAttributes();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(timeZone19, locale23);
        java.util.Calendar calendar26 = java.util.Calendar.getInstance(timeZone19);
        java.lang.String str27 = fastDateFormat2.format((java.lang.Object) calendar26);
        java.lang.String str28 = fastDateFormat2.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar10 and calendar25", (calendar10.compareTo(calendar25) == 0) == calendar10.equals(calendar25));
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test369");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone1);
        java.lang.String str3 = fastDateFormat2.getPattern();
        java.lang.String str5 = fastDateFormat2.format(1645513660686L);
        java.util.Date date6 = new java.util.Date();
        int int7 = date6.getSeconds();
        java.lang.String str8 = fastDateFormat2.format(date6);
        java.lang.String str10 = fastDateFormat2.format((long) 32769);
        java.util.Locale locale11 = fastDateFormat2.getLocale();
        java.util.TimeZone timeZone12 = fastDateFormat2.getTimeZone();
        java.lang.String str13 = timeZone12.getID();
        java.util.Calendar.Builder builder14 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder19 = builder14.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar20 = builder19.build();
        java.util.Calendar.Builder builder22 = builder19.setLenient(true);
        java.util.Locale locale23 = java.util.Locale.FRANCE;
        boolean boolean24 = locale23.hasExtensions();
        java.util.Calendar calendar25 = java.util.Calendar.getInstance(locale23);
        java.util.Locale locale26 = locale23.stripExtensions();
        java.util.Calendar.Builder builder27 = builder22.setLocale(locale23);
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        boolean boolean31 = timeZone29.hasSameRules(timeZone30);
        boolean boolean32 = timeZone28.hasSameRules(timeZone29);
        boolean boolean33 = timeZone28.observesDaylightTime();
        java.util.Calendar calendar34 = java.util.Calendar.getInstance(timeZone28);
        java.lang.String str35 = timeZone28.getID();
        java.util.Calendar.Builder builder36 = builder27.setTimeZone(timeZone28);
        boolean boolean37 = timeZone12.hasSameRules(timeZone28);
        java.util.Date date44 = new java.util.Date(600037, (int) (short) -1, 47, 50400000, 32, 407);
        boolean boolean45 = timeZone28.inDaylightTime(date44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar25 and calendar34", (calendar25.compareTo(calendar34) == 0) == calendar25.equals(calendar34));
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test370");
        java.util.Calendar.Builder builder0 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder5 = builder0.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar6 = builder5.build();
        java.util.Calendar.Builder builder8 = builder5.setLenient(true);
        java.util.Locale locale9 = java.util.Locale.FRANCE;
        boolean boolean10 = locale9.hasExtensions();
        java.util.Calendar calendar11 = java.util.Calendar.getInstance(locale9);
        java.util.Locale locale12 = locale9.stripExtensions();
        java.util.Calendar.Builder builder13 = builder8.setLocale(locale9);
        java.util.Calendar.Builder builder14 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder19 = builder14.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar calendar20 = builder19.build();
        java.util.Calendar.Builder builder22 = builder19.setLenient(true);
        java.util.Calendar.Builder builder26 = builder22.setDate(0, 0, (int) (byte) 0);
        java.util.Calendar.Builder builder31 = builder26.setTimeOfDay((int) (byte) -1, 58, 42, 41);
        java.util.Calendar.Builder builder33 = builder31.setLenient(true);
        java.util.Calendar.Builder builder34 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder38 = builder34.setWeekDate(16, 3, 100);
        java.util.Locale locale39 = java.util.Locale.GERMANY;
        java.util.Locale locale41 = new java.util.Locale("Chinese");
        java.lang.String str42 = locale39.getDisplayLanguage(locale41);
        java.util.Calendar.Builder builder43 = builder34.setLocale(locale41);
        java.util.Calendar.Builder builder44 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder49 = builder44.setTimeOfDay((int) (byte) 100, 32770, (int) (byte) 10, 9);
        java.util.Calendar.Builder builder54 = builder44.setTimeOfDay((int) (byte) 100, 15, 43, 59);
        java.util.Calendar.Builder builder56 = builder44.setLenient(false);
        java.util.Calendar.Builder builder60 = builder56.setDate(31, (int) (short) 10, (int) 'u');
        java.util.Calendar.Builder builder61 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder65 = builder61.setWeekDate(16, 3, 100);
        java.util.Calendar.Builder builder69 = builder61.setTimeOfDay((int) (byte) 100, 32770, 12);
        java.util.Calendar.Builder builder71 = builder69.setLenient(false);
        int[] intArray72 = new int[] {};
        java.util.Calendar.Builder builder73 = builder71.setFields(intArray72);
        java.util.Calendar.Builder builder74 = builder56.setFields(intArray72);
        java.util.Calendar.Builder builder75 = builder43.setFields(intArray72);
        java.util.Calendar.Builder builder76 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder80 = builder76.setWeekDate(16, 3, 100);
        java.util.Calendar.Builder builder84 = builder76.setTimeOfDay((int) (byte) 100, 32770, 12);
        java.util.Calendar.Builder builder86 = builder84.setLenient(false);
        int[] intArray87 = new int[] {};
        java.util.Calendar.Builder builder88 = builder86.setFields(intArray87);
        java.util.Calendar.Builder builder89 = builder75.setFields(intArray87);
        java.util.Calendar.Builder builder90 = builder31.setFields(intArray87);
        java.util.Calendar.Builder builder91 = builder8.setFields(intArray87);
        java.util.Calendar calendar92 = builder91.build();
        java.util.Calendar calendar93 = builder91.build();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar6 and calendar92", (calendar6.compareTo(calendar92) == 0) == calendar6.equals(calendar92));
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test371");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList1 = java.util.Locale.LanguageRange.parse("zho");
        java.util.Locale.LanguageRange[] languageRangeArray2 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList3 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList3, languageRangeArray2);
        java.util.Locale locale5 = java.util.Locale.GERMAN;
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        boolean boolean7 = locale6.hasExtensions();
        java.util.Locale locale8 = java.util.Locale.FRANCE;
        java.util.Locale locale9 = java.util.Locale.CHINESE;
        java.lang.String str10 = locale9.getLanguage();
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale5, locale6, locale8, locale9 };
        java.util.ArrayList<java.util.Locale> localeList12 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList12, localeArray11);
        java.util.Locale.FilteringMode filteringMode14 = java.util.Locale.FilteringMode.MAP_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList15 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList3, (java.util.Collection<java.util.Locale>) localeList12, filteringMode14);
        java.util.List<java.util.Locale> localeList16 = java.util.Locale.filter(languageRangeList1, (java.util.Collection<java.util.Locale>) localeList15);
        localeList16.clear();
        boolean boolean19 = localeList16.contains((java.lang.Object) 11);
        boolean boolean21 = localeList16.remove((java.lang.Object) "22 Feb 2022 07:07:43 GMT");
        java.util.TimeZone timeZone23 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat24 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone23);
        java.lang.String str25 = fastDateFormat24.getPattern();
        java.lang.String str27 = fastDateFormat24.format(1645513660686L);
        java.util.Date date28 = new java.util.Date();
        int int29 = date28.getSeconds();
        java.lang.String str30 = fastDateFormat24.format(date28);
        java.lang.String str32 = fastDateFormat24.format((long) 32769);
        java.util.TimeZone timeZone33 = fastDateFormat24.getTimeZone();
        int int34 = localeList16.indexOf((java.lang.Object) fastDateFormat24);
        java.util.TimeZone timeZone35 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = java.util.TimeZone.getDefault();
        boolean boolean37 = timeZone35.hasSameRules(timeZone36);
        java.util.Calendar calendar38 = java.util.Calendar.getInstance(timeZone35);
        int int39 = calendar38.getFirstDayOfWeek();
        long long40 = calendar38.getTimeInMillis();
        java.lang.String str41 = fastDateFormat24.format(calendar38);
        java.util.TimeZone timeZone43 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat44 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone43);
        java.lang.String str45 = fastDateFormat44.getPattern();
        java.lang.String str47 = fastDateFormat44.format(1645513660686L);
        java.util.TimeZone timeZone48 = fastDateFormat44.getTimeZone();
        java.lang.String str49 = timeZone48.getID();
        java.util.Locale locale50 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale51 = java.util.Locale.CHINESE;
        java.lang.String str52 = locale51.getLanguage();
        boolean boolean53 = locale51.hasExtensions();
        java.lang.String str54 = locale50.getDisplayVariant(locale51);
        java.util.Calendar calendar55 = java.util.Calendar.getInstance(timeZone48, locale50);
        boolean boolean56 = fastDateFormat24.equals((java.lang.Object) calendar55);
        java.util.TimeZone timeZone59 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat60 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone59);
        java.util.TimeZone timeZone61 = fastDateFormat60.getTimeZone();
        java.util.TimeZone timeZone64 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat65 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone64);
        java.lang.String str67 = fastDateFormat65.format((long) (byte) -1);
        java.text.ParsePosition parsePosition70 = new java.text.ParsePosition((int) (short) -1);
        java.lang.Object obj71 = fastDateFormat65.parseObject("GMT+00:00", parsePosition70);
        java.text.ParsePosition parsePosition74 = new java.text.ParsePosition(16);
        parsePosition74.setIndex(10);
        java.lang.Object obj77 = fastDateFormat65.parseObject("java.text.ParsePosition[index=16,errorIndex=-1]", parsePosition74);
        java.lang.Object obj78 = fastDateFormat60.parseObject("\u5fb7\u56fd", parsePosition74);
        int int79 = parsePosition74.getIndex();
        int int80 = parsePosition74.getIndex();
        java.util.Date date87 = new java.util.Date(5, 117, 292269054, 124, (int) (byte) 0, 0);
        int int88 = date87.getTimezoneOffset();
        boolean boolean89 = parsePosition74.equals((java.lang.Object) date87);
        java.lang.Object obj90 = fastDateFormat24.parseObject("\u4e0a\u5348\u65f6\u5206\u79d2 UTC", parsePosition74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar38 and calendar55", (calendar38.compareTo(calendar55) == 0) == calendar38.equals(calendar55));
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test372");
        java.util.TimeZone timeZone1 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat2 = org.apache.commons.lang3.time.FastDateFormat.getInstance("", timeZone1);
        java.lang.String str3 = fastDateFormat2.toString();
        boolean boolean4 = fastDateFormat2.getTimeZoneOverridesCalendar();
        java.util.TimeZone timeZone6 = java.util.TimeZone.getTimeZone("7:07:48 AM UTC");
        java.util.Calendar.Builder builder7 = new java.util.Calendar.Builder();
        java.util.Calendar.Builder builder11 = builder7.setWeekDate(16, 3, 100);
        java.util.Locale locale12 = java.util.Locale.GERMANY;
        java.util.Locale locale14 = new java.util.Locale("Chinese");
        java.lang.String str15 = locale12.getDisplayLanguage(locale14);
        java.util.Calendar.Builder builder16 = builder7.setLocale(locale14);
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        boolean boolean19 = timeZone17.hasSameRules(timeZone18);
        boolean boolean20 = timeZone17.observesDaylightTime();
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone17, locale21);
        java.lang.String str24 = locale21.getDisplayVariant();
        java.lang.String str25 = locale21.getDisplayVariant();
        java.util.Calendar.Builder builder26 = builder16.setLocale(locale21);
        java.util.Calendar calendar27 = java.util.Calendar.getInstance(timeZone6, locale21);
        boolean boolean29 = calendar27.before((java.lang.Object) "\u5e74\u6708\u65e5\u661f\u671f\u4e8c\u4e0a\u5348\u65f6\u5206\u79d2");
        java.lang.String str30 = fastDateFormat2.format(calendar27);
        boolean boolean32 = fastDateFormat2.equals((java.lang.Object) "Thu Jan 01 00:58:00 GMT+00:00 1970");
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar23 and calendar27", (calendar23.compareTo(calendar27) == 0) == calendar23.equals(calendar27));
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test373");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        java.util.Locale locale3 = java.util.Locale.getDefault();
        java.lang.String str4 = locale3.getLanguage();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat5 = org.apache.commons.lang3.time.FastDateFormat.getDateInstance((int) (short) 1, locale3);
        java.util.Locale.setDefault(category0, locale3);
        java.util.Locale locale7 = java.util.Locale.getDefault(category0);
        java.util.Locale locale8 = java.util.Locale.getDefault();
        java.lang.String str9 = locale8.getLanguage();
        java.util.TimeZone timeZone11 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat12 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone11);
        java.lang.String str13 = fastDateFormat12.getPattern();
        java.lang.String str15 = fastDateFormat12.format(1645513660686L);
        java.util.Locale locale16 = java.util.Locale.ITALIAN;
        boolean boolean17 = fastDateFormat12.equals((java.lang.Object) locale16);
        java.lang.String str18 = locale8.getDisplayLanguage(locale16);
        java.util.Locale.setDefault(locale16);
        java.lang.String str20 = locale16.toLanguageTag();
        java.util.Locale locale21 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.lang.String str23 = locale21.getISO3Country();
        java.lang.String str24 = locale21.getDisplayCountry();
        java.lang.String str25 = locale21.getDisplayVariant();
        boolean boolean26 = locale21.hasExtensions();
        java.util.TimeZone timeZone28 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone29 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone30 = java.util.TimeZone.getDefault();
        boolean boolean31 = timeZone29.hasSameRules(timeZone30);
        boolean boolean32 = timeZone28.hasSameRules(timeZone29);
        timeZone28.setID("\u4e2d\u6587\u53f0\u7063)");
        int int36 = timeZone28.getOffset(1645513548538L);
        java.util.Locale locale37 = java.util.Locale.CHINESE;
        java.lang.String str38 = locale37.getLanguage();
        boolean boolean39 = locale37.hasExtensions();
        java.lang.String str40 = locale37.getCountry();
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat41 = org.apache.commons.lang3.time.FastDateFormat.getInstance("zh", timeZone28, locale37);
        java.lang.String str42 = locale37.getDisplayVariant();
        java.util.Locale locale43 = java.util.Locale.US;
        java.util.Locale locale44 = java.util.Locale.GERMANY;
        java.util.Locale locale46 = new java.util.Locale("Chinese");
        java.lang.String str47 = locale44.getDisplayLanguage(locale46);
        java.lang.String str48 = locale44.getDisplayCountry();
        java.lang.String str49 = locale44.getISO3Language();
        java.lang.String str50 = locale43.getDisplayCountry(locale44);
        java.lang.String str51 = locale37.getDisplayCountry(locale44);
        java.lang.String str52 = locale21.getDisplayName(locale37);
        java.lang.String str53 = locale16.getDisplayVariant(locale21);
        java.lang.String str54 = locale21.getVariant();
        java.util.Locale locale55 = locale21.stripExtensions();
        java.util.Locale.setDefault(category0, locale55);
        java.util.Locale.Category category57 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale59 = new java.util.Locale("Chinese");
        java.util.Calendar calendar60 = java.util.Calendar.getInstance(locale59);
        java.lang.String str61 = locale59.getCountry();
        java.util.Locale.setDefault(category57, locale59);
        java.util.TimeZone timeZone64 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat65 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone64);
        java.lang.String str66 = fastDateFormat65.getPattern();
        java.lang.String str68 = fastDateFormat65.format(1645513660686L);
        java.util.TimeZone timeZone69 = fastDateFormat65.getTimeZone();
        java.lang.String str70 = timeZone69.getID();
        java.util.Locale locale71 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Locale locale72 = java.util.Locale.CHINESE;
        java.lang.String str73 = locale72.getLanguage();
        boolean boolean74 = locale72.hasExtensions();
        java.lang.String str75 = locale71.getDisplayVariant(locale72);
        java.util.Calendar calendar76 = java.util.Calendar.getInstance(timeZone69, locale71);
        java.lang.String str78 = locale71.getExtension('a');
        java.util.Locale locale79 = locale71.stripExtensions();
        java.util.Locale.setDefault(category57, locale79);
        java.util.Locale.setDefault(category0, locale79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar60 and calendar76", (calendar60.compareTo(calendar76) == 0) == calendar60.equals(calendar76));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test374");
        java.util.Locale locale3 = new java.util.Locale("", "hi!", "");
        java.util.Locale locale4 = java.util.Locale.ROOT;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.util.Calendar calendar6 = java.util.Calendar.getInstance(locale3);
        int int7 = calendar6.getWeekYear();
        java.time.Instant instant8 = calendar6.toInstant();
        java.time.Instant instant9 = calendar6.toInstant();
        calendar6.set(8, 6, 50, 43, 9);
        int int16 = calendar6.getFirstDayOfWeek();
        java.util.TimeZone timeZone17 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone18 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone19 = java.util.TimeZone.getDefault();
        boolean boolean20 = timeZone18.hasSameRules(timeZone19);
        boolean boolean21 = timeZone17.hasSameRules(timeZone18);
        java.util.TimeZone.setDefault(timeZone18);
        java.util.Calendar calendar23 = java.util.Calendar.getInstance(timeZone18);
        java.util.Date date24 = new java.util.Date();
        int int25 = date24.getTimezoneOffset();
        date24.setMinutes(5);
        calendar23.setTime(date24);
        java.util.TimeZone timeZone29 = calendar23.getTimeZone();
        java.lang.String str30 = timeZone29.getID();
        calendar6.setTimeZone(timeZone29);
        java.util.TimeZone timeZone34 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone36 = null;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat37 = org.apache.commons.lang3.time.FastDateFormat.getTimeInstance((int) (short) 1, timeZone36);
        java.lang.String str38 = fastDateFormat37.getPattern();
        java.lang.String str40 = fastDateFormat37.format(1645513660686L);
        java.util.Locale locale41 = java.util.Locale.ITALIAN;
        boolean boolean42 = fastDateFormat37.equals((java.lang.Object) locale41);
        java.util.Calendar calendar43 = java.util.Calendar.getInstance(timeZone34, locale41);
        java.util.Locale locale44 = java.util.Locale.CHINESE;
        org.apache.commons.lang3.time.FastDateFormat fastDateFormat45 = org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(0, 2, timeZone34, locale44);
        int int46 = timeZone34.getRawOffset();
        calendar6.setTimeZone(timeZone34);
        java.util.TimeZone timeZone48 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone49 = java.util.TimeZone.getDefault();
        java.util.TimeZone timeZone50 = java.util.TimeZone.getDefault();
        boolean boolean51 = timeZone49.hasSameRules(timeZone50);
        boolean boolean52 = timeZone48.hasSameRules(timeZone49);
        java.util.TimeZone.setDefault(timeZone49);
        java.util.Locale locale57 = new java.util.Locale("FastDateFormat[d MMMM yyyy]", "CHN", "22 Feb 2022 07:08:03 GMT");
        java.util.Locale locale58 = java.util.Locale.CHINESE;
        java.lang.String str59 = locale58.getLanguage();
        boolean boolean60 = locale58.hasExtensions();
        java.lang.String str61 = locale58.getDisplayCountry();
        java.util.Set<java.lang.String> strSet62 = locale58.getUnicodeLocaleKeys();
        java.util.Locale locale63 = java.util.Locale.TAIWAN;
        java.util.Locale locale64 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str65 = locale63.getDisplayLanguage(locale64);
        java.lang.String str66 = locale58.getDisplayLanguage(locale63);
        java.lang.String str67 = locale63.getVariant();
        java.lang.String str68 = locale57.getDisplayVariant(locale63);
        java.util.Locale locale70 = java.util.Locale.forLanguageTag("6:59:34 AM UTC");
        java.lang.String str71 = locale63.getDisplayLanguage(locale70);
        java.lang.String str72 = locale70.getLanguage();
        java.util.Locale locale73 = locale70.stripExtensions();
        java.util.Calendar calendar74 = java.util.Calendar.getInstance(timeZone49, locale73);
        java.util.Calendar calendar75 = java.util.Calendar.getInstance(timeZone49);
        timeZone49.setRawOffset(58);
        boolean boolean78 = timeZone34.hasSameRules(timeZone49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on calendar43 and calendar74", (calendar43.compareTo(calendar74) == 0) == calendar43.equals(calendar74));
    }
}

