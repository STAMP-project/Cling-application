import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        java.lang.String str46 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) doubleArray33);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{0.0,10.0,100.0}" + "'", str46, "{0.0,10.0,100.0}");
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 1);
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.toObject(intArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray48 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append(longArray42, longArray48);
        int[] intArray55 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.clone(intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray55, 100);
        long[] longArray64 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        java.lang.Long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toObject(longArray65);
        long[] longArray72 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        java.lang.Long[] longArray74 = org.apache.commons.lang3.ArrayUtils.toObject(longArray73);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.clone(longArray73);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray65, longArray75);
        int[] intArray81 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.clone(intArray81);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray81);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray75, (java.lang.Object) intArray83, false);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(intArray83, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder50.append(intArray55, intArray83);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray83);
        int[] intArray91 = org.apache.commons.lang3.ArrayUtils.add(intArray83, 0);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray30, intArray91);
        int[] intArray94 = org.apache.commons.lang3.ArrayUtils.add(intArray30, 6);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = org.apache.commons.lang3.ArrayUtils.remove(intArray94, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, -1, -1, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[100, -1, -1, 0, 6]");
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        int int40 = objMap31.size();
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray42);
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45, (long) 10);
        boolean boolean49 = objMap31.equals((java.lang.Object) 10);
        boolean boolean50 = objMap31.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100.0f, (double) 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray16);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 3);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray26);
        double[] doubleArray31 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray32, (java.lang.Object) ' ');
        java.lang.Object obj35 = null;
        java.lang.Object[] objArray36 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray32, obj35);
        java.lang.Object obj37 = null;
        java.lang.Object[] objArray38 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray32, obj37);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray32);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray32, (double) (byte) 1);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray41);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray41, (int) (byte) 0, (double) 1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.add(doubleArray41, (double) 100L);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray47, 2);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray26, doubleArray49);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray49, (double) 13, (int) 'a', (double) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 1.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 2);
        float[] floatArray56 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(floatArray56, (float) 0);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.add(floatArray56, 10.0f);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray56, (float) (-1));
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.remove(floatArray56, 0);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray53, floatArray56);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray66, 1.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, -1.0, 1.0]");
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        long[] longArray0 = new long[] {};
        long[] longArray1 = new long[] {};
        long[][] longArray2 = new long[][] { longArray0, longArray1 };
        long[] longArray3 = new long[] {};
        long[] longArray4 = new long[] {};
        long[][] longArray5 = new long[][] { longArray3, longArray4 };
        long[] longArray6 = new long[] {};
        long[] longArray7 = new long[] {};
        long[][] longArray8 = new long[][] { longArray6, longArray7 };
        long[] longArray9 = new long[] {};
        long[] longArray10 = new long[] {};
        long[][] longArray11 = new long[][] { longArray9, longArray10 };
        long[] longArray12 = new long[] {};
        long[] longArray13 = new long[] {};
        long[][] longArray14 = new long[][] { longArray12, longArray13 };
        long[] longArray15 = new long[] {};
        long[] longArray16 = new long[] {};
        long[][] longArray17 = new long[][] { longArray15, longArray16 };
        long[][][] longArray18 = new long[][][] { longArray2, longArray5, longArray8, longArray11, longArray14, longArray17 };
        long[] longArray23 = new long[] { (byte) -1, '4', 10, 1 };
        long[][] longArray24 = new long[][] { longArray23 };
        long[] longArray30 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.clone(longArray30);
        java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray31);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray31);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.add(longArray33, (long) (short) 0);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        long[] longArray42 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray42);
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toObject(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray43);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.add(longArray45, (long) (short) 0);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.addAll(longArray36, longArray45);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray36, (long) 10);
        long[][] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray24, longArray50);
        long[][][] longArray52 = org.apache.commons.lang3.ArrayUtils.add(longArray18, longArray24);
        short[] shortArray55 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray56 = new short[][] { shortArray55 };
        short[] shortArray59 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray60 = new short[][] { shortArray59 };
        short[][][] shortArray61 = new short[][][] { shortArray56, shortArray60 };
        short[][][] shortArray64 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray61, (int) (byte) 10, (int) 'a');
        java.lang.Cloneable[][] cloneableArray65 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.Cloneable[][]) longArray18, (java.lang.Cloneable[][]) shortArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray18);
        // The following exception was thrown during execution in test generation
        try {
            long[][][] longArray68 = org.apache.commons.lang3.ArrayUtils.remove(longArray18, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray0), "[]");
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[]");
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 52, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(cloneableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a', (-1));
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '#');
        java.lang.Character[] charArray26 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26, 'a');
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray29);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray20);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        java.lang.String str34 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray20, "{100,-1,-1,0}");
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{ ,4,4,a,4}" + "'", str34, "{ ,4,4,a,4}");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        short[] shortArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.add(shortArray0, (-1), (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) 0, (long) 2);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.add(longArray21, (long) 2);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray21, (long) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap31.entrySet();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((long) (short) 10, (long) '#');
        boolean boolean50 = equalsBuilder46.isEquals();
        java.lang.Object obj51 = objMap31.remove((java.lang.Object) boolean50);
        boolean boolean52 = objMap31.isEmpty();
        objMap31.clear();
        java.lang.Short[] shortArray55 = new java.lang.Short[] { (short) 1 };
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray56, (short) (byte) 100);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(shortArray56, (short) 1);
        short[] shortArray61 = new short[] {};
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray62, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.add(shortArray64, (short) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray56, shortArray67);
        boolean boolean70 = objMap31.equals((java.lang.Object) boolean69);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[1]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        char[] charArray1 = new char[] { 'a' };
        java.lang.Character[] charArray2 = org.apache.commons.lang3.ArrayUtils.toObject(charArray1);
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.clone(charArray4);
        java.lang.Character[] charArray11 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray13, '#');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.remove(charArray15, 2);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        java.lang.Character[] charArray25 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, 'a');
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        char[] charArray30 = null;
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray30);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray18, charArray31);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray31);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray31);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a  ##a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a  ##a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a,  ,  , #, #, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "aa a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "aa a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, a,  , a,  , #]");
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        java.lang.Long[] longArray6 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) (short) 10);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.String[] strArray13 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray14 = org.apache.commons.lang3.ArrayUtils.addAll(strArray9, strArray13);
        java.lang.String[] strArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray13);
        byte[] byteArray16 = null;
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10, (int) (short) -1);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) 10);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray16, byteArray21);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 0, 3);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 1);
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray15, (java.lang.Object) int32);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray6, (java.lang.Object) strArray15);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray39, (byte) 100);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray6, (java.lang.Object[]) byteArray39);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100, 1, 100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[1, 10, 0, -1, -1, -1]");
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (byte) 10, (double) ' ');
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray32 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray32);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        java.lang.Object obj35 = null;
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray34, obj35, false);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray34, (double) 3);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray26, doubleArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray26, (double) (short) -1);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) 11, 0);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean28 = equalsBuilder27.isEquals();
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray34 = org.apache.commons.lang3.ArrayUtils.addAll(strArray29, strArray33);
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray29);
        java.lang.Character[] charArray41 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41, ' ');
        java.lang.Character[] charArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder27.append((java.lang.Object[]) strArray29, (java.lang.Object[]) charArray44);
        java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strArray29, "{32,100,10,10,1}");
        java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.add(strArray29, "");
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray22, (java.lang.Object[]) strArray49);
        java.lang.Object[] objArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray22);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList52 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor53 = objEntryList52.iterator();
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray59 = org.apache.commons.lang3.ArrayUtils.addAll(strArray54, strArray58);
        java.lang.Comparable<java.lang.String>[] strComparableArray60 = objEntryList52.toArray((java.lang.Comparable<java.lang.String>[]) strArray54);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray51, (java.lang.Object) strComparableArray60);
        java.lang.Comparable<java.lang.String> strComparable62 = null;
        java.lang.Comparable<java.lang.String>[] strComparableArray63 = org.apache.commons.lang3.ArrayUtils.add(strComparableArray60, strComparable62);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(objEntryItor53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strComparableArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strComparableArray63);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        java.lang.Object[] objArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray1);
        java.lang.Object[] objArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1]");
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.String str26 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray24, "{-1.0,1.0}");
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray24, '#', (int) 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{ ,4,4,a,4}" + "'", str26, "{ ,4,4,a,4}");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) 10);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray12, (long) 2);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        java.lang.Object obj9 = null;
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray4, obj9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (byte) 1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (int) (byte) 0, (double) 1);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) 100L);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1.0f), (int) (short) -1, (double) (short) 0);
        boolean[] booleanArray28 = new boolean[] { false, false, false, false };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray28, false);
        java.lang.Boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray28);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray28);
        java.lang.Boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray28);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray35, booleanArray40);
        java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (-1.0f), (java.lang.Object) booleanArray47);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        java.lang.Integer[] intArray32 = org.apache.commons.lang3.ArrayUtils.toObject(intArray22);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (-1));
        java.lang.Integer[] intArray36 = org.apache.commons.lang3.ArrayUtils.toObject(intArray35);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray35, 13, 8);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        boolean[] booleanArray38 = new boolean[] { false, false, false, false };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray38, false);
        java.lang.Boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray38);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean48 = equalsBuilder47.isEquals();
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray54 = org.apache.commons.lang3.ArrayUtils.addAll(strArray49, strArray53);
        java.lang.String[] strArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray49);
        java.lang.Character[] charArray61 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, ' ');
        java.lang.Character[] charArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder47.append((java.lang.Object[]) strArray49, (java.lang.Object[]) charArray64);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray64);
        java.lang.Object obj67 = objMap31.putIfAbsent((java.lang.Object) booleanArray38, (java.lang.Object) charArray66);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray38);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray38, false);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray38, true);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray11, (byte) 1, 3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) (short) 10, (-1));
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray6, (long) (-1));
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, 100L, 2);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) '4', (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[]");
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        java.lang.Object obj50 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 10 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray53, (int) (byte) 10);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append((java.lang.Object[]) intArray53, (java.lang.Object[]) byteArray60);
        java.lang.Object obj64 = objMap31.replace(obj50, (java.lang.Object) equalsBuilder51);
        java.lang.Object obj65 = null;
        java.lang.Object obj66 = objMap31.remove(obj65);
        boolean boolean67 = objMap31.isEmpty();
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = objMap31.entrySet();
        java.util.Collection<java.lang.Object> objCollection70 = objMap31.values();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertNotNull(objCollection70);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray14);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray14);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18, false);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray20);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, true);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray23, true);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, 3, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray21 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray22, (java.lang.Object) ' ');
        boolean[] booleanArray29 = new boolean[] { false, true, true, true };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray22, (java.lang.Object) booleanArray30, (int) (byte) 10);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.add(booleanArray30, true);
        boolean[] booleanArray39 = new boolean[] { false, true, true, true };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray40, true, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder14.append(booleanArray34, booleanArray40);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray34, false);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray4, booleanArray46);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray4, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[true, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Object[] objArray38 = objEntrySet32.toArray();
        boolean boolean40 = objEntrySet32.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor42 = objEntryList41.iterator();
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.addAll(strArray43, strArray47);
        java.lang.Comparable<java.lang.String>[] strComparableArray49 = objEntryList41.toArray((java.lang.Comparable<java.lang.String>[]) strArray43);
        boolean boolean50 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        objEntrySet32.clear();
        boolean boolean52 = objEntrySet32.isEmpty();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream53 = objEntrySet32.parallelStream();
        objEntrySet32.clear();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean59 = equalsBuilder58.isEquals();
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.addAll(strArray60, strArray64);
        java.lang.String[] strArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray60);
        java.lang.Character[] charArray72 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray72, ' ');
        java.lang.Character[] charArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder58.append((java.lang.Object[]) strArray60, (java.lang.Object[]) charArray75);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((-1L), (long) (short) -1);
        boolean boolean80 = objEntrySet32.remove((java.lang.Object) (-1L));
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntryItor42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strComparableArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntryStream53);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        char[] charArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray2 = org.apache.commons.lang3.ArrayUtils.remove(charArray0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        int[] intArray3 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.subarray(intArray3, (int) '#', (int) (short) 0);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, (int) (byte) 1);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray9, (-1));
        int[] intArray16 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.clone(intArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray23 = new double[] {};
        double[] doubleArray27 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray27, (double) (byte) 10);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 0L, 0);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder19.append(doubleArray23, doubleArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder19.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) 1 };
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        java.lang.Character[] charArray52 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray52, ' ');
        java.lang.Character[] charArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder41.append((java.lang.Object[]) shortArray43, (java.lang.Object[]) charArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder56.appendSuper(true);
        boolean[] booleanArray63 = new boolean[] { false, false, false, false };
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray63, false);
        java.lang.Boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean72 = equalsBuilder71.isEquals();
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.String[] strArray77 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.addAll(strArray73, strArray77);
        java.lang.String[] strArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray73);
        java.lang.Character[] charArray85 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray85, ' ');
        java.lang.Character[] charArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder71.append((java.lang.Object[]) strArray73, (java.lang.Object[]) charArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder58.append((java.lang.Object) booleanArray63, (java.lang.Object) equalsBuilder71);
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray9, (java.lang.Object) equalsBuilder58, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder58.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder58.append('4', 'a');
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray12, true);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray12, true, 6);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((short) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append(0.0d, (double) ' ');
        double[] doubleArray52 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray52);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) (byte) 10);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) 10.0f);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) 10L, 10);
        double[] doubleArray66 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray66);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.add(doubleArray66, (double) (byte) 10);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.add(doubleArray66, 0.0d);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (-1), (int) (short) 10, (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder48.append(doubleArray55, doubleArray66);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray66);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray77, (double) 8, (int) (byte) 100, 0.0d);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray4, (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray6, 5, (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        java.lang.reflect.Type[] typeArray0 = null;
        byte[] byteArray4 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray4, (byte) 10, (int) (short) -1);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 10);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray4, (byte) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray4, (byte) 100);
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10, (int) (short) -1);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) 1, (int) ' ');
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray4, byteArray17);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 10);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 10);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray32);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray4, (int) (byte) -1, (int) '#');
        java.lang.Class<?> wildcardClass42 = byteArray41.getClass();
        java.lang.reflect.Type[] typeArray43 = org.apache.commons.lang3.ArrayUtils.add(typeArray0, (java.lang.reflect.Type) wildcardClass42);
        java.lang.Character[] charArray49 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49, 'a');
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.add(charArray51, '#');
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.subarray(charArray51, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray62 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray62);
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray62, 'a');
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.clone(charArray65);
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray51, charArray65);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(charArray51, ' ');
        int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) typeArray0, (java.lang.Object) boolean69, 13);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1, (float) 'a');
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, 0.0f);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray6);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray6, (float) 4);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 10L, 10);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray16);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        boolean boolean26 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray16, (java.lang.Object) intArray24, false);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray32 = new double[] {};
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) 0L, 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray36);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(doubleArray32, doubleArray36);
        long[] longArray53 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.clone(longArray53);
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.toObject(longArray54);
        long[] longArray61 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray61);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray54, longArray62);
        long[] longArray69 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.clone(longArray69);
        java.lang.Long[] longArray71 = org.apache.commons.lang3.ArrayUtils.toObject(longArray70);
        long[] longArray77 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.clone(longArray77);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray70, longArray78);
        java.lang.Long[] longArray80 = org.apache.commons.lang3.ArrayUtils.toObject(longArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder47.append(longArray54, longArray78);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray54, (long) (-1), (int) (byte) -1);
        long[] longArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray16, longArray85);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray85);
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.add(longArray85, 0L);
        long[] longArray91 = org.apache.commons.lang3.ArrayUtils.remove(longArray89, 2);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray89);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray91), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Object, java.lang.Object> objMap10 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) shortArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '1', is neither of type Map.Entry nor an Array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray10);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray13 = org.apache.commons.lang3.ArrayUtils.remove(charArray10, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, 1, (short) (byte) -1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray2);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray14 = new double[] {};
        double[] doubleArray18 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray18);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) (byte) 10);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) 0L, 0);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray18);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder10.append(doubleArray14, doubleArray18);
        long[] longArray35 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toObject(longArray36);
        long[] longArray43 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.clone(longArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray36, longArray44);
        long[] longArray51 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        java.lang.Long[] longArray53 = org.apache.commons.lang3.ArrayUtils.toObject(longArray52);
        long[] longArray59 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray52, longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.toObject(longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder29.append(longArray36, longArray60);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray36, (long) (-1), (int) (byte) -1);
        java.lang.Long[] longArray67 = org.apache.commons.lang3.ArrayUtils.toObject(longArray36);
        java.lang.Long[] longArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray67);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray9, (java.lang.Object) longArray67, 4);
        java.lang.Long[] longArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray67);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray67);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray67, (long) (short) 1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, -1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray6);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 100.0d, (int) ' ', (double) 0L);
        double[] doubleArray20 = null;
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray20);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray3, (double) 1L);
        java.lang.Class<?> wildcardClass24 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        double[] doubleArray62 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) (byte) 10);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray65, (double) 10.0f);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray71, (double) 0L, 0);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray71);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray71);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray82);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray82, 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder51.append(doubleArray58, doubleArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((double) '4', (double) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder87.append((short) 10, (short) (byte) 1);
        boolean boolean96 = equalsBuilder87.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) '#');
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 0.0, 1.0]");
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a', (-1));
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '#');
        java.lang.Character[] charArray26 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26, 'a');
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray29);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray20);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(charArray31, '#');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.remove(charArray31, 5);
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.toObject(charArray31);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray31);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray31, '#', 10);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a #44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a #44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray2, (java.lang.Object) 'a');
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, (int) (byte) 1, (int) (byte) 1);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) (-1));
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray18);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray18);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray27);
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray29, (float) 2);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, -1, 4, 4]");
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray11);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray13, (byte) 10);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray13);
        byte[] byteArray19 = null;
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19);
        byte[] byteArray24 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray24, (byte) 10, (int) (short) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 10);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray20, byteArray24);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31);
        byte[] byteArray33 = null;
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray32, byteArray33);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray32, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray41 = new double[] {};
        double[] doubleArray45 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, (double) (byte) 10);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray45, (double) 0L, 0);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray45);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray45, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(doubleArray41, doubleArray45);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray61 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray61);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.add(doubleArray61, (double) (byte) 10);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray64, (double) 10.0f);
        double[] doubleArray70 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray70);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.add(doubleArray70, (double) (byte) 10);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) 0L, 0);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray70);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray70, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray64, doubleArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder56.append(doubleArray57, doubleArray70);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray83);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray87 = org.apache.commons.lang3.ArrayUtils.add(byteArray85, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append(byteArray83, byteArray85);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray83);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray89);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray32, byteArray89);
        byte[] byteArray92 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray20, byteArray91);
        byte[] byteArray95 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray92, (int) '#', (int) (short) 1);
        byte[] byteArray96 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray13, byteArray95);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray95);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[]");
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        double[] doubleArray62 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) (byte) 10);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray65, (double) 10.0f);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray71, (double) 0L, 0);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray71);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray71);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray82);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray82, 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder51.append(doubleArray58, doubleArray82);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray82);
        java.lang.Double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray82);
        double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray89, (double) (short) -1);
        double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray89, (double) 6);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        long[] longArray18 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        java.lang.Long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toObject(longArray19);
        long[] longArray26 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.clone(longArray26);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toObject(longArray27);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.addAll(longArray19, longArray29);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray19);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        java.lang.Long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray38);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.add(longArray40, (long) (short) 0);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray50);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.add(longArray52, (long) (short) 0);
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.addAll(longArray43, longArray52);
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.subarray(longArray43, (int) (short) -1, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder0.append(longArray19, longArray58);
        boolean boolean60 = equalsBuilder59.isEquals();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        char[] charArray10 = new char[] { 'a' };
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.clone(charArray10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.remove(charArray10, (int) (short) 0);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray17, ' ');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.add(charArray17, '#');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray23 = org.apache.commons.lang3.ArrayUtils.remove(charArray21, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ ]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#]");
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Character[] charArray17 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, 'a');
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, 'a', (-1));
        java.lang.Character[] charArray28 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, '#');
        java.lang.Character[] charArray38 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray38);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray32, charArray41);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray32);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray11, (java.lang.Object) charArray32);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, true);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray45, false);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray49, false, 10);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, true, (int) (byte) 10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        java.util.Collection<java.lang.Object> objCollection74 = objMap70.values();
        boolean boolean75 = objMap70.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        short[] shortArray4 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) 1, 100);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) -1);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        short[] shortArray22 = new short[] {};
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray21);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 1 };
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray30, (short) (byte) 1);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray30, (short) -1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray30);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.clone(shortArray30);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray30);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, true);
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10, (int) (short) -1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray30);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) 1, (int) ' ');
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray44);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder23.append(byteArray30, byteArray49);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray54, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder0.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(0, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray3 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray6 = new java.lang.Double[][] { doubleArray1, doubleArray3, doubleArray5 };
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray13 = new java.lang.Double[][] { doubleArray8, doubleArray10, doubleArray12 };
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray17 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray15, doubleArray17, doubleArray19 };
        java.lang.Double[] doubleArray22 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray26 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray27 = new java.lang.Double[][] { doubleArray22, doubleArray24, doubleArray26 };
        java.lang.Double[][][] doubleArray28 = new java.lang.Double[][][] { doubleArray6, doubleArray13, doubleArray20, doubleArray27 };
        java.lang.Double[][][][] doubleArray29 = new java.lang.Double[][][][] { doubleArray28 };
        java.lang.Double[] doubleArray31 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray33 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray35 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray36 = new java.lang.Double[][] { doubleArray31, doubleArray33, doubleArray35 };
        java.lang.Double[] doubleArray38 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray40 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray43 = new java.lang.Double[][] { doubleArray38, doubleArray40, doubleArray42 };
        java.lang.Double[] doubleArray45 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray47 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray49 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray50 = new java.lang.Double[][] { doubleArray45, doubleArray47, doubleArray49 };
        java.lang.Double[] doubleArray52 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 10.0d };
        java.lang.Double[] doubleArray56 = new java.lang.Double[] { 10.0d };
        java.lang.Double[][] doubleArray57 = new java.lang.Double[][] { doubleArray52, doubleArray54, doubleArray56 };
        java.lang.Double[][][] doubleArray58 = new java.lang.Double[][][] { doubleArray36, doubleArray43, doubleArray50, doubleArray57 };
        java.lang.Double[][][][] doubleArray59 = new java.lang.Double[][][][] { doubleArray58 };
        java.lang.Double[][][][][] doubleArray60 = new java.lang.Double[][][][][] { doubleArray29, doubleArray59 };
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Long[] longArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) 10);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray7, (int) (byte) 0, (long) '4');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray7, 1L);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[52]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, (-1.0f));
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray15, (float) ' ');
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, 10, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray15);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray21);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, 1.0d, (-1));
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream35 = objEntrySet32.parallelStream();
        java.lang.Boolean[][] booleanArray36 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray65 = new java.lang.Boolean[][] { booleanArray43, booleanArray50, booleanArray57, booleanArray64 };
        java.lang.Boolean[][] booleanArray66 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray36, booleanArray65);
        java.util.Map<java.lang.Object, java.lang.Object> objMap67 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = objMap67.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList69 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean71 = objEntryList69.remove((java.lang.Object) byteArray70);
        boolean boolean72 = objEntrySet68.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList69);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor73 = objEntrySet68.iterator();
        java.lang.Object[] objArray74 = objEntrySet68.toArray();
        boolean boolean76 = objEntrySet68.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList77 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor78 = objEntryList77.iterator();
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.String[] strArray83 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.addAll(strArray79, strArray83);
        java.lang.Comparable<java.lang.String>[] strComparableArray85 = objEntryList77.toArray((java.lang.Comparable<java.lang.String>[]) strArray79);
        boolean boolean86 = objEntrySet68.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList77);
        boolean boolean87 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet68);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = objEntrySet68.add(objEntry88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryStream35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(objMap67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEntryItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntryItor78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strComparableArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        long[] longArray18 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        java.lang.Long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toObject(longArray19);
        long[] longArray26 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.clone(longArray26);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toObject(longArray27);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.addAll(longArray19, longArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray30, (long) 1);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray30, (long) (short) 100);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.add(longArray43, (long) (short) 0);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray45);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.add(longArray46, (int) (short) 1, (long) (short) 1);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 0L, 0);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray55);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) 4);
        java.lang.String[] strArray68 = null;
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray51, (java.lang.Object) doubleArray55, strArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder12.append(longArray34, longArray51);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray34);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 1, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray18);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray18);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray18);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, (-1.0f));
        float[] floatArray26 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray27);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray27);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray29, 0.0f);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.add(floatArray29, 0.0f);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray23, floatArray29);
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) (short) 100);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray19);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, (int) (byte) 0, 100);
        java.lang.Character[] charArray29 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, 'a');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.add(charArray31, '#');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, 2);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.remove(charArray37, (int) (byte) 1);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray39);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray40, 'a', 5);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.add(charArray40, 9, '#');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.add(charArray47, (int) (short) 10, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 44a4a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 44a4a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, 4, a, 4, a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4, a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4a ###a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4a ###a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4, a,  , #, #, #, a]");
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        java.lang.Boolean[][] booleanArray14 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray43 = new java.lang.Boolean[][] { booleanArray21, booleanArray28, booleanArray35, booleanArray42 };
        java.lang.Boolean[][] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray14, booleanArray43);
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray66 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray74 = new java.lang.Boolean[][] { booleanArray52, booleanArray59, booleanArray66, booleanArray73 };
        java.lang.Boolean[][] booleanArray75 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder0.append((java.lang.Object[]) booleanArray43, (java.lang.Object[]) booleanArray45);
        equalsBuilder0.reset();
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray78);
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.clone(strArray78);
        java.lang.String[] strArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray80);
        org.apache.commons.lang3.ArrayUtils arrayUtils82 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray83 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils82 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray85 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray83, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder0.append((java.lang.Object[]) strArray81, (java.lang.Object[]) arrayUtilsArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder86.appendSuper(false);
        boolean boolean89 = equalsBuilder88.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(arrayUtilsArray83);
        org.junit.Assert.assertNotNull(arrayUtilsArray85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 1 };
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray20);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20, (short) (byte) 100);
        short[] shortArray25 = new short[] {};
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray24, shortArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray25);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, (java.lang.Object) shortArray32, 0);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) (byte) 1);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray32);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, true);
        boolean[] booleanArray35 = new boolean[] { false, false, false, false };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray35, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray35, true);
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        java.lang.Boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray45);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray35, booleanArray45);
        boolean[] booleanArray55 = new boolean[] { false, true, true, true };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray56, true, (int) (short) 100);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray35, booleanArray56);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray56, 1);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray30, booleanArray56);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray30, true);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray30, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, false, (int) (short) 10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.clone(floatArray3);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.remove(floatArray3, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 0.0, 10.0]");
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder6.append(doubleArray10, doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) 10.0f);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder25.append(doubleArray26, doubleArray39);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray54, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append(byteArray52, byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray58);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray58);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray60, (byte) 0);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) -1);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray64, (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray66);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, false, 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        long[] longArray44 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder31.append(longArray38, longArray44);
        boolean[] booleanArray51 = new boolean[] { false, false, false, false };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray51, false);
        java.lang.Boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray51);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray51);
        java.lang.Boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray51);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.add(booleanArray58, 0, true);
        boolean[] booleanArray66 = new boolean[] { false, false, false, false };
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray66, false);
        java.lang.Boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray66, true, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder31.append(booleanArray58, booleanArray66);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.add(booleanArray66, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder3.append(booleanArray22, booleanArray66);
        java.lang.Boolean boolean78 = equalsBuilder77.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        java.util.Iterator[] iteratorArray1 = new java.util.Iterator[0];
        @SuppressWarnings("unchecked")
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryItorArray2 = (java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) iteratorArray1;
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryItorArray3 = org.apache.commons.lang3.ArrayUtils.clone((java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[]) iteratorArray1);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryItorArray6 = org.apache.commons.lang3.ArrayUtils.subarray(objEntryItorArray3, 7, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>>[] objEntryItorArray8 = org.apache.commons.lang3.ArrayUtils.remove(objEntryItorArray6, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(iteratorArray1);
        org.junit.Assert.assertNotNull(objEntryItorArray2);
        org.junit.Assert.assertNotNull(objEntryItorArray3);
        org.junit.Assert.assertNotNull(objEntryItorArray6);
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        byte[] byteArray11 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray11, (byte) 10, (int) (short) -1);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray11);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray11, (byte) 1, (int) ' ');
        byte[] byteArray25 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray25);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 1);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray33, (byte) 0);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder7.append(byteArray29, byteArray36);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.add(byteArray39, (int) (byte) 0, (byte) 100);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray39);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray39, (byte) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray39);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray39);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 10, 5);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Boolean[][] booleanArray38 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray45 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray66 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray67 = new java.lang.Boolean[][] { booleanArray45, booleanArray52, booleanArray59, booleanArray66 };
        java.lang.Boolean[][] booleanArray68 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray38, booleanArray67);
        java.util.Map<java.lang.Object, java.lang.Object> objMap69 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = objMap69.entrySet();
        objEntrySet70.clear();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList72 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray76 = new float[] { (short) 100, 0, 10 };
        float[] floatArray79 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray79);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.contains(floatArray79, (float) 0);
        float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.add(floatArray79, 10.0f);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray79);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(floatArray79, (float) (byte) 10);
        boolean boolean88 = objEntryList72.equals((java.lang.Object) boolean87);
        boolean boolean89 = objEntrySet70.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList72);
        boolean boolean90 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet70);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream91 = objEntrySet32.stream();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream92 = objEntrySet32.stream();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = objEntrySet32.add(objEntry93);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(objMap69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objEntryStream91);
        org.junit.Assert.assertNotNull(objEntryStream92);
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray21);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (int) (short) 100, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 10.0, 1.0]");
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, 100);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray43);
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) intArray51, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.append(intArray23, intArray51);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray51);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray51, (int) (short) 10, 4);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.add(intArray51, (int) (byte) 0);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, (int) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, -1, -1, 0, 0]");
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        char[] charArray0 = null;
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.add(charArray0, (int) (short) 0, '#');
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray0);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[#]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 0.0f, (int) ' ');
        float[] floatArray14 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray14, floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.clone(floatArray18);
        float[] floatArray26 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        float[] floatArray30 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray30, (float) 0);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray30);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray26);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray26);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray26);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) 0L, (int) (byte) 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray18);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        double[] doubleArray45 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, (double) (byte) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, 0.0d);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray45);
        boolean boolean52 = objMap31.containsKey((java.lang.Object) doubleArray40);
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = objMap31.entrySet();
        boolean[] booleanArray59 = new boolean[] { false, false, false, false };
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray59);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray59, false);
        java.lang.Boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray59);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray59);
        java.lang.Boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray59);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray65);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray65, true);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray68);
        boolean[] booleanArray74 = new boolean[] { false, false, false, false };
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray74);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray74, false);
        java.lang.Boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray74);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray74);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray74);
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray74);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray68, booleanArray74);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray74);
        boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray74, true);
        byte[] byteArray86 = null;
        byte[] byteArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray86);
        byte[] byteArray91 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray91, (byte) 10, (int) (short) -1);
        int int96 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray91, (byte) 10);
        byte[] byteArray97 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray86, byteArray91);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray91);
        java.lang.Object obj99 = objMap31.putIfAbsent((java.lang.Object) booleanArray85, (java.lang.Object) byteArray91);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray85), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 2 + "'", int96 == 2);
        org.junit.Assert.assertNotNull(byteArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray97), "[0, 0, 10]");
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        short[] shortArray31 = new short[] {};
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray31);
        int int33 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray31);
        short[] shortArray36 = new short[] { (short) 100, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(shortArray31, shortArray36);
        boolean[] booleanArray42 = new boolean[] { false, false, false, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray42, false);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, true);
        boolean[] booleanArray48 = null;
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray42, booleanArray48);
        boolean[] booleanArray50 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder0.append(booleanArray42, booleanArray50);
        java.lang.Short[] shortArray53 = new java.lang.Short[] { (short) 1 };
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray54, (short) 10);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray54, (short) 100, (int) (byte) 1);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray54);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray60, (short) (byte) -1, (int) '#');
        java.lang.Short[] shortArray65 = new java.lang.Short[] { (short) 1 };
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray65);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65, (short) (byte) 100);
        short[] shortArray70 = new short[] {};
        java.lang.Short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray69, shortArray70);
        java.lang.Short[] shortArray74 = new java.lang.Short[] { (short) 1 };
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray74);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74, (short) (byte) 100);
        short[] shortArray79 = new short[] {};
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray78, shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray72, shortArray79);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.add(shortArray82, (short) (byte) 10);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray84, 2, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder0.append(shortArray60, shortArray84);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray84, (short) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray93 = org.apache.commons.lang3.ArrayUtils.add(shortArray84, (int) (short) -1, (short) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[1, 10]");
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        int[] intArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray0, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Character[] charArray10 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray10, ' ');
        java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray10);
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) shortArray16);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((short) 1, (short) (byte) -1);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray14, (java.lang.Object) ' ');
        java.lang.Object obj17 = null;
        java.lang.Object[] objArray18 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray14, obj17);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) 0);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) (byte) 10);
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) (byte) 10, false);
        short[] shortArray25 = new short[] {};
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 10, 3, 10 };
        java.lang.Integer[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        java.lang.Integer[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean39 = equalsBuilder38.isEquals();
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.String[] strArray44 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray45 = org.apache.commons.lang3.ArrayUtils.addAll(strArray40, strArray44);
        java.lang.String[] strArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray40);
        java.lang.Character[] charArray52 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray52, ' ');
        java.lang.Character[] charArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder38.append((java.lang.Object[]) strArray40, (java.lang.Object[]) charArray55);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray55);
        java.lang.Character[] charArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray55);
        java.lang.Character[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray34, (java.lang.Object[]) charArray59);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray33, (java.lang.Object) wildcardClassArray34);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(wildcardClassArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder3.append((java.lang.Object[]) shortArray26, (java.lang.Object[]) wildcardClassArray34);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.add(shortArray64, (short) 100);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray66);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[100]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[100]");
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 1 };
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3, (short) (byte) 100);
        short[] shortArray8 = new short[] {};
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        java.lang.Short[] shortArray12 = new java.lang.Short[] { (short) 1 };
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 100);
        short[] shortArray17 = new short[] {};
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray17);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray10, shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.add(shortArray20, (short) (byte) 10);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray20, (short) (byte) 100);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray20, (short) (byte) -1);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray20);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray1, shortArray20);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray20);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        long[] longArray0 = null;
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.subarray(longArray0, (int) '4', 5);
        org.junit.Assert.assertNull(longArray3);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray2, (java.lang.Object) 'a');
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 3);
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) ' ');
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) (byte) 1);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0, 3.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        byte[] byteArray31 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray31, (byte) 10);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray31, (byte) 10);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray3, byteArray31);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray3, (int) (byte) -1, (int) '#');
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray3);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray41, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 10]");
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, 2, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 100L, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (-1.0f), (double) 7);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 0, (int) '4');
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        byte[] byteArray9 = null;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray9);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 1);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) -1);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 1, (int) (short) -1);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray14);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList19 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean21 = objEntryList19.remove((java.lang.Object) byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 1);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 10);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray25);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray3, 7, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.remove(byteArray6, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.lang.Object obj40 = null;
        long[] longArray46 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toObject(longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray49, (long) (short) 0);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        long[] longArray58 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.toObject(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.add(longArray61, (long) (short) 0);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray61);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, (long) 10);
        java.lang.Object obj67 = objMap31.putIfAbsent(obj40, (java.lang.Object) longArray52);
        java.util.Collection<java.lang.Object> objCollection68 = objMap31.values();
        boolean[] booleanArray73 = new boolean[] { false, false, false, false };
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray73);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray74);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray75);
        boolean boolean77 = objMap31.containsKey((java.lang.Object) booleanArray75);
        boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray75, 2, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.add(booleanArray75, 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[]");
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Character[] charArray27 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27, 'a');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray40 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray43);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray43);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        org.apache.commons.lang3.ArrayUtils arrayUtils47 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray48 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils47 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray50 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray48, (int) (short) 0);
        java.lang.Character[] charArray56 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, ' ');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.addAll(strArray60, strArray64);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray48, (java.lang.Object) charArray58, strArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append(charArray29, charArray58);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (-1), 4);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray70);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(arrayUtilsArray48);
        org.junit.Assert.assertNotNull(arrayUtilsArray50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), " a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), " a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[ , a,  , a]");
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        float[] floatArray0 = null;
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray4, 3, 0);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray4);
        float[] floatArray20 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray21);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray21);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.add(floatArray23, 0.0f);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray23, (float) 5, (int) ' ');
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray23);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray29, (float) 6, (int) (byte) 0);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, 7, (int) (byte) -1);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.clone(floatArray29);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray29, (float) 10L);
        java.lang.Class<?> wildcardClass39 = floatArray29.getClass();
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray3, 3, 0);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.add(floatArray3, (int) (byte) -1, (float) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]");
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        float[] floatArray0 = null;
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray4, 3, 0);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray4);
        float[] floatArray20 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray21);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray21);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.add(floatArray23, 0.0f);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray23, (float) 5, (int) ' ');
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray23);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.clone(floatArray23);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray30, 11, 7);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray33);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) 9, (int) 'a', (double) '#');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1, (int) ' ');
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray52);
        boolean boolean57 = objEntrySet32.equals((java.lang.Object) byteArray38);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray59);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59, (byte) 0);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray63);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList65 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean67 = objEntryList65.remove((java.lang.Object) byteArray66);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray66, (byte) 1);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray66);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray70);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.clone(byteArray71);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.clone(byteArray72);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.add(byteArray73, (byte) 100);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray64, byteArray73);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray64);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray64, (byte) 100);
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.clone(byteArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray64);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, 10, 0, 0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0, 0, 10, 1]");
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        int[] intArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Object[] objArray37 = objEntryList33.toArray();
        java.lang.Object[] objArray38 = objEntryList33.toArray();
        java.util.Map<java.lang.Object, java.lang.Object> objMap39 = org.apache.commons.lang3.ArrayUtils.toMap(objArray38);
        java.util.Set<java.lang.Object> objSet40 = objMap39.keySet();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objMap39);
        org.junit.Assert.assertNotNull(objSet40);
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) 7, 4);
        long[] longArray63 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toObject(longArray64);
        long[] longArray71 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.clone(longArray71);
        java.lang.Long[] longArray73 = org.apache.commons.lang3.ArrayUtils.toObject(longArray72);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.addAll(longArray64, longArray74);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray26, longArray75);
        java.lang.Long[] longArray77 = org.apache.commons.lang3.ArrayUtils.toObject(longArray76);
        java.lang.Long[] longArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray78);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray78);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray80);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.contains(longArray80, (long) 10);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.addAll(longArray76, longArray80);
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, (int) (byte) -1, (int) (short) 10);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray76);
        java.lang.String str90 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray88, "{0}");
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{32,100,10,10,1,32,100,10,10,1,32,100,10,10,1}" + "'", str90, "{32,100,10,10,1,32,100,10,10,1,32,100,10,10,1}");
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream35 = objEntrySet32.parallelStream();
        java.lang.Boolean[][] booleanArray36 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray65 = new java.lang.Boolean[][] { booleanArray43, booleanArray50, booleanArray57, booleanArray64 };
        java.lang.Boolean[][] booleanArray66 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray36, booleanArray65);
        java.util.Map<java.lang.Object, java.lang.Object> objMap67 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = objMap67.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList69 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean71 = objEntryList69.remove((java.lang.Object) byteArray70);
        boolean boolean72 = objEntrySet68.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList69);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor73 = objEntrySet68.iterator();
        java.lang.Object[] objArray74 = objEntrySet68.toArray();
        boolean boolean76 = objEntrySet68.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList77 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor78 = objEntryList77.iterator();
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.String[] strArray83 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.addAll(strArray79, strArray83);
        java.lang.Comparable<java.lang.String>[] strComparableArray85 = objEntryList77.toArray((java.lang.Comparable<java.lang.String>[]) strArray79);
        boolean boolean86 = objEntrySet68.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList77);
        boolean boolean87 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet68);
        int int88 = objEntrySet68.size();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator89 = objEntrySet68.spliterator();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor90 = objEntrySet68.iterator();
        java.lang.String[] strArray91 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray91);
        java.lang.String[] strArray93 = org.apache.commons.lang3.ArrayUtils.clone(strArray91);
        java.lang.String[] strArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray93);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) strArray93);
        java.lang.String[] strArray96 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray93);
        boolean boolean97 = objEntrySet68.remove((java.lang.Object) strArray93);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryStream35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(objMap67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEntryItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntryItor78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strComparableArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(objEntrySpliterator89);
        org.junit.Assert.assertNotNull(objEntryItor90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray21, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray17, (java.lang.Object) (byte) 0);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray29 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (int) ' ', (long) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        boolean[] booleanArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false, (int) '#');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (int) (byte) 10, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        java.lang.Float[] floatArray0 = null;
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) 7);
        org.junit.Assert.assertNull(floatArray2);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray15 = new short[] {};
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray15);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) 10);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) 100);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.clone(shortArray18);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray23, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray16);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        boolean boolean26 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray16, (java.lang.Object) intArray24, false);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray16, (int) (byte) 10, 11);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        java.lang.Object[] objArray0 = null;
        java.lang.Object obj1 = null;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.contains(objArray0, obj1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append(true, true);
        java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder15, "0");
        boolean[] booleanArray22 = new boolean[] { false, false, false, false };
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray22, false);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray22);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray22);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray28);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray28, true);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray31, (int) (short) 0, 100);
        boolean[] booleanArray39 = new boolean[] { false, false, false, false };
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray39, false);
        java.lang.Boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray39);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45, true);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        boolean[] booleanArray54 = new boolean[] { false, false, false, false };
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray54, false);
        java.lang.Boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray54);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray48, booleanArray54);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray54);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray31, booleanArray54);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.add(booleanArray31, true);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray66);
        boolean[] booleanArray72 = new boolean[] { false, false, false, false };
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray72);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray72, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder15.append(booleanArray66, booleanArray72);
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray72);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray77, false, (int) (short) 100);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray77, false, 5);
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray77);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray4, false, 2);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Character[] charArray9 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, 'a');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray2, (java.lang.Object) 'a');
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (float) 3);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 1.0f, (int) (byte) 100);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, 1);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) 8);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0, 3.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder6.append(doubleArray10, doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) 10.0f);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder25.append(doubleArray26, doubleArray39);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray54, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append(byteArray52, byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray58);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.clone(byteArray1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray62, (-1), (int) '#');
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray65, (byte) 10);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray65, (int) (short) -1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.remove(byteArray65, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        java.lang.Character[] charArray15 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' ');
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray17);
        java.lang.Character[] charArray25 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray28);
        double[] doubleArray34 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, (double) (byte) 10);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray34, 0.0d);
        char[] charArray41 = new char[] { 'a' };
        java.lang.Character[] charArray42 = org.apache.commons.lang3.ArrayUtils.toObject(charArray41);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0.0d, (java.lang.Object) charArray41);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray28, charArray41);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.remove(charArray28, 1);
        java.lang.Character[] charArray48 = org.apache.commons.lang3.ArrayUtils.toObject(charArray47);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.add(charArray47, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "444 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "444 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "444  ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "444  ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, 4, 4,  ,  ]");
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 100.0d, 1.0d, 10.0d, (-1.0d), 100.0d };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 1.0, 10.0, -1.0, 100.0]");
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append(true, true);
        byte[] byteArray25 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray25, (byte) 10, (int) (short) -1);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray25);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 1, (int) ' ');
        byte[] byteArray39 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray39, (byte) 10);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray25, byteArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray44, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder18.append(byteArray25, byteArray44);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray44);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray50, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder14.append(byteArray44, byteArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray44);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList57 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean59 = objEntryList57.remove((java.lang.Object) byteArray58);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray62);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.clone(byteArray63);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray63);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 1);
        java.lang.Byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray65);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray56, (java.lang.Object) byteArray65);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray48 = new boolean[] { true };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray48, (int) (short) 100, (int) (short) 0);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray51, false);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray51);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray59);
        boolean[] booleanArray65 = new boolean[] { false, false, false, false };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, false);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray65);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray60, (java.lang.Object) booleanArray69, (int) '#');
        java.lang.Boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray69);
        java.lang.Boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray69);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray73, false);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray51, booleanArray76);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.add(booleanArray76, false);
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray76, (int) (short) 1);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray81, true, 4);
        java.lang.Boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray81);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, false, false]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(booleanArray85);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean29 = equalsBuilder28.isEquals();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.addAll(strArray30, strArray34);
        java.lang.String[] strArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray30);
        java.lang.Character[] charArray42 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, ' ');
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((java.lang.Object[]) strArray30, (java.lang.Object[]) charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder21.append((java.lang.Object[]) byteArray23, (java.lang.Object[]) strArray30);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray23);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) 1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray48, (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.remove(byteArray52, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1]");
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray21, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray17, (java.lang.Object) (byte) 0);
        java.lang.Long[] longArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray26);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27, (long) 13);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        byte[] byteArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        boolean[] booleanArray3 = new boolean[] { true, true, false };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true, true, false]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false]");
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray8);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray8, '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray8, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 10.0f);
        double[] doubleArray8 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray8);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (double) 7);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray12);
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray0);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray15);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 10.0, -1.0, 10.0, 7.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray16);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.add(longArray16, (long) '#');
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.remove(longArray16, 2);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray21, (long) (byte) 10);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1, 35]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[32, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        boolean[] booleanArray1 = new boolean[] { true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray1, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.add(booleanArray1, 0, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray1, false);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[true]");
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, true]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray18 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray20, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.clone(charArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray36, ' ');
        java.lang.Character[] charArray45 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, ' ');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, '#');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.clone(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray50);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray51, 'a');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray51);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 'a');
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '#', (-1));
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4,  , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.add(intArray9, (int) ' ');
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray11, 0, 3);
        java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray11);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (-1));
        java.lang.Long[] longArray24 = new java.lang.Long[] { 100L, 100L, 0L, 10L, 1L, (-1L) };
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray24);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray24, (long) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) longArray24);
        java.lang.Character[] charArray34 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, ' ');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        java.lang.String[] strArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray38);
        java.lang.String[] strArray40 = org.apache.commons.lang3.ArrayUtils.clone(strArray38);
        java.lang.String[] strArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray40);
        java.lang.String[] strArray45 = new java.lang.String[] { "{}", "", "{}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        boolean boolean48 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray37, (java.lang.Object) strArray41, (java.util.Collection<java.lang.String>) strList46);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray54 = org.apache.commons.lang3.ArrayUtils.addAll(strArray49, strArray53);
        double[] doubleArray60 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray60);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray53, (java.lang.Object) doubleArray60, (int) '4');
        java.lang.Comparable<java.lang.String>[] strComparableArray65 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.Comparable<java.lang.String>[]) strArray41, (java.lang.Comparable<java.lang.String>[]) strArray53);
        java.lang.String[] strArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray41);
        boolean boolean67 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray15, (java.lang.Object) longArray24, strArray66);
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, 7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[3, 100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 32]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[100, 100, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strComparableArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, -1, -1, 0, 32]");
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray5);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12);
        byte[] byteArray14 = null;
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray13, byteArray14);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray13, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray22 = new double[] {};
        double[] doubleArray26 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (byte) 10);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) 0L, 0);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray26);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder18.append(doubleArray22, doubleArray26);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray42 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) (byte) 10);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray45, (double) 10.0f);
        double[] doubleArray51 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray51);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.add(doubleArray51, (double) (byte) 10);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray51, (double) 0L, 0);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray51);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray45, doubleArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder37.append(doubleArray38, doubleArray51);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray64);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.add(byteArray66, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append(byteArray64, byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray70);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray13, byteArray70);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray72);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray73, (int) '#', (int) (short) 1);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray76, (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.remove(byteArray76, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.lang.Object obj40 = null;
        long[] longArray46 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toObject(longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.add(longArray49, (long) (short) 0);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.clone(longArray51);
        long[] longArray58 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.toObject(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.add(longArray61, (long) (short) 0);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray61);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, (long) 10);
        java.lang.Object obj67 = objMap31.putIfAbsent(obj40, (java.lang.Object) longArray52);
        java.util.Collection<java.lang.Object> objCollection68 = objMap31.values();
        int int69 = objMap31.size();
        int[] intArray74 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray75 = org.apache.commons.lang3.ArrayUtils.clone(intArray74);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.add(intArray74, 2);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray77, 4);
        boolean boolean80 = objMap31.containsValue((java.lang.Object) intArray79);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.clone(intArray79);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray81, 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, -1, -1, 0, 2]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, -1, -1, 0, 2]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, -1, -1, 0, 2]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 1, (int) ' ');
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) -1);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray12);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray19, (byte) 10, (int) (short) -1);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray19, (byte) 10);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray19, (byte) 1);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray19, (byte) 100);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 10, (int) (short) -1);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray32);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 1, (int) ' ');
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray19, byteArray32);
        byte[] byteArray47 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray47);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray47, (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray47, (byte) 10);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray19, byteArray47);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray19, (int) (byte) -1, (int) '#');
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(byteArray19, (byte) 0);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray19);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray59, (byte) 1);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.remove(byteArray61, 1);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray61, (int) (byte) 0, 7);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0, 10]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 10]");
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) 10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray12, 1, (long) 4);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(longArray15, (long) 8);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 4, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray22 = new char[] { 'a' };
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.toObject(charArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray22, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray19);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, ' ', (int) (short) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, ' ', (int) (short) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray19);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, 'a', (int) (byte) 1);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, 0, 100);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        long[] longArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray2 = org.apache.commons.lang3.ArrayUtils.remove(longArray0, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray40 = new java.lang.Character[] { '#' };
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, ' ');
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray24, (java.lang.Object) charArray42, 4);
        java.lang.Short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray24);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(shortArray45);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((long) 11, (long) 11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, false);
        java.lang.Short[] shortArray33 = new java.lang.Short[] { (short) 1 };
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray33);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) (byte) 100);
        short[] shortArray38 = new short[] {};
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray37, shortArray38);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.add(shortArray37, (short) 1);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray37);
        java.lang.Short[] shortArray45 = new java.lang.Short[] { (short) 1 };
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) (byte) 100);
        short[] shortArray50 = new short[] {};
        java.lang.Short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray50);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray49, shortArray50);
        java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1 };
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) (byte) 100);
        short[] shortArray59 = new short[] {};
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray59);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray52, shortArray59);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray52);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray52, (short) (byte) -1);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray37, shortArray52);
        int[] intArray71 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.clone(intArray71);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.add(intArray71, (int) 'a');
        int[] intArray79 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray80 = org.apache.commons.lang3.ArrayUtils.clone(intArray79);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray80);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray74, intArray80);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray80, 0);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray80, 1, (int) (short) -1);
        java.lang.Integer[] intArray88 = org.apache.commons.lang3.ArrayUtils.toObject(intArray80);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder28.append((java.lang.Object) shortArray52, (java.lang.Object) intArray80);
        int[] intArray91 = org.apache.commons.lang3.ArrayUtils.clone(intArray80);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1, 1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, -1, -1, 100]");
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        float[] floatArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, 10, (float) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        double[] doubleArray62 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) (byte) 10);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray65, (double) 10.0f);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray71, (double) 0L, 0);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray71);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray71);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray82);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray82, 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder51.append(doubleArray58, doubleArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder51.append(3, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder51.append(10L, (long) 9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder51.append((byte) 10, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 1, (int) ' ');
        byte[] byteArray11 = null;
        byte[] byteArray12 = null;
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12);
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10, (int) (short) -1);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) 10);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray13, byteArray17);
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24);
        byte[] byteArray26 = null;
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray25, byteArray26);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray34 = new double[] {};
        double[] doubleArray38 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray38);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) (byte) 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray38, (double) 0L, 0);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray38);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder30.append(doubleArray34, doubleArray38);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray54 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray54);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, (double) (byte) 10);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray57, (double) 10.0f);
        double[] doubleArray63 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray63);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.add(doubleArray63, (double) (byte) 10);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray63, (double) 0L, 0);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray63);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray63, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray57, doubleArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder49.append(doubleArray50, doubleArray63);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray76);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.add(byteArray78, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append(byteArray76, byteArray78);
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray76);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray82);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray25, byteArray82);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray13, byteArray84);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray85, (int) '#', (int) (short) 1);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray3, byteArray88);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0, 0, 10]");
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 0, (int) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray6);
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 10, (int) (short) -1);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray6, byteArray12);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray4);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 100, 4);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 0, (-1));
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, (-1), (int) 'a');
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.subarray(intArray17, (int) (byte) -1, 1);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray22 = org.apache.commons.lang3.ArrayUtils.remove(intArray20, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100]");
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { 10, 3, 10 };
        java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (byte) -1);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray6, 11);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 3, 10]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 10, (int) (byte) 10);
        java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 1 };
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray14, (short) 10);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray14, 1, (short) (byte) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray14);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray14, (short) 10, (int) (short) 10);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray14);
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) 1 };
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26, (short) (byte) 100);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(shortArray30, (short) 1);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray30);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray9);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray9, false, 10);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray9, true);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.add(booleanArray9, 7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, true);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        boolean[] booleanArray43 = new boolean[] { false, true, true, true };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean45 = objMap31.containsKey((java.lang.Object) booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray43);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray43, 0, 8);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray49, true, 11);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        boolean boolean19 = equalsBuilder3.isEquals();
        java.lang.Boolean boolean20 = equalsBuilder3.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        boolean[] booleanArray24 = new boolean[] { false, true, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray25, true, (int) (short) 100);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray25);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray25, 1);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray25, false);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray0, (long) (byte) 10);
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.add(byteArray3, (byte) 0);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, 0, (int) (short) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray6, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100, 0]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 0]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100.0f, (double) 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray16);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 100, (int) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, 1, (int) (short) 0);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray12, (short) -1);
        short[] shortArray15 = null;
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray15);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray12, (int) (short) 100, (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 10);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray6);
        byte[] byteArray11 = null;
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray17 = new double[] {};
        double[] doubleArray21 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) 0L, 0);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder13.append(doubleArray17, doubleArray21);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray37 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray37);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray37, (double) (byte) 10);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray40, (double) 10.0f);
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 0L, 0);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder32.append(doubleArray33, doubleArray46);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray59);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.add(byteArray61, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder58.append(byteArray59, byteArray61);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray61);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray66);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.clone(byteArray66);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray66);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.add(byteArray72, (int) (byte) 0, (byte) 100);
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray75, (byte) 1, 0);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray66, byteArray75);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray75);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        short[] shortArray4 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray4, (int) (short) 1, 100);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray8);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray8, (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.remove(shortArray8, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        java.lang.Object obj9 = null;
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray4, obj9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (byte) 1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        double[] doubleArray18 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray18);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (double) (byte) 10);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, 0.0d);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray13, doubleArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 0L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream48 = objEntryList33.stream();
        int int49 = objEntryList33.size();
        objEntryList33.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEntryStream48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Character[] charArray42 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, 'a');
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.add(charArray44, '#');
        boolean boolean47 = objEntryList33.contains((java.lang.Object) charArray46);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray46);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray46);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray49, ' ');
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "## a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "## a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, #,  , a,  , a]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "## a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "## a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, #,  , a,  , a]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY;
        long[] longArray6 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray7);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) (short) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) '4');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray0, longArray11);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray11, (long) (-1));
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, 0L);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray18, (long) 3);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray0), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray5);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5, (short) (byte) 100);
        short[] shortArray10 = new short[] {};
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray10);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray19);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray22, (short) (byte) 10);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.add(shortArray22, (short) (byte) 100);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray3, shortArray22);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) (byte) 1, 100);
        java.lang.Short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray3);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray29 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, ' ');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, '#');
        java.lang.Character[] charArray39 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39, 'a');
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray33, charArray42);
        java.lang.Character[] charArray44 = org.apache.commons.lang3.ArrayUtils.toObject(charArray33);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.clone(charArray33);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray45);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray45);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        int[] intArray54 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.clone(intArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        java.lang.Integer[] intArray57 = org.apache.commons.lang3.ArrayUtils.toObject(intArray55);
        boolean boolean58 = objMap31.containsValue((java.lang.Object) intArray55);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray23, 0, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray23);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 10.0, 0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray3);
        java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Object[]) floatArray3);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (-1L));
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 1.0]");
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        boolean boolean49 = objMap31.equals((java.lang.Object) '#');
        double[] doubleArray55 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) (short) 100, (double) 3);
        java.lang.Object obj61 = objMap31.get((java.lang.Object) doubleArray55);
        long[] longArray67 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.clone(longArray67);
        java.lang.Long[] longArray69 = org.apache.commons.lang3.ArrayUtils.toObject(longArray68);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        boolean boolean71 = objMap31.containsValue((java.lang.Object) longArray68);
        char[] charArray73 = new char[] { 'a' };
        java.lang.Character[] charArray74 = org.apache.commons.lang3.ArrayUtils.toObject(charArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray73);
        java.lang.Character[] charArray81 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, 'a');
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray83, 'a', (-1));
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray73, charArray83);
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.clone(charArray83);
        boolean boolean89 = objMap31.containsValue((java.lang.Object) charArray88);
        java.util.Set<java.lang.Object> objSet90 = objMap31.keySet();
        int int91 = objMap31.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) (short) 10, (-1));
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray6, (long) (-1));
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) 11);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        int[] intArray54 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.clone(intArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        java.lang.Integer[] intArray57 = org.apache.commons.lang3.ArrayUtils.toObject(intArray55);
        boolean boolean58 = objMap31.containsValue((java.lang.Object) intArray55);
        objMap31.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder0.append((double) 5, 0.0d);
        java.lang.Character[] charArray24 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, ' ');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, '#');
        java.lang.Character[] charArray34 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray34);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, 'a');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray28, charArray37);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.subarray(charArray37, 5, 3);
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) 1 };
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        java.lang.Character[] charArray52 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray52, ' ');
        java.lang.Character[] charArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray52);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray43, (java.lang.Object[]) charArray52);
        java.lang.Short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        java.lang.Character[] charArray63 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray63, ' ');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray63, '#');
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.clone(charArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray43, (java.lang.Object) charArray67);
        java.lang.Character[] charArray70 = org.apache.commons.lang3.ArrayUtils.toObject(charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(charArray41, charArray67);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(charArray67, 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray66 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray74 = new java.lang.Boolean[][] { booleanArray52, booleanArray59, booleanArray66, booleanArray73 };
        java.lang.Boolean[][] booleanArray75 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray74);
        java.util.Map<java.lang.Object, java.lang.Object> objMap76 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray45);
        java.lang.Short[] shortArray79 = new java.lang.Short[] { (short) 1 };
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray79, (short) 10);
        java.lang.Object obj83 = objMap76.replace((java.lang.Object) 2, (java.lang.Object) shortArray82);
        objMap76.clear();
        java.util.Collection<java.lang.Object> objCollection85 = objMap76.values();
        objMap31.putAll(objMap76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = objMap76.entrySet();
        boolean boolean88 = objEntrySet87.isEmpty();
        java.lang.Object[] objArray89 = objEntrySet87.toArray();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(objMap76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(objEntrySet87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, (int) ' ', (double) 1L);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (-1));
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (int) (byte) 100, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 100, (int) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, 1, (int) (short) 0);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) 100);
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) 1 };
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16, (short) (byte) 100);
        short[] shortArray21 = new short[] {};
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray21);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray21);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(shortArray23, (short) 100);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 1 };
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray27);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) (byte) 100);
        short[] shortArray32 = new short[] {};
        java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray31, shortArray32);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray31, 4, (-1));
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray37, (int) (byte) -1, (int) '4');
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.clone(shortArray37);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray23, shortArray37);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray23);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray23, (short) 100);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (-1), (int) (short) 10, (double) (-1.0f));
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (-1), (int) ' ');
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 100.0f, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray25);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (byte) -1, 7);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 2, (double) 6);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (short) 1, (double) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 6.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        java.lang.Character[] charArray10 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, 'a');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, ' ');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray19);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, ' ', (int) (short) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, ' ', (int) (short) -1);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.subarray(charArray19, (int) (byte) -1, (int) (byte) 1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(charArray32, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 0L, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) 1);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) (short) 100, (double) 10.0f);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) (-1L));
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (-1), (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray18 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray20, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.clone(charArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray36, ' ');
        java.lang.Character[] charArray45 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, ' ');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, '#');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.clone(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray50);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray51, 'a');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray51);
        java.lang.Character[] charArray60 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60, 'a');
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.add(charArray62, '#');
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.remove(charArray62, (int) (short) 0);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray66, '4');
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray51, charArray68);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray68);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.clone(charArray68);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray71);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4,  , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "# a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "# a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#,  , a,  ]");
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) ' ', (int) (byte) 100);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray28, 0.0f);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray28, 0.0f, 3);
        long[] longArray39 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray39);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray40);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.add(longArray42, (long) (short) 0);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray44);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray45);
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toObject(longArray45);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray45);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 3, (java.lang.Object) longArray48);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry2 = null;
        boolean boolean3 = objEntryList0.add(objEntry2);
        java.lang.Object[] objArray4 = objEntryList0.toArray();
        java.lang.Boolean[][] booleanArray5 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray34 = new java.lang.Boolean[][] { booleanArray12, booleanArray19, booleanArray26, booleanArray33 };
        java.lang.Boolean[][] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray5, booleanArray34);
        java.util.Map<java.lang.Object, java.lang.Object> objMap36 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray5);
        java.lang.Short[] shortArray39 = new java.lang.Short[] { (short) 1 };
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 10);
        java.lang.Object obj43 = objMap36.replace((java.lang.Object) 2, (java.lang.Object) shortArray42);
        objMap36.clear();
        int int45 = objMap36.size();
        java.lang.Long[] longArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray46);
        java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray47);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray47);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50, (long) 10);
        boolean boolean54 = objMap36.equals((java.lang.Object) 10);
        java.lang.Character[] charArray60 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60, 'a');
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.add(charArray62, '#');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.subarray(charArray62, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray73 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray73);
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray73, 'a');
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.clone(charArray76);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.addAll(charArray62, charArray76);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray76, '4', 0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray76);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray76);
        boolean boolean84 = objMap36.containsValue((java.lang.Object) charArray76);
        boolean boolean85 = objEntryList0.contains((java.lang.Object) objMap36);
        java.util.Collection<java.lang.Object> objCollection86 = objMap36.values();
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[null]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(objMap36);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a ##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a ##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a,  , #, #, 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection86);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(floatArray4, (float) 10L);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray23);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray23, (int) (short) 0, 10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, false);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray25, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        java.lang.Long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) 13);
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean[] booleanArray27 = new boolean[] { false, false, false, false };
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, false);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.add(booleanArray27, true);
        double[] doubleArray38 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray38);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray32, (java.lang.Object) doubleArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray38);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) 10);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, 2, (double) (short) 0);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray48, 11, (int) (byte) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray16, (java.lang.Object) (byte) 100);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, false, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, -1.0, 0.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, true);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray48);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray50, true, (int) (byte) 10);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray48, (java.lang.Object) booleanArray50);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray50, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder8.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder8.appendSuper(false);
        boolean[] booleanArray12 = null;
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray17, (java.lang.Object) ' ');
        boolean[] booleanArray24 = new boolean[] { false, true, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray17, (java.lang.Object) booleanArray25, (int) (byte) 10);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.add(booleanArray25, true);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray29, 2);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray31, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder8.append(booleanArray12, booleanArray31);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray35);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        float[] floatArray40 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray41);
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray41);
        boolean[] booleanArray48 = new boolean[] { false, false, false, false };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray48, false);
        java.lang.Boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray48);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray53);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray53);
        boolean boolean57 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray43, (java.lang.Object) booleanArray53, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray53);
        java.lang.String str59 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray53);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray37, booleanArray53);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[true, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[true, true, true, false]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{false,false,false,false}" + "'", str59, "{false,false,false,false}");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray14);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) 'a');
        int[] intArray30 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.clone(intArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray25, intArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray25);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray25);
        int[] intArray40 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.clone(intArray40);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray40);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.addAll(intArray25, intArray40);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray40, (int) ' ');
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray40);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray40, 1);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.remove(intArray40, 0);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray40, 0, (int) (byte) 10);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray14, (java.lang.Object) int53);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{false,false,false,false}" + "'", str17, "{false,false,false,false}");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.lang.Object[] objArray37 = objEntryList33.toArray();
        java.lang.Object[] objArray38 = objEntryList33.toArray();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator39 = objEntryList33.spliterator();
        double[] doubleArray43 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray43);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) (byte) 10);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) 10.0f);
        boolean boolean49 = objEntryList33.remove((java.lang.Object) boolean48);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream50 = objEntryList33.stream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objEntrySpliterator39);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEntryStream50);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        int[] intArray54 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.clone(intArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        java.lang.Integer[] intArray57 = org.apache.commons.lang3.ArrayUtils.toObject(intArray55);
        boolean boolean58 = objMap31.containsValue((java.lang.Object) intArray55);
        double[] doubleArray64 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray64);
        double[] doubleArray69 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray69);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray69, (double) (byte) 10);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray69, 0.0d);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray64, doubleArray69);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.add(doubleArray64, (double) (-1));
        boolean boolean78 = objMap31.equals((java.lang.Object) (-1));
        boolean[] booleanArray83 = new boolean[] { false, false, false, false };
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray83);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray83, false);
        java.lang.Boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray83);
        boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray83);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray83);
        boolean[] booleanArray90 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray83);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray90);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray90);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray90, false);
        java.lang.Object obj95 = objMap31.remove((java.lang.Object) boolean94);
        java.lang.String str96 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) objMap31);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 10.0, -1.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray90), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "{}" + "'", str96, "{}");
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 1, (int) (short) -1);
        java.lang.Integer[] intArray21 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray13);
        int[] intArray27 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.clone(intArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray28);
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.toObject(intArray28);
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray30);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31, 3);
        int[] intArray38 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.clone(intArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray39);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.subarray(intArray39, (int) ' ', (int) (byte) 100);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray33, intArray39);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray39);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray39);
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray47, 100, 13);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 4, '#');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.subarray(charArray12, 100, (int) 'a');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.subarray(charArray15, 5, 2);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray15, ' ');
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray15, ' ', 9);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray15, '#', (int) '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray15 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray17, '#');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray17, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray28 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, 'a');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray31);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray17, charArray31);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray31, 'a');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.clone(charArray31);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray36);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.clone(charArray37);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.subarray(charArray38, (int) (byte) 10, (int) '#');
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(charArray38, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 100.0d };
        java.lang.Double[] doubleArray3 = new java.lang.Double[] { 100.0d };
        java.lang.Double[][] doubleArray4 = new java.lang.Double[][] { doubleArray1, doubleArray3 };
        java.lang.Double[][] doubleArray7 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, (int) (byte) 100, (int) '4');
        java.lang.Boolean[][] booleanArray8 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray37 = new java.lang.Boolean[][] { booleanArray15, booleanArray22, booleanArray29, booleanArray36 };
        java.lang.Boolean[][] booleanArray38 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray37);
        java.util.Map<java.lang.Object, java.lang.Object> objMap39 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap39.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean43 = objEntryList41.remove((java.lang.Object) byteArray42);
        boolean boolean44 = objEntrySet40.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        java.lang.Object[] objArray45 = objEntryList41.toArray();
        java.lang.Double[] doubleArray46 = new java.lang.Double[] {};
        java.lang.Double[] doubleArray47 = new java.lang.Double[] {};
        java.lang.Double[][] doubleArray48 = new java.lang.Double[][] { doubleArray46, doubleArray47 };
        java.lang.Double[][] doubleArray49 = objEntryList41.toArray(doubleArray48);
        double[] doubleArray53 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray53);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, (double) (byte) 10);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, 0.0d);
        java.lang.Double[][] doubleArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray49, (java.lang.Object) 0.0d);
        java.lang.Double[][] doubleArray60 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray7, doubleArray49);
        float[] floatArray63 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray63);
        float[] floatArray67 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray67);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(floatArray67, (float) 0);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray63, floatArray67);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray63);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray63);
        java.lang.Float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray74);
        float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray75, (float) 'a');
        float[] floatArray81 = new float[] { 1L, 100L, 100 };
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray81, (float) (-1L), (int) (short) 100);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray77, floatArray81);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray63, floatArray81);
        float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray81, (int) ' ', (int) (byte) 100);
        java.lang.Double[][] doubleArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray49, (java.lang.Object) floatArray89);
        float[] floatArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray89);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray89);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(objMap39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray91), "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 0L, 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder16.append(doubleArray20, doubleArray24);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 'a', (int) '4');
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 7, (-1));
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, 0.0d);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray46);
        double[] doubleArray56 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray56);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.add(doubleArray56, (double) (byte) 10);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray59, (double) 10.0f);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray59);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) 1.0f);
        java.lang.Double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray64);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray46, doubleArray64);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray64, 1, 0);
        double[] doubleArray73 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray73);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.add(doubleArray73, (double) (byte) 10);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray73, (double) (short) 0, (int) ' ', (double) 1L);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray73, (double) 'a');
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray64, doubleArray73);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray20, doubleArray73);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.add(doubleArray73, (double) 1L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 10.0, 100.0, 1.0]");
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objEntrySet32.clear();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList34 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray38 = new float[] { (short) 100, 0, 10 };
        float[] floatArray41 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(floatArray41, (float) 0);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.add(floatArray41, 10.0f);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray38, floatArray41);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(floatArray41, (float) (byte) 10);
        boolean boolean50 = objEntryList34.equals((java.lang.Object) boolean49);
        boolean boolean51 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList34);
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator52 = objEntrySet32.spliterator();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor53 = objEntrySet32.iterator();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream54 = objEntrySet32.parallelStream();
        boolean boolean55 = objEntrySet32.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEntrySpliterator52);
        org.junit.Assert.assertNotNull(objEntryItor53);
        org.junit.Assert.assertNotNull(objEntryStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, true);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray16, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false]");
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray5);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 0, 3);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 1);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 1, (int) ' ');
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        boolean[] booleanArray29 = new boolean[] { false, false, false, false };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray29, false);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray29);
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray37);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) (byte) 100);
        short[] shortArray42 = new short[] {};
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray42);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray41, shortArray42);
        float[] floatArray47 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(floatArray47, (float) 0);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.add(floatArray47, 10.0f);
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray41, (java.lang.Object) floatArray53, false);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray35, (java.lang.Object[]) floatArray53);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray21, (java.lang.Object[]) floatArray53);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray53, (java.lang.Object) 1, 0);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray53);
        java.lang.Byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        java.lang.Byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray62);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray53, (java.lang.Object) byteArray62);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray62);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray62, (byte) 10);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray5, byteArray67);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 1, (int) (short) -1);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor2 = objEntryList1.iterator();
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray7 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray8 = org.apache.commons.lang3.ArrayUtils.addAll(strArray3, strArray7);
        java.lang.Comparable<java.lang.String>[] strComparableArray9 = objEntryList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray3);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream10 = objEntryList1.parallelStream();
        boolean boolean11 = objEntryList0.addAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList1);
        java.util.RandomAccess[][][][] randomAccessArray12 = new java.util.RandomAccess[][][][] {};
        java.util.RandomAccess[][][][] randomAccessArray13 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray12);
        java.util.RandomAccess[][][][] randomAccessArray14 = objEntryList0.toArray(randomAccessArray12);
        objEntryList0.clear();
        org.junit.Assert.assertNotNull(objEntryItor2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strComparableArray9);
        org.junit.Assert.assertNotNull(objEntryStream10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(randomAccessArray12);
        org.junit.Assert.assertNotNull(randomAccessArray13);
        org.junit.Assert.assertNotNull(randomAccessArray14);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.clone(intArray0);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray1, 1, (int) (byte) 1);
        int[] intArray9 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.clone(intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray10, (int) (short) 0);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray10, (int) '#');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray1, intArray10);
        java.lang.Boolean[][] booleanArray16 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] { booleanArray23, booleanArray30, booleanArray37, booleanArray44 };
        java.lang.Boolean[][] booleanArray46 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray45);
        java.util.Map<java.lang.Object, java.lang.Object> objMap47 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = objMap47.entrySet();
        double[] doubleArray52 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray52);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) (byte) 10);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) 10.0f);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 1L);
        java.lang.Object obj60 = objMap47.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray62, (byte) 10);
        boolean boolean65 = objMap47.containsValue((java.lang.Object) (byte) 10);
        int[] intArray70 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.clone(intArray70);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray71);
        java.lang.Integer[] intArray73 = org.apache.commons.lang3.ArrayUtils.toObject(intArray71);
        boolean boolean74 = objMap47.containsValue((java.lang.Object) intArray71);
        int[] intArray75 = new int[] {};
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.add(intArray75, 0, 100);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray78);
        int[] intArray80 = org.apache.commons.lang3.ArrayUtils.clone(intArray78);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray78);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray78);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.addAll(intArray71, intArray78);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.addAll(intArray1, intArray78);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray78, 11);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(objMap47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray18 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray21, 'a');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray26);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  ]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        boolean[] booleanArray10 = new boolean[] { false, false, false, false };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) booleanArray14, (int) '#');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 3, (int) (byte) 100);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.clone(intArray20);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray20, (int) (byte) -1);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray25 = new int[] {};
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.add(intArray25, 0, 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.clone(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray23, intArray28);
        int[] intArray34 = new int[] {};
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.add(intArray34, 0, 100);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray37);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray37, (int) ' ');
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.addAll(intArray23, intArray43);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray23, (int) (byte) 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[4, 4, 100, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[4, 4, 100, 0, 100]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        java.lang.Short[][][] shortArray0 = new java.lang.Short[][][] {};
        java.lang.Boolean[][] booleanArray1 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray30 = new java.lang.Boolean[][] { booleanArray8, booleanArray15, booleanArray22, booleanArray29 };
        java.lang.Boolean[][] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray1, booleanArray30);
        java.util.Map<java.lang.Object, java.lang.Object> objMap32 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = objMap32.entrySet();
        java.lang.Boolean[][] booleanArray34 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray55 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray63 = new java.lang.Boolean[][] { booleanArray41, booleanArray48, booleanArray55, booleanArray62 };
        java.lang.Boolean[][] booleanArray64 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray34, booleanArray63);
        java.util.Map<java.lang.Object, java.lang.Object> objMap65 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray34);
        int[] intArray68 = new int[] { 1, (byte) 1 };
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.add(intArray68, (int) (short) 0, (int) '4');
        java.lang.Object obj72 = objMap32.getOrDefault((java.lang.Object) booleanArray34, (java.lang.Object) intArray71);
        java.lang.Short[][][] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray0, (java.lang.Object) intArray71);
        java.lang.Short[][][] shortArray74 = org.apache.commons.lang3.ArrayUtils.clone(shortArray73);
        java.lang.Short[][][] shortArray75 = org.apache.commons.lang3.ArrayUtils.toArray(shortArray73);
        long[] longArray81 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.clone(longArray81);
        java.lang.Long[] longArray83 = org.apache.commons.lang3.ArrayUtils.toObject(longArray82);
        long[] longArray89 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray90 = org.apache.commons.lang3.ArrayUtils.clone(longArray89);
        java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.toObject(longArray90);
        long[] longArray92 = org.apache.commons.lang3.ArrayUtils.clone(longArray90);
        long[] longArray93 = org.apache.commons.lang3.ArrayUtils.addAll(longArray82, longArray92);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray93, (long) 1);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray93);
        java.lang.Short[][][] shortArray97 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray73, (java.lang.Object) longArray93);
        java.lang.String str99 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray73, "{{4},{4},{4},{2,2},{2,2},{2,2},{2,2},{2,2}}");
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(objMap32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(objMap65);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray90), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray92), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray93), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 4 + "'", int95 == 4);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(shortArray97);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "{}" + "'", str99, "{}");
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append(2, 5);
        boolean[] booleanArray15 = new boolean[] { false, false, false, false };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray15);
        java.lang.Boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray21);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray21, true);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray24, (int) (short) 0, 100);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray27, true);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        boolean[] booleanArray35 = new boolean[] { false, false, false, false };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray35, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray35, true);
        boolean[] booleanArray45 = new boolean[] { false, false, false, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray45, false);
        java.lang.Boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray45);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray35, booleanArray45);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray50, 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder7.append(booleanArray27, booleanArray50);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        float[] floatArray50 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        float[] floatArray54 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(floatArray54, (float) 0);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray54);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.clone(floatArray54);
        float[] floatArray63 = new float[] { (short) 100, 0, 10 };
        float[] floatArray66 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(floatArray66, (float) 0);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray66, 10.0f);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray63, floatArray66);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray54, floatArray63);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray73, (float) (short) 100);
        boolean boolean76 = objEntryList33.contains((java.lang.Object) (short) 100);
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray77);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray77);
        boolean boolean80 = objEntryList33.equals((java.lang.Object) floatArray79);
        int int81 = objEntryList33.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        long[] longArray39 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray39);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray42);
        java.lang.Double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray44, (double) (-1.0f));
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray46, (int) ' ', 10);
        java.lang.Object obj50 = objMap31.put((java.lang.Object) longArray43, (java.lang.Object) 10);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray43, (long) 0);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 100, 10, 10, 1]");
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        char[] charArray7 = new char[] { 'a' };
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.toObject(charArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray7);
        java.lang.Character[] charArray15 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray17, 'a', (-1));
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray17);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        java.lang.Character[] charArray28 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, '#');
        java.lang.Character[] charArray38 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray38);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray32, charArray41);
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.toObject(charArray32);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray32);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray32);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray22, charArray32);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray1, (java.lang.Object) charArray22, 4);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(byteArray49);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY;
        long[] longArray6 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray7);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) (short) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) '4');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray0, longArray11);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray11, (long) (-1));
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.add(longArray11, (long) 100);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray0), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1, 0, 100]");
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        short[] shortArray17 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray17, (int) (short) 1, 100);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray21);
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) 1 };
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray25);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25, (short) (byte) 100);
        short[] shortArray30 = new short[] {};
        java.lang.Short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray30);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray29, shortArray30);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray30, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append(shortArray21, shortArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray45 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray45);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray45);
        double[] doubleArray48 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder36.append(doubleArray45, doubleArray48);
        java.lang.Short[] shortArray51 = new java.lang.Short[] { (short) 1 };
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray51);
        java.lang.Byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder36.append((java.lang.Object[]) shortArray51, (java.lang.Object[]) byteArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean60 = equalsBuilder59.isEquals();
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.String[] strArray65 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray66 = org.apache.commons.lang3.ArrayUtils.addAll(strArray61, strArray65);
        java.lang.String[] strArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray61);
        java.lang.Character[] charArray73 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray73, ' ');
        java.lang.Character[] charArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder59.append((java.lang.Object[]) strArray61, (java.lang.Object[]) charArray76);
        java.lang.String str79 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strArray61, "{32,100,10,10,1}");
        java.lang.String[] strArray81 = org.apache.commons.lang3.ArrayUtils.add(strArray61, "");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder35.append((java.lang.Object[]) byteArray53, (java.lang.Object[]) strArray81);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray53, (byte) -1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{}" + "'", str79, "{}");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        float[] floatArray3 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray4 = new float[][] { floatArray3 };
        float[] floatArray8 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray9 = new float[][] { floatArray8 };
        float[] floatArray13 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray14 = new float[][] { floatArray13 };
        float[][][] floatArray15 = new float[][][] { floatArray4, floatArray9, floatArray14 };
        float[] floatArray19 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray20 = new float[][] { floatArray19 };
        float[] floatArray24 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray25 = new float[][] { floatArray24 };
        float[] floatArray29 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray30 = new float[][] { floatArray29 };
        float[][][] floatArray31 = new float[][][] { floatArray20, floatArray25, floatArray30 };
        float[] floatArray35 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray36 = new float[][] { floatArray35 };
        float[] floatArray40 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray41 = new float[][] { floatArray40 };
        float[] floatArray45 = new float[] { (short) 10, (byte) -1, '4' };
        float[][] floatArray46 = new float[][] { floatArray45 };
        float[][][] floatArray47 = new float[][][] { floatArray36, floatArray41, floatArray46 };
        float[][][][] floatArray48 = new float[][][][] { floatArray15, floatArray31, floatArray47 };
        float[][][][][] floatArray49 = new float[][][][][] { floatArray48 };
        // The following exception was thrown during execution in test generation
        try {
            float[][][][][] floatArray51 = org.apache.commons.lang3.ArrayUtils.remove(floatArray49, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[10.0, -1.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.add(intArray12, (int) 'a');
        int[] intArray20 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.clone(intArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray15, intArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, 0);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, 1, (int) (short) -1);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.add(intArray21, (int) (byte) 100);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.remove(intArray21, 3);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray37);
        boolean[] booleanArray43 = new boolean[] { false, false, false, false };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, false);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray38, (java.lang.Object) booleanArray47, (int) '#');
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray38);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.add(intArray50, 3, (int) (byte) 100);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray50, 100);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(intArray50, 0);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.addAll(intArray21, intArray50);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray21);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.clone(intArray59);
        java.lang.Class<?> wildcardClass61 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, -1, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[4, 4, -1, 0, 100]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, -1, -1, 100, 4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, -1, -1, 0, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, -1, -1, 0, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 100, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.remove(byteArray4, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        boolean[] booleanArray4 = new boolean[] { false, true, true, true };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray12);
        boolean[] booleanArray18 = new boolean[] { false, false, false, false };
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, false);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray18);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray13, (java.lang.Object) booleanArray22, (int) '#');
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26, false);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, false);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, false, 8);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true, true, true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        java.lang.Object[] objArray0 = null;
        byte[] byteArray4 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray4, (byte) 10, (int) (short) -1);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 10);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray4, (byte) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray4, (byte) 100);
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10, (int) (short) -1);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) 1, (int) ' ');
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray4, byteArray17);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray25, (java.lang.Object) shortArray27);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray27);
        java.lang.Short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray27);
        long[] longArray36 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        java.lang.Long[] longArray38 = org.apache.commons.lang3.ArrayUtils.toObject(longArray37);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.add(longArray39, (long) (short) 0);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.add(longArray39, (long) 10);
        long[] longArray44 = null;
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray45);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.add(longArray45, (int) (byte) 0, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.addAll(longArray43, longArray49);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray27, (java.lang.Object) longArray43);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray43);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray0, (java.lang.Object) longArray52);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[100]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        byte[][] byteArray0 = null;
        byte[][] byteArray3 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 6, (int) '#');
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((-1), (int) (short) 100);
        short[] shortArray63 = new short[] { (short) 100, (byte) 10, (short) 0, (byte) 1, (byte) 1, (short) -1 };
        java.lang.Short[] shortArray65 = new java.lang.Short[] { (short) 1 };
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray65);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65, (short) (byte) 100);
        short[] shortArray70 = new short[] {};
        java.lang.Short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray70);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray69, shortArray70);
        short[] shortArray73 = new short[] {};
        java.lang.Short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray72, shortArray73);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.add(shortArray73, (short) -1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.add(shortArray73, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder56.append(shortArray63, shortArray73);
        java.lang.Short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray73, (short) (byte) 10, (int) (byte) 10);
        java.lang.Short[] shortArray86 = new java.lang.Short[] { (short) 1 };
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray86);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86, (short) (byte) 100);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray86, (short) (byte) 10);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray73, shortArray92);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray73);
        java.lang.Short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73);
        short[] shortArray98 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray73, 9, 1);
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray98);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[100, 10, 0, 1, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[-1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[1]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[1]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[1]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertNotNull(shortArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray98), "[]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, 9);
        double[] doubleArray28 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray29, (java.lang.Object) ' ');
        boolean[] booleanArray36 = new boolean[] { false, true, true, true };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray29, (java.lang.Object) booleanArray37, (int) (byte) 10);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray37);
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray37, 1);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray19, booleanArray37);
        boolean[] booleanArray48 = new boolean[] { false, false, false, false };
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray48, false);
        java.lang.Boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48);
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray48);
        java.lang.Boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray54);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray54, true);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray57, (int) (short) 0, 100);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray60, true);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray60);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray63);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray37, booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7 + "'", int24 == 7);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false, false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        short[][][][][] shortArray0 = new short[][][][][] {};
        short[][][][][] shortArray1 = org.apache.commons.lang3.ArrayUtils.clone(shortArray0);
        short[][][][][] shortArray4 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray1, (int) (byte) -1, 13);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray4);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap31.entrySet();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray37);
        java.lang.Character[] charArray44 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, ' ');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, '#');
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray38, (java.lang.Object) '#', (int) (short) 100);
        java.lang.Integer[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray38);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList52 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor53 = objEntryList52.iterator();
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray59 = org.apache.commons.lang3.ArrayUtils.addAll(strArray54, strArray58);
        java.lang.Comparable<java.lang.String>[] strComparableArray60 = objEntryList52.toArray((java.lang.Comparable<java.lang.String>[]) strArray54);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream61 = objEntryList52.parallelStream();
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray51, (java.lang.Object) objEntryStream61, (int) (byte) 0);
        boolean boolean64 = objMap31.containsKey((java.lang.Object) int63);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(objEntryItor53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strComparableArray60);
        org.junit.Assert.assertNotNull(objEntryStream61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        java.lang.Boolean[][] booleanArray50 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray78 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray79 = new java.lang.Boolean[][] { booleanArray57, booleanArray64, booleanArray71, booleanArray78 };
        java.lang.Boolean[][] booleanArray80 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray50, booleanArray79);
        java.util.Map<java.lang.Object, java.lang.Object> objMap81 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = objMap81.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList83 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean84 = objEntrySet82.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList83);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor85 = objEntryList83.iterator();
        float[] floatArray88 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray88);
        java.lang.Float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray89);
        java.lang.Object obj91 = objMap31.replace((java.lang.Object) objEntryList83, (java.lang.Object) floatArray89);
        objMap31.clear();
        int int93 = objMap31.size();
        objMap31.clear();
        java.lang.Integer[] intArray95 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY;
        boolean boolean96 = objMap31.equals((java.lang.Object) intArray95);
        java.lang.Integer[] intArray97 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray95);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(objMap81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEntryItor85);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(intArray97);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) booleanArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 10);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray4);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((int) (byte) 100, (int) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (-1), (int) (short) 10, (double) (-1.0f));
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray15, (double) 1, (double) 100L);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray15, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray9, 2, true);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray20, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, false, false, true]");
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) -1);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) (byte) 100);
        short[] shortArray20 = new short[] {};
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray20);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) (byte) 100);
        short[] shortArray29 = new short[] {};
        java.lang.Short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray29);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 10);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray32);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray35, (short) 0);
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 1 };
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) (byte) 100);
        short[] shortArray45 = new short[] {};
        java.lang.Short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray44, shortArray45);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(shortArray47, (short) 100);
        short[] shortArray50 = null;
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray52);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) (byte) 100);
        short[] shortArray57 = new short[] {};
        java.lang.Short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray57);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray56, shortArray57);
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1 };
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) (byte) 100);
        short[] shortArray66 = new short[] {};
        java.lang.Short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray66);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray65, shortArray66);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray59, shortArray66);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray69);
        java.lang.Short[] shortArray72 = new java.lang.Short[] { (short) 1 };
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray73, (short) 10);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray73, (short) 100, (int) (byte) 1);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray73);
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray73);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray47, shortArray50);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray35, shortArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray35);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.clone(shortArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((double) (byte) 0, (double) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append(1.0f, (float) 0L);
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray84, (java.lang.Object) equalsBuilder91, false);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[1]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[1]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[1]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, false);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, true);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray23, (int) (short) 0, 100);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray26, true);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray26, false);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray26);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray31);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray20, (long) '#');
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.toObject(charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList25 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean27 = objEntryList25.remove((java.lang.Object) byteArray26);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26, (byte) 1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray23, (java.lang.Object) byteArray30);
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        java.lang.Character[] charArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 10);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 1);
        java.lang.Short[] shortArray8 = new java.lang.Short[] { (short) 1 };
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 100);
        short[] shortArray13 = new short[] {};
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray13);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray18);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) -1, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.remove(shortArray4, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 100);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray7);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1 };
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) (byte) 100);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, 3, 1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) 0);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 1 };
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray27);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) (byte) 100);
        short[] shortArray32 = new short[] {};
        java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray31, shortArray32);
        java.lang.Short[] shortArray36 = new java.lang.Short[] { (short) 1 };
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray36);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36, (short) (byte) 100);
        short[] shortArray41 = new short[] {};
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray40, shortArray41);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray34, shortArray41);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray34, (short) (byte) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray34);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) -1, (int) (short) 1);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray4, 7, (int) 'a');
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 1);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (int) (short) -1, (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder0.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder0.append('#', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        int[] intArray14 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.clone(intArray14);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray14, (int) 'a');
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray17);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray32 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.addAll(intArray17, intArray32);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray32, (int) ' ');
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) intArray38, true);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 'a');
        java.lang.Character[] charArray48 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray48, ' ');
        java.lang.Character[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray48);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51);
        int[] intArray57 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.clone(intArray57);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.add(intArray57, (int) 'a');
        int[] intArray65 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.clone(intArray65);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray60, intArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray60);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray60);
        int[] intArray75 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.clone(intArray75);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray75);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.addAll(intArray60, intArray75);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray75, (int) ' ');
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray75);
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray52, (java.lang.Object) intArray81, true);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray42, charArray52);
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.subarray(charArray42, (-1), (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray42);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[ ]");
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Character[] charArray17 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, 'a');
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, 'a', (-1));
        java.lang.Character[] charArray28 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, '#');
        java.lang.Character[] charArray38 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray38);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, 'a');
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray32, charArray41);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray32);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray11, (java.lang.Object) charArray32);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray45, ' ');
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray45, '#', (int) '4');
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray45, '4');
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray10, (short) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray10);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) '4', 0);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray19);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1, -1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, true);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray30, true, 2);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray30, (int) (byte) -1, 0);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray37, (short) 0);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray49);
        java.lang.Boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray56 = new double[] {};
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder52.append(doubleArray56, doubleArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder52.append((byte) 100, (byte) 1);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String[] strArray79 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.addAll(strArray75, strArray79);
        java.lang.Short[] shortArray82 = new java.lang.Short[] { (short) 1 };
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray82);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray82);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray82, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder52.append((java.lang.Object[]) strArray80, (java.lang.Object[]) shortArray82);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) booleanArray49, strArray80);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.add(booleanArray49, 0, true);
        boolean[] booleanArray94 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray91, (int) (byte) 10, 100);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray94);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[1]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[true, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray94), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        short[] shortArray2 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray3 = new short[][] { shortArray2 };
        short[] shortArray6 = new short[] { (short) 0, (byte) 10 };
        short[][] shortArray7 = new short[][] { shortArray6 };
        short[][][] shortArray8 = new short[][][] { shortArray3, shortArray7 };
        short[][][] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (byte) 10, (int) 'a');
        short[] shortArray16 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[] shortArray21 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[] shortArray26 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[] shortArray31 = new short[] { (short) 100, (byte) 100, (byte) 1, (byte) 1 };
        short[][] shortArray32 = new short[][] { shortArray16, shortArray21, shortArray26, shortArray31 };
        short[][] shortArray35 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray32, (int) (byte) -1, (int) '4');
        short[][][] shortArray36 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, shortArray32);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray8);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[0, 10]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 100, 1, 1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(shortArray36);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        int[] intArray39 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.add(intArray39, (int) 'a');
        int[] intArray47 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.clone(intArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray48);
        boolean boolean51 = objEntrySet32.remove((java.lang.Object) intArray42);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.clone(intArray42);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray52, (int) (short) 100, (int) (short) 1);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray52, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = org.apache.commons.lang3.ArrayUtils.add(intArray52, (int) (short) -1, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, -1, -1, 0, 97]");
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        java.lang.Object[] objArray0 = null;
        byte[] byteArray4 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray4, (byte) 10, (int) (short) -1);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 10);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray4, (byte) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray4, (byte) 100);
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10, (int) (short) -1);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) 1, (int) ' ');
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray4, byteArray17);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray32);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 10);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 10);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray32);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray4, (int) (byte) -1, (int) '#');
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) byteArray4, 0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0.0f);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) 4);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (-1), 3, 0.0d);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) 0L);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray83, (double) (byte) 1, (int) ' ');
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray83);
        int int89 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray83, 10.0d);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray83, (double) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Object[] objArray38 = objEntrySet32.toArray();
        boolean boolean40 = objEntrySet32.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor42 = objEntryList41.iterator();
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.addAll(strArray43, strArray47);
        java.lang.Comparable<java.lang.String>[] strComparableArray49 = objEntryList41.toArray((java.lang.Comparable<java.lang.String>[]) strArray43);
        boolean boolean50 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        boolean boolean51 = objEntrySet32.isEmpty();
        java.lang.Character[] charArray54 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[] charArray57 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[] charArray60 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[] charArray63 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[][] charArray64 = new java.lang.Character[][] { charArray54, charArray57, charArray60, charArray63 };
        java.lang.Character[][] charArray65 = objEntrySet32.toArray(charArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) charArray65);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntryItor42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strComparableArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray28 = new double[] {};
        double[] doubleArray32 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray32);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.add(doubleArray32, (double) (byte) 10);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, (double) 0L, 0);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder24.append(doubleArray28, doubleArray32);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray48 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray48);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, (double) (byte) 10);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray51, (double) 10.0f);
        double[] doubleArray57 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray57);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.add(doubleArray57, (double) (byte) 10);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray57, (double) 0L, 0);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray57);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray57, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray51, doubleArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder43.append(doubleArray44, doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable[] serializableArray70 = org.apache.commons.lang3.ArrayUtils.add((java.io.Serializable[]) booleanArray23, (java.io.Serializable) doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: [D");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) intArray6);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.remove(intArray6, 2);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray11 = org.apache.commons.lang3.ArrayUtils.remove(intArray9, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, -1, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{100,-1,-1,0}" + "'", str7, "{100,-1,-1,0}");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, 0]");
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (int) (byte) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray19, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray19, 5);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray23);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, 4, false);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false, false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.add(booleanArray44, true);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        boolean[] booleanArray55 = new boolean[] { false, false, false, false };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder37.append(booleanArray44, booleanArray56);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) 0);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.add(floatArray60, 10.0f);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) (-1));
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray60, 0.0f, (int) '#');
        java.lang.Character[] charArray76 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray76, ' ');
        java.lang.Character[] charArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray76);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray79);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray80, '#', (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder37.append((java.lang.Object) '#', (java.lang.Object) charArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append(8, 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append((short) (byte) 1, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((long) (short) -1, (long) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap31.entrySet();
        int int36 = objMap31.size();
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray37);
        java.lang.Double[] doubleArray40 = new java.lang.Double[] { 100.0d };
        java.lang.Double[] doubleArray42 = new java.lang.Double[] { 100.0d };
        java.lang.Double[][] doubleArray43 = new java.lang.Double[][] { doubleArray40, doubleArray42 };
        java.lang.Double[][] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, (int) (byte) 100, (int) '4');
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray38, (java.lang.Object) '4', (int) (byte) -1);
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray38);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray38);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray50);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = objMap31.putIfAbsent((java.lang.Object) boolean51, obj52);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        int[] intArray0 = null;
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.subarray(intArray0, (int) (byte) -1, 2);
        org.junit.Assert.assertNull(intArray3);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(intArray4, (int) (byte) 1);
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(intArray13, (int) (byte) -1);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.addAll(intArray4, intArray13);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.subarray(intArray17, (int) 'a', (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray35);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray42 = new double[] {};
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 0L, 0);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder38.append(doubleArray42, doubleArray46);
        long[] longArray63 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toObject(longArray64);
        long[] longArray71 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.clone(longArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray64, longArray72);
        long[] longArray79 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.clone(longArray79);
        java.lang.Long[] longArray81 = org.apache.commons.lang3.ArrayUtils.toObject(longArray80);
        long[] longArray87 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.clone(longArray87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray80, longArray88);
        java.lang.Long[] longArray90 = org.apache.commons.lang3.ArrayUtils.toObject(longArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder57.append(longArray64, longArray88);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray64);
        int int94 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, (long) 'a');
        boolean boolean95 = objMap31.remove((java.lang.Object) floatArray35, (java.lang.Object) 'a');
        java.util.Collection<java.lang.Object> objCollection96 = objMap31.values();
        java.lang.Integer[] intArray97 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY;
        boolean boolean98 = objMap31.containsKey((java.lang.Object) intArray97);
        java.util.Map<java.lang.Object, java.lang.Object> objMap99 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) intArray97);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objCollection96);
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(objMap99);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.addAll(strArray0, strArray4);
        java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.toArray(strArray6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder8.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean12 = equalsBuilder11.isEquals();
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray18 = org.apache.commons.lang3.ArrayUtils.addAll(strArray13, strArray17);
        java.lang.String[] strArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray13);
        java.lang.Character[] charArray25 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder11.append((java.lang.Object[]) strArray13, (java.lang.Object[]) charArray28);
        short[] shortArray30 = null;
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) 1 };
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray32);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32, (short) (byte) 100);
        short[] shortArray37 = new short[] {};
        java.lang.Short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray37);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray36, shortArray37);
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) 1 };
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray41);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41, (short) (byte) 100);
        short[] shortArray46 = new short[] {};
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray46);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray45, shortArray46);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray39, shortArray46);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray30, shortArray49);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray50, 3, 1);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray13, (java.lang.Object) 1, 10);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) strArray7, (java.lang.Object[]) strArray13);
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray13);
        java.lang.String[] strArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray57);
        boolean[] booleanArray63 = new boolean[] { false, false, false, false };
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray63, false);
        java.lang.Boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray63);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray63);
        java.lang.Boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray63);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray69);
        boolean[] booleanArray75 = new boolean[] { false, false, false, false };
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray75, false);
        java.lang.Boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray75);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray70, booleanArray75);
        java.lang.Boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray75);
        java.lang.Boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray81);
        java.lang.Boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray82);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray57, (java.lang.Object) booleanArray82, (int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        byte[][][] byteArray0 = new byte[][][] {};
        byte[][][] byteArray1 = new byte[][][] {};
        byte[][][] byteArray2 = new byte[][][] {};
        byte[][][] byteArray3 = new byte[][][] {};
        byte[][][] byteArray4 = new byte[][][] {};
        byte[][][][] byteArray5 = new byte[][][][] { byteArray0, byteArray1, byteArray2, byteArray3, byteArray4 };
        byte[][][][] byteArray6 = org.apache.commons.lang3.ArrayUtils.clone(byteArray5);
        int[] intArray11 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.clone(intArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(intArray12, (int) (byte) -1);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray12, 4, 10);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, 1, 5);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray12);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray5, (java.lang.Object) intArray22, (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        java.lang.Boolean[][] booleanArray50 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray78 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray79 = new java.lang.Boolean[][] { booleanArray57, booleanArray64, booleanArray71, booleanArray78 };
        java.lang.Boolean[][] booleanArray80 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray50, booleanArray79);
        java.util.Map<java.lang.Object, java.lang.Object> objMap81 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = objMap81.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList83 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean84 = objEntrySet82.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList83);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor85 = objEntryList83.iterator();
        float[] floatArray88 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray88);
        java.lang.Float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray89);
        java.lang.Object obj91 = objMap31.replace((java.lang.Object) objEntryList83, (java.lang.Object) floatArray89);
        objMap31.clear();
        int int93 = objMap31.size();
        int int94 = objMap31.size();
        boolean boolean95 = objMap31.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(objMap81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEntryItor85);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 100);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray3, byteArray16);
        short[] shortArray25 = new short[] {};
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray24, (java.lang.Object) shortArray26);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray26);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        long[] longArray35 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray35);
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toObject(longArray36);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray36);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.add(longArray38, (long) (short) 0);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.add(longArray38, (long) 10);
        long[] longArray43 = null;
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray44);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.add(longArray44, (int) (byte) 0, (long) (short) 100);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.addAll(longArray42, longArray48);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray26, (java.lang.Object) longArray42);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray42, (long) (byte) 10);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[100]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((long) (byte) 10, (long) (byte) 10);
        boolean boolean22 = equalsBuilder21.isEquals();
        int[] intArray27 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.clone(intArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray28);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.subarray(intArray28, (int) ' ', (int) (byte) 100);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.add(intArray28, (int) (short) 0, (int) '#');
        int[] intArray36 = new int[] {};
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray36, 0, 100);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray39);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray39);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder21.append(intArray35, intArray39);
        java.lang.Boolean boolean45 = equalsBuilder21.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + false + "'", boolean45, false);
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 0);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray8);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, 1, (int) (short) -1);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray13, (int) (byte) 100);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.remove(intArray13, 3);
        int[] intArray25 = new int[] {};
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.clone(intArray25);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, -1, -1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray24, (double) (-1.0f));
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) ' ', 10);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 100.0f, (double) 0);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray29, doubleArray33);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray29);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray41, (double) 1L, (double) (short) 1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray41, (int) (byte) 10, 11);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (-1L), (double) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 0L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, 4, (-1));
        java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 1 };
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray13);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13, (short) (byte) 100);
        short[] shortArray18 = new short[] {};
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray17, shortArray18);
        short[] shortArray21 = new short[] {};
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray21);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) -1);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(true, true);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray37, (byte) 10, (int) (short) -1);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray37, (byte) 1, (int) ' ');
        byte[] byteArray51 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray51, (byte) 10);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray37, byteArray51);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.add(byteArray56, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder30.append(byteArray37, byteArray56);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray56);
        byte[] byteArray65 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray65, (byte) 10, (int) (short) -1);
        java.lang.Byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray65);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray65);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray56, byteArray70);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList72 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean74 = objEntryList72.remove((java.lang.Object) byteArray73);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray73, (byte) -1);
        byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray76, 5, (int) '4');
        byte[] byteArray80 = null;
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.add(byteArray80, (byte) 10);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray82);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray79, byteArray83);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray79, (byte) 100);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray71, byteArray79);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray79, (byte) -1);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) shortArray27, (java.lang.Object) int89);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[-1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[10]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[10]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[10]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray0, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 10L, 100L, 0L, (-1L), 0L };
        java.lang.Long[] longArray11 = new java.lang.Long[] { 10L, 100L, 0L, (-1L), 0L };
        java.lang.Long[] longArray17 = new java.lang.Long[] { 10L, 100L, 0L, (-1L), 0L };
        java.lang.Long[][] longArray18 = new java.lang.Long[][] { longArray5, longArray11, longArray17 };
        java.lang.Long[][] longArray19 = org.apache.commons.lang3.ArrayUtils.toArray(longArray18);
        java.lang.Character[] charArray25 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, ' ');
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray25);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray28, ' ');
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray19, (java.lang.Object) ' ');
        java.lang.Long[][] longArray35 = org.apache.commons.lang3.ArrayUtils.toArray(longArray19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Long[][] longArray37 = org.apache.commons.lang3.ArrayUtils.remove(longArray35, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(longArray35);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.remove(charArray7, (int) (short) 0);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, '4');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray15 = org.apache.commons.lang3.ArrayUtils.remove(charArray11, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , a,  , #]");
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        short[][][][][][] shortArray0 = new short[][][][][][] {};
        short[][][][][][] shortArray1 = new short[][][][][][] {};
        short[][][][][][] shortArray2 = new short[][][][][][] {};
        short[][][][][][] shortArray3 = new short[][][][][][] {};
        short[][][][][][][] shortArray4 = new short[][][][][][][] { shortArray0, shortArray1, shortArray2, shortArray3 };
        short[][][][][][] shortArray5 = new short[][][][][][] {};
        short[][][][][][] shortArray6 = new short[][][][][][] {};
        short[][][][][][] shortArray7 = new short[][][][][][] {};
        short[][][][][][] shortArray8 = new short[][][][][][] {};
        short[][][][][][][] shortArray9 = new short[][][][][][][] { shortArray5, shortArray6, shortArray7, shortArray8 };
        short[][][][][][] shortArray10 = new short[][][][][][] {};
        short[][][][][][] shortArray11 = new short[][][][][][] {};
        short[][][][][][] shortArray12 = new short[][][][][][] {};
        short[][][][][][] shortArray13 = new short[][][][][][] {};
        short[][][][][][][] shortArray14 = new short[][][][][][][] { shortArray10, shortArray11, shortArray12, shortArray13 };
        short[][][][][][] shortArray15 = new short[][][][][][] {};
        short[][][][][][] shortArray16 = new short[][][][][][] {};
        short[][][][][][] shortArray17 = new short[][][][][][] {};
        short[][][][][][] shortArray18 = new short[][][][][][] {};
        short[][][][][][][] shortArray19 = new short[][][][][][][] { shortArray15, shortArray16, shortArray17, shortArray18 };
        short[][][][][][][][] shortArray20 = new short[][][][][][][][] { shortArray4, shortArray9, shortArray14, shortArray19 };
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) 1 };
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 10);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 100);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[][][][][][][][] shortArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray20, (java.lang.Object) shortArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[][][] objArray32 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.Object[][][]) shortArray30, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((float) (short) 100, (float) 8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder18.append((double) (short) 10, (double) (short) 0);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList25 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean27 = objEntryList25.remove((java.lang.Object) byteArray26);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26, (byte) 1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray31);
        byte[] byteArray33 = null;
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray39 = new double[] {};
        double[] doubleArray43 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray43);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) (byte) 10);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) 0L, 0);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray43);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(doubleArray39, doubleArray43);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray59 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray59);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.add(doubleArray59, (double) (byte) 10);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray62, (double) 10.0f);
        double[] doubleArray68 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray68);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, (double) (byte) 10);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray68, (double) 0L, 0);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray68);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray62, doubleArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder54.append(doubleArray55, doubleArray68);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray81);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.add(byteArray83, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append(byteArray81, byteArray83);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray33, byteArray83);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray33, byteArray88);
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.add(byteArray91, (byte) -1);
        byte[] byteArray94 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray88, byteArray91);
        byte[] byteArray97 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray88, (int) (byte) 10, 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder24.append(byteArray31, byteArray88);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[-1]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[]");
        org.junit.Assert.assertNotNull(byteArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray97), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.clone(intArray0);
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.toObject(intArray1);
        java.lang.Boolean[][] booleanArray3 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray32 = new java.lang.Boolean[][] { booleanArray10, booleanArray17, booleanArray24, booleanArray31 };
        java.lang.Boolean[][] booleanArray33 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray32);
        java.util.Map<java.lang.Object, java.lang.Object> objMap34 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray3);
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) 10);
        java.lang.Object obj41 = objMap34.replace((java.lang.Object) 2, (java.lang.Object) shortArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray46 = new double[] {};
        double[] doubleArray50 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray50);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray50, (double) (byte) 10);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray50, (double) 0L, 0);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray50);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray50, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder42.append(doubleArray46, doubleArray50);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 'a', (int) '4');
        short[] shortArray69 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray69);
        java.lang.Object obj71 = objMap34.putIfAbsent((java.lang.Object) int64, (java.lang.Object) shortArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray76 = new double[] {};
        double[] doubleArray80 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray80);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.add(doubleArray80, (double) (byte) 10);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray80, (double) 0L, 0);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray80);
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray80, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder72.append(doubleArray76, doubleArray80);
        double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.add(doubleArray80, (double) (byte) -1);
        java.lang.Object obj94 = objMap34.remove((java.lang.Object) doubleArray93);
        int int96 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray2, obj94, (int) (byte) 10);
        java.lang.Integer[] intArray97 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        java.lang.Integer[] intArray98 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(objMap34);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0, 10.0, 100.0, -1.0]");
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertNotNull(intArray98);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, true);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray48);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.add(booleanArray48, false);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray48, true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false, true, false]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        float[] floatArray50 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray50);
        float[] floatArray54 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(floatArray54, (float) 0);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray54);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.clone(floatArray54);
        float[] floatArray63 = new float[] { (short) 100, 0, 10 };
        float[] floatArray66 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(floatArray66, (float) 0);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray66, 10.0f);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray63, floatArray66);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray54, floatArray63);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray73, (float) (short) 100);
        boolean boolean76 = objEntryList33.contains((java.lang.Object) (short) 100);
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray77);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray77);
        boolean boolean80 = objEntryList33.equals((java.lang.Object) floatArray79);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray79);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray79);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray79, (float) 1);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        int[] intArray39 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.clone(intArray39);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.add(intArray39, (int) 'a');
        int[] intArray47 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.clone(intArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray48);
        boolean boolean51 = objEntrySet32.remove((java.lang.Object) intArray42);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.subarray(intArray42, 10, (int) (byte) 10);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.add(intArray54, (int) (byte) 1);
        int[] intArray61 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.clone(intArray61);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.add(intArray61, (int) 'a');
        int[] intArray69 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.clone(intArray69);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray70);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray64, intArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray70, 0);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray70, 1, (int) (short) -1);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.add(intArray70, (int) (byte) 100);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.remove(intArray70, 3);
        int[] intArray82 = new int[] {};
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.clone(intArray82);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.addAll(intArray70, intArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray70);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray70);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.addAll(intArray54, intArray70);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.remove(intArray87, (int) (byte) 1);
        int int91 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray87, 4);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = org.apache.commons.lang3.ArrayUtils.remove(intArray87, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, -1, -1, 100, 100]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, -1, -1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, -1, 100]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, 100);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray43);
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) intArray51, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.append(intArray23, intArray51);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray51);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.subarray(intArray51, (int) 'a', (int) (short) 100);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = org.apache.commons.lang3.ArrayUtils.remove(intArray61, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        float[] floatArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray0, 10.0f);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4', (int) (short) 1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray9);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        boolean boolean35 = objEntryList33.isEmpty();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor36 = objEntryList33.iterator();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream37 = objEntryList33.stream();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor38 = objEntryList33.iterator();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream39 = objEntryList33.parallelStream();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntryItor36);
        org.junit.Assert.assertNotNull(objEntryStream37);
        org.junit.Assert.assertNotNull(objEntryItor38);
        org.junit.Assert.assertNotNull(objEntryStream39);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray38, (byte) 10, (int) (short) -1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray38);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1, (int) ' ');
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray52);
        boolean boolean57 = objEntrySet32.equals((java.lang.Object) byteArray38);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) 1 };
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray59);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59, (byte) 0);
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray38, byteArray63);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray63);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.clone(byteArray65);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 10, 1]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1]");
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder19.appendSuper(false);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray59, (int) (byte) 0, (byte) 100);
        java.lang.Byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray59);
        java.io.Serializable[] serializableArray64 = org.apache.commons.lang3.ArrayUtils.clone((java.io.Serializable[]) byteArray63);
        org.apache.commons.lang3.ArrayUtils arrayUtils65 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray66 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils65 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray68 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray66, (int) (short) 0);
        java.lang.Character[] charArray74 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray74, ' ');
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray76);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        java.lang.String[] strArray82 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray83 = org.apache.commons.lang3.ArrayUtils.addAll(strArray78, strArray82);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray66, (java.lang.Object) charArray76, strArray82);
        java.lang.String[] strArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray82);
        boolean boolean86 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder19, (java.lang.Object) byteArray63, strArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder19.append((int) (byte) -1, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) 10, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder89.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertNotNull(serializableArray64);
        org.junit.Assert.assertNotNull(arrayUtilsArray66);
        org.junit.Assert.assertNotNull(arrayUtilsArray68);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.addAll(strArray0, strArray4);
        java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0);
        java.lang.CharSequence[] charSequenceArray7 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.CharSequence[]) strArray6);
        java.lang.String[] strArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray6);
        java.lang.String[] strArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray6);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) strArray6);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        boolean[] booleanArray38 = new boolean[] { false, false, false, false };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray38, false);
        java.lang.Boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray38);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean48 = equalsBuilder47.isEquals();
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.String[] strArray53 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray54 = org.apache.commons.lang3.ArrayUtils.addAll(strArray49, strArray53);
        java.lang.String[] strArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray49);
        java.lang.Character[] charArray61 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61, ' ');
        java.lang.Character[] charArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder47.append((java.lang.Object[]) strArray49, (java.lang.Object[]) charArray64);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray64);
        java.lang.Object obj67 = objMap31.putIfAbsent((java.lang.Object) booleanArray38, (java.lang.Object) charArray66);
        int int68 = objMap31.size();
        boolean boolean69 = objMap31.isEmpty();
        int int70 = objMap31.size();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { 10, 3, 10 };
        java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append(true, true);
        byte[] byteArray13 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray13, (byte) 10, (int) (short) -1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray13);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray13, (byte) 1, (int) ' ');
        byte[] byteArray27 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray27);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray27, (byte) 10);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray13, byteArray27);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.add(byteArray32, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder6.append(byteArray13, byteArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder6.append(true, true);
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray53 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.clone(longArray53);
        long[] longArray60 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder47.append(longArray54, longArray60);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.add(longArray54, (int) (byte) 0, (long) 2);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.add(longArray65, (long) 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder6.append(longArray43, longArray65);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray5, (java.lang.Object) longArray65, 4);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.clone(longArray65);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[2, 32, 100, 10, 10, 1]");
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        double[] doubleArray0 = null;
        double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) -1, (int) (short) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, (int) (byte) 10);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray19, (int) (byte) 1);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray15);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, (float) (short) 100);
        java.lang.Float[] floatArray31 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray32, (float) (short) 0);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(floatArray27, (float) '4');
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[10.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        long[] longArray0 = null;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.contains(longArray0, (long) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((long) 0, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder36.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder36.append((int) (short) -1, 6);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((double) 100.0f, (double) 1.0f);
        long[] longArray27 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        java.lang.Long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toObject(longArray28);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray28);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.add(longArray30, (long) (short) 0);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray32);
        long[] longArray38 = new long[] { (byte) -1, '4', 10, 1 };
        long[][] longArray39 = new long[][] { longArray38 };
        long[] longArray45 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray45);
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toObject(longArray46);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.add(longArray48, (long) (short) 0);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.clone(longArray50);
        long[] longArray57 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.clone(longArray57);
        java.lang.Long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toObject(longArray58);
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.add(longArray60, (long) (short) 0);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.addAll(longArray51, longArray60);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray51, (long) 10);
        long[][] longArray66 = org.apache.commons.lang3.ArrayUtils.add(longArray39, longArray65);
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.clone(longArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder21.append(longArray32, longArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder68.append((double) '4', 0.0d);
        equalsBuilder74.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1, 52, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = objMap31.entrySet();
        objMap31.clear();
        java.util.Set<java.lang.Object> objSet36 = objMap31.keySet();
        boolean[] booleanArray41 = new boolean[] { false, false, false, false };
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray41, false);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray41);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray41);
        java.lang.Boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray41);
        boolean[] booleanArray52 = new boolean[] { false, false, false, false };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray52, false);
        java.lang.Boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray52);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray52);
        java.lang.Boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray52);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray58);
        boolean[] booleanArray64 = new boolean[] { false, false, false, false };
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray64, false);
        java.lang.Boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray64);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray59, booleanArray64);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray47, (java.lang.Object) booleanArray64);
        java.lang.Object obj71 = objMap31.get((java.lang.Object) booleanArray64);
        java.lang.Object obj72 = null;
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray77);
        boolean[] booleanArray83 = new boolean[] { false, false, false, false };
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray83);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray83, false);
        java.lang.Boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray83);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray78, (java.lang.Object) booleanArray87, (int) '#');
        int[] intArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray78);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.add(intArray90, 3, (int) (byte) 100);
        int[] intArray94 = org.apache.commons.lang3.ArrayUtils.clone(intArray93);
        int[] intArray96 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray93, (int) (byte) -1);
        java.lang.Object obj97 = objMap31.put(obj72, (java.lang.Object) intArray93);
        int int98 = objMap31.size();
        boolean boolean99 = objMap31.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[4, 4, 100, 0]");
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, false);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, true);
        java.lang.Boolean[][] booleanArray28 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray56 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray57 = new java.lang.Boolean[][] { booleanArray35, booleanArray42, booleanArray49, booleanArray56 };
        java.lang.Boolean[][] booleanArray58 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray28, booleanArray57);
        java.util.Map<java.lang.Object, java.lang.Object> objMap59 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray28);
        java.lang.Short[] shortArray62 = new java.lang.Short[] { (short) 1 };
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray62);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray62, (short) 10);
        java.lang.Object obj66 = objMap59.replace((java.lang.Object) 2, (java.lang.Object) shortArray65);
        boolean[] booleanArray71 = new boolean[] { false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray71);
        boolean boolean73 = objMap59.containsKey((java.lang.Object) booleanArray71);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray71);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray25, booleanArray71);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray71);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(objMap59);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1]");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        java.lang.Short[] shortArray75 = new java.lang.Short[] { (short) 1 };
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray76, (short) 10);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray76, (short) 100, (int) (byte) 1);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray76);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray82);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray82, 1, (int) (short) 0);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.add(shortArray82, (short) 100);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.clone(shortArray88);
        java.lang.Long[] longArray90 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray90);
        long[] longArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray90, (long) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder56.append((java.lang.Object) shortArray89, (java.lang.Object) (byte) 10);
        equalsBuilder56.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder56.append((long) 4, (long) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[1]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[1, 100]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertNotNull(longArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray93), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (-1));
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (float) 6);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray14, (float) '#', 6);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        java.lang.Character[] charArray27 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27, 'a');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray40 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, 'a');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray43);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray43);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        org.apache.commons.lang3.ArrayUtils arrayUtils47 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray48 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils47 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray50 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray48, (int) (short) 0);
        java.lang.Character[] charArray56 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, ' ');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray65 = org.apache.commons.lang3.ArrayUtils.addAll(strArray60, strArray64);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) arrayUtilsArray48, (java.lang.Object) charArray58, strArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.append(charArray29, charArray58);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.subarray(charArray29, (-1), 4);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray29);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "# a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "# a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#,  , a,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(arrayUtilsArray48);
        org.junit.Assert.assertNotNull(arrayUtilsArray50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a,  , a,  ]");
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        double[] doubleArray0 = null;
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray0, (double) (-1L));
        org.junit.Assert.assertNull(doubleArray2);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        java.lang.Boolean[][] booleanArray8 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray37 = new java.lang.Boolean[][] { booleanArray15, booleanArray22, booleanArray29, booleanArray36 };
        java.lang.Boolean[][] booleanArray38 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray37);
        java.util.Map<java.lang.Object, java.lang.Object> objMap39 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap39.entrySet();
        java.lang.Boolean[][] booleanArray41 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray55 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray69 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray70 = new java.lang.Boolean[][] { booleanArray48, booleanArray55, booleanArray62, booleanArray69 };
        java.lang.Boolean[][] booleanArray71 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray41, booleanArray70);
        java.util.Map<java.lang.Object, java.lang.Object> objMap72 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray41);
        int[] intArray75 = new int[] { 1, (byte) 1 };
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.add(intArray75, (int) (short) 0, (int) '4');
        java.lang.Object obj79 = objMap39.getOrDefault((java.lang.Object) booleanArray41, (java.lang.Object) intArray78);
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray78, 100);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray81);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray81, (int) (short) 0, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(objMap39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(objMap72);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[52, 1, 1]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, 7, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, (double) (byte) 100, (double) 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray9, (double) 0L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        float[] floatArray36 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        java.lang.Character[] charArray43 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray43, 'a');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray36, (java.lang.Object) 'a');
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray36, (int) (byte) 1, (int) (byte) 1);
        float[] floatArray52 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) 0);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.add(floatArray52, 10.0f);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) (-1));
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray52);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray36, floatArray52);
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        java.lang.Object obj63 = objMap31.get((java.lang.Object) floatArray62);
        float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray62);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.add(floatArray64, 5, (float) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0);
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray1, (double) (short) -1);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, 0.0d, (int) (byte) 10, (double) 1.0f);
        java.lang.String str8 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1.0" + "'", str8, "1.0");
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        int[] intArray23 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, 100);
        long[] longArray32 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray32);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toObject(longArray33);
        long[] longArray40 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray43);
        int[] intArray49 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.clone(intArray49);
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) intArray51, false);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.append(intArray23, intArray51);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray51);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.subarray(intArray51, (int) 'a', (int) (short) 100);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.clone(intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = org.apache.commons.lang3.ArrayUtils.add(intArray60, 13, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 10);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray19);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100L);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray22, (double) (-1), (double) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray22);
        java.lang.Character[] charArray34 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray34);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, 'a');
        boolean[] booleanArray42 = new boolean[] { false, true, true, true };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray34, (java.lang.Object) booleanArray42);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34);
        boolean[] booleanArray51 = new boolean[] { false, false, false, false };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray51, false);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.add(booleanArray51, true);
        double[] doubleArray62 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray56, (java.lang.Object) doubleArray62);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray62, 3, 1);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) (byte) 10, (double) ' ');
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray67, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray73);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray34, (java.lang.Object) doubleArray73);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray22, (java.lang.Object) charArray34, true);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, (int) (short) -1, (int) (byte) 10);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 1L, (int) (short) 0);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) (byte) 1);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray22);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 10.0, 10.0, -1.0, 10.0]");
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray10, (long) '4');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) (byte) 0, 7);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray10, 100L, 9);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) (-1));
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, (int) (byte) 0);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, 100.0f, 2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (int) (byte) 100, (float) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        java.lang.Short[] shortArray52 = new java.lang.Short[] { (short) 1 };
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) 10);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) 100, (int) (byte) 1);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray53);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray59);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, 1, (int) (short) 0);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 100);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.clone(shortArray65);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray37, (java.lang.Object) shortArray65);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray65, (int) 'a', (int) '4');
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray65);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.add(shortArray65, 1, (short) (byte) 100);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray74, (short) (byte) 0, 9);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[1, 100, 100]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean8 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(true, false);
        int[] intArray19 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.clone(intArray19);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray19, (int) 'a');
        int[] intArray27 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.clone(intArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray22);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray37 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray37);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray37);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray37, (int) ' ');
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        java.lang.Short[] shortArray45 = new java.lang.Short[] { (short) 1 };
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) (byte) 100);
        short[] shortArray50 = new short[] {};
        java.lang.Short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray50);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray49, shortArray50);
        short[] shortArray53 = new short[] {};
        java.lang.Short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray52, shortArray53);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(shortArray55, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder11.append((java.lang.Object) intArray37, (java.lang.Object) (short) 1);
        int[] intArray59 = new int[] {};
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.clone(intArray59);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray60, 1, (int) (byte) 1);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray37, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray67 = org.apache.commons.lang3.ArrayUtils.add(intArray60, 9, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        char[] charArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray3 = org.apache.commons.lang3.ArrayUtils.add(charArray0, 3, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((int) (short) 1, (int) (byte) 1);
        java.lang.Boolean boolean57 = equalsBuilder53.build();
        double[] doubleArray61 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray61);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray62, (java.lang.Object) ' ');
        boolean[] booleanArray69 = new boolean[] { false, true, true, true };
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray69);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray62, (java.lang.Object) booleanArray70, (int) (byte) 10);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.add(booleanArray70, true);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray75, false, 10);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray75);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray75);
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray75);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray75, false, 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder53.append(booleanArray70, booleanArray75);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray75, false, 13);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray6);
        float[] floatArray15 = new float[] { (short) 100, 0, 10 };
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(floatArray18, (float) 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 10.0f);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray18);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray15);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray25, (int) '4', 2);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray29, (float) '#', (int) (short) 0);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.add(floatArray29, (float) '#');
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[35.0]");
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        long[] longArray3 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray3, (long) 'a');
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 1);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.add(longArray5, (long) 10);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray9);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) 10);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray12, (long) 2);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray12, 1L);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray18 = org.apache.commons.lang3.ArrayUtils.remove(longArray16, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[4]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[4, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[4, 0, 10, 10]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[4, 0, 10, 10]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[4, 0, 10, 10]");
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray2, 1, (short) (byte) -1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray2);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 1 };
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray15 = new short[] {};
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray15);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray15);
        java.lang.Short[] shortArray19 = new java.lang.Short[] { (short) 1 };
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19, (short) (byte) 100);
        short[] shortArray24 = new short[] {};
        java.lang.Short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray23, shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray17, shortArray24);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (short) (byte) 10);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.clone(shortArray29);
        java.lang.Short[] shortArray32 = new java.lang.Short[] { (short) 1 };
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray32);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray32, (short) (byte) 100);
        short[] shortArray37 = new short[] {};
        java.lang.Short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray37);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray36, shortArray37);
        short[] shortArray40 = new short[] {};
        java.lang.Short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray40);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray39, shortArray40);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.add(shortArray40, (short) -1);
        java.lang.Short[] shortArray46 = new java.lang.Short[] { (short) 1 };
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray46);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46, (short) (byte) 100);
        short[] shortArray51 = new short[] {};
        java.lang.Short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray51);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray51);
        java.lang.Short[] shortArray55 = new java.lang.Short[] { (short) 1 };
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray55);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55, (short) (byte) 100);
        short[] shortArray60 = new short[] {};
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray59, shortArray60);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray53, shortArray60);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.add(shortArray63, (short) (byte) 10);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray40, shortArray63);
        java.lang.Short[] shortArray68 = new java.lang.Short[] { (short) 1 };
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray68);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray68);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray68, (short) (byte) 100);
        short[] shortArray73 = new short[] {};
        java.lang.Short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray72, shortArray73);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray75, (short) 0);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray75, (short) (byte) 10);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray75, (short) -1);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray40, shortArray75);
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray75, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray84);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray84, (short) 10);
        java.lang.Short[] shortArray89 = new java.lang.Short[] { (short) 1 };
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray89);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray89, (short) 10);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray92, (short) (byte) 1);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray87, shortArray92);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray29, shortArray95);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.contains(shortArray95, (short) (byte) 1);
        short[] shortArray99 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray2, shortArray95);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, -1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[1]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[1]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[1]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[1]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[1]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[1, 1]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(shortArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray99), "[1, 1, 1]");
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        java.lang.Object obj0 = null;
        java.lang.Boolean[][] booleanArray1 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray22 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray30 = new java.lang.Boolean[][] { booleanArray8, booleanArray15, booleanArray22, booleanArray29 };
        java.lang.Boolean[][] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray1, booleanArray30);
        java.util.Map<java.lang.Object, java.lang.Object> objMap32 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = objMap32.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList34 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean35 = objEntrySet33.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) objEntrySet33, true);
        java.util.RandomAccess[] randomAccessArray38 = null;
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList39 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray43 = new float[] { (short) 100, 0, 10 };
        float[] floatArray46 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(floatArray46, (float) 0);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.add(floatArray46, 10.0f);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray43, floatArray46);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(floatArray46, (float) (byte) 10);
        boolean boolean55 = objEntryList39.equals((java.lang.Object) boolean54);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray56, (double) (-1.0f));
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray58, (int) ' ', 10);
        boolean boolean62 = objEntryList39.contains((java.lang.Object) doubleArray58);
        java.util.RandomAccess[] randomAccessArray63 = org.apache.commons.lang3.ArrayUtils.add(randomAccessArray38, (java.util.RandomAccess) objEntryList39);
        boolean boolean64 = objEntrySet33.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList39);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream65 = objEntrySet33.stream();
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(objMap32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(randomAccessArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntryStream65);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (double) 1);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 10.0, -1.0, 10.0, 1.0]");
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Boolean[][] booleanArray33 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray62 = new java.lang.Boolean[][] { booleanArray40, booleanArray47, booleanArray54, booleanArray61 };
        java.lang.Boolean[][] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray62);
        java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray33);
        int[] intArray67 = new int[] { 1, (byte) 1 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.add(intArray67, (int) (short) 0, (int) '4');
        java.lang.Object obj71 = objMap31.getOrDefault((java.lang.Object) booleanArray33, (java.lang.Object) intArray70);
        java.lang.Cloneable[] cloneableArray72 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[]) booleanArray33);
        java.lang.Short[] shortArray74 = new java.lang.Short[] { (short) 1 };
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) cloneableArray72, (java.lang.Object) shortArray74);
        java.lang.Character[] charArray82 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray82, 'a');
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.add(charArray84, '#');
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.remove(charArray86, 2);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray88);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray89);
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.remove(charArray90, (int) (byte) 1);
        char[] charArray95 = org.apache.commons.lang3.ArrayUtils.subarray(charArray90, (int) ' ', (int) (byte) -1);
        int int97 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) cloneableArray72, (java.lang.Object) charArray90, (int) (short) 0);
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.contains(charArray90, '#');
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(objMap64);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(cloneableArray72);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        byte[] byteArray0 = null;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray5 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 10, (int) (short) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray5, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray5);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray5, (int) (byte) 0, (int) (short) 0);
        byte[] byteArray15 = null;
        byte[] byteArray16 = null;
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray16);
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10, (int) (short) -1);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray21);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray17, 100, 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray15, byteArray17);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.add(byteArray32, (byte) 10);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray14, byteArray34);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray14, (byte) 0);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray37);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 0L, 0);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder16.append(doubleArray20, doubleArray24);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 'a', (int) '4');
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray20);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) 100);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (byte) 10);
        boolean[] booleanArray50 = new boolean[] { false, false, false, false };
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray50, false);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.add(booleanArray50, true);
        double[] doubleArray61 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray55, (java.lang.Object) doubleArray61);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 3, 1);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 100, (double) 100.0f);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray66);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (short) 0, 6, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 0);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray22);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        float[] floatArray18 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        java.lang.Character[] charArray25 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, 'a');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray18, (java.lang.Object) 'a');
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray18, (int) (byte) 1, (int) (byte) 1);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray18);
        float[] floatArray35 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(floatArray35, (float) 0);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.add(floatArray35, 10.0f);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(floatArray35, (float) (-1));
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray35, 0.0f, (int) '#');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray18, floatArray35);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray35);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray35, (float) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.add(floatArray35, (int) (short) -1, (float) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray16, byteArray30);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.add(byteArray35, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder9.append(byteArray16, byteArray35);
        java.lang.Byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray35);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray41, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder5.append(byteArray35, byteArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) (byte) 0, (short) 0);
        equalsBuilder48.reset();
        equalsBuilder48.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Boolean[][] booleanArray33 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray62 = new java.lang.Boolean[][] { booleanArray40, booleanArray47, booleanArray54, booleanArray61 };
        java.lang.Boolean[][] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray62);
        java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray33);
        int[] intArray67 = new int[] { 1, (byte) 1 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.add(intArray67, (int) (short) 0, (int) '4');
        java.lang.Object obj71 = objMap31.getOrDefault((java.lang.Object) booleanArray33, (java.lang.Object) intArray70);
        java.util.Set<java.lang.Object> objSet72 = objMap31.keySet();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray77 = new double[] {};
        double[] doubleArray81 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray81);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.add(doubleArray81, (double) (byte) 10);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray81, (double) 0L, 0);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray81);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray81, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder73.append(doubleArray77, doubleArray81);
        java.lang.Object obj93 = null;
        java.lang.Object obj94 = objMap31.getOrDefault((java.lang.Object) equalsBuilder92, obj93);
        equalsBuilder92.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder92.append(3, 11);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(objMap64);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 2);
        float[] floatArray56 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(floatArray56, (float) 0);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.add(floatArray56, 10.0f);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray56, (float) (-1));
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray56);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray53, floatArray56);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray53);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(floatArray53, (float) (-1));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((short) 1, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append((short) -1, (short) (byte) 0);
        java.lang.Boolean boolean13 = equalsBuilder3.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7, 0);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray11);
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray4, true, 0);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, true);
        boolean[] booleanArray22 = null;
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray16, booleanArray22);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22);
        boolean[] booleanArray29 = new boolean[] { false, false, false, false };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray29, false);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.add(booleanArray29, true);
        boolean[] booleanArray35 = null;
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray29, booleanArray35);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray22, booleanArray29);
        boolean[] booleanArray38 = null;
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray37, booleanArray38);
        boolean[] booleanArray41 = new boolean[] { true };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray41, (int) (short) 100, (int) (short) 0);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray44);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray44);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray44);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, 8, 7);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        java.lang.Long[] longArray6 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) (short) 10);
        long[] longArray14 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray15);
        long[] longArray22 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray22);
        java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray23);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray25);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.add(longArray25, (long) '#');
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray28);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toObject(longArray28);
        boolean[] booleanArray32 = new boolean[] { true };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray32, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray32, 0, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray32);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        java.lang.Boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray44);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray50);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray51, 0, true);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray51);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray51);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray51, (int) (byte) 1, (int) (byte) 0);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray59, true);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray32, booleanArray59);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray30, (java.lang.Object) booleanArray32);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray32, false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[true, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[true]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray0);
        java.lang.Boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean[] booleanArray8 = new boolean[] { false, false, false, false };
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, false);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8);
        java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14, true);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray17, (int) (short) 0, 100);
        boolean[] booleanArray25 = new boolean[] { false, false, false, false };
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray25, false);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray25);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray25);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31, true);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray40);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray34, booleanArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray40);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray17, booleanArray40);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.add(booleanArray17, true);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray3, (java.lang.Object) booleanArray52, (int) (short) 1);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, false);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[]");
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 100, (int) (byte) 1);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, 1, (int) (short) 0);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) 100);
        java.lang.Short[] shortArray16 = new java.lang.Short[] { (short) 1 };
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16, (short) (byte) 100);
        short[] shortArray21 = new short[] {};
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray21);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray21);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) (byte) -1);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray28, 3, (int) (byte) 1);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray8, shortArray28);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(shortArray8, (short) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, 11, (short) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[-1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        java.lang.Boolean[][] booleanArray14 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray43 = new java.lang.Boolean[][] { booleanArray21, booleanArray28, booleanArray35, booleanArray42 };
        java.lang.Boolean[][] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray14, booleanArray43);
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray66 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray73 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray74 = new java.lang.Boolean[][] { booleanArray52, booleanArray59, booleanArray66, booleanArray73 };
        java.lang.Boolean[][] booleanArray75 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder0.append((java.lang.Object[]) booleanArray43, (java.lang.Object[]) booleanArray45);
        equalsBuilder0.reset();
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray78);
        java.lang.String[] strArray80 = org.apache.commons.lang3.ArrayUtils.clone(strArray78);
        java.lang.String[] strArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray80);
        org.apache.commons.lang3.ArrayUtils arrayUtils82 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray83 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils82 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray85 = org.apache.commons.lang3.ArrayUtils.remove(arrayUtilsArray83, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder0.append((java.lang.Object[]) strArray81, (java.lang.Object[]) arrayUtilsArray83);
        java.lang.String[] strArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray81);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(arrayUtilsArray83);
        org.junit.Assert.assertNotNull(arrayUtilsArray85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray10, (long) '4');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) (byte) 0, 7);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray19 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) -1, (long) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray26);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray26);
        byte[] byteArray36 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray36, (byte) 10, (int) (short) -1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray36);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray36, (byte) 1, (int) ' ');
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray45, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray36, byteArray45);
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10, (int) (short) -1);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 10);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 1);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 100);
        byte[] byteArray65 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray65, (byte) 10, (int) (short) -1);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray65);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray65, (byte) 1, (int) ' ');
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray52, byteArray65);
        byte[] byteArray80 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray80);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray80, (byte) 10);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray80, (byte) 10);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray52, byteArray80);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray52, (int) (byte) -1, (int) '#');
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 0);
        byte[] byteArray92 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray45, byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray45);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray26, byteArray45);
        byte[] byteArray97 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray26, 2, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray26);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(byteArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray97), "[]");
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap31.entrySet();
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1 };
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47);
        java.lang.Short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray47);
        boolean boolean50 = objMap31.containsValue((java.lang.Object) shortArray49);
        int int51 = objMap31.size();
        int[] intArray52 = new int[] {};
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray52, 0, 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray55);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.clone(intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray55);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray55);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray55, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(true, true);
        byte[] byteArray69 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray69, (byte) 10, (int) (short) -1);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray69);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray69, (byte) 1, (int) ' ');
        byte[] byteArray83 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray83);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray83, (byte) 10);
        byte[] byteArray87 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray69, byteArray83);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray91 = org.apache.commons.lang3.ArrayUtils.add(byteArray88, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder62.append(byteArray69, byteArray88);
        java.lang.Byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray88);
        java.lang.Byte[] byteArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray93);
        java.lang.Object obj95 = objMap31.putIfAbsent((java.lang.Object) ' ', (java.lang.Object) byteArray93);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray93);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 4 + "'", int86 == 4);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        java.lang.Float[] floatArray0 = null;
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (-1.0f));
        org.junit.Assert.assertNull(floatArray2);
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray19, (int) (byte) -1, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) 6);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) 7, (double) 6);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        boolean boolean23 = equalsBuilder22.isEquals();
        java.lang.Character[] charArray29 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, ' ');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, '#');
        java.lang.Character[] charArray39 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray39, 'a');
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray33, charArray42);
        java.lang.Character[] charArray44 = org.apache.commons.lang3.ArrayUtils.toObject(charArray33);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.clone(charArray33);
        java.lang.Character[] charArray46 = org.apache.commons.lang3.ArrayUtils.toObject(charArray45);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray46);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.remove(charArray47, (int) (short) 0);
        boolean[] booleanArray54 = new boolean[] { false, false, false, false };
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray54, false);
        java.lang.Boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54);
        java.lang.Boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        java.lang.Boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray60);
        java.lang.Character[] charArray67 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray67, 'a');
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray69, 'a', (-1));
        java.lang.Character[] charArray78 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray78, ' ');
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray78, '#');
        java.lang.Character[] charArray88 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray88);
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray88, 'a');
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray82, charArray91);
        char[] charArray93 = org.apache.commons.lang3.ArrayUtils.addAll(charArray69, charArray82);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray61, (java.lang.Object) charArray82);
        char[] charArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray82);
        char[] charArray97 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray95, ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder22.append(charArray47, charArray95);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, 4, a, 4]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[4, 4, a, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, (float) '4');
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        java.lang.Long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toObject(longArray34);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray34);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.add(longArray36, (long) (short) 0);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.clone(longArray38);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray39);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray39);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray39);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray25, (java.lang.Object) longArray42);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Object[] objArray38 = objEntrySet32.toArray();
        boolean boolean40 = objEntrySet32.remove((java.lang.Object) '4');
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor41 = objEntrySet32.iterator();
        boolean boolean42 = objEntrySet32.isEmpty();
        objEntrySet32.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntryItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        double[] doubleArray55 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (double) (byte) 10);
        double[] doubleArray62 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray62, (double) (byte) 10);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray65, (double) 10.0f);
        double[] doubleArray71 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray71);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.add(doubleArray71, (double) (byte) 10);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray71, (double) 0L, 0);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray71);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray71);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray82);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray82, 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder51.append(doubleArray58, doubleArray82);
        equalsBuilder51.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder51.append(10.0d, (double) 0L);
        java.lang.Boolean boolean92 = equalsBuilder51.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder51.appendSuper(false);
        java.lang.String str96 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) false, " ");
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertEquals("'" + boolean92 + "' != '" + false + "'", boolean92, false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "false" + "'", str96, "false");
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        java.lang.Boolean[][] booleanArray39 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray46 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray68 = new java.lang.Boolean[][] { booleanArray46, booleanArray53, booleanArray60, booleanArray67 };
        java.lang.Boolean[][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray39, booleanArray68);
        java.util.Map<java.lang.Object, java.lang.Object> objMap70 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = objMap70.entrySet();
        java.util.Set<java.lang.Object> objSet72 = objMap70.keySet();
        objMap31.putAll(objMap70);
        byte[] byteArray77 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray77, (byte) 10, (int) (short) -1);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray77, (byte) 10);
        double[] doubleArray86 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray86);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray87);
        java.lang.Object obj89 = objMap70.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) doubleArray87);
        boolean boolean90 = objMap70.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(objMap70);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray1);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray0, (java.lang.Object[]) booleanArray2);
        java.lang.Boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray2);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray2);
        java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray2);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray2);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        short[] shortArray52 = null;
        java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1 };
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) (byte) 100);
        short[] shortArray59 = new short[] {};
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray58, shortArray59);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder51.append(shortArray52, shortArray59);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) (byte) 1, (int) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 0.0d, 0.0d, 1.0d };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) '#');
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray8);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (int) (byte) 10, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 0.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 0.0, 1.0]");
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0, (double) (-1.0f));
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (int) (byte) -1, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        boolean boolean12 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray3, (java.lang.Object) booleanArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 1, 9);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray22);
        float[] floatArray26 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(floatArray26, (float) 0);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray26, 10.0f);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(floatArray26, (float) (-1));
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray26, 0.0f, (int) '#');
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray26, (float) 1);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray22, (java.lang.Object) int38);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean28 = equalsBuilder27.isEquals();
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray34 = org.apache.commons.lang3.ArrayUtils.addAll(strArray29, strArray33);
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray29);
        java.lang.Character[] charArray41 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41, ' ');
        java.lang.Character[] charArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder27.append((java.lang.Object[]) strArray29, (java.lang.Object[]) charArray44);
        java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strArray29, "{32,100,10,10,1}");
        java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.add(strArray29, "");
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray22, (java.lang.Object[]) strArray49);
        java.lang.Object[] objArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray22);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (short) 1);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.clone(floatArray53);
        float[] floatArray57 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray61 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(floatArray61, (float) 0);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray57, floatArray61);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray57);
        float[] floatArray70 = new float[] { (short) 100, 0, 10 };
        float[] floatArray73 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray73);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(floatArray73, (float) 0);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.add(floatArray73, 10.0f);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray70, floatArray73);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray73);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.contains(floatArray73, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray73);
        float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray57, floatArray73);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(floatArray57, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray57);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray54, floatArray57);
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray57, (float) 8);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.contains(floatArray57, (float) 0L);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 1.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] {};
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) 0L, 0);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append(doubleArray9, doubleArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 1 };
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        java.lang.Character[] charArray38 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, ' ');
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder27.append((java.lang.Object[]) shortArray29, (java.lang.Object[]) charArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder42.appendSuper(true);
        boolean[] booleanArray49 = new boolean[] { false, false, false, false };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray49, false);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.add(booleanArray49, true);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray49);
        boolean[] booleanArray60 = new boolean[] { false, false, false, false };
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder42.append(booleanArray49, booleanArray61);
        float[] floatArray65 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(floatArray65, (float) 0);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.add(floatArray65, 10.0f);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(floatArray65, (float) (-1));
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray65, 0.0f, (int) '#');
        java.lang.Character[] charArray81 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, ' ');
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray85, '#', (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder42.append((java.lang.Object) '#', (java.lang.Object) charArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append(true, false);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray1, (java.lang.Object) false);
        short[] shortArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 100);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(shortArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray94), "[1]");
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray96), "[1]");
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray16 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray16);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100.0f, (double) 0);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray16);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 3);
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray31, (java.lang.Object) ' ');
        java.lang.Object obj34 = null;
        java.lang.Object[] objArray35 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray31, obj34);
        java.lang.Object obj36 = null;
        java.lang.Object[] objArray37 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.Object[]) doubleArray31, obj36);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray31);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray31, (double) (byte) 1);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray40);
        java.lang.Double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray41);
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42, (double) 7);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray26, doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 1.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 1.0, -1.0]");
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray19 = new boolean[] { false, false, false, false };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray19, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray19);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, 3, 10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false]");
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray4, (byte) 100);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, 0, (int) (short) 1);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList12 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean14 = objEntryList12.remove((java.lang.Object) byteArray13);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.clone(byteArray18);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.clone(byteArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray6, byteArray19);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 10, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, 11, (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 1, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder0.append(true, true);
        java.lang.Long[] longArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray35);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray47 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        long[] longArray54 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.clone(longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder41.append(longArray48, longArray54);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray48, (int) (byte) 0, (long) 2);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.add(longArray59, (long) 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray37, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100.0f, (float) (byte) 1);
        long[] longArray66 = null;
        long[] longArray72 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        java.lang.Long[] longArray74 = org.apache.commons.lang3.ArrayUtils.toObject(longArray73);
        long[] longArray80 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.clone(longArray80);
        java.lang.Long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toObject(longArray81);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.clone(longArray81);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.addAll(longArray73, longArray83);
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.add(longArray83, (long) '#');
        int int89 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray83, 100L, (int) ' ');
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray83);
        long[] longArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder65.append(longArray66, longArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((int) 'a', (int) '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[32, 100, 10, 10, 1, 35]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray91), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray22 = new char[] { 'a' };
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.toObject(charArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray22);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray20);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray29 = org.apache.commons.lang3.ArrayUtils.add(charArray20, (int) (short) -1, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append(byteArray46, byteArray48);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray48);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray48);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) 0, (int) (short) 0);
        byte[] byteArray57 = null;
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray48, byteArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray57);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, 9);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray19, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7 + "'", int24 == 7);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false, false, false, false]");
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray3, 7, (int) (short) 1);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray6, (byte) 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((short) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append('#', ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray13 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 10.0f);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, (double) 1.0f);
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, 10.0d);
        double[] doubleArray29 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray29);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, (double) (byte) 10);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 0L, 0);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray29, doubleArray39);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray23, doubleArray50);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray50);
        double[] doubleArray57 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray57);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.add(doubleArray57, (double) (byte) 10);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, 4, (double) (byte) 0);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray63, 9, (int) (byte) -1);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray50, doubleArray63);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray50, 100.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0);
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray1, (double) (short) -1);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray1, (double) 0.0f);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray5, (double) '#', (double) (byte) 100);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray5, (double) 1.0f, 11);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray16);
        long[] longArray23 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toObject(longArray24);
        long[] longArray31 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.clone(longArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray24, longArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray38 = new double[] {};
        double[] doubleArray42 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) (byte) 10);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) 0L, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder34.append(doubleArray38, doubleArray42);
        long[] longArray59 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        java.lang.Long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toObject(longArray60);
        long[] longArray67 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.clone(longArray67);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray60, longArray68);
        long[] longArray75 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.clone(longArray75);
        java.lang.Long[] longArray77 = org.apache.commons.lang3.ArrayUtils.toObject(longArray76);
        long[] longArray83 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.clone(longArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray76, longArray84);
        java.lang.Long[] longArray86 = org.apache.commons.lang3.ArrayUtils.toObject(longArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder53.append(longArray60, longArray84);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray60);
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray60, (long) 'a');
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray24, longArray60);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray24, (long) 3);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray16, longArray24);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray97 = org.apache.commons.lang3.ArrayUtils.add(longArray24, 100, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray32 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray32);
        java.lang.Integer[] intArray35 = org.apache.commons.lang3.ArrayUtils.toObject(intArray32);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray35);
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray35);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.clone(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray37);
        java.lang.Class<?> wildcardClass40 = intArray37.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a', (-1));
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '#');
        java.lang.Character[] charArray26 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26, 'a');
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray29);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray20);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray34 = org.apache.commons.lang3.ArrayUtils.remove(charArray32, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) ' ');
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 1);
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.toObject(intArray30);
        long[] longArray37 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        java.lang.Long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toObject(longArray38);
        long[] longArray45 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray38, longArray46);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray38, (long) 1);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray50, (long) (byte) 10);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray31, (java.lang.Object) int52);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31, (int) ' ');
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray55, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        java.lang.Object obj0 = null;
        byte[] byteArray1 = null;
        byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray7 = new double[] {};
        double[] doubleArray11 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (byte) 10);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 0L, 0);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder3.append(doubleArray7, doubleArray11);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray27 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray27, (double) (byte) 10);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) 10.0f);
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) 0L, 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray36);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder22.append(doubleArray23, doubleArray36);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray49);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray51, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append(byteArray49, byteArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray51);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray56);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.add(byteArray59, (byte) -1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray56, byteArray59);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray56, (int) (byte) 10, 3);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEquals(obj0, (java.lang.Object) 3);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        int[] intArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, 3, 9);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean35 = objEntryList33.remove((java.lang.Object) byteArray34);
        boolean boolean36 = objEntrySet32.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor37 = objEntrySet32.iterator();
        java.lang.Object[] objArray38 = objEntrySet32.toArray();
        boolean boolean40 = objEntrySet32.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList41 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor42 = objEntryList41.iterator();
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.addAll(strArray43, strArray47);
        java.lang.Comparable<java.lang.String>[] strComparableArray49 = objEntryList41.toArray((java.lang.Comparable<java.lang.String>[]) strArray43);
        boolean boolean50 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList41);
        boolean boolean51 = objEntrySet32.isEmpty();
        java.lang.Character[] charArray54 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[] charArray57 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[] charArray60 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[] charArray63 = new java.lang.Character[] { 'a', 'a' };
        java.lang.Character[][] charArray64 = new java.lang.Character[][] { charArray54, charArray57, charArray60, charArray63 };
        java.lang.Character[][] charArray65 = objEntrySet32.toArray(charArray64);
        java.util.RandomAccess[] randomAccessArray66 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray67 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray68 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[][] randomAccessArray69 = new java.util.RandomAccess[][] { randomAccessArray66, randomAccessArray67, randomAccessArray68 };
        java.util.RandomAccess[] randomAccessArray70 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray71 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray72 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[][] randomAccessArray73 = new java.util.RandomAccess[][] { randomAccessArray70, randomAccessArray71, randomAccessArray72 };
        java.util.RandomAccess[] randomAccessArray74 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray75 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray76 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[][] randomAccessArray77 = new java.util.RandomAccess[][] { randomAccessArray74, randomAccessArray75, randomAccessArray76 };
        java.util.RandomAccess[][][] randomAccessArray78 = new java.util.RandomAccess[][][] { randomAccessArray69, randomAccessArray73, randomAccessArray77 };
        java.util.RandomAccess[][][] randomAccessArray79 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray78);
        java.util.RandomAccess[][][] randomAccessArray80 = objEntrySet32.toArray(randomAccessArray78);
        java.lang.Object obj81 = null;
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) randomAccessArray80, obj81);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntryItor37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntryItor42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strComparableArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(randomAccessArray66);
        org.junit.Assert.assertNotNull(randomAccessArray67);
        org.junit.Assert.assertNotNull(randomAccessArray68);
        org.junit.Assert.assertNotNull(randomAccessArray69);
        org.junit.Assert.assertNotNull(randomAccessArray70);
        org.junit.Assert.assertNotNull(randomAccessArray71);
        org.junit.Assert.assertNotNull(randomAccessArray72);
        org.junit.Assert.assertNotNull(randomAccessArray73);
        org.junit.Assert.assertNotNull(randomAccessArray74);
        org.junit.Assert.assertNotNull(randomAccessArray75);
        org.junit.Assert.assertNotNull(randomAccessArray76);
        org.junit.Assert.assertNotNull(randomAccessArray77);
        org.junit.Assert.assertNotNull(randomAccessArray78);
        org.junit.Assert.assertNotNull(randomAccessArray79);
        org.junit.Assert.assertNotNull(randomAccessArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 10);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray4, 7, (int) 'a');
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray4);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) 10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray4);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray6, (float) 5);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[1.0, -1.0]");
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        byte[] byteArray3 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray3, (byte) 10, (int) (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray3, (byte) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray3);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray3);
        byte[] byteArray15 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray15, (byte) 10, (int) (short) -1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray15);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray15, (byte) 1, (int) ' ');
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 10);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray29);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray33, (byte) 1);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) -1);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray33);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray11, 7, (int) (byte) 10);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray11, (byte) -1, 7);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray11, 0, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 10, 0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, 0, 10]");
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream48 = objEntryList33.stream();
        java.util.Spliterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySpliterator49 = objEntryList33.spliterator();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor50 = objEntryList33.iterator();
        java.lang.Object[] objArray51 = objEntryList33.toArray();
        org.apache.commons.lang3.ArrayUtils.reverse(objArray51);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEntryStream48);
        org.junit.Assert.assertNotNull(objEntrySpliterator49);
        org.junit.Assert.assertNotNull(objEntryItor50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 1 };
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray20);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20, (short) (byte) 100);
        short[] shortArray25 = new short[] {};
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray24, shortArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) (byte) 10, (int) (byte) 10);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray25);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, (java.lang.Object) shortArray32, 0);
        java.lang.Character[] charArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, #,  , a]");
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray16 = new boolean[] { false, false, false, false };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray16, false);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray16);
        java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray29 = new double[] {};
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(doubleArray29, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder25.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('a', '4');
        int[] intArray53 = new int[] { 1, (byte) 1 };
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.add(intArray53, (int) (short) 0, (int) '4');
        int[] intArray60 = new int[] { 'a', 0, 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder50.append(intArray53, intArray60);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray23, (java.lang.Object) intArray53);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray53);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.clone(intArray53);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray64);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 0, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 1]");
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        long[] longArray22 = null;
        long[] longArray28 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.clone(longArray28);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toObject(longArray29);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.clone(longArray29);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder3.append(longArray22, longArray31);
        float[] floatArray34 = null;
        float[] floatArray37 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(floatArray37, (float) 0);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.add(floatArray37, 10.0f);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(floatArray37, (float) (-1));
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray37);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.add(floatArray37, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder3.append(floatArray34, floatArray47);
        equalsBuilder3.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        char[] charArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, 'a');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 100, (int) (short) 1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.clone(byteArray4);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) 10);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray16, (long) 10);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray16, (long) (short) 10);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray16, (long) 2, (int) (short) 10);
        long[] longArray30 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.clone(longArray30);
        java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray31);
        long[] longArray38 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.clone(longArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray31, longArray39);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray39);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray41);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray42);
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray44, (long) 7);
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toObject(longArray46);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray46);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray48);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray19);
        java.lang.Character[] charArray26 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26, 'a');
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, 'a', (-1));
        java.lang.Character[] charArray37 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37, ' ');
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37, '#');
        java.lang.Character[] charArray47 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray47);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray47, 'a');
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray41, charArray50);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray41);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.clone(charArray41);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray41);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(charArray19, 'a');
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, ' ');
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1, (long) (short) 100);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        java.lang.Boolean[][] booleanArray5 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray34 = new java.lang.Boolean[][] { booleanArray12, booleanArray19, booleanArray26, booleanArray33 };
        java.lang.Boolean[][] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray5, booleanArray34);
        java.util.Map<java.lang.Object, java.lang.Object> objMap36 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray5);
        java.lang.Short[] shortArray39 = new java.lang.Short[] { (short) 1 };
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 10);
        java.lang.Object obj43 = objMap36.replace((java.lang.Object) 2, (java.lang.Object) shortArray42);
        objMap36.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap36.entrySet();
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray4, (java.lang.Object) objEntrySet45);
        int[] intArray53 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[] intArray60 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[] intArray67 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[] intArray74 = new int[] { (short) 1, (byte) 0, 3, 'a', 0, (byte) 1 };
        int[][] intArray75 = new int[][] { intArray53, intArray60, intArray67, intArray74 };
        int[][][] intArray76 = new int[][][] { intArray75 };
        int[][] intArray77 = new int[][] {};
        int[][] intArray78 = org.apache.commons.lang3.ArrayUtils.toArray(intArray77);
        int[][][] intArray79 = org.apache.commons.lang3.ArrayUtils.add(intArray76, intArray78);
        int[] intArray80 = new int[] {};
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.clone(intArray80);
        java.lang.Integer[] intArray82 = org.apache.commons.lang3.ArrayUtils.toObject(intArray81);
        int[][][] intArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray79, (java.lang.Object) intArray81);
        int[][][] intArray84 = objEntrySet45.toArray(intArray79);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(objMap36);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 0, 3, 97, 0, 1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(intArray84);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, ' ');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, '4');
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(charArray15, '4');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(charArray15, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray61);
        boolean[] booleanArray67 = new boolean[] { false, false, false, false };
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray67);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray67, false);
        java.lang.Boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray67);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray62, (java.lang.Object) booleanArray71, (int) '#');
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray62);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.add(intArray74, 3, (int) (byte) 100);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.clone(intArray77);
        int[] intArray79 = new int[] {};
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.add(intArray79, 0, 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder42.append(intArray78, intArray82);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray78, (int) (short) 100);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray78, 3, 3);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.contains(intArray78, (int) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[4, 4, -1, 100, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 3 + "'", int85 == 3);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((byte) -1, (byte) 100);
        boolean[] booleanArray44 = new boolean[] { true };
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray49 = new boolean[] { true };
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray49, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray52, (int) '#', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder42.append(booleanArray44, booleanArray52);
        double[] doubleArray60 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray60, (double) (byte) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0L, 0);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        double[] doubleArray70 = new double[] { 4, 0.0f };
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray70, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder56.append(doubleArray60, doubleArray70);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) 0.0f);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray60, (double) (short) 1, 10, (double) 1L);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray60);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, 100.0]");
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray25);
        java.lang.Integer[] intArray27 = org.apache.commons.lang3.ArrayUtils.toObject(intArray25);
        java.lang.Integer[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray27);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28, 8);
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36);
        java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray38);
        java.lang.Short[] shortArray41 = new java.lang.Short[] { (short) 1 };
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray41);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41, (short) 0);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray39, (java.lang.Object) shortArray41, 7);
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 10 };
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray51, (int) (byte) 10);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray39, (java.lang.Object) intArray53, 4);
        java.lang.Boolean[][] booleanArray56 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray63 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray70 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray84 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray85 = new java.lang.Boolean[][] { booleanArray63, booleanArray70, booleanArray77, booleanArray84 };
        java.lang.Boolean[][] booleanArray86 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray56, booleanArray85);
        java.util.Map<java.lang.Object, java.lang.Object> objMap87 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray56);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = objMap87.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList89 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean90 = objEntrySet88.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList89);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) doubleArray39, (java.lang.Object) objEntryList89);
        java.lang.Double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray39);
        double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray92, (double) 10.0f);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray28, (java.lang.Object[]) doubleArray92);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, -1, -1, 100, 97, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(objMap87);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 10);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray6, (byte) 10);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 10);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray14, (int) (short) 1, 3);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, 10, 10, 10, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 10]");
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (short) 0, 100);
        boolean[] booleanArray21 = new boolean[] { false, false, false, false };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, false);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21);
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27, true);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray36 = new boolean[] { false, false, false, false };
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray36);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray36);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray13, booleanArray36);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (short) 0);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) 10);
        long[] longArray13 = null;
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray14);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.add(longArray14, (int) (byte) 0, (long) (short) 100);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.addAll(longArray12, longArray18);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray18, 10, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[32, 100, 10, 10, 1, 10, 100]");
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder38.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((double) 10, 0.0d);
        java.lang.Boolean boolean44 = equalsBuilder40.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder40.append((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder40.append((float) 6, (float) 10L);
        java.lang.Boolean boolean51 = equalsBuilder40.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder40.append((double) ' ', (double) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        java.lang.Character[] charArray8 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, ' ');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8, '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray2, (java.lang.Object) '#', (int) (short) 100);
        java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        java.lang.Integer[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        java.lang.Integer[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray16);
        java.lang.String str18 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) intArray16);
        java.lang.Integer[] intArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray16);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{0}" + "'", str18, "{0}");
        org.junit.Assert.assertNotNull(intArray19);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 10);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray6, (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 100, (int) (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray6, (byte) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) -1, 5);
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder6.append(doubleArray10, doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) 10.0f);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder25.append(doubleArray26, doubleArray39);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray54, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append(byteArray52, byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray58);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.clone(byteArray1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray62, (-1), (int) '#');
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(byteArray65, (byte) 100);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray65, (byte) 100, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.remove(byteArray65, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray20 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.clone(longArray20);
        long[] longArray27 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder14.append(longArray21, longArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { 10 };
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32, (int) (byte) 10);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray39, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append((java.lang.Object[]) intArray32, (java.lang.Object[]) byteArray39);
        long[] longArray48 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray48);
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toObject(longArray49);
        long[] longArray56 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.clone(longArray56);
        java.lang.Long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toObject(longArray57);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray57);
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.addAll(longArray49, longArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray49);
        long[] longArray67 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.clone(longArray67);
        java.lang.Long[] longArray69 = org.apache.commons.lang3.ArrayUtils.toObject(longArray68);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray70, (long) (short) 0);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        long[] longArray79 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.clone(longArray79);
        java.lang.Long[] longArray81 = org.apache.commons.lang3.ArrayUtils.toObject(longArray80);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.clone(longArray80);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.add(longArray82, (long) (short) 0);
        long[] longArray85 = org.apache.commons.lang3.ArrayUtils.addAll(longArray73, longArray82);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.subarray(longArray73, (int) (short) -1, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder30.append(longArray49, longArray88);
        long[] longArray90 = org.apache.commons.lang3.ArrayUtils.addAll(longArray27, longArray88);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray88);
        long[] longArray93 = org.apache.commons.lang3.ArrayUtils.remove(longArray88, (int) (byte) 0);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[32, 100, 10, 10, 1, 0, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray90), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(longArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray93), "[100, 10, 10, 1, 0]");
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) -1);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) (byte) 100);
        short[] shortArray20 = new short[] {};
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray20);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) (byte) 100);
        short[] shortArray29 = new short[] {};
        java.lang.Short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray22, shortArray29);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 10);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray32);
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray37);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) (byte) 100);
        short[] shortArray42 = new short[] {};
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray42);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray41, shortArray42);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray44, (short) 0);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray44, (short) (byte) 10);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray44, (short) -1);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray9, shortArray44);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray44, (short) 0);
        java.lang.Short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54);
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray54, (short) 100);
        java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray63, (byte) 100);
        java.lang.Byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray65);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray66);
        java.lang.Byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray66);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray66);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray54, (java.lang.Object) byteArray66, (int) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[-1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 100, 1, 100]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Short[] shortArray28 = new java.lang.Short[] { (short) 1 };
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray28);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28, (short) (byte) 100);
        short[] shortArray33 = new short[] {};
        java.lang.Short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray33);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray32, shortArray33);
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray37);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37, (short) (byte) 100);
        short[] shortArray42 = new short[] {};
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray42);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray41, shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray35, shortArray42);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.add(shortArray45, (short) (byte) 10);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.add(shortArray45, (short) (byte) 100);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray26, shortArray45);
        java.lang.Short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 0);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.add(shortArray26, (int) (byte) 0, (short) 10);
        short[] shortArray57 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder0.append(shortArray26, shortArray57);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.add(shortArray26, 11, (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1, 1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, '#');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray21);
        boolean boolean23 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray11, (java.lang.Object) charArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(charArray11, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        java.lang.Object obj7 = null;
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) doubleArray4, obj7);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) 0);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (byte) 10);
        boolean[] booleanArray17 = new boolean[] { false, false, false, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, false);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray17, true);
        double[] doubleArray28 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray22, (java.lang.Object) doubleArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, (double) 10);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray35);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray36);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (int) (short) 10, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0, 10.0, 100.0, null]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0, -1.0, 10.0, 10.0, 0.0]");
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        boolean boolean2 = objEntryList0.isEmpty();
        boolean[] booleanArray7 = new boolean[] { false, false, false, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, false);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray12, (int) (short) 1);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray23 = org.apache.commons.lang3.ArrayUtils.addAll(strArray18, strArray22);
        java.lang.String[] strArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray18);
        java.lang.String[] strArray25 = org.apache.commons.lang3.ArrayUtils.toArray(strArray24);
        java.util.Map<java.lang.Object, java.lang.Object> objMap26 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) strArray25);
        java.lang.String[] strArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray25);
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) objEntryList0, (java.lang.Object) booleanArray17, strArray27);
        java.lang.String[] strArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray27);
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objMap26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray16);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray16, (long) (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        java.lang.Integer[] intArray1 = new java.lang.Integer[] { 0 };
        java.lang.Integer[] intArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append(true, true);
        java.lang.Short[] shortArray9 = new java.lang.Short[] { (short) 1 };
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        boolean[] booleanArray17 = new boolean[] { false, false, false, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, false);
        java.lang.Boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray17);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        java.lang.Short[] shortArray25 = new java.lang.Short[] { (short) 1 };
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray25);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray25, (short) (byte) 100);
        short[] shortArray30 = new short[] {};
        java.lang.Short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray30);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray29, shortArray30);
        float[] floatArray35 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(floatArray35, (float) 0);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.add(floatArray35, 10.0f);
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray29, (java.lang.Object) floatArray41, false);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray23, (java.lang.Object[]) floatArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray9, (java.lang.Object[]) floatArray41);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray41, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray52 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder4.append((java.lang.Object[]) floatArray41, (java.lang.Object[]) floatArray53);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41, (float) 2);
        float[] floatArray60 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) 0);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.add(floatArray60, 10.0f);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(floatArray60, (float) (-1));
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray60);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray57, floatArray60);
        java.lang.String[] strArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.Comparable<java.lang.String>[]) strArray70);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.clone(strArray70);
        java.lang.String[] strArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.String[] strArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray1, (java.lang.Object) floatArray69, strArray72);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0]");
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[1]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 2);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.subarray(intArray0, (int) (short) 1, 4);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray5);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray5, 4);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, 1);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.clone(intArray10);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(true);
        boolean[] booleanArray44 = new boolean[] { false, false, false, false };
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray44, false);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.add(booleanArray44, true);
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        boolean[] booleanArray55 = new boolean[] { false, false, false, false };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder37.append(booleanArray44, booleanArray56);
        boolean boolean58 = equalsBuilder57.isEquals();
        java.lang.Short[] shortArray60 = new java.lang.Short[] { (short) 1 };
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray60);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray60);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray60, (short) (byte) 100);
        short[] shortArray65 = new short[] {};
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray65);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray64, shortArray65);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray67, (short) 0);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray67, (short) (byte) 10);
        java.lang.Short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray67);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray67, (short) (byte) -1);
        short[] shortArray75 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder57.append(shortArray67, shortArray75);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[1]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray12);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray13, (double) (short) 100, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, 100.0d, (-1), (double) 3);
        double[] doubleArray54 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray54);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, (double) (byte) 10);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) (short) 0, (int) ' ', (double) 1L);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray54, (double) (-1));
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray54, (double) (short) 0, (int) (byte) 0);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray54);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray54);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) 13);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        int[] intArray3 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.subarray(intArray3, (int) '#', (int) (short) 0);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, (int) (byte) 1);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray9, (-1));
        java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.toObject(intArray9);
        int[] intArray17 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray17);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray17, (int) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.addAll(intArray9, intArray17);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 11);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0, 0, -1, 35]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 0, -1, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray10 = org.apache.commons.lang3.ArrayUtils.addAll(strArray5, strArray9);
        java.lang.String[] strArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5);
        java.lang.Character[] charArray17 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, ' ');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder3.append((java.lang.Object[]) strArray5, (java.lang.Object[]) charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        java.lang.Character[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, 4, a, 4]");
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10, (int) (short) -1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) 1, (int) ' ');
        byte[] byteArray21 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 10);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder0.append(byteArray7, byteArray26);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.add(byteArray7, 2, (byte) 100);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray7, (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 100, 10]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) -1);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) -1, 0);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        byte[] byteArray9 = null;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray9);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray17 = new double[] {};
        double[] doubleArray21 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) 0L, 0);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder13.append(doubleArray17, doubleArray21);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray37 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray37);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray37, (double) (byte) 10);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray40, (double) 10.0f);
        double[] doubleArray46 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray46);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) (byte) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) 0L, 0);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder32.append(doubleArray33, doubleArray46);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray59);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.add(byteArray61, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder58.append(byteArray59, byteArray61);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray65);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray8, byteArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray8);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray69, (-1), (int) '#');
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray72);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.clone(byteArray73);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray2 = org.apache.commons.lang3.ArrayUtils.remove(intArray0, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        java.lang.Boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY;
        java.lang.Boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray1);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray0, (java.lang.Object[]) booleanArray2);
        java.lang.Boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray2);
        int[] intArray9 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.clone(intArray9);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.add(intArray9, (int) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(intArray9);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.subarray(intArray9, 4, (int) (byte) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) '4', 3);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray2, (java.lang.Object) 3);
        java.lang.Boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray2);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray21, false);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        double[] doubleArray36 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) (byte) 10);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) 10.0f);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 1L);
        java.lang.Object obj44 = objMap31.get((java.lang.Object) 1L);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(byteArray46, (byte) 10);
        boolean boolean49 = objMap31.containsValue((java.lang.Object) (byte) 10);
        int[] intArray54 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.clone(intArray54);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        java.lang.Integer[] intArray57 = org.apache.commons.lang3.ArrayUtils.toObject(intArray55);
        boolean boolean58 = objMap31.containsValue((java.lang.Object) intArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(intArray55, 0);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.add(intArray55, 0, (int) (short) 1);
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.subarray(intArray63, 2, (int) (byte) 1);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(intArray66, 5);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        float[] floatArray36 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        java.lang.Character[] charArray43 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray43, 'a');
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) floatArray36, (java.lang.Object) 'a');
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray36, (int) (byte) 1, (int) (byte) 1);
        float[] floatArray52 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) 0);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.add(floatArray52, 10.0f);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) (-1));
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray52);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray36, floatArray52);
        java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray61);
        java.lang.Object obj63 = objMap31.get((java.lang.Object) floatArray62);
        boolean[] booleanArray68 = new boolean[] { false, false, false, false };
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray68);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray68, false);
        java.lang.Boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray68);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray68, false);
        float[] floatArray78 = new float[] { 1L, 100L, 100 };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray78, (float) (-1L), (int) (short) 100);
        java.lang.Float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray78);
        java.lang.Object obj83 = objMap31.put((java.lang.Object) booleanArray74, (java.lang.Object) floatArray82);
        java.lang.Float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray84);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, false, false]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, 'a', (-1));
        java.lang.Character[] charArray16 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '#');
        java.lang.Character[] charArray26 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26, 'a');
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray29);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray20);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray20, ' ');
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray20, 'a');
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, 'a');
        java.lang.Character[] charArray44 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, 'a');
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '#');
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray48, 4, '#');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.subarray(charArray51, 100, (int) 'a');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray51);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.clone(charArray51);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray51);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a # 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, 4, 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " 44a4a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " 44a4a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , 4, 4, a, 4, a,  , a,  , #, #, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray31 = new double[] {};
        double[] doubleArray35 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray35, (double) (byte) 10);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 0L, 0);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder27.append(doubleArray31, doubleArray35);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 'a', (int) '4');
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray31);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0, (double) 100);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray14);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) 0.0f, (int) ' ');
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) ' ', 7);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (-1.0d), (double) '4');
        java.lang.Double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray68, (double) '#');
        java.lang.Class<?> wildcardClass71 = doubleArray70.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append(' ', ' ');
        java.lang.Character[] charArray29 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, 'a');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.add(charArray31, '#');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.subarray(charArray31, (int) (byte) -1, (int) '#');
        java.lang.Character[] charArray42 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray42);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray42, 'a');
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.clone(charArray45);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray31, charArray45);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.add(charArray31, 1, '4');
        float[] floatArray53 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray53);
        float[] floatArray57 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(floatArray57, (float) 0);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray57);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray53);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray53);
        java.lang.Float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray64);
        float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray65, (float) 'a');
        float[] floatArray71 = new float[] { 1L, 100L, 100 };
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) (-1L), (int) (short) 100);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray67, floatArray71);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray53, floatArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder20.append((java.lang.Object) charArray31, (java.lang.Object) floatArray71);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a a #4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a a #4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a,  , a,  , #, 4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , a,  , #]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        double[] doubleArray40 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        double[] doubleArray45 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, (double) (byte) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, 0.0d);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray45);
        boolean boolean52 = objMap31.containsKey((java.lang.Object) doubleArray40);
        objMap31.clear();
        java.util.Collection<java.lang.Object> objCollection54 = objMap31.values();
        java.lang.Character[] charArray60 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60, 'a');
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.add(charArray62, '#');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.add(charArray64, 4, '#');
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray67, '4');
        int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray67, 'a');
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray67, '#', (int) (short) 10);
        java.lang.Character[] charArray75 = org.apache.commons.lang3.ArrayUtils.toObject(charArray67);
        boolean boolean76 = objMap31.containsKey((java.lang.Object) charArray67);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray67);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 10.0, -1.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "### a a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "### a a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, #, #,  , a,  , a]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 6 + "'", int74 == 6);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) (byte) 100, (double) 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append(' ', '#');
        long[] longArray53 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray53, (long) 'a');
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.remove(longArray55, (int) (byte) 1);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray55, (long) 10);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray55, (long) (short) 0);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray55, (long) '4');
        long[] longArray69 = new long[] { (short) 0, 1L, (byte) 0, 1L, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder46.append(longArray55, longArray69);
        boolean boolean71 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[4]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[4, 0, 10]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[0, 1, 0, 1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        float[] floatArray4 = new float[] { (short) 100, 0, 10 };
        float[] floatArray7 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, 10.0f);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray7);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray7, (float) (byte) 10);
        boolean boolean16 = objEntryList0.equals((java.lang.Object) boolean15);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList17 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Object[] objArray18 = objEntryList17.toArray();
        boolean boolean19 = objEntryList0.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList17);
        java.lang.Boolean[][] booleanArray20 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray27 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray48 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray49 = new java.lang.Boolean[][] { booleanArray27, booleanArray34, booleanArray41, booleanArray48 };
        java.lang.Boolean[][] booleanArray50 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray20, booleanArray49);
        java.util.Map<java.lang.Object, java.lang.Object> objMap51 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = objMap51.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList53 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean55 = objEntryList53.remove((java.lang.Object) byteArray54);
        boolean boolean56 = objEntrySet52.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList53);
        boolean boolean57 = objEntryList17.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet52);
        long[] longArray63 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toObject(longArray64);
        long[] longArray71 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.clone(longArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray64, longArray72);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, (long) 1);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.clone(longArray75);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.add(longArray76, 2, (long) (byte) 100);
        boolean boolean80 = objEntrySet52.equals((java.lang.Object) longArray76);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = objEntrySet52.add(objEntry81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(objMap51);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 100, 10, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[32, 100, 100, 10, 10]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList1 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean3 = objEntryList1.remove((java.lang.Object) byteArray2);
        boolean[] booleanArray8 = new boolean[] { false, false, false, false };
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, false);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, true, 0);
        boolean boolean16 = objEntryList1.contains((java.lang.Object) int15);
        java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray18 = objEntryList1.toArray((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.reflect.Type[] typeArray21 = org.apache.commons.lang3.ArrayUtils.subarray(typeArray18, (int) (short) -1, (int) (short) 100);
        boolean boolean22 = objEntryList0.contains((java.lang.Object) typeArray21);
        double[] doubleArray26 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (byte) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray29, (double) 10.0f);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray32);
        boolean boolean34 = objEntryList0.contains((java.lang.Object) doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray33, (double) 0.0f);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (-1.0d));
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray13);
        int[] intArray21 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray21, (int) '#', (int) (short) 0);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray21, (int) (byte) 1);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray21);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(intArray27, (-1));
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.toObject(intArray27);
        int[] intArray35 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.clone(intArray35);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray35, (int) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(intArray35);
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.addAll(intArray27, intArray35);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray40);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray41);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[35, -1, 0, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, -1, -1, 100, 35, -1, 0, 0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray4, (float) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 0 };
        byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        int int8 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray6);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray9);
        int[] intArray14 = new int[] { 1, (byte) 1 };
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray14, (int) (short) 0, (int) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(intArray14);
        java.lang.Integer[] intArray19 = org.apache.commons.lang3.ArrayUtils.toObject(intArray14);
        java.lang.Integer[] intArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray19);
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) 1 };
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        boolean[] booleanArray30 = new boolean[] { false, false, false, false };
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray30, false);
        java.lang.Boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray30);
        java.lang.Boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        java.lang.Short[] shortArray38 = new java.lang.Short[] { (short) 1 };
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray38);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38, (short) (byte) 100);
        short[] shortArray43 = new short[] {};
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray43);
        float[] floatArray48 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(floatArray48, (float) 0);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.add(floatArray48, 10.0f);
        java.lang.Float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        boolean boolean56 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray42, (java.lang.Object) floatArray54, false);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray36, (java.lang.Object[]) floatArray54);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray22, (java.lang.Object[]) floatArray54);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray54, (java.lang.Object) 1, 0);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray54);
        java.lang.Byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        java.lang.Byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray63);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray54, (java.lang.Object) byteArray63);
        java.lang.Byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray63);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray20, (java.lang.Object) byteArray66);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray9, (java.lang.Object) int67, 6);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 100, -1, 10, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        double[] doubleArray0 = null;
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray0, (double) (short) 100, (int) ' ', (double) 13);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, (float) 2);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray53, (float) 4, 1);
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray53);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.remove(floatArray53, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(floatArray57);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry2 = null;
        boolean boolean3 = objEntryList0.add(objEntry2);
        int int4 = objEntryList0.size();
        java.lang.Boolean[][] booleanArray5 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray34 = new java.lang.Boolean[][] { booleanArray12, booleanArray19, booleanArray26, booleanArray33 };
        java.lang.Boolean[][] booleanArray35 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray5, booleanArray34);
        java.util.Map<java.lang.Object, java.lang.Object> objMap36 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray5);
        java.lang.Short[] shortArray39 = new java.lang.Short[] { (short) 1 };
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 10);
        java.lang.Object obj43 = objMap36.replace((java.lang.Object) 2, (java.lang.Object) shortArray42);
        objMap36.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = objMap36.entrySet();
        java.lang.Object obj46 = null;
        boolean boolean47 = objEntrySet45.remove(obj46);
        boolean boolean48 = objEntryList0.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet45);
        java.lang.Object[] objArray49 = objEntrySet45.toArray();
        double[][][][] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][][][] doubleArray51 = objEntrySet45.toArray(doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(objMap36);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[1]");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray6, 0, (int) '4');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 4, 4]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray13, true);
        java.lang.Boolean[][] booleanArray16 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] { booleanArray23, booleanArray30, booleanArray37, booleanArray44 };
        java.lang.Boolean[][] booleanArray46 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray45);
        java.util.Map<java.lang.Object, java.lang.Object> objMap47 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = objMap47.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList49 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean51 = objEntryList49.remove((java.lang.Object) byteArray50);
        boolean boolean52 = objEntrySet48.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList49);
        java.lang.Object[] objArray53 = objEntryList49.toArray();
        java.lang.Object[] objArray54 = objEntryList49.toArray();
        java.lang.Boolean[][] booleanArray55 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray69 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray76 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray83 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray84 = new java.lang.Boolean[][] { booleanArray62, booleanArray69, booleanArray76, booleanArray83 };
        java.lang.Boolean[][] booleanArray85 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray55, booleanArray84);
        java.util.Map<java.lang.Object, java.lang.Object> objMap86 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray55);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = objMap86.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList88 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean90 = objEntryList88.remove((java.lang.Object) byteArray89);
        boolean boolean91 = objEntrySet87.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList88);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor92 = objEntrySet87.iterator();
        java.lang.Object[] objArray93 = objEntrySet87.toArray();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream94 = objEntrySet87.parallelStream();
        boolean boolean95 = objEntryList49.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet87);
        objEntrySet87.clear();
        objEntrySet87.clear();
        boolean boolean98 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray13, (java.lang.Object) objEntrySet87);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor99 = objEntrySet87.iterator();
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(objMap47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(objMap86);
        org.junit.Assert.assertNotNull(objEntrySet87);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objEntryItor92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(objEntryStream94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(objEntryItor99);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        boolean[] booleanArray13 = new boolean[] { false, true, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray5, (java.lang.Object) booleanArray13);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray19, "{32,100,10,10,1,1}");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, #,  , a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{4,#,#, ,a}" + "'", str21, "{4,#,#, ,a}");
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.remove(intArray7, 2);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.add(intArray9, 0, 9);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray9);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[9, 100, -1, 0, 97]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.appendSuper(false);
        java.lang.Boolean boolean18 = equalsBuilder17.build();
        java.lang.Character[] charArray24 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, ' ');
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27);
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.toObject(charArray28);
        java.lang.Character[] charArray35 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray35, 'a');
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.clone(charArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, ' ');
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray38);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        java.lang.Character[] charArray51 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray51, 'a');
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray53, 'a', (-1));
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray53, '#', 1);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder17.append(charArray28, charArray53);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray28);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 44a44## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 44a44## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, 4, a, 4, 4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 2);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 4);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) 100L, (int) (byte) 100);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (double) 3);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray16, (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 2.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0, 2.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        long[] longArray3 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray3, (long) 'a');
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.subarray(longArray7, (int) '4', 5);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[4]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[]");
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray9 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9);
        double[] doubleArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append(doubleArray9, doubleArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.appendSuper(true);
        java.lang.Character[] charArray21 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.clone(charArray24);
        java.lang.Character[] charArray31 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31, 'a');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray33, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append(charArray25, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 0);
        boolean[] booleanArray43 = new boolean[] { true };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray43, (int) (short) 100, (int) (short) 0);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray43);
        boolean[] booleanArray52 = new boolean[] { false, false, false, false };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray52, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.add(booleanArray52, true);
        boolean[] booleanArray62 = new boolean[] { false, false, false, false };
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray62);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray62, false);
        java.lang.Boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray62);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray52, booleanArray62);
        java.lang.Object obj68 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray52, obj68, false);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.add(booleanArray52, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder41.append(booleanArray43, booleanArray72);
        java.lang.Boolean boolean74 = equalsBuilder41.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, true);
        java.lang.Boolean[][] booleanArray14 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray42 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray43 = new java.lang.Boolean[][] { booleanArray21, booleanArray28, booleanArray35, booleanArray42 };
        java.lang.Boolean[][] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray14, booleanArray43);
        java.util.Map<java.lang.Object, java.lang.Object> objMap45 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray14);
        java.lang.Short[] shortArray48 = new java.lang.Short[] { (short) 1 };
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48, (short) 10);
        java.lang.Object obj52 = objMap45.replace((java.lang.Object) 2, (java.lang.Object) shortArray51);
        java.lang.Boolean[][] booleanArray53 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray60 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray74 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray81 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray82 = new java.lang.Boolean[][] { booleanArray60, booleanArray67, booleanArray74, booleanArray81 };
        java.lang.Boolean[][] booleanArray83 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray53, booleanArray82);
        java.util.Map<java.lang.Object, java.lang.Object> objMap84 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray53);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = objMap84.entrySet();
        java.util.Set<java.lang.Object> objSet86 = objMap84.keySet();
        objMap45.putAll(objMap84);
        objMap45.clear();
        boolean boolean89 = objMap45.isEmpty();
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray10, (java.lang.Object) objMap45);
        java.util.Map<java.lang.Object, java.lang.Object> objMap91 = null;
        // The following exception was thrown during execution in test generation
        try {
            objMap45.putAll(objMap91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(objMap45);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(objMap84);
        org.junit.Assert.assertNotNull(objEntrySet85);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray14 = new boolean[] { false, false, false, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray14, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray14);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray23, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]");
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1);
        byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6);
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray14);
        byte[] byteArray19 = null;
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray29 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray29);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, (double) (byte) 10);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 0L, 0);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder21.append(doubleArray25, doubleArray29);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray45 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray45);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, (double) (byte) 10);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray48, (double) 10.0f);
        double[] doubleArray54 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray54);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, (double) (byte) 10);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) 0L, 0);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray54);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray54, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray48, doubleArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder40.append(doubleArray41, doubleArray54);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray67);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.add(byteArray69, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder66.append(byteArray67, byteArray69);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray19, byteArray69);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray74);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray19, byteArray74);
        byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray14, byteArray74);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.clone(byteArray74);
        byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray78);
        java.lang.Byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray78);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.Set<java.lang.Object> objSet33 = objMap31.keySet();
        java.util.Set<java.lang.Object> objSet34 = objMap31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = objMap31.entrySet();
        java.lang.Short[] shortArray37 = new java.lang.Short[] { (short) 1 };
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) 10);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) 100, (int) (byte) 1);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray38);
        java.lang.Short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        java.lang.Byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray46);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray45, (java.lang.Object) byteArray47, 4);
        java.lang.Object obj50 = objMap31.replace((java.lang.Object) shortArray38, (java.lang.Object) int49);
        java.lang.Character[] charArray56 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, 'a');
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.add(charArray58, '#');
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.remove(charArray60, 2);
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray62);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray62);
        java.lang.Object obj65 = objMap31.remove((java.lang.Object) charArray62);
        long[] longArray71 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.clone(longArray71);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.add(longArray72, (int) (short) 1, 0L);
        boolean boolean76 = objMap31.equals((java.lang.Object) longArray75);
        boolean boolean77 = objMap31.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = objMap31.keySet();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a,  ,  , #, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a  ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a  ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a,  ,  , #, #]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 0, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        java.lang.Float[] floatArray0 = null;
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) ' ');
        org.junit.Assert.assertNull(floatArray2);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream35 = objEntrySet32.parallelStream();
        java.lang.Boolean[][] booleanArray36 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray50 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray65 = new java.lang.Boolean[][] { booleanArray43, booleanArray50, booleanArray57, booleanArray64 };
        java.lang.Boolean[][] booleanArray66 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray36, booleanArray65);
        java.util.Map<java.lang.Object, java.lang.Object> objMap67 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = objMap67.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList69 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean71 = objEntryList69.remove((java.lang.Object) byteArray70);
        boolean boolean72 = objEntrySet68.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList69);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor73 = objEntrySet68.iterator();
        java.lang.Object[] objArray74 = objEntrySet68.toArray();
        boolean boolean76 = objEntrySet68.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList77 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor78 = objEntryList77.iterator();
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.String[] strArray83 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.addAll(strArray79, strArray83);
        java.lang.Comparable<java.lang.String>[] strComparableArray85 = objEntryList77.toArray((java.lang.Comparable<java.lang.String>[]) strArray79);
        boolean boolean86 = objEntrySet68.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList77);
        boolean boolean87 = objEntrySet32.removeAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntrySet68);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.add(byteArray88, (byte) -1);
        boolean boolean91 = objEntrySet32.equals((java.lang.Object) byteArray88);
        java.util.Map.Entry<java.lang.Object, java.lang.Object> objEntry92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = objEntrySet32.add(objEntry92);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryStream35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(objMap67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEntryItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntryItor78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strComparableArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        long[] longArray13 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray13);
        java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray16, (long) ' ');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(longArray16, (long) 1);
        java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray24);
        java.lang.Long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toObject(longArray24);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, (long) (short) 10);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.String[] strArray40 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray41 = org.apache.commons.lang3.ArrayUtils.addAll(strArray36, strArray40);
        java.lang.String[] strArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray40);
        byte[] byteArray43 = null;
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray43);
        byte[] byteArray48 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) 10, (int) (short) -1);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray48, (byte) 10);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray43, byteArray48);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) 0, 3);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray48, (byte) 1);
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray42, (java.lang.Object) int59);
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray33, (java.lang.Object) strArray42);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray33);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray62, (long) (short) 100);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(longArray64, (long) 'a');
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray24, longArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray16, longArray64);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, ' ', 5);
        java.lang.Character[] charArray18 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, ' ');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, ' ');
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray22);
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.subarray(charArray7, 6, (int) (byte) -1);
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray36, '#');
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray36, ' ');
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.remove(charArray36, 1);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray26, charArray42);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.add(charArray42, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 4a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 4a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, a, 4, #]");
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        char[] charArray2 = new char[] { 'a', ' ' };
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray2, ' ');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a,  ]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        long[] longArray3 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray3, (long) 'a');
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 1);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.add(longArray5, (long) 10);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) (short) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray5, (long) '4');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray5, (long) 8);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[4]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[4, 0, 10]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray12 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 0L, 0);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray12);
        java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (double) 9, 100.0d);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 10, (int) (short) -1);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray32, (byte) 1);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(byteArray32, (byte) 100);
        byte[] byteArray45 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray45, (byte) 10, (int) (short) -1);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray45);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray45, (byte) 1, (int) ' ');
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray32, byteArray45);
        short[] shortArray54 = new short[] {};
        java.lang.Short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray54);
        boolean boolean56 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray53, (java.lang.Object) shortArray55);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray55);
        java.lang.Long[] longArray64 = new java.lang.Long[] { 1L, 10L, 0L, (-1L), (-1L), (-1L) };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray64, (long) (short) 10);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.String[] strArray71 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.addAll(strArray67, strArray71);
        java.lang.String[] strArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray71);
        byte[] byteArray74 = null;
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray74);
        byte[] byteArray79 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray79, (byte) 10, (int) (short) -1);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray79, (byte) 10);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray74, byteArray79);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray79, (byte) 0, 3);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray79, (byte) 1);
        boolean boolean91 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray73, (java.lang.Object) int90);
        int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray64, (java.lang.Object) strArray73);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) shortArray55, strArray73);
        java.lang.String[] strArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray73);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 10, 0, 0, 10]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[1, 10, 0, -1, -1, -1]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strArray94);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) 0, (long) 2);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray10);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((short) 1, (short) (byte) -1);
        long[] longArray39 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray39);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray40);
        long[] longArray47 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.clone(longArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray40, longArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray59 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        long[] longArray66 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.clone(longArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder53.append(longArray60, longArray66);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.add(longArray60, (int) (byte) 0, (long) 2);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder33.append(longArray48, longArray72);
        java.lang.Long[] longArray74 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray74);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray74);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, (int) (short) -1, (int) '#');
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray76);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray48, longArray76);
        java.lang.Long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toObject(longArray76);
        long[] longArray84 = new long[] { '#' };
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray84, 0L);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray76, longArray84);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.addAll(longArray23, longArray84);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray88);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[35]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 100, 10, 10, 1, 35]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray2);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray14, (float) 'a');
        float[] floatArray20 = new float[] { 1L, 100L, 100 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) (-1L), (int) (short) 100);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray20);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) ' ', (int) (byte) 100);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 10L);
        float[] floatArray34 = new float[] { 1L, 100L, 100 };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) (-1L), (int) (short) 100);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray34);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray30, floatArray34);
        float[] floatArray43 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray43);
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray44);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray44);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.add(floatArray46, 0.0f);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray46);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray40, floatArray46);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray46);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[1.0, 100.0, 100.0, 1.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) (-1), (int) (byte) -1);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray26, (long) 10);
        long[] longArray63 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray63, (long) 'a');
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.remove(longArray65, (int) (byte) 1);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.add(longArray65, (long) 10);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.addAll(longArray59, longArray69);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.add(longArray59, 4, (long) 4);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[4]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[4, 0, 10]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[32, 100, 10, 10, 1, 10, 4, 0, 10]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 100, 10, 10, 4, 1, 10]");
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) (byte) 100, (double) 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append(' ', '#');
        java.lang.String str51 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) '#', "-1");
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#" + "'", str51, "#");
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) ' ');
        boolean[] booleanArray11 = new boolean[] { false, true, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray4, (java.lang.Object) booleanArray12, (int) (byte) 10);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray12);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray17);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean2 = objEntryList0.remove((java.lang.Object) byteArray1);
        byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray11);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray13, (byte) 10);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray4, byteArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray13);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) 1, (int) (short) 10);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray18);
        java.lang.Byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray18);
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray23);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        double[] doubleArray2 = new double[] { 4, 0.0f };
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 100);
        java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[4.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(doubleArray5);
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray16, byteArray30);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.add(byteArray35, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder9.append(byteArray16, byteArray35);
        java.lang.Byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray35);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray41, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder5.append(byteArray35, byteArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) (byte) 0, (short) 0);
        equalsBuilder48.reset();
        float[] floatArray50 = null;
        float[] floatArray51 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder48.append(floatArray50, floatArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append('a', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.String[] strArray1 = new java.lang.String[] {};
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[][] strArray6 = new java.lang.String[][] { strArray0, strArray1, strArray2, strArray3, strArray4, strArray5 };
        java.lang.String[][] strArray9 = org.apache.commons.lang3.ArrayUtils.subarray(strArray6, 10, (int) 'a');
        java.lang.Comparable<java.lang.String>[][] strComparableArray10 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Comparable<java.lang.String>[][]) strArray6);
        java.lang.String[][] strArray11 = org.apache.commons.lang3.ArrayUtils.toArray(strArray6);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.String[] strArray16 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray17 = org.apache.commons.lang3.ArrayUtils.addAll(strArray12, strArray16);
        java.lang.String[] strArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray12);
        java.lang.String[] strArray19 = org.apache.commons.lang3.ArrayUtils.toArray(strArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean24 = equalsBuilder23.isEquals();
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.String[] strArray29 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray30 = org.apache.commons.lang3.ArrayUtils.addAll(strArray25, strArray29);
        java.lang.String[] strArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray25);
        java.lang.Character[] charArray37 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37, ' ');
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder23.append((java.lang.Object[]) strArray25, (java.lang.Object[]) charArray40);
        short[] shortArray42 = null;
        java.lang.Short[] shortArray44 = new java.lang.Short[] { (short) 1 };
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray44);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44, (short) (byte) 100);
        short[] shortArray49 = new short[] {};
        java.lang.Short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray49);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray48, shortArray49);
        java.lang.Short[] shortArray53 = new java.lang.Short[] { (short) 1 };
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray53);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray53, (short) (byte) 100);
        short[] shortArray58 = new short[] {};
        java.lang.Short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray58);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray57, shortArray58);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray51, shortArray58);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray61);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray62, 3, 1);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray25, (java.lang.Object) 1, 10);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) strArray19, (java.lang.Object[]) strArray25);
        java.lang.String[] strArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray25);
        java.lang.CharSequence[][] charSequenceArray70 = org.apache.commons.lang3.ArrayUtils.add((java.lang.CharSequence[][]) strArray11, (java.lang.CharSequence[]) strArray25);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strComparableArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(charSequenceArray70);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        int[] intArray3 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.subarray(intArray3, (int) '#', (int) (short) 0);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, (int) (byte) 1);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray9, (-1));
        int[] intArray16 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.clone(intArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray16);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray16, (int) (byte) -1, (int) 'a');
        int[] intArray26 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray27);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.addAll(intArray16, intArray27);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.subarray(intArray16, (int) (short) 0, 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray38 = new double[] {};
        double[] doubleArray42 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (double) (byte) 10);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) 0L, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder34.append(doubleArray38, doubleArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append('a', '4');
        int[] intArray62 = new int[] { 1, (byte) 1 };
        int[] intArray65 = org.apache.commons.lang3.ArrayUtils.add(intArray62, (int) (short) 0, (int) '4');
        int[] intArray69 = new int[] { 'a', 0, 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder59.append(intArray62, intArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray33, intArray69);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray33, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, -1, -1, 0, 0, -1, -1, 100]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 0, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, (double) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 0L, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray14, (double) 1);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) 5);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '#', (int) 'a');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100);
        java.lang.Byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0);
        java.io.Serializable[] serializableArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.io.Serializable[]) byteArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((float) (short) 100, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 1, (short) (byte) -1);
        long[] longArray21 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray21);
        java.lang.Long[] longArray23 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22);
        long[] longArray29 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray22, longArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        long[] longArray48 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.clone(longArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append(longArray42, longArray48);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.add(longArray42, (int) (byte) 0, (long) 2);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder15.append(longArray30, longArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray4, (java.lang.Object) equalsBuilder55, (int) (byte) 0);
        equalsBuilder55.reset();
        java.lang.Boolean boolean59 = equalsBuilder55.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder55.append((float) (-1L), (float) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder55.append((byte) 1, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertNotNull(serializableArray5);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + true + "'", boolean59, true);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        float[] floatArray11 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(floatArray11, (float) 0);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.add(floatArray11, 10.0f);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray5, (java.lang.Object) floatArray17, false);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (short) (byte) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) 1, 5);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(shortArray21, (short) (byte) 10);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray21, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1, 100]");
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = objMap31.entrySet();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((long) (short) 10, (long) '#');
        boolean boolean50 = equalsBuilder46.isEquals();
        java.lang.Object obj51 = objMap31.remove((java.lang.Object) boolean50);
        boolean boolean52 = objMap31.isEmpty();
        objMap31.clear();
        boolean boolean54 = objMap31.isEmpty();
        objMap31.clear();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray16, byteArray30);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.add(byteArray35, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder9.append(byteArray16, byteArray35);
        java.lang.Byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray35);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray41, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder5.append(byteArray35, byteArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) (byte) 0, (short) 0);
        equalsBuilder48.reset();
        float[] floatArray50 = null;
        float[] floatArray51 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder48.append(floatArray50, floatArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) 0, (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        double[] doubleArray0 = null;
        double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray1, (double) 10L, (int) (byte) 0, (double) (-1.0f));
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, 0.0d);
        double[] doubleArray11 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray11);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) (short) 0, (int) ' ', (double) 1L);
        double[] doubleArray22 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray22);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, (double) (byte) 10);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 0L, 0);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray22);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, (double) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray39 = new double[] {};
        double[] doubleArray43 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray43);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) (byte) 10);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) 0L, 0);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray43);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(doubleArray39, doubleArray43);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 'a', (int) '4');
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray22, doubleArray39);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, 0, (double) 100);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray22);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray22);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray1, doubleArray22);
        java.lang.Double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 100.0, 4.0]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 10.0, 100.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList33 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        boolean boolean34 = objEntrySet32.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList33);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor35 = objEntryList33.iterator();
        boolean[] booleanArray40 = new boolean[] { false, false, false, false };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray40, false);
        java.lang.Boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray45);
        boolean boolean47 = objEntryList33.remove((java.lang.Object) booleanArray45);
        int int48 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray45);
        boolean[] booleanArray53 = new boolean[] { false, false, false, false };
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray53, false);
        java.lang.Boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray53);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray53);
        java.lang.Boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray53);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray59);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray59, true);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray62);
        boolean[] booleanArray68 = new boolean[] { false, false, false, false };
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray68);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray68, false);
        java.lang.Boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray68);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray68);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray68);
        boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray68);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray62, booleanArray68);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray68);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray68, true);
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.add(booleanArray68, true);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray81);
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.add(booleanArray81, false);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) int48, (java.lang.Object) booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntryItor35);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, false, false, false, true, false]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray18 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, 'a');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray20, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray32 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, ' ');
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray32, '#');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.clone(charArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray36, ' ');
        java.lang.Character[] charArray45 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, ' ');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray45, '#');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.clone(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray50);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray51, 'a');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray51);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 'a');
        java.lang.Character[] charArray57 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Object, java.lang.Object> objMap58 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, ' ', is neither of type Map.Entry nor an Array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4, a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 44a4 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, 4, a, 4,  , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , 4, 4, a, 4, a]");
        org.junit.Assert.assertNotNull(charArray57);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        java.lang.Character[] charArray5 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.add(charArray9, 4, '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray12, '4');
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray12, '4');
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray16, '4', 13);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a a ###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a,  , a,  , #, #, #]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a a ###4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a a ###4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a,  , a,  , #, #, #, 4]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0);
        byte[] byteArray2 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray2);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray14 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 0L, 0);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder6.append(doubleArray10, doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray30 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray30);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, (double) (byte) 10);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) 10.0f);
        double[] doubleArray39 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, (double) (byte) 10);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, (double) 0L, 0);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder25.append(doubleArray26, doubleArray39);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.add(byteArray54, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append(byteArray52, byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray58);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray58);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.add(byteArray60, (byte) 0);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) -1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.clone(byteArray62);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.clone(byteArray65);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, ' ');
        java.lang.Character[] charArray18 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, ' ');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.clone(charArray22);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray24, 'a');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.add(charArray24, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 44a4 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, 4, a, 4,  , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 44a4 44a4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 44a4 44a4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, 4, a, 4,  , 4, 4, a, 4, a]");
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.addAll(strArray2, strArray6);
        java.lang.Comparable<java.lang.String>[] strComparableArray8 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[]) strArray2);
        java.lang.Object[] objArray9 = objEntryList0.toArray();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append(true, true);
        byte[] byteArray17 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray17, (byte) 10, (int) (short) -1);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) 1, (int) ' ');
        byte[] byteArray31 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray31, (byte) 10);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray31);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.add(byteArray36, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder10.append(byteArray17, byteArray36);
        java.lang.Byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray36);
        java.lang.Byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray41);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray42);
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList44 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean46 = objEntryList44.remove((java.lang.Object) byteArray45);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45, (byte) 1);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray45, (byte) 100);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.add(byteArray51, (byte) 1);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray43, byteArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray53);
        boolean boolean56 = objEntryList0.contains((java.lang.Object) boolean55);
        int int57 = objEntryList0.size();
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        int[] intArray0 = new int[] {};
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.add(intArray0, 0, 100);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray3);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100]");
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray15);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 10);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray19);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100L);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray22, (double) (-1), (double) (short) 0);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) 9, (double) (-1));
        // The following exception was thrown during execution in test generation
        try {
            int int31 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray4);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray13, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((long) (short) 100, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append('4', ' ');
        int[][] intArray52 = new int[][] {};
        int[][] intArray53 = org.apache.commons.lang3.ArrayUtils.toArray(intArray52);
        int[] intArray58 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.clone(intArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray59);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.subarray(intArray59, (int) ' ', (int) (byte) 100);
        int[][] intArray64 = org.apache.commons.lang3.ArrayUtils.add(intArray52, intArray59);
        int[] intArray68 = new int[] { '#', (byte) -1, (short) 0 };
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.subarray(intArray68, (int) '#', (int) (short) 0);
        int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray68, (int) (byte) 1);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.clone(intArray68);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(intArray74, (-1));
        int[] intArray81 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.clone(intArray81);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray74, intArray81);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray81, (int) (byte) -1, (int) 'a');
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.addAll(intArray59, intArray81);
        int[] intArray92 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.clone(intArray92);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray92);
        int int96 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray92, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder48.append(intArray81, intArray92);
        java.lang.Integer[] intArray98 = org.apache.commons.lang3.ArrayUtils.toObject(intArray92);
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray92);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[35, -1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[35, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, -1, -1, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) (short) 10, (-1));
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray6, (long) (-1));
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, 100L, 2);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) '4', (int) (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) 0, 4);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) (byte) 1);
        long[] longArray23 = null;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray23);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, (long) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) (short) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) 2, (int) (short) 10);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        java.lang.Long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toObject(longArray17);
        long[] longArray24 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.clone(longArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray25);
        java.lang.Long[] longArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray27);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray28);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray28);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray30, (long) 7);
        java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toObject(longArray32);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.addAll(longArray2, longArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray34);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray12 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        double[] doubleArray15 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder3.append(doubleArray12, doubleArray15);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.appendSuper(true);
        java.lang.Character[] charArray24 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, 'a');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.clone(charArray27);
        java.lang.Character[] charArray34 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, 'a');
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.add(charArray36, '#');
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.remove(charArray36, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder3.append(charArray28, charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder41.appendSuper(true);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray1, (java.lang.Object) equalsBuilder41);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1);
        float[] floatArray48 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        float[] floatArray52 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(floatArray52, (float) 0);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray52);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        float[] floatArray61 = new float[] { (short) 100, 0, 10 };
        float[] floatArray64 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(floatArray64, (float) 0);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.add(floatArray64, 10.0f);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray61, floatArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray64);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(floatArray64, (float) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray64);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray64);
        float[] floatArray79 = new float[] { (short) 100, 0, 10 };
        float[] floatArray82 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.contains(floatArray82, (float) 0);
        float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.add(floatArray82, 10.0f);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray79, floatArray82);
        float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray82);
        float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray45, floatArray82);
        int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray82, 0.0f);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, #,  , a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , a,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        long[] longArray5 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (int) (short) 1, 0L);
        long[] longArray10 = null;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray9, longArray10);
        long[] longArray12 = null;
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray9, longArray12);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray16 = org.apache.commons.lang3.ArrayUtils.remove(longArray9, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 0, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[32, 0, 100, 10, 10, 1]");
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1 };
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5);
        boolean[] booleanArray13 = new boolean[] { false, false, false, false };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray13);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1 };
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray21);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 100);
        short[] shortArray26 = new short[] {};
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray26);
        float[] floatArray31 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(floatArray31, (float) 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray31, 10.0f);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray25, (java.lang.Object) floatArray37, false);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray19, (java.lang.Object[]) floatArray37);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray5, (java.lang.Object[]) floatArray37);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray37, (java.lang.Object) 1, 0);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append((java.lang.Object[]) floatArray37, (java.lang.Object[]) floatArray49);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37);
        float[] floatArray52 = null;
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray52, (float) 1L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        double[] doubleArray15 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        boolean boolean17 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray9, (java.lang.Object) doubleArray15);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, 3, 1);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray15, (double) 2);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray15, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray15 = new java.lang.Character[] { '4', '#', '#', ' ', 'a' };
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray18);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray20);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.remove(charArray20, (int) (byte) 1);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray23);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4## a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, #,  , a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, (long) 10);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) (short) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) 100);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray17 = new double[] {};
        double[] doubleArray21 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21);
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) 0L, 0);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder13.append(doubleArray17, doubleArray21);
        long[] longArray38 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.clone(longArray38);
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toObject(longArray39);
        long[] longArray46 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray39, longArray47);
        long[] longArray54 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.clone(longArray54);
        java.lang.Long[] longArray56 = org.apache.commons.lang3.ArrayUtils.toObject(longArray55);
        long[] longArray62 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.clone(longArray62);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray55, longArray63);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toObject(longArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder32.append(longArray39, longArray63);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray39, (long) (-1), (int) (byte) -1);
        java.lang.Long[] longArray70 = org.apache.commons.lang3.ArrayUtils.toObject(longArray39);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray39, (long) 10);
        long[] longArray76 = new long[] { 4, 'a', (byte) 0 };
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray76, (long) 'a');
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.remove(longArray78, (int) (byte) 1);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.add(longArray78, (long) 10);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.addAll(longArray72, longArray82);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray72, (long) ' ');
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.addAll(longArray12, longArray72);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1, 10]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[4, 97, 0]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[4, 0]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[4]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[4, 0, 10]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[32, 100, 10, 10, 1, 10, 4, 0, 10]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[32, 100, 10, 10, 1, 10]");
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, ' ', 5);
        java.lang.Character[] charArray18 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, ' ');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray18, ' ');
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray7, charArray22);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray22, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4a44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, a, 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, a, 4]");
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 100);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray7);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1 };
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) (byte) 100);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, 3, 1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) 0);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 1 };
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray27);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) (byte) 100);
        short[] shortArray32 = new short[] {};
        java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray31, shortArray32);
        java.lang.Short[] shortArray36 = new java.lang.Short[] { (short) 1 };
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray36);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36, (short) (byte) 100);
        short[] shortArray41 = new short[] {};
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray40, shortArray41);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray34, shortArray41);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray34, (short) (byte) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray25, shortArray34);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray25);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0]");
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        boolean[] booleanArray4 = new boolean[] { false, false, false, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, true);
        boolean[] booleanArray10 = null;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray4, booleanArray10);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        boolean[] booleanArray17 = new boolean[] { false, false, false, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, false);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray17, true);
        boolean[] booleanArray23 = null;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray17, booleanArray23);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray10, booleanArray17);
        boolean[] booleanArray27 = new boolean[] { true };
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray27, (int) (short) 100, (int) (short) 0);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray10, booleanArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray6);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 1.0f);
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray9, 0);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray13);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray13, (double) 1L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray6);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, (float) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, (int) (byte) 100, 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[1.0, -1.0, 10.0]");
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, true);
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10, (int) (short) -1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray30);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) 1, (int) ' ');
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray44);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder23.append(byteArray30, byteArray49);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray54, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder0.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((short) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder59.append((double) 10, (double) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder59.append((byte) 10, (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10 };
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 10);
        java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((java.lang.Object[]) intArray2, (java.lang.Object[]) byteArray9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) (byte) 10, (double) 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append(false, true);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 4, 4, (-1), 0 };
        java.lang.Integer[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray23);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray24);
        int[] intArray26 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder18.append(intArray25, intArray26);
        int int28 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) intArray26);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[4, 4, -1, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        byte[] byteArray16 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 10, (int) (short) -1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray16);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray16, (byte) 1, (int) ' ');
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray16, byteArray30);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.add(byteArray35, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder9.append(byteArray16, byteArray35);
        java.lang.Byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray35);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray41, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder5.append(byteArray35, byteArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) (byte) 0, (short) 0);
        equalsBuilder45.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        long[] longArray0 = null;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray0, (long) (short) 0);
        org.junit.Assert.assertNull(longArray2);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        double[] doubleArray5 = new double[] { 0L, 10L, 10.0d, (short) -1, 10L };
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray5);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.add(doubleArray7, (double) 7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[7.0, 10.0, -1.0, 10.0, 10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = objMap31.entrySet();
        java.lang.Boolean[][] booleanArray33 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray47 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray62 = new java.lang.Boolean[][] { booleanArray40, booleanArray47, booleanArray54, booleanArray61 };
        java.lang.Boolean[][] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray62);
        java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray33);
        int[] intArray67 = new int[] { 1, (byte) 1 };
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.add(intArray67, (int) (short) 0, (int) '4');
        java.lang.Object obj71 = objMap31.getOrDefault((java.lang.Object) booleanArray33, (java.lang.Object) intArray70);
        java.lang.Cloneable[] cloneableArray72 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[]) booleanArray33);
        java.lang.Short[] shortArray74 = new java.lang.Short[] { (short) 1 };
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray74);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) cloneableArray72, (java.lang.Object) shortArray74);
        java.lang.Character[] charArray82 = new java.lang.Character[] { 'a', ' ', 'a', ' ', '#' };
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray82, 'a');
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.add(charArray84, '#');
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.remove(charArray86, 2);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray88);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray89);
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.remove(charArray90, (int) (byte) 1);
        char[] charArray95 = org.apache.commons.lang3.ArrayUtils.subarray(charArray90, (int) ' ', (int) (byte) -1);
        int int97 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) cloneableArray72, (java.lang.Object) charArray90, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray90);
        char[] charArray99 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray90);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(objMap64);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52, 1, 1]");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(cloneableArray72);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a,  , a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #,  ,  , a]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, #,  ,  , a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, #,  ,  , a]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "a ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "a ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[a,  , #, #]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertNotNull(charArray99);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray99), "##  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray99), "##  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray99), "[#, #,  ,  , a]");
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 1 };
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 100);
        short[] shortArray6 = new short[] {};
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) ' ', 0);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.remove(shortArray13, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        java.lang.Float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0);
        float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray1, (float) 'a');
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray3, (float) 100L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.clone(floatArray3);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray3, (float) '#');
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        short[] shortArray0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { 10 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray3, (int) (byte) 10);
        java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) -1, (byte) 100, (byte) 1, (byte) 100 };
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append((java.lang.Object[]) intArray3, (java.lang.Object[]) byteArray10);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 1 };
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) (byte) 100);
        short[] shortArray20 = new short[] {};
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray20);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) 0);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) (byte) 10);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) (byte) -1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray22, (short) 10);
        short[] shortArray36 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray36, (short) (byte) 1);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray36, (short) 1, 100);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray36, (short) (byte) -1);
        java.lang.Short[] shortArray46 = new java.lang.Short[] { (short) 1 };
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray46);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46, (short) (byte) 100);
        short[] shortArray51 = new short[] {};
        java.lang.Short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray51);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray51);
        short[] shortArray54 = new short[] {};
        java.lang.Short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray54);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray53, shortArray54);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray36, shortArray53);
        java.lang.Short[] shortArray59 = new java.lang.Short[] { (short) 1 };
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59, (short) 10);
        int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray62, (short) (byte) 1);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray62, (short) -1);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray36, shortArray62);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray62, 6, 7);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray70, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder13.append(shortArray22, shortArray70);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray0, shortArray70);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[0, 1, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        java.lang.Boolean[][] booleanArray0 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray7 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray7, booleanArray14, booleanArray21, booleanArray28 };
        java.lang.Boolean[][] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray29);
        java.util.Map<java.lang.Object, java.lang.Object> objMap31 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray0);
        java.lang.Short[] shortArray34 = new java.lang.Short[] { (short) 1 };
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray34, (short) 10);
        java.lang.Object obj38 = objMap31.replace((java.lang.Object) 2, (java.lang.Object) shortArray37);
        objMap31.clear();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray44 = new double[] {};
        double[] doubleArray48 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray48);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, (double) (byte) 10);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray48, (double) 0L, 0);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray48);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray48, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder40.append(doubleArray44, doubleArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder40.append((byte) 100, (byte) 1);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.String[] strArray67 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray68 = org.apache.commons.lang3.ArrayUtils.addAll(strArray63, strArray67);
        java.lang.Short[] shortArray70 = new java.lang.Short[] { (short) 1 };
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray70);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder40.append((java.lang.Object[]) strArray68, (java.lang.Object[]) shortArray70);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray70, (short) 10);
        java.lang.Object obj78 = objMap31.get((java.lang.Object) (short) 10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = objMap31.entrySet();
        java.lang.Short[] shortArray81 = new java.lang.Short[] { (short) 1 };
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray81);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray81);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray81, (short) (byte) 100);
        short[] shortArray86 = new short[] {};
        java.lang.Short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray86);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray85, shortArray86);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray85, (int) 'a', (int) (short) 1);
        short[] shortArray93 = org.apache.commons.lang3.ArrayUtils.add(shortArray85, (short) 10);
        boolean boolean94 = objMap31.containsValue((java.lang.Object) shortArray85);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(objMap31);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[1]");
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[1]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[1]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[1]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[]");
        org.junit.Assert.assertNotNull(shortArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray93), "[1, 10]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((long) (short) 10, (long) '#');
        boolean boolean9 = equalsBuilder8.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder8.append(true, true);
        java.lang.Short[] shortArray14 = new java.lang.Short[] { (short) 1 };
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) (byte) 100);
        short[] shortArray19 = new short[] {};
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray19);
        java.lang.Short[] shortArray23 = new java.lang.Short[] { (short) 1 };
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray23);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) (byte) 100);
        short[] shortArray28 = new short[] {};
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray28);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray27, shortArray28);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray28);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.add(shortArray31, (short) (byte) 10);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray33, 2, (int) '4');
        short[] shortArray41 = new short[] { (byte) 0, (byte) 1, (short) -1, (byte) -1 };
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray41, (int) (short) 1, 100);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray41, (short) 100, 9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder12.append(shortArray36, shortArray41);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray36);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 10]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        boolean boolean4 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append(0L, 10L);
        java.lang.Object obj8 = null;
        boolean boolean10 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 10L, obj8, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList0 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor1 = objEntryList0.iterator();
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.addAll(strArray2, strArray6);
        java.lang.Comparable<java.lang.String>[] strComparableArray8 = objEntryList0.toArray((java.lang.Comparable<java.lang.String>[]) strArray2);
        java.lang.Boolean[][] booleanArray9 = new java.lang.Boolean[][] {};
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[] booleanArray37 = new java.lang.Boolean[] { true, true, false, false, false, false };
        java.lang.Boolean[][] booleanArray38 = new java.lang.Boolean[][] { booleanArray16, booleanArray23, booleanArray30, booleanArray37 };
        java.lang.Boolean[][] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray9, booleanArray38);
        java.util.Map<java.lang.Object, java.lang.Object> objMap40 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) booleanArray9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = objMap40.entrySet();
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList42 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        boolean boolean44 = objEntryList42.remove((java.lang.Object) byteArray43);
        boolean boolean45 = objEntrySet41.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList42);
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor46 = objEntrySet41.iterator();
        java.lang.Object[] objArray47 = objEntrySet41.toArray();
        boolean boolean49 = objEntrySet41.remove((java.lang.Object) '4');
        java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryList50 = new java.util.ArrayList<java.util.Map.Entry<java.lang.Object, java.lang.Object>>();
        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryItor51 = objEntryList50.iterator();
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.String[] strArray56 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.addAll(strArray52, strArray56);
        java.lang.Comparable<java.lang.String>[] strComparableArray58 = objEntryList50.toArray((java.lang.Comparable<java.lang.String>[]) strArray52);
        boolean boolean59 = objEntrySet41.containsAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList50);
        boolean boolean60 = objEntryList0.retainAll((java.util.Collection<java.util.Map.Entry<java.lang.Object, java.lang.Object>>) objEntryList50);
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream61 = objEntryList50.stream();
        int int62 = objEntryList50.size();
        java.util.stream.Stream<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntryStream63 = objEntryList50.parallelStream();
        org.junit.Assert.assertNotNull(objEntryItor1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(objMap40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEntryItor46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEntryItor51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strComparableArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEntryStream61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objEntryStream63);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1 };
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 100);
        short[] shortArray7 = new short[] {};
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray7);
        java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1 };
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray11);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) (byte) 100);
        short[] shortArray16 = new short[] {};
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(shortArray19, (short) (byte) -1);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) -1, 5);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((long) ' ', (long) (short) 10);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 1 };
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        java.lang.Character[] charArray33 = new java.lang.Character[] { ' ', '4', '4', 'a', '4' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, ' ');
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder22.append((java.lang.Object[]) shortArray24, (java.lang.Object[]) charArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) (byte) 100, (double) 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((float) 6, (float) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 44a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, 4, a, 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        long[] longArray9 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        long[] longArray16 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder3.append(longArray10, longArray16);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) 0, (long) 2);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.add(longArray21, (long) 2);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(longArray21, (long) (byte) -1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray21);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray21);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[2, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[2, 32, 100, 10, 10, 1, 2]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        int[] intArray4 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.add(intArray4, (int) 'a');
        int[] intArray12 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray7);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int[] intArray22 = new int[] { 100, (short) -1, (short) -1, (short) 0 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray7, intArray22);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, (int) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) (short) 0);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) 'a');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, -1, -1, 0, 97]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, -1, -1, 0, 97, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        double[] doubleArray24 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray24);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray24, (double) (byte) 10);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 10.0f);
        double[] doubleArray33 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.add(doubleArray33, (double) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) 0L, 0);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray33);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (byte) 0, (int) (short) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder19.append(doubleArray20, doubleArray33);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray46, (double) 'a');
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, 100.0d, (double) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 100.0, 10.0, 0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        double[] doubleArray3 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, (int) (byte) -1);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[100.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 10.0, 0.0]");
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray6);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray0, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray26, (long) 7, 4);
        long[] longArray63 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toObject(longArray64);
        long[] longArray71 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.clone(longArray71);
        java.lang.Long[] longArray73 = org.apache.commons.lang3.ArrayUtils.toObject(longArray72);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.addAll(longArray64, longArray74);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray26, longArray75);
        java.lang.Long[] longArray77 = org.apache.commons.lang3.ArrayUtils.toObject(longArray76);
        java.lang.Long[] longArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray78);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray78);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray80);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.contains(longArray80, (long) 10);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.addAll(longArray76, longArray80);
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, (int) (byte) -1, (int) (short) 10);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray76);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray76);
        long[] longArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray76);
        long[] longArray92 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray76, (long) 2);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[1, 10, 10, 100, 32, 1, 10, 10, 100, 32, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[32, 100, 10, 10, 1, 32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[1, 10, 10, 100, 32, 1, 10, 10, 100, 32, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray90), "[1, 10, 10, 100, 32, 1, 10, 10, 100, 32, 1, 10, 10, 100, 32]");
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray92), "[1, 10, 10, 100, 32, 1, 10, 10, 100, 32, 1, 10, 10, 100, 32]");
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        float[] floatArray2 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 0);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 10.0f);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (-1));
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, (int) (short) 0, (float) 0L);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 1, (int) 'a');
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, true);
        byte[] byteArray30 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 10, (int) (short) -1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray30);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) 1, (int) ' ');
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 10, (byte) 10, (byte) 10, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray44);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (int) (byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder23.append(byteArray30, byteArray49);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY;
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray54, 100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder0.append(byteArray49, byteArray54);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.clone(byteArray54);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray54);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 10]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 10, 1, 10, 10, 10, 10, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        float[] floatArray3 = new float[] { (short) 100, 0, 10 };
        float[] floatArray6 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, 10.0f);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray6);
        float[] floatArray15 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(floatArray15, (float) 0);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray15, 10.0f);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray15);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray23, (float) (short) -1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.clone(floatArray25);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) '4', 9);
        float[] floatArray33 = new float[] { (short) 100, 0, 10 };
        float[] floatArray36 = new float[] { (-1), (short) 1 };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(floatArray36, (float) 0);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.add(floatArray36, 10.0f);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray33, floatArray36);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(floatArray33, (float) 100);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray33);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray33, (float) 7);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[1.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((double) (byte) 1, (double) (byte) 0);
        double[] doubleArray4 = new double[] {};
        double[] doubleArray8 = new double[] { 0, 10L, (short) 100 };
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray8);
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray8, (double) (byte) 10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray8, (double) 0L, 0);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(doubleArray4, doubleArray8);
        long[] longArray25 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.clone(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26);
        long[] longArray33 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray34);
        long[] longArray41 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        java.lang.Long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toObject(longArray42);
        long[] longArray49 = new long[] { ' ', 100L, 10, (byte) 10, (short) 1 };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray42, longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder19.append(longArray26, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder19.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder19.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder59.appendSuper(true);
        java.lang.String str63 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) equalsBuilder61, "{{{},{},{}},{{},{},{}},{{},{},{}}}");
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[32, 100, 10, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder61);
    }
}

